name: Resolve Weblate conflicts

on:
  workflow_dispatch: {}

jobs:
  resolve_weblate:

    runs-on: ubuntu-latest

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the changed files back to the repository.
      contents: write
      # For commenting on a PR
      pull-requests: write

    steps:
    - name: Check for presence of GitHub Token
      id: secret
      run: |
        if [ ! -z "${{ secrets.FELIENNE_GITHUB_ACCESS_TOKEN }}" ]; then
          echo "We have a token!"
          echo "secret=${{ secrets.FELIENNE_GITHUB_ACCESS_TOKEN }}" >> $GITHUB_OUTPUT
        else
          echo "We do not have a token"
          echo "secret=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_OUTPUT
        fi

    #----------------------------------------------------------------------
    #  Checkout source
    #
    # We need to pass the token here -- the commit action below will not overwrite the token to push.
    # This is necessary to bypass branch protection (which will disallow non-reviewed pushes otherwise)
    #
    # Make a distinction between Pull Request checkout and Push checkout. Push checkout
    # works mostly automatically, but for PRs we must be very explicit to get the right
    # branch and also support forks.
    - uses: actions/checkout@v4
      name: Checkout branch
      with:
        fetch-depth: 1
        # token: ${{ steps.secret.outputs.secret }}
        # Let's see if the GitHub Token suffices
        token: ${{ secrets.GITHUB_TOKEN }}

    #----------------------------------------------------------------------
    #  Actual build

    - name: Set up Python 3.12
      uses: actions/setup-python@v1
      with:
        python-version: 3.12
    - name: Install Python dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip3 install -r requirements.txt

    #----------------------------------------------------------------------
    #  Set up cache so that running snippet tests is somewhat cheap
    - name: Calculate hedy cache key
      run: "echo value=$(ls -1 hedy.py grammars/* | sort | xargs tail -n 99999999 | sha256sum | cut -f 1 -d ' ') >> $GITHUB_OUTPUT"
      id: hedy_cache_key
    - name: Cache hedy test runs
      uses: actions/cache@v3
      with:
        path: .test-cache
        key: "hedy-test-cache-${{ steps.hedy_cache_key.outputs.value }}"

    - name: Run weblate merge script
      run: |
        tools/merge-weblate-resolving-conflicts.sh

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v3.10.0
      with:
        # token: ${{ steps.secret.outputs.secret }}
        # Let's see if the GitHub Token suffices
        token: ${{ secrets.GITHUB_TOKEN }}
        title: 'Translations from Hosted Weblate'
        body: >
          This PR merges pending commits from the Weblate repository that are conflicting
          with changes on `main`.
        labels: translations
        branch: automatic/weblate-conflicts