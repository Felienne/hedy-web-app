title: "Περιπέτειες με τη Hedy!"
subtitle: "Μπορείς να μάθεις τη Hedy δημιουργώντας μια ιστορία, ένα παιχνίδι ή κάτι που θα κάνει τη ζωή σου πιο εύκολη"
adventures:
    story:
        name: "Μια ιστορία"
        description: "Δημιούργησε μια διαδραστική ιστορία"
        image: "story.png"
        default_save_name: "Μια ιστορία"
        levels:
            1:
                story_text: |
                    ## Δημιούργησε μια ιστορία
                    Στο επίπεδο 1 μπορείς να δημιουργήσεις μια ιστορία με ένα διαφορετικό βασικό χαρακτήρα τον οποίο θα δηλώσεις εσύ.

                    Σαν πρώτη γραμμή, χρησιμοποίησε αυτόν τον κώδικα:

                    ```
                    ask ποιός είναι ο πρωταγωνιστής της ιστορίας σου
                    ```

                    Ύστερα από αυτήν την πρώτη γραμμή, ξεκίνα με την `print` αν η πρόταση χρειάζεται να εμφανιστεί.
                    Χρησιμοποίησε την `echo` αν θέλεις ο βασικός σου χαρακτήρας να εμφανίζεται στο τέλος της πρότασης.

                example_code: |
                    ## Παράδειγμα κώδικα Hedy
                    ```
                    ask Ο βασικός χαρακτήρας της ιστορίας είναι
                    print Ο βασικός χαρακτήρας της ιστορίας τώρα περπατάει στο δάσος
                    echo Φοβάται λίγο 
                    print Ακούει περίεργους ήχους παντού
                    print Φοβάται πως αυτό είναι ένα στοιχειωμένο δάσος
                    ```

                    ## Τί ακολουθεί;

                    Είναι κρίμα που μπορείς να δημιουργήσεις μόνο προτάσεις όπου ο βασικός χαρακτήρας είναι στο τέλος της πρότασης, σωστά; Αφού έχεις εξασκηθεί με αυτήν την ιστορία, προχώρησε στο επίπεδο 2 και μετά στο επίπεδο 3, όπου μπορείς να δημιουργήσεις περισσότερα και πιο σύνθετα προγράμματα.


                start_code: "print Η ιστορία σου ξεκινά εδώ"
            2:
                story_text: |
                    ## Η ιστορία
                    Στο επίπεδο 2 μπορείς να κάνεις την ιστορία σου πιο διασκεδαστική. Το όνομα του βασικού σου χαρακτήρα μπορεί πλεόν να εμφανίζεται οπουδήποτε στην πρόταση.

                    Θα πρέπει να γράψεις λίγο παραπάνω κώδικα γι'αυτό. Τώρα θα πρέπει πρώτα να ονοματίσεις το βασικό σου χαρακτήρα πρώτα.

                    Έπειτα μπορείς να τοποθετήσεις αυτό το όνομα οπουδήποτε στην πρόταση.

                example_code: |
                    ## Παράδειγμα κώδικα Hedy

                    ```
                    name is ask What is the name of the main character?
                    print name is now going to run in the woods
                    print name is a bit scared
                    print He hears crazy noises everywhere
                    print name is afraid this is a haunted forest
                    ```
                start_code: "print Η ιστορία σου"
            7:
                story_text: |
                    ## Η ιστορία

                    Σε μια ιστορία, κάποιος μπορεί να αναφέρει διάφορες λέξεις πολλές φορές. Για παράδειγμα, όταν κάποιος φωνάζει βοήθεια ή τραγουδά ένα τραγούδι. 
                    Μπορείς να βάλεις μια τέτοια επανάληψη στην ιστορία σου στο επίπεδο 5 με την `repeat`.

                example_code: |
                    ## Παράδειγμα κώδικα Hedy
                    ```
                    print 'Ο πρίγκιπας φώναζε για βοήθεια συνεχώς'
                    repeat 5 times print 'Βοήθεια!'
                    print 'Γιατί δε με βοηθάει κανείς;'
                    ```

                start_code: "repeat 5 times print 'Βοήθεια!'"
            5:
                story_text: |
                    ## Η ιστορία
                    Στο επίπεδο 4 μπορείς να κάνεις την ιστορία σου ακόμα πιο διασκεδαστική. Στο επίπεδο 4 μπορείς να προγραμματίσεις διαφορετικά φινάλε.

                    Σκέψου δύο διαφορετικά φινάλε για την ιστορία σου, για παράδειγμα:

                    - Η πριγκίπισσα περπατάει μέσα στο δάσος
                    - Συναντά ένα τέρας

                    - Ευχάριστο τέλος: Παίρνει το σπαθί της και το τέρας τρέχει μακριά.
                    - Δυσάρεστο τέλος: Το τέρας τρώει την πριγκίπισσα

                    Επιπλέον, μπορείς να βεβαιώσεις πως θα δηλωθεί πάλι το όνομα. Αυτό λειτουργεί όπως στο επίπεδο 3. Μπορείς να το συνδυάσεις με ένα `if`,  και έτσι έχεις δημιουργήσει ήδη ένα ολόκληρο πρόγραμμα!

                example_code: |
                    ## Παράδειγμα κώδικα Hedy
                    ```
                    name is ask 'Ποιός περπατάει στο δάσος;'
                    print 'Ο' name 'περπατάει στο δάσος'
                    print 'Ο' name 'συναντά ένα τέρας'
                    end is ask 'Θα ήθελες ένα ευχάριστο ή ένα δυσάρεστο φινάλε (good or bad)?'
                    if end is good print 'Ο' name 'παίρνει το σπαθί και το τέρας τρέχει γρήγορα μακριά' else print 'Το τέρας τρώει τον' name
                    ```
                start_code: "print 'Εδώ θα βρίσκεται σύντομα η ιστορία σου!'"
            4:
                story_text: |
                    ## Η ιστορία στο επίπεδο 3

                    Θα παρατήρησες πως υπάρχει ακόμα ένα σφάλμα στο επίπεδο 2.

                    Δοκίμασες να κάνεις μια πρόταση χρησιμοποιώντας τη λέξη name; Δηλαδή, `print το name μου είναι name`.

                    Αυτό δε δούλεψε σωστά! Τότε θα έχεις σαν αποτέλεσμα: το Γιάννης μου είναι Γιάννης. Αυτό μπορεί να λυθεί στο επίπεδο 3.

                    Θα πρέπει να χρησιμοποιήσεις εισαγωγικά για οτιδήποτε θα εμφανίσεις.

                example_code: |
                    ## Παράδειγμα κώδικα Hedy
                    ```
                    name is Γιάννης
                    print 'Το όνομα του βασικού χαρακτήρα είναι' name
                    print 'O' name 'τώρα θα περπατήσει στο δάσος'
                    print 'Ο' name 'φοβάται λίγο'
                    animals is κουκουβάγια, σκαντζόχοιρος, αρμαντίλο
                    print 'Ακούει τον ήχο ενός' animals at random
                    print 'Ο' name 'φοβάται πως αυτό είναι ένα στοιχειωμένο δάσος'
                    ```
                start_code: "print 'Η ιστορία σου θα εμφανιστεί εδώ!'"
            3:
                story_text: |4

                    ## Τυχαιότητα
                    Μπορείς επίσης να προσθέσεις κάτι τυχαίο στην ιστορία σου. Οποιοδήποτε τέρας, ζώο ή άλλο εμπόδιο.

                    Αυτό πάει κάπως έτσι:

                    ```
                    animals is κουκουβάγια, σκαντζόχοιρος, αρμαντίλο
                    print Τώρα ακούει τον ήχο ένος animals at random
                    ```
                start_code: "print Η ιστορία σου"
                example_code: |
                    ## Example Hedy Code

                    ```
                    animals {is} 🦔, 🐿, 🦉, 🦇
                    {print} He now hears the sound of an animals {at} {random}
                    ```
                story_text_2: |
                    The command `{add}` can also come in handy in your story. For example

                example_code_2: |
                    ## Example Hedy Code

                    {print} He hears a sound
                    animals {is} 🐿, 🦔, 🦇, 🦉
                    animal {is} {ask} What do you think it is?
                    {add} animal {to_list} animals
                    {print} it was a animals {at} {random}
                    ```
                story_text_3: |
                    This is an example of the `{remove}` command in your story
                example_code_3: |
                    ## Example Hedy code

                    ```
                    {print} His backpack got way too heavy.
                    {print} Inside were a bottle of water, a flashlight and a brick.
                    bag {is} water, flashlight, brick
                    dump {is} {ask} Which item should he dump?
                    {remove} dump {from} bag
                    ```
            12:
                story_text: "## Story\nIn this level you can use the quotation marks to save multiple words in a variable.\n"
                example_code: "## Example Hedy code\n\n\n```\nname = 'The Queen of England'\n{print} name ' was eating a piece of cake, when suddenly...'\n```\n"
                start_code: '# place your code here'
            10:
                example_code: "## Example Hedy code\n\n```\nanimals = red bird, black sheep, green frog, yellow duck, little child\n{print} 'brown bear'\n{print} 'brown bear'\n{print} 'What do you see?'\n{for} animal {in} animals\n    {print} 'I see a ' animal ' looking at me'\n    {print} animal\n    {print} animal\n    {print} 'What do you see?'\n{print} 'I see all the animals looking at me!'\n```\n"
                story_text: "## Story\nIn this level you can use the {for} command in your story. In this way you could easily program the children's book 'brown bear, brown bear, what do you see'.\n"
                start_code: '# place your code here'
            9:
                story_text: "## Story\nIn this level you can use nesting to put {if}, {repeat} or {for} commands inside other {if}, {repeat} or {for} commands. This gives you many options and really helps you to make your story interactive.\n"
                example_code_2: "## Elaborate code\n```\nsword = lost\ngame = on\n{print} 'Our hero is walking through the forest'\n{print} 'The path splits two ways'\n{repeat} 2 {times}\n    {if} game {is} on\n        path = {ask} 'Which path should she choose?'\n        {if} path {is} left\n            {if} sword {is} found\n                {print} 'Our hero comes across a dragon!'\n                {print} 'Luckily our hero has a sword to defeat the beast!'\n                game = over\n            {else}\n                {print} 'Our hero finds a dragon, but she doesnt have any weapons!'\n                {print} 'Our hero is beaten by the dragon...'\n                {print} 'Try again'\n                game = over\n        {if} path {is} right\n            {if} sword {is} lost\n                {print} 'Our hero finds a sword'\n                {print} 'This could come in very handy'\n                sword = found\n            {else}\n                {print} 'You have already found the sword. There is nothing left here.'\n                {print} 'She walks back'\n```\n"
                example_code: "## Example Hedy Code\n```\n{print} 'Robin is walking downtown'\nlocation = {ask} 'Is Robin going into a shop, or does she go home?'\n{if} location {is} shop\n    {print} 'She enters the shop.'\n    {print} 'Robin sees an interesting looking book'\n    book = {ask} 'Does Robin buy the book?'\n    {if} book {is} yes\n        {print} 'Robin buys the book and goes home'\n    {else}\n        {print} 'Robin leaves the shop and goes home'\n{else}\n    {print} 'Robin goes home'\n```\n"
                story_text_2: "The example above is pretty straightforward, but with nesting you can really elaborate your code and turn your story into a real game. Check out this example!\n"
                start_code: '# place your code here'
            8:
                story_text: "## Story\nIn this level you can use multiple lines in your {if} commands, this way you can upgrade your happy or sad ending!\n"
                example_code: "## Example Hedy code\n\n```\n{print} 'OH NO! The T-rex is closing in!'\nend = {ask} 'Do you want a happy or a sad ending?'\n{if} end {is} happy\n    {print} 'Just in time Richard jumps back into the time machine!'\n    {print} 'Michael types in the code and...'\n    {print} '\U0001F4A5ZAP!\U0001F4A5'\n    {print} 'They are back in their garage'\n{else}\n    {print} 'Michael yells COME ON RICHARD! RUN FASTER!'\n    {print} 'But Richard is too slow...'\n    {print} 'The T-rex closes in and eats him in one big bite!\U0001F996'\n```\n"
                start_code: '# place your code here'
            13:
                example_code: "## Example Hedy code\n\n```\nsword = 'lost'\ngame = 'on'\n{print} 'Our hero is walking through the forest'\n{print} 'The path splits two ways'\n{for} i {in} {range} 0 {to} 2\n    {if} game {is} 'on'\n        path = {ask} 'Which path should she choose?'\n        {if} path {is} 'left' {and} sword {is} 'found'\n            {print} 'Our hero comes across a dragon!'\n            {print} 'Luckily our hero has a sword to defeat the beast!'\n            game = 'over'\n        {if} path {is} 'left' {and} sword {is} 'lost'\n            {print} 'Our hero finds a dragon, but she doesnt have any weapons!'\n            {print} 'Our hero is beaten by the dragon...'\n            {print} 'Try again'\n            game = 'over'\n        {if} path {is} 'right' {and} sword {is} 'found'\n            {print} 'You have already found the sword. There is nothing left here.'\n            {print} 'She walks back'\n        {if} path {is} 'right' {and} sword {is} 'lost'\n            {print} 'Our hero finds a sword'\n            {print} 'This could come in very handy'\n            sword = 'found'\n```\n"
                story_text: "## Story\nBy using the `{and}` and `{or}` commands, you can shorten your stories. For example, check out the dragon story.\n"
                start_code: '# place your code here'
            15:
                example_code: "## Example Hedy code\n\n```\nkeys = 'lost'\n{print} 'You are standing in your garden and you have lost your keys.'\n{print} 'Where do you want to look for them?'\n{print} 'You can choose: tree, flowerbed, rock, postbox'\n{while} keys == 'lost'\n    location = {ask} 'Where do you want to look?'\n    {if} location == 'flowerbed'\n        {print} 'Here they are!'\n        keys = 'found'\n    {else}\n        {print} 'Nope they are not at the ' location\n{print} 'Now you can enter the house!'\n"
                story_text: "## Story\nUsing the `{while}` loop can make your stories more interesting. For example, you can use `{while} game {is} 'on'` so you can play until the game is over.\nOr you can use `{while} sword {is} 'lost'` so the player can't continu the game until they have found something.\n"
                start_code: '# place your code here'
    songs:
        name: "Τραγούδα ένα τραγούδι!"
        image: "songs.png"
        description: "Εμφάνισε ένα τραγούδι"
        default_save_name: "τραγούδι"
        levels:
            7:
                story_text: |
                    ## Τραγούδια
                    Τα τραγούδια συχνά περιλαμβάνουν αρκετή επανάληψη. Για παράδειγμα... το Μωρό Καρχαρίας! Αν το τραγουδήσεις, τραγουδάς διαρκώς το ίδιο πράγμα:

                    Μωρό Καρχαρίας τουτουρουτουτου <br>
                    Μωρό Καρχαρίας τουτουρουτουτου <br>
                    Μωρό Καρχαρίας τουτουρουτουτου <br>
                    Μωρό Καρχαρίας

                    Μπορείς να κάνεις το τραγούδι αυτό πολύ πιο σύντομο με ένα `repeat`! Μπορείς να ολοκληρώσεις τον κώδικα;

                    ## Παράδειγμα κωδικα Hedy
                    ```
                    repeat _ _ print 'Μωρό Καρχαρίας τουτουρουτουτου'
                    print 'Μωρό Καρχαρίας'
                    ```

                    Ύστερα από το Μωρό Καρχαρίας μπορείς φυσικά να προγραμματ΄ και άλλα τραγούδια. Υπάρχουν πολλά τραγούδια με επανάληψη.
                start_code: "print 'Μωρό Καρχαρίας'"
                example_code: "## Example Hedy code\n\n```\n{repeat} _ _ {print} 'Baby Shark tututudutudu'\n{print} 'Baby Shark'\n```\n\nAfter Baby Shark you can of course also program other songs. There are many songs with repetition.\n"
            6:
                story_text: |
                    ## Τραγούδια στο επίπεδο 6
                    Τα τραγούδια συχνά περιλαμβάνουν αρκετή επανάληψη. Κάποιες φορές η επανάληψη βασίζεται στο μέτρημα.
                    Για παράδειγμα, στο γνωστό τραγούδι 'Μπουκάλια Μπύρας'. Μπορείς να προγραμματίσεις αυτό το τραγούδι με λίγα μαθηματικά.

                example_code: |
                    ## Παράδειγμα κώδικα Hedy
                    ```
                    verse is 99
                    print verse ' μπουκάλια μπύρας στον τοίχο'
                    print verse ' μπουκάλια μπύρας'
                    print 'Κατέβασε ένα, και δώσε το τριγύρω'
                    verse is verse - 1
                    print verse ' μπουκάλια μπύρας στον τοίχο'
                    ```

                    Μπορείς τώρα να επαναλάβεις τις γραμμές 2 έως 9 όσες φορές θέλεις αντιγράφοντας τις γραμμές.

                    # Κοιτώντας μπροστά
                    Στο επίπεδο 5 μάθαμε να επαναλαμβάνουμε 1 γραμμή με τη `repeat`, έτσι:

                    * repeat 3 times print 'Μωρό Καρχαρίας Τουτουρουτουτου'

                    Όμως όπως θα δείτε σε αυτό το μάθημα, κάποιες φορές θέλεις να επαναλάβεις αρκετές γραμμές μαζί. Αυτό μπορεί να γίνει με αποκοπή και επικόλληση, όμως αυτό απαιτεί αρκετή δουλειά. Στο επίπεδο 7 θα μάθες πώς να το κάνεις αυτό εύκολα.

                start_code: "print 'Μωρό Καρχαρίας'"
            8:
                story_text: "## Songs\nIn a previous level you've programmed the song 'Bottles of beer'. You made one verse and then had to copy the verses 99 times. In level 7 you can repeat the song 99 times, just by adding one simple line!\n"
                example_code: "## Example Hedy code\n\n```\nverse = 99\n{repeat} 99 {times}\n    {print} verse ' bottles of beer on the wall'\n    {print} verse ' bottles of beer'\n    {print} 'Take one down, pass it around'\n    verse = verse - 1\n    {print} verse ' bottles of beer on the wall'\n```\n"
                start_code: '# place your code here'
            12:
                story_text: "## Sing a song!\nIn this song we can make it even easier to program '{if} you're happy and you know it, clap your hands'. Because we can put all of the actions in a variable, check it out:\n"
                example_code: "## Example Hedy code\n\n```\nactions = 'clap your hands', 'stomp your feet', 'shout Hurray!'\n{for} action {in} actions\n    {for} i {in} {range} 1 {to} 2\n        {print} '{if} youre happy and you know it'\n        {print} action\n    {print} '{if} youre happy and you know it and you really want to show it'\n    {print} '{if} youre happy and you know it'\n    {print} action\n```\n"
                start_code: '# place your code here'
            11:
                story_text: "## Songs\nIn this level you can use the `{for} i {in} {range}` command to make songs that use counting.\n"
                example_code: "## 5 little monkeys\n```\n{for} i {in} {range} 5 {to} 1\n    {print} i ' little monkeys jumping on the bed'\n    {print} 'One fell off and bumped his head'\n    {print} 'Mama called the doctor and the doctor said'\n    {if} i {is} 1\n        {print} 'PUT THOSE MONKEYS RIGHT TO BED!'\n    {else}\n        {print} 'NO MORE MONKEYS JUMPING ON THE BED!'\n```\n"
                start_code: '# place your code here'
            10:
                story_text: "## Songs\nIn this level you can easily make the childrens' song 'Five little monkeys'. Can you make the last chorus?\nYou can also make the whole baby shark song (including all the other sharks in the family) in only 6 lines!\nOr you can make Old McDonald with all the different animals.\n"
                example_code: "## 5 Little Monkeys Jumping on the bed\n```\nmonkeys = 5, 4, 3, 2\n{for} monkey {in} monkeys\n    {print} monkey ' little monkeys jumping on the bed'\n    {print} 'One fell off and bumped his head'\n    {print} 'Mama called the doctor and the doctor said'\n    {print} 'NO MORE MONKEYS JUMPING ON THE BED!'\n```\n\n## Baby Shark\n```\nsharks = baby, mommy, daddy, grandma, grandpa\n{for} shark {in} sharks\n    {print} shark 'tututututudu'\n    {print} shark 'tututututudu'\n    {print} shark 'tututututudu'\n    {print} shark\n```\n## Old McDonald\n```\nanimals = pig, dog, cow\n{for} animal {in} animals\n    {if} animal {is} pig\n        sound = oink\n    {if} animal {is} dog\n        sound = woof\n    {if} animal {is} cow\n        sound = moo\n    {print} 'Old McDonald had a farm'\n    {print} 'E I E I O!'\n    {print} 'and on that farm he had a ' animal\n    {print} 'E I E I O!'\n    {print} 'with a ' sound sound ' here'\n    {print} 'and a ' sound sound ' there'\n    {print} 'here a ' sound\n    {print} 'there a ' sound\n    {print} 'everywhere a ' sound sound\n```\n"
                start_code: '# place your code here'
            16:
                story_text: "## Sing a song!\nIn this level, you can program a song like OldMacDonald even more quickly. You can connect the right animal to the right sound by simply putting them in the same place in the list.\nThe Drunken Sailor is also quickly made in this level. You only need 8 lines for the entire song, check it out!\n\n## Old MacDonald\n```\nanimals = ['pig', 'dog', 'cow']\nsounds = ['oink', 'woof', 'moo']\n{for} i {in} {range} 1 {to} 3\n    animal = animals[i]\n    sound = sounds[i]\n    {print} 'Old McDonald had a farm'\n    {print} 'E I E I O!'\n    {print} 'and on that farm he had a ' animal\n    {print} 'E I E I O!'\n    {print} 'with a ' sound sound ' here'\n    {print} 'and a ' sound sound ' there'\n    {print} 'here a ' sound\n    {print} 'there a ' sound\n    {print} 'everywhere a ' sound sound\n```\n\n## Drunken Sailor\n```\nlines = ['what shall we do with the drunken sailor', 'shave his belly with a rusty razor', 'put him in a long boat till hes sober']\n{for} line {in} lines\n    {for} i {in} {range} 1 {to} 3\n        {print} line\n    {print} 'early in the morning'\n    {for} i {in} {range} 1 {to} 3\n        {print} 'way hay and up she rises'\n    {print} 'early in the morning'\n```\n"
                start_code: '# place your code here'
                example_code: "## Old MacDonald\n```\nanimals = ['pig', 'dog', 'cow']\nsounds = ['oink', 'woof', 'moo']\n{for} i {in} {range} 1 {to} 3\n    animal = animals[i]\n    sound = sounds[i]\n    {print} 'Old McDonald had a farm'\n    {print} 'E I E I O!'\n    {print} 'and on that farm he had a ' animal\n    {print} 'E I E I O!'\n    {print} 'with a ' sound sound ' here'\n    {print} 'and a ' sound sound ' there'\n    {print} 'here a ' sound\n    {print} 'there a ' sound\n    {print} 'everywhere a ' sound sound\n```\n\n## Drunken Sailor\n```\nlines = ['what shall we do with the drunken sailor', 'shave his belly with a rusty razor', 'put him in a long boat till hes sober']\n{for} line {in} lines\n    {for} i {in} {range} 1 {to} 3\n        {print} line\n    {print} 'early in the morning'\n    {for} i {in} {range} 1 {to} 3\n        {print} 'way hay and up she rises'\n    {print} 'early in the morning'\n```\n"
    dishes:
        name: "Ποιός πρέπει να πλύνει τα πιάτα;"
        image: "dishes.png"
        default_save_name: "πιάτα"
        description: "Χρησιμοποίησε τον υπολογιστή για να δεις ποιός πρέπει να πλύνει τα πιάτα (Ξεκίνα από το επίπεδο 2)"
        levels:
            7:
                story_text: |
                    ## Πρόγραμμα πλυσίματος πιάτων
                    Με την `repeat` μπορείς να επαναλάβεις κομμάτια κώδικα. Μπορείς να το χρησιμοποιήσεις αυτό για να υπολογίσεις ποιος θα πλένει τα πιάτα για όλην την εβδομάδα.

                    ## Παράδειγμα κωδικα Hedy
                    ```
                    people is μαμά, μπαμπάς, Ελένη, Σοφία
                    repeat _ _ print 'αυτό που θα πλύνει τα πιάτα είναι' _
                    ```
                start_code: "print 'Ποιός θα πλύνει τα πιάτα;'"
                example_code: "## Example Hedy code\n\n```\npeople = mom, dad, Emma, Sophie\n{repeat} _ _ {print} 'the dishwasher is' _\n```\n"
            6:
                story_text: |
                    ## Πρόγραμμα πλυσίματος πιάτων
                    Πόσο συχνά θα πλένει ο καθένας τα πιάτα; Είναι δίκαιο αυτό; Μπορείς να το υπολογίσεις στο επίπεδο 6.

                    ## Παράδειγμα κωδικα Hedy
                    ```
                    people is μαμά, μπαμπάς, Ελένη, Σοφία
                    eleni_washes is 0
                    dishwasher is people at random
                    print 'Αυτός που θα πλυνει τα πιάτα' dishwasher
                    if dishwasher is Ελένη eleni_washes is eleni_washes + 1
                    print 'Η Ελένη θα πλύνει τα πιάτα ' eleni_washes 'φορές αυτήν την εβδομάδα'
                    ```

                    Τώρα μπορείς να αντιγράψεις τις γραμμές 3 έως 4 κάποιες φορές (πχ. 7 φορές για όλην την εβδομάδα) για να υπολογίσεις για όλην την εβδομάδα.
                    Θα κάνεις τον κώδικα για όλην την εβδομάδα;


                    ## Τί ακολουθεί;
                    Τώρα θα πρέπει να κάνεις πολλή αντιγραφή και επικόλληση, έτσι; Αυτό θα το διορθώσουμε στο επίπεδο 7.
                    Αυτό το επίπεδο είναι το τέλος της περιπέτειας του πλυσίματος! Όμως υπάρχουν πολλές ακόμα περιπέτειες να ακολουθήσεις σε άλλα επίπεδα, όπως το κομπιουτεράκι, μια διαδραστική ιστορία και ένα πιο περίπλοκο παιχνίδι.

                start_code: "print 'Ποιός θα πλύνει τα πιάτα;'"
                example_code: "## Example Hedy code\n\n```\npeople = mom, dad, Emma, Sophie\nemma_washes = 0\ndishwasher = people {at} {random}\n{print} 'The dishwasher is' dishwasher\n{if} dishwasher {is} Emma emma_washes = emma_washes + 1\n{print} 'Emma will do the dishes this week' emma_washes 'times'\n```\n\nNow you can copy lines 3 to 5 a few times (e.g. 7 times for a whole week) to calculate for a whole week again.\nDo you make the code for the whole week?\n"
                story_text_2: "## Make it fair\nIf you are extremely unlucky the previous program might choose you to to the dishes for the whole week! That's not fair!\nTo create a fairer system you can use the `{remove}` command to remove the chosen person from the list. This way you don't have to do the dishes again untill everybody has had a turn.\n\nMonday and tuesday are ready for you! Can you add the rest of the week?\nAnd... can you come up with a solution for when your list is empty?\n"
                example_code_2: "```\npeople = mom, dad, Emma, Sophie\ndishwasher = people {at} {random}\n{print} 'Monday the dishes are done by: ' dishwasher\n{remove} dishwasher {from} people\ndishwasher = people {at} {random}\n{print} 'Tuesday the dishes are done by: ' dishwasher\n{remove} dishwasher {from} people\ndishwasher = people {at} {random}\n```\n"
            5:
                story_text: |
                    ## Πρόγραμμα πλυσίματος πιάτων
                    Με το `if` τώρα μπορείς να διασκεδάσεις λίγο παραπάνω με τις επιλογές στο πρόγραμμα. Μπορείς να κάνεις το πρόγραμμα να απαντά στην επιλογή που έκανε ο υπολογιστής.

                    Μπορείς να ολοκληρώσεις τον κώδικα έτσι ώστε να εμφανίζει 'κριμα!' όταν είναι σειρά σου αλλιώς 'ναι!';
                    Μην ξεχάσεις τα εισαγωγικά!


                example_code: |
                    ## Παράδειγμα κώδικα Hedy
                    ```
                    people is μαμά, μπαμπάς, Ελένη, Σοφία
                    dishwasher is people at random
                    if dishwasher is Σοφία print _ τί κρίμα που πρέπει να πλύνω τα πιάτα _ else print 'ευτυχώς δεν έχει πιάτα επειδή ο' _ 'πλένει ήδη'
                    ```
                start_code: "print 'Ποιός θα πλύνει τα πιάτα;'"
            4:
                story_text: |
                    ## Πρόγραμμα πλυσίματος πιάτων στο επίπεδο 3
                    Με εισαγωγικά μπορείς να κάνεις τον προγραμματισμό του πλυσίματος πιάτων πιο όμορφο.
                    Αυτήν τη φορά το δείγμα του κώδικα δεν είναι πλήρες.

                    Μπορείς να ολοκληρώσεις τον κώδικα εισάγοντας τις σωστές εντολές ή χαρακτήρες στις τελίτσες;
                    Κάθε τρεις τελίτσες πρέπει να αντικατασταθούν με μία εντολή.

                    Συμβουλή: Μην ξεχάσεις τα εισαγωγικά!

                example_code: |
                    ## Παράδειγμα κώδικα Hedy
                    ```
                    people is μαμά, μπαμπάς, Ελένη, Σοφία
                    print _ τα πιάτα πλένονται από _
                    print people at _
                    ```
                start_code: "print 'Ποιός πλένει τα πιάτα;'"
            3:
                story_text: |
                    ## Πρόγραμμα πλυσίματος πιάτων
                    Διαφωνείτε πάντα στο σπίτι για το ποιός πρέπει να πλύνει τα πιάτα ή να αλλάξει την άμμο της γάτας;

                    Τότε μπορείς να αφήσεις τον υπολογιστή να αποφασίσει πολύ δίκαια. Μπορείς να το προγραμματίσεις στο επίπεδο 2!

                    Πρώτα φτιάξε μια λίστα με τα μέλη της οικογένειάς σου. Ύστερα επίλεξε 'τυχαία' από τη λίστα.

                example_code: |
                    ## Παράδειγμα κώδικα Hedy
                    ```
                    people is μαμά, μπαμπάς, Ελένη, Σοφία
                    print people at random
                    ```

                    ## Τί ακολουθεί;
                    Δοκίμασες να κάνεις μια πρόταση χρησιμοποιώντας τη λέξη people; 

                    Δηλαδή, `print Επέλεξα από αυτούς τους people`. Αν δεν το έχεις κάνει ήδη, πήγαινε να το δοκιμάσεις! 

                    Θα δεις ότι δε δουλεύει σωστά. H Hedy θα εμφανίσει: Επέλεξα από αυτούς τους [μαμά, μπαμπάς, Ελένη, Σοφία]. Αυτό μπορείς να το λύσεις στο επίπεδο 3.

                start_code: "print Ποιός θα πλύνει τα πιάτα;"
                story_text_2: "## Hack the dishwashing program!\nDon't feel like doing the dishes yourself? Hack the program to remove your name from the list.\n"
                example_code_2: "```\npeople {is} mom, dad, Emma, Sophie\nyour_name {is} {ask} Who are you?\n{remove} your_name {from} people\n{print} people {at} {random} does the dishes\n```\n"
            10:
                story_text: "## Dishwashing\nIn this level you could make an even better dish washing shedule.\n"
                example_code: "## Example Hedy code\n```\ndays = Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday\nnames = mom, dad, Emma, Sophie\n{for} day {in} days\n    {print} names {at} {random} ' does the dishes on ' day\n```\n"
                start_code: '# place your code here'
    dice:
        name: "Φτιάξε τα δικά σου ζάρια"
        description: "Φτιάξε τα δικά σου ζάρια"
        image: "dice.png"
        default_save_name: "ζάρια"
        levels:
            7:
                story_text: |
                    ## Ζάρια
                    Μπορείς να φτιάξεις ένα ζάρι και πάλι στο επίπεδο 6. Με την εντολή `repeat` μπορείς έυκολα να ρίξεις μια ολόκληρη χούφτα από ζάρια.
                    Προσπάθησε να συμπληρώσεις το δείγμα κώδικα! Οι παύλες θα πρέπει να περιέχουν πολλαπλές εντολές και χαρακτήρες.

                    Ίσως όμως θέλεις να φτιάξεις ένα τελείως διαφορετικό ζάρι. Φυσικά και μπορείς!

                example_code: |
                    ## Παράδειγμα κώδικα Hedy
                    ```
                    choices is 1, 2, 3, 4, 5, σκουληκάκι
                    repeat _ _ print _ _ _
                    ```
                start_code: "print 'Τί θα δείξει το ζάρι αυτήν τη φορά;'"
            6:
                story_text: |
                    ## Ζάρια
                    Μπορείς επίσης να φτιάξεις ένα ζάρι με σκουληκάκι στο επίπεδο 5, όμως τώρα μπορείς να υπολογίσεις πόσοι πόντοι έχουν εμφανιστεί.

                    Ίσως να ξέρεις πως το σκουληκάκι μετράει για 5 πόντους στο Earthworms(σκουληκάκια). Τώρα, μετά από κάθε ρίψη μπορείς να υπολογίζεις αμέσως πόσους πόντους έχεις ρίξει συνολικά.

                    Αυτός είναι ο κώδικας για να υπολογίσεις του πόντους για ένα ζάρι:

                example_code: |
                    ## Παράδειγμα κώδικα Hedy
                    ```
                    choices is 1, 2, 3, 4, 5, σκουληκάκι
                    points is 0
                    throw is choices at random
                    print 'έριξες' throw
                    if throw is σκουληκάκι points is points + 5 else points is points + throw
                    print 'αυτό είναι' points ' points'
                    ```

                    Μπορείς να αλλάξεις τον κώδικα ώστε να παίρνεις το συνολικό σκορ για 8 ζάρια; Για να το κάνεις αυτό, πρέπει να κάνεις αποκοπή και επικόλληση από μερικές γραμμές κώδικα.

                    ## Κοιτώντας μπροστά

                    Κατάφερες να υπολογίσεις το σκορ για 8 ζάρια; Χρειάστηκε αρκετή αποκοπή και επικόλληση, έτσι; Θα το κάνουμε πιο εύκολο στο επίπεδο 7!

                start_code: "print 'Τί θα δείξει το ζάρι αυτήν τη φορά;'"
                example_code_2: "## Looking forward\n\nDid you manage to calculate the score for 8 dice? That required a lot of cutting and pasting, right? We are going to make that easier in level 7!\n"
            5:
                story_text: |
                    ## Ζάρια
                    Μπορείς και πάλι να δημιουργήσεις ένα ζάρι στο επίπεδο 4 χρησιμοποιώντας την `if`.
                    Συμπλήρωσε το δείγμα κώδικα έτσι ώστε ο κώδικας να λέει "Μπορείς να σταματήσεις να ρίχνεις" όταν ρίξεις ένα σκουληκάκι.

                    Ίσως όμως να θέλεις να αναδημιουργήσεις ένα ζάρι από ένα τελείως διαφορετικό παιχνίδι. Και αυτό γίνεται! Έπειτα, δημιούργησε τη δική σου αντίδραση. Πχ. 'ναι' για το 6 και 'κρίμα' για οτιδήποτε άλλο.

                example_code: |
                    ## Παράδειγμα κώδικα Hedy
                    ```
                    choices is 1, 2, 3, 4, 5, σκουληκάκι
                    throw is _
                    print 'έχεις ρίξει' _
                    if _ is earthworm print 'Μπορείς να σταματήσεις να ρίχνεις.' _ print 'Πρέπει να το ακούσεις πάλι!'
                    ```
                start_code: "print 'Τί θα δείξει το ζάρι αυτήν τη φορά;'"
            4:
                story_text: |
                    ## Ζάρια
                    Στο επίπεδο 3 μπορούμε να φτιάξουμε προτάσεις με την τιμή του ζαριού μέσα στην πρόταση, φυσικά μέσα σε εισαγωγικά.
                    Αυτήν τη φορά το δείγμα κώδικα δεν είναι πλήρες. Μπορείς να ολοκληρώσεις τον κώδικα;


                example_code: |
                    ## Παράδειγμα κώδικα Hedy
                    ```
                    choices is 1, 2, 3, 4, 5, σκουληκάκι
                    print _ έριξες _
                    print _ _ _ <- εδώ θα πρέπει να προγραμματίσεις τη ρίψη
                    ```

                start_code: "print 'Τί θα δείξει το ζάρι αυτήν τη φορά;'"
            3:
                story_text: |
                    ## Ζάρια
                    Στο επίπεδο 2 μπορούμε να επιλέξουμε από μια λίστα. Με αυτό μπορούμε να αφήσουμε τον υπολογιστή να επιλέξει μια πλευρά του ζαριού.


                    Ρίξε μια ματιά στα (επιτραπέζια) παιχνίδια στο σπίτι σου. Βρίσκεις κάποια (ιδιαίτερα) ζάρια παιχνιδιών; Μπορείς να τα αναδημιουργήσεις εύκολα με κώδικα Hedy. Για παράδειγμα τα ζάρια στο παιχνίδι Earthworms(σκουληκάκια) έχουν τους αριθμούς 1 έως 5 και ένα σκουληκάκι.

                    ![Ζάρια με αριθμούς 1 έως 5 και ένα σκουληκάκι](https://cdn.jsdelivr.net/gh/felienne/hedy@24f19e9ac16c981517e7243120bc714912407eb5/content/img/dobbelsteen.jpeg)

                example_code: |
                    ## Παράδειγμα κώδικα Hedy
                    ```
                    choices is 1, 2, 3, 4, 5, σκουληκάκι
                    print choices at random
                    ```

                    ## Τί ακολουθεί;
                    Δοκίμασες να κάνεις μια πρόταση χρησιμοποιώντας τη λέξη choices; 

                    Δηλαδή, `print Επέλεξα από τις choices`. Αν δεν το έχεις κάνει ήδη, πήγαινε να το δοκιμάσεις! 

                    Θα δεις ότι δε δουλεύει σωστά. H Hedy θα πει: Επέλεξα από τις [1, 2, 3, 4, 5, σκουληκάκι]. To Επίπεδο 3 έχει μια λύση για αυτό.

                start_code: "print Τί θα δείξει το ζάρι αυτήν τη φορά;"
            10:
                example_code: "## Example Hedy code\n\n```\nplayers = Ann, John, Jesse\nchoices = 1, 2, 3, 4, 5, 6\n{for} player {in} players\n    {print} player ' throws ' choices {at} {random}\n    {sleep}\n```\n"
                story_text: "## Dice\nIs everybody taking too long throwing the dice? In this level you can let Hedy throw all the dice at once!\n"
                start_code: '# place your code here'
            15:
                story_text: "## Dice\nIn this game you have to throw 6 in as little tries as possible.\n"
                example_code: "## Example Hedy code\n\n```\noptions = 1, 2, 3, 4, 5, 6\n{print} 'Throw 6 as fast as you can!'\nthrown = 0\ntries = 0\n{while} thrown != 6\n    thrown = options {at} {random}\n    {print} 'You threw ' thrown\n    tries = tries + 1\n{print} 'Yes! You have thrown 6 in ' tries ' tries.'\n```\n"
                start_code: '# place your code here'
    rock:
        name: "Πέτρα, ψαλίδι, χαρτί"
        description: "Φτιάξε το δικό σου παιχνίδι Πέτρα, ψαλίδι, χαρτί"
        image: "rock.png"
        default_save_name: "Πέτρα"
        levels:
            1:
                story_text: |
                    ## Πέτρα, ψαλίδι, χαρτί
                    Στο επίπεδο 1 μπορείς να ξεκινήσεις με ένα παιχνίδι Πέτρα, ψαλίδι, χαρτί.

                    Με την `ask` μπορείς να κάνεις μια επιλογή, και με την `echo` μπορείς να επαναλάβεις αυτήν την επιλογή.

                example_code: |
                    ## Παράδειγμα κώδικα Hedy

                    ```
                    print τί επιλέγεις;
                    ask επίλεξε ανάμεσα σε πέτρα, ψαλίδι ή χαρτί
                    echo ώστε η επιλογή σου είναι: 
                    ```

                    ## Τί ακολουθεί;
                    Η απλή επανάληψη είναι φυσικά κάπως βαρετή επειδή ο υπολογιστής δεν επιλέγει τίποτα. Θα φτιάξουμε κάτι τέτοιο αργότερα.


                start_code: "print Καλωσήλθες στο δικό σου παιχνίδι Πέτρα, ψαλίδι, χαρτί!"
            5:
                story_text: |
                    ## Πέτρα, ψαλίδι, χαρτί
                    Στο επίπεδο 4 μπορούμε να αποφασίσουμε ποιός θα κερδίσει. Για αυτό θα χρειαστούμε τον νέο κώδικα `if`.

                    Αποθήκευσε την επιλογή σου με το όνομα της επιλογής σου και την επιλογή του υπολογιστή ως computer choices`.
                    Έπειτα, μπορείς να χρησιμοποιήσεις την `if` για να δεις αν αυτές είναι ίδιες ή διαφορετικές.
                    Θα τελειώσεις τον κώδικα;

                example_code: |
                    ## Παράδειγμα κώδικα Hedy
                    ```
                    options is πέτρα, ψαλίδι, χαρτί
                    computer_choice is _
                    choice is ask 'Τί επιλέγεις;'
                    print 'εσύ επέλεξες ' _
                    print 'ο υπολογιστής επέλεξε ' _
                    if _ is _ print 'ισοπαλία!' else print 'όχι ισοπαλία'
                    ```

                    Πρώτα, συμπλήρωσε το σωστό κώδικα στις τελίτσες για να δεις αν είναι ισοπαλία.

                start_code: "print 'Καλωσήλθες στο δικό σου παιχνίδι Πέτρα, ψαλίδι, χαρτί'"
            4:
                story_text: |
                    ## Πέτρα, ψαλίδι, χαρτί
                    Στο επίπεδο 3 μπορούμε να προγραμματίσουμε περαιτέρω το Πέτρα, ψαλίδι, χαρτί. Όμως αν θέλεις να προσθέσεις κείμενο, πρέπει να χρησιμοποιήσεις εισαγωγικά και εδώ. Μπορείς να συμπληρώσεις τον κώδικα τοποθετώντας τις σωστές εντολές ή χαρακτήρες στις τελίτσες;

                example_code: |
                    ## Παράδειγμα κώδικα Hedy
                    ```
                    choices is πέτρα, ψαλίδι, χαρτί
                    print _ Ο υπολογιστής επέλεξε: _ _ at _
                    ```
                start_code: "print 'Καλωσήλθες στο δικό σου παιχνίδι Πέτρα, ψαλίδι, χαρτί!'"
            3:
                story_text: |
                    ## Πέτρα, ψαλίδι, χαρτί

                    Στο επίπεδο 2 μπορούμε να εισάγουμε λίστες και να επιλέξουμε πράγματα από αυτές. 

                    Αρχικά θα φτιάξεις μια λίστα με την `is`. Ύστερα μπορείς να αφήσεις τον υπολογιστή να επιλέξει κάτι από τη λίστα με την `at random` (τυχαία).

                    Για παράδειγμα, μπορείς να αφήσεις τον υπολογιστή να επιλέξει ανάμεσα σε πέτρα, ψαλίδι και χαρτί.

                example_code: |
                    ## Παράδειγμα κώδικα Hedy

                    ```
                    choices is πέτρα, ψαλίδι, χαρτί
                    print choices at random
                    ```

                    Μπορείς να χρησιμοποιήσεις την `ask` και πάλι στο επίπεδο 2. Μπορείς να εμφανίσεις την επιλογή σου και την επιλογή από τον υπολογιστή;
                    Προσοχή όμως, η `ask` τώρα λειτουργεί διαφορετικά απ'ότι στο επίπεδο 1. Θα πρέπει να υπάρχει ένα όνομα πριν από αυτή.
                start_code: "print Καλωσήλθες στο δικό σου παιχνίδι Πέτρα ψαλίδι χαρτί!"
            10:
                story_text: "## Rock, Paper, Scissors\nFeeling too lazy to play the game yourself? Let Hedy play it for you!\n"
                example_code: "## Example Hedy code\n\n```\nchoices = rock, paper, scissors\nplayers = Marleen, Michael\n{for} player {in} players\n     {print} player ' chooses ' choices {at} {random}\n```\n"
                start_code: '# place your code here'
            9:
                story_text: "## Rock, paper, scissors\nIn this level you can program the whole rock, paper, scissors game by nesting the {if}-commands. Can you finish the code?\n"
                example_code: "## Example Hedy code\n\n```\nchoices {is} rock, paper, scisscors\nyour_choice {is} {ask} 'What do you choose?'\n{print} 'You choose ' your_choice\ncomputer_choice {is} choices {at} {random}\n{print} 'The computer chooses ' computer_choice\n{if} computer_choice {is} your_choice\n    {print} 'Tie'\n{if} computer_choice {is} 'rock'\n    {if} your_choice {is} 'paper'\n        {print} 'You win!'\n    {if} your_choice {is} 'scissors'\n        {print} 'You lose!'\n```\n"
                start_code: '# place your code here'
            2:
                story_text: "## Rock, paper, scissors\nIn this level you can practise using the variables, so that you can make the rock, paper, scissors game in the next level!\n"
                example_code: "## Example Hedy code\n\n```\nchoice {is} _\n{print} I choose choice\n```\n"
                start_code: '# place your code here'
            15:
                story_text: "## Rock, Paper, Scissors\nPlay until you beat the computer! But first, finish the example code...\n"
                example_code: "## Example Hedy code\n\n```\nwon = 'no'\noptions = 'rock', 'paper', 'scissors'\n{while} won == 'no'\n    your_choice = {ask} 'What do you choose?'\n    computer_choice = options {at} {random}\n    {print} 'you chose ' your_choice\n    {print} 'the computer chose ' computer_choice\n    {if} computer_choice == your_choice\n        {print} 'Tie!'\n    {if} computer_choice == 'rock' {and} your_choice == 'scissors'\n        {print} 'You lose!'\n    {if} computer_choice == 'rock' {and} your_choice == 'paper'\n        {print} 'You win!'\n        won = 'yes'\n"
                start_code: '# place your code here'
            13:
                story_text: "## Rock, paper, scissors\nWith the `{and}` command you can shorten your rock, paper, scissors code! Check out the example code below and try to finish it.\n"
                example_code: "## Example Hedy code\n\n```\noptions = 'rock', 'paper', 'scissors'\nyour_choice = {ask} 'What do you choose?'\ncomputer_choice = options {at} {random}\n{print} 'You choose ' your_choice\n{print} 'The computer chooses ' computer_choice\n{if} computer_choice {is} your_choice\n    {print} 'Tie'\n{if} computer_choice {is} 'rock' {and} your_choice {is} 'paper'\n    {print} 'You win!'\n{if} computer_choice {is} 'rock' {and} your_choice {is} 'scissors'\n    {print} 'The computer wins!'\n```\n"
                start_code: '# place your code here'
    calculator:
        name: "Αριθμομηχανή"
        description: "Δημιούργησε μια αριθμομηχανή"
        image: "calculator.png"
        default_save_name: "Αριθμομηχανή"
        levels:
            6:
                story_text: |
                    ## Αριθμομηχανή
                    Τώρα που μπορείς να κάνεις υπολογισμούς, μπορείς επίσης να δημιουργήσεις ένα πρόγραμμα για να εξασκηθείς σε μαθηματικούς υπολογισμούς. Μπορείς να δημιουργήσεις τους δικούς σου υπολογισμούς, για παράδειγμα:

                example_code: |
                    ## Παράδειγμα κώδικα Hedy
                    ```
                    correct_answer is 11 * 27
                    answer is ask 'Πόσο κάνει 11 φορές το 27;'
                    if answer is correct_answer print 'συγχαρητήρια!'
                    else print 'Λάθος! Ήταν ' correct_answer
                    ```
                story_text_2: |
                    ## Τυχαίοι αριθμοί
                    Μπορείς επίσης να αφήσεις τον υπολογιστή να κάνει δικές του τυχαίες προσθέσεις χρησιμοποιώντας το randrom.

                    Έτσι, θα επιλέξεις έναν αριθμό από πίνακες για να εξασκηθείς, και από αυτό θα παίρνεις πάντα ένα διαφορετικό άθροισμα:

                example_code_2: |
                    ## Παράδειγμα κώδικα Hedy
                    ```
                    tables is 4, 5, 6, 8
                    numbers is 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
                    table is tables at random
                    number is numbers at random
                    correct_answer is table * number
                    answer is ask 'πόσο είναι ' table ' φορές ' number '?'
                    if answer is correct_answer print 'οκ'
                    else print 'λάθος! ήταν ' correct_answer
                    ```

                start_code: "print 'Καλωσήλθες σε αυτήν την αριθμομηχανή!'"
            12:
                example_code: "## Example Hedy code\n\n```\nnumber1 = {ask} 'What is the first number?'\nnumber2 = {ask} 'What is the second number?'\nanswer = number1 + number2\n{print} number1 ' plus ' number2 ' is ' answer\n"
                story_text: "## Calculator\nNow you can make a calculator that works for decimal numbers.\n"
                start_code: '# place your code here'
            10:
                story_text: "## Calculator\nThis calculator game helps you practise your tables of multiplication!\nIf you add more numbers to the list, you can practise all the multiplications.\n"
                example_code: "## Example Hedy code\n\n```\nnumbers = 1, 2, 3\n{for} number1 {in} numbers\n    {for} number2 {in} numbers\n        answer = {ask} 'How much is ' number2 ' times ' number1 '?'\n        correct = number1 * number2\n        {if} answer {is} correct\n            {print} 'Great job!'\n        {else}\n            {print} 'Thats wrong. The right answer is ' correct\n```\n"
                start_code: '# place your code here'
            9:
                story_text: "## Calculator\nIn previous levels you've learned how to make a calculator, in this level you can expand that code and make it into a little maths game. Like this...\n"
                example_code: "## Example Hedy code\n\n```\nscore = 0\n{repeat} 10 {times}\n    numbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n    number1 = numbers {at} {random}\n    number2 = numbers {at} {random}\n    correct_answer = number1 * number2\n    {print} 'What is ' number1 ' times ' number2 '?'\n    answer = {ask} 'Type your answer here...'\n    {print} 'Your answer is' answer\n    {if} answer {is} correct_answer\n        score = score + 1\n{print} 'Great job! Your score is... ' score ' out of 10!'\n```\n"
                start_code: "{print} 'Welcome to this calculator!'"
            14:
                story_text: "## Guess which number\nIn this level you can programm the game 'Guess which number'\n"
                example_code: "## Example Hedy code\n\n```\n{print} 'Guess which number'\nnumbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\nnumber = numbers {at} {random}\ngame = 'on'\n{for} i {in} {range} 1 {to} 10\n    {if} game == 'on'\n        guess = {ask} 'Which number do you think it is?'\n        {if} guess > number\n            {print} 'Lower!'\n        {if} guess < number\n            {print} 'Higher!'\n        {if} guess == number\n            {print} 'You win!'\n            game = 'over'\n"
                start_code: '# place your code here'
            15:
                story_text: "## Calculator\nYou can add the `{while}` loop to the calculator game you've learned to make in a previous level.\nThis makes sure the player can't continue to the next question {if} they answer incorrectly.\n"
                example_code: "## Example Hedy code\n\n```\nscore = 0\n{for} i {in} {range} 0 {to} 9\n    numbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n    number1 = numbers {at} {random}\n    number2 = numbers {at} {random}\n    correct = number1 * number2\n    answer = 0\n    {while} answer != correct\n        {print} 'How much is ' number1 ' times ' number2 '?'\n        answer = {ask} 'Fill in your answer:'\n        {print} 'Your answer is ' answer\n    {print} 'Good job!'\n{print} 'You win!'\n```\n"
                start_code: '# place your code here'
    restaurant:
        name: "Εστιατόριο"
        description: "Δημιούργησε το δικό σου εικονικό εστιατόριο"
        image: "restaurant.png"
        default_save_name: "Εστιατόριο"
        levels:
            1:
                story_text: |
                    ## Εστιατόριο
                      Στο επίπεδο 1 μπορείς να δημιουργήσεις το δικό σου εικονικό εστιατόριο και να πάρεις τις παραγγελίες των πελατών σου.
                      
                example_code: |
                    ## Παράδειγμα κώδικα Hedy
                      ```
                      print Καλωσήλθες στο εστιατόριο της Hedy
                      ask Tί θα ήθελες να παραγγείλεις;
                      echo Ώστε θα ήθελες να παραγγείλεις 
                      print Ευχαριστούμε για την παραγγελία σου!
                      print Ετοιμάζεται! 
                      ```
                      
                    ## Δοκιμασία
                    Μπορείς να σκεφτείς άλλη μια γραμμή για να προσθέσεις στον κώδικα του εστιατορίου σου; Για παράδειγμα, μπορείς να ρωτήσεις τους πελάτες τί θα ήθελαν να πιούν, να τους πεις την τιμή, ή να τους ευχηθείς ένα καλό γεύμα;

                start_code: "# place your code here"
                story_text_2: "## Challenge\nCan you think of more lines to add to your restaurant code? For example, can you {ask} the guests what they'd like to drink, tell them the price, or wish them a pleasant meal?\n"
            2:
                story_text: |
                    ## Εστιατόριο
                    Στο επίπεδο 2 μπορείς να επεκτείνεις το εστιατόριό σου χρησιμοποιώντας μεταβλητές. Στο επίπεδο 1, η Hedy μπορούσε μόνο να εμφανίσει την παραγγελία μια φορά και να θυμηθεί μόνο το τελευταίο αντικείμενο που παραγγέλθηκε.
                    Τώρα μπορείς να χρησιμοποιήσεις μεταβλητές και η Hedy μπορεί να θυμάται και το φαγητό αλλά και τα ποτά!

                    ## Παράδειγμα Εστιατορίου Hedy

                    ```
                    print Καλωσήλθατε στο εστιατόριο της Hedy!
                    print Σήμερα σερβίρουμε πίτσα ή λαζάνια.
                    food is ask Τί θα θέλατε να φάτε;
                    print Καλή επιλογή! Αυτό το φαγητό είναι το αγαπημένο μου!
                    topping is ask Θα θέλατε κρέας ή λαχανικά μαζί με αυτό;
                    print food with topping ετοιμάζεται! 
                    drinks is ask Τί θα θέλατε να πιείς με αυτό;
                    print Σας ευχαριστώ για την παραγγελία.
                    print Το φαγητό και τα ποτά σας θα είναι έτοιμα αμέσως!
                    ```
                start_code: "# place your code here"
                example_code: "## Example Hedy Code\n```\n{print} Welcome to Hedy's restaurant!\n{print} Today we're serving pizza or lasagna.\nfood {is} {ask} What would you like to eat?\n{print} Great choice! The food is my favorite!\ntopping {is} {ask} Would you like meat or veggies on that?\n{print} food with topping is on its way!\ndrinks {is} {ask} What would you like to drink with that?\n{print} Thank you for your order.\n{print} Your food and drinks will be right there!\n```\n"
            3:
                story_text: |4


                    ## Τυχαίο Εστιάτοριο
                    Δυσκολεύεσαι να αποφασίσεις τί θέλεις να φάς για δείπνο. Μπορείς να αφήσεις τη Hedy να επιλέξει για σένα!
                    Απλά πρόσθεσε λίστες από τα αγαπημένα (ή λιγότερα αγαπημένα) γεύματα σου και η Hedy μπορεί να επιλέξει το δείπνο.
                    Μπορείς επίσης να το διασκεδάσεις λίγο, αφήνοντας την Hedy να επιλέξει και την τιμή για το δείπνο σου! Τί θα πάρεις;

                    ## Παράδειγμα κώδικα Τυχαίου Εστιατορίου της Hedy

                    ```
                    print Καλωσήλθατε στο Τυχαίο Εστιατόριο της Hedy!
                    print Το μόνο εστιατόριο που θα επιλέξει τυχαία το γεύμα σας και την τιμή του!
                    starters is σαλάτα, σούπα, καρπάτσιο
                    mains is πίτσα, λαχανάκια Βρυξελλών, σπαγγέτι
                    desserts is μπράουνι, παγωτό, γαλλικά τυριά
                    drinks is κόλα, μπύρα, νερό
                    prices is 1 ευρώ, 10 ευρώ, 100 ευρώ
                    print Θα ξεκινήσετε με: starters at random
                    print Έπειτα θα σερβίρουμε: mains at random
                    print Και ως επιδόρπιο: desserts at random
                    print Θα έχετε ένα drinks at random για να πιείτε
                    print Το κόστος θα είναι: prices at random
                    print Ευχαριστούμε και καλή όρεξη! 
                    ```
                start_code: "# place your code here"
                example_code: "## Example Hedy code\n\n```\n{print} Welcome to Hedy's Random Restaurant!\n{print} The only restaurant that will randomly choose your meal and its price for you!\nstarters {is} salad, soup, carpaccio\nmains {is} pizza, brussels sprouts, spaghetti\ndesserts {is} brownies, ice cream, french cheeses\ndrinks {is} cola, beer, water\nprices {is} 1 dollar, 10 dollars, 100 dollars\n{print} You will start with: starters {at} {random}\n{print} Then we'll serve: mains {at} {random}\n{print} And as dessert: desserts {at} {random}\n{print} You will get a drinks {at} {random} to drink\n{print} That will be: prices {at} {random}\n{print} Thank you and enjoy your meal!\n```\n"
                story_text_2: "## Allergies\nDoes your costumer have any allergies or do they dislike certain dishes? Then you can use the `{remove}`command to remove it from your menu.\n"
                example_code_2: "```\n{print} Mystery milkshake\nflavors {is} strawberry, chocolate, vanilla\nallergies {is} {ask} Are you allergic to any falvors?\n{remove} allergies {from} flavors\n{print} You get a flavors {at} {random} milkshake\n```\n"
            12:
                example_code: "## Example Hedy code\n\n```\nprice = 0\nfood = {ask} 'What would you like to order?'\ndrinks = {ask} 'What would you like to drink?'\n{if} food {is} 'hamburger'\n    price = price + 6.50\n{if} food {is} 'pizza'\n    price = price + 5.75\n{if} drinks {is} 'water'\n    price = price + 1.20\n{if} drink {is} 'soda'\n    price = price + 2.35\n{print} 'That will be ' price ' dollar, please'\n```\n"
                story_text: "## Restaurant\nFrom this level on you can use decimal numbers to make you menu more realistic.\n"
                start_code: '# place your code here'
            11:
                story_text: "## Restaurant\nWe can use the `{for} i {in} {range} 1 {to} 5` to {print} the orders from multiple customers in an orderly manner.\n"
                example_code: "## Example Hedy code\n\n```\n{print} 'Welcome to Restaurant Hedy!'\npeople = {ask} 'For how many people would you like to order?'\n{for} i {in} {range} 1 {to} people\n    {print} 'Order number ' i\n    food = {ask} 'What would you like to eat?'\n    {print} food\n    {if} food {is} fries\n        sauce = {ask} 'What kind of sauce would you like with that?'\n        {print} sauce\n    drinks = {ask} 'What would you like to drink?'\n    {print} drinks\nprice = 4 * people\n{print} 'That will be ' price ' dollars, please!'\n```\n"
                start_code: '# place your code here'
            10:
                example_code: "## Example Hedy code\n\n```\ncourses = appetizer, main course, dessert\n{for} course {in} courses\n    food = {ask} 'What would you like to eat as your ' course '?'\n    {print} food ' will be your ' course\n```\n"
                story_text_2: "## Example Hedy code\n\nOf course, you could also order for multiple people!\n"
                start_code: courses = appetizer, main course, dessert
                story_text: "## Restaurant\nIn this level you'll learn how to easily {ask} your guests' orders in a short code.\n"
                example_code_2: "```\ncourses = appetizer, main course, dessert\nnames = Timon, Onno\n{for} name {in} names\n    {for} course {in} courses\n        food = {ask} name ', what would you like to eat as your ' course '?'\n        {print} name ' orders ' food ' as their ' course\n```\n"
            9:
                example_code: "## Example Hedy code\n\n```\n{print} 'Welcome to Hedys restaurant!'\npeople = {ask} 'How many people will be joining us today?'\n{print} 'Great!'\nprice = 0\n{repeat} people {times}\n    food = {ask} 'What would you like to order?'\n    {print} food\n    {if} food {is} fries\n        price = price + 3\n        sauce = {ask} 'What kind of sauce would you like with your fries?'\n        {if} sauce {is} no\n            {print} 'no sauce'\n        {else}\n            price = price + 1\n            {print} 'with ' sauce\n    {if} food {is} pizza\n        price = price + 4\n{print} 'That will be ' price ' dollar'\n{print} 'Enjoy your meal!'\n```\n"
                story_text: "## Restaurant\nIn this level you can use nesting to make your restaurant more realistic and more fun!\nFor example you would {ask} for sauce {if} somebody orders fries, but you wouldn't {if} someone orders pizza!\nCheck out the example, and try this at your own virtual restaurant!\n"
                start_code: '# place your code here'
            8:
                story_text: "## Restaurant\nIn this level you can make your virtual restaurant more elaborate by repeating multiple lines of code. Like this:\n"
                example_code: "```\n{print} 'Welcome to Hedys restaurant!'\npeople = {ask} 'How many people will be joining us today?'\n{print} 'Great!'\n{repeat} people {times}\n    food = {ask} 'What would you like to order?'\n    {print} food\n{print} 'Thank you for ordering!'\n{print} 'Enjoy your meal!'\n```\n\n## Challenge\nOf course, this code can be expanded with more items on the menu, offering drinks, and/or multiple courses, so feel free to add as many options as you like!\n"
                start_code: '# place your code here'
                story_text_2: "## Challenge\nOf course, this code can be expanded with more items on the menu, offering drinks, and/or multiple courses, so feel free to add as many options as you like!\n"
            7:
                story_text: "## Restaurant\nIn this level you've learned how to use the {repeat} command to repeat a line of code a certain amount of times.\nYou can use that in your restaurant to {ask} multiple people what they'd like to eat. Like this:\n\n```\n{print} 'Welcome to Hedys restaurant!'\npeople = {ask} 'How many people are joining us today?'\n{repeat} people times food = {ask} 'What would you like to eat?'\n{print} 'Thanks for your order! Its coming right up!'\n```\n"
                start_code: '# place your code here'
                example_code: "```\n{print} 'Welcome to Hedys restaurant!'\npeople = {ask} 'How many people are joining us today?'\n{repeat} people times food = {ask} 'What would you like to eat?'\n{print} 'Thanks for your order! Its coming right up!'\n```\n"
            6:
                story_text: "## Restaurant\nIn this level you can use maths to calculate the total price of your customer's order, which can make your virtual restaurant more realistic.\n"
                example_code: "## Example Hedy code (Simple)\nYou can make a simple restaurant code, like this:\n```\n{print} 'Welcome to Hedys restaurant'\n{print} 'Here is our menu:'\n{print} 'Our main courses are pizza, lasagne, or spaghetti'\nmain = {ask} 'Which main course would you like?'\nprice = 0\n{if} main {is} pizza price = 10\n{if} main {is} lasagne price = 12\n{if} main {is} spaghetti price = 8\n{print} 'You have ordered ' main\n{print} 'That will be ' price ' dollars, please'\n{print} 'Thank you, enjoy your meal!'\n```\n"
                story_text_2: "But you can also add many more things to your virtual restaurant, for example more courses.\n"
                example_code_2: "## Example Hedy code(Elaborate)\nIn this example there are three courses, which requires more code and more additions in calculating the price.\n```\n{print} 'Welcome to Hedys restaurant'\n{print} 'Here is our menu:'\n{print} 'Our starters are salad, soup, or carpaccio'\n{print} 'Our main courses are pizza, lasagne, or spaghetti'\n{print} 'Our desserts are brownie, icecream, or milkshake'\nstarter = {ask} 'Which starter would you like to have?'\nmain = {ask} 'Which main course would you like?'\ndessert = {ask} 'Which dessert do you pick?'\nprice = 0\n{if} starter {is} soup price = price + 6 {else} price = price + 7\n{if} main {is} pizza price = price + 10\n{if} main {is} lasagne price = price + 12\n{if} main {is} spaghetti price = price + 8\n{if} dessert {is} brownie price = price + 7\n{if} dessert {is} icecream price = price + 5\n{if} dessert {is} milkshake price = price + 4\n{print} 'You have ordered ' starter ' , ' main ' and ' dessert\n{print} 'That will be ' price ' dollars, please'\n{print} 'Thank you, enjoy your meal!'\n```\n## Challenge\nYou can add many more things to your virtual restaurant. For example, can you...\n- {ask} how many people are coming and multiply the price by that amount?\n- add another course?\n- give people a discount when they enter a (secret) couponcode?\n- add a children's menu?\n- think of other fun things to add?\n"
                start_code: '# place your code here'
            5:
                story_text: "## Restaurant\nIn this level the {if} command allows you to {ask} your customers questions and give different responses to the answers.\nIn the example below, you see that you can {ask} the customer {if} they want to hear the specials and Hedy can respond accordingly.\n"
                example_code: "## Example Hedy code\n\n```\n{print} 'Welcome to Hedys restaurant!'\nspecial {is} {ask} 'Would you like to hear our specials today?'\n{if} special {is} yes {print} 'Todays special is chicken piri piri and rice.' {else} {print} 'No problem.'\nfood {is} {ask} 'What would you like to eat?'\n{print} 'One ' food ', coming right up!'\ndrink {is} {ask} 'What would you like to drink with that?'\n{if} drink {is} cola {print} 'Im sorry, we are out of cola!' {else} {print} 'Great choice!'\nanything {is} {ask} 'Would you like anything {else}?'\n{print} 'Let me repeat your order...'\n{print} 'One ' food\n{if} drink {is} cola {print} 'and...' {else} {print} 'One ' drink\n{if} anything {is} no {print} 'Thats it!' {else} {print} 'One ' anything\n{print} 'Thank you for your order and enjoy your meal!'\n```\n\n## Challenge\nCan you think of more questions to {ask} the customers when they are ordering, and make up different responses to their answers by using the {if} command?\n"
                start_code: '# place your code here'
                story_text_2: "## Challenge\nCan you think of more questions to {ask} the customers when they are ordering, and make up different responses to their answers by using the {if} command?\n"
            4:
                story_text: "## Restaurant\nIn thsi level you have to use quotation marks when using the `{print}` command.\nCan you make your code from the previous levels work in this level too by adding the quotation marks?\n\nBe careful! In the previous levels apostrophes were allowed in the text, but in this level Hedy will confuse them for quotation marks and the code will not work!\nSo instead of typing  `{print} Today we're serving pizza` , you should type `{print} 'Today we are serving pizza'`\n\n## Example Hedy Restaurant\n```\n{print} 'Welcome to Hedys restaurant!'\n{print} 'Today we are serving pizza or lasagna.'\nfood {is} {ask} 'What would you like to eat?'\n{print} 'Great choice! The ' food ' is my favorite!'\ntopping {is} {ask} 'Would you like meat or veggies on that?'\n{print} food ' with ' topping ' is on its way!'\ndrinks {is} {ask} 'What would you like to drink with that?'\n{print} 'Thank you for your order.'\n{print} 'Your ' food ' and ' drinks ' will be right there!'\n```\n"
                start_code: '# place your code here'
                example_code: "## Example Hedy Restaurant\n```\n{print} 'Welcome to Hedys restaurant!'\n{print} 'Today we are serving pizza or lasagna.'\nfood {is} {ask} 'What would you like to eat?'\n{print} 'Great choice! The ' food ' is my favorite!'\ntopping {is} {ask} 'Would you like meat or veggies on that?'\n{print} food ' with ' topping ' is on its way!'\ndrinks {is} {ask} 'What would you like to drink with that?'\n{print} 'Thank you for your order.'\n{print} 'Your ' food ' and ' drinks ' will be right there!'\n```\n"
            15:
                story_text: "## Restaurant\nWith the `{while}` you can make sure your costumers can keep adding orders until they are done.\n"
                example_code: "## Example Hedy code\n\n```\n{print} 'Welcome at McHedy'\nmore = 'yes'\n{while} more == 'yes'\n    order = {ask} 'What would you like to order?'\n    {print} order\n    more = {ask} 'Would you like to order anything {else}?'\n{print} 'Thank you!'\n"
                start_code: '# place your code here'
            13:
                example_code: "## Example Hedy code\n```\nprice = 10\nfood = {ask} 'What would you like to eat?'\ndrinks = {ask} 'What would you like to drink?'\n{if} food {is} 'sandwich' {and} drinks {is} 'juice'\n    {print} 'Thats our discount menu'\n    price = price - 3\n{print} 'That will be ' price ' dollars'\n```\n"
                example_code_2: "## Example Hedy code\n```\ndrinks = {ask} 'What would you like to drink?'\n{if} drinks {is} 'water' {or} drinks {is} 'juice'\n    {print} 'Thats a healthy choice'\n```\n"
                story_text: "## Restaurant\nIn this level we can use the new commands to upgrade our restaurant.\nWe use `{and}` to see {if} two things are both the case.\n"
                story_text_2: "We use `{or}` to see {if} one our of two things is the case.\n"
                start_code: '# place your code here'
    parrot:
        name: Parrot
        levels:
            1:
                story_text: "## Parrot\nCreate your own online pet parrot that will copy you!\n"
                example_code: "## Example Hedy code\n\n```\n{print} Im Hedy the parrot\n{ask} whats your name?\n{echo}\n{echo}\n```\n"
                start_code: '{print} Im Hedy the parrot'
            2:
                story_text: "## Parrot\nCreate your own online pet parrot that will copy you!\n"
                example_code: "## Example Hedy code\n\n```\n{print} Im Hedy the parrot\nname {is} {ask} whats your name?\n{print} name\n{sleep}\n{print} squawk\n{sleep}\n{print} name\n```\n"
                start_code: '{print} Im Hedy the parrot!'
            3:
                example_code: "## Example Hedy code\n\n```\nwords {is} squawk, Hedy\n{print} Train your parrot!\nnew_word {is} {ask} Which word do you want to teach them?\n{add} new_word {to_list} words\n{print} \U0001F9D2 Say new_word , Hedy!\n{print} \U0001F99C words {at} {random}\n```\n"
                story_text: "## Parrot\nTeach your parrot a new word with `{add}`.\n"
                start_code: '# place your code here'
            5:
                story_text: "## Parrot\nReward your parrot {if} it says the correct word!\n"
                example_code: "## Example Hedy code\n\n```\nwords {is} squawk, Hedy\n{print} 'Train your parrot!'\nnew_word {is} {ask} 'Which word do you want to teach them?'\n{add} new_word {to_list} words\nsaid_word {is} words {at} {random}\n{print} '\U0001F9D2 Say ' new_word ', Hedy!'\n{print} '\U0001F99C ' said_word\n{if} said_word {is} new_word {print} '\U0001F9D2 Great job, Hedy! \U0001F36A'\n{else} {print} '\U0001F9D2 No, Hedy! Say ' new_word\n```\n"
                start_code: '# place your code here'
        description: Create your own online pet parrot that will copy you!
        image: story.png
        default_save_name: Parrot
    turtle:
        levels:
            8:
                story_text_2: "## Interaction\nAlso, we can now improve the program that draws different figures.\nCan you figure out how far the turtle has to turn here? Finish the code and you can draw any polygon you'd like!\n"
                story_text: "## Let's draw\nNow that we can repeat several lines, we can make figures more easily.\nWe only have to set the angle once and then use that variable in the `{repeat}`.\n"
                example_code: "## Example Hedy code\n\n```\nangle = 90\n{repeat} 10 {times}\n    {turn} angle\n    {forward} 50\n```\n"
                example_code_2: "## Example Hedy code\n\n```\nangles = {ask} 'How many angles should I draw?'\nangle = 360 / angles\n{repeat} angle {times}\n    {turn} _\n    {forward} _\n```\n"
                start_code: "hoeken = {ask} 'How many angles should I draw?'\n"
            6:
                story_text: "## Let's draw\nIn this level you can use calculations to draw different figures.\nYou may have learned in school that turning a full circle is 360 degrees. If not, now you know!\nThat's why you also use 90 degrees for a square. 360 divided by 4 is 90.\nNow that we can do math with Hedy, we can draw all the figures we want!\n"
                example_code: "## Example Hedy code\n\n```\nangles = {ask} 'How many angles do you want?'\nangle = 360 / angles\n{forward} 50\n{turn} angle\n{forward} 50\n{turn} angle\n{forward} 50\n{turn} angle\n{forward} 50\n{turn} angle\n{forward} 50\n{turn} angle\n{forward} 50\n{turn} angle\n```\n"
                start_code: "{print} 'Drawing figures'\n"
            2:
                story_text: "In level 1 the turtle could only turn left or right. That is a bit boring!\nIn level 2 he can point his nose in all directions.\n\nUse 90 to turn a quarter. We call this degrees. A full turn is 360 degrees.\nCan you make a figure with this code? Maybe a triangle or a circle?\n"
                example_code: "## Example Hedy code\n\n\n```\n{print} Drawing figures\nangle {is} 90\n{turn} angle\n{forward} 25\n{turn} angle\n{forward} 25\n```\n"
                start_code: "{print} Turtle race!\nhoek {is} 90\n{turn} hoek\n{forward} 25\n"
            3:
                story_text: "## Searching turtle\nIn this level you can use use `{random}` with the drawing turtle. A random choice makes the turtle walk a different path each time.\nUse `{at} {random}` to choose a value from a list. You can copy and paste lines 2 and 3 to create a longer random path.\n"
                example_code: "## Example Hedy code\n\n\n```\nangles {is} 10, 50, 90, 150, 250\n{turn} angles {at} {random}\n{forward} 25\n```\n"
                start_code: "angles {is} 10, 50, 90, 150, 250\n{turn} angles {at} {random}\n{forward} 25\n"
            4:
                story_text: "## Let's draw\nIn level 4 you have to use quotation marks with `{print}` and `{ask}`. Also when drawing!\n"
                example_code: "## Example Hedy code\n\n```\n{print} 'Drawing figures'\nangle {is} 90\n{turn} angle\n{forward} 25\n{turn} angle\n{forward} 25\n```\n"
                start_code: "{print} 'Drawing figures'\nangle {is} 90\n{turn} angle\n{forward} 25\n"
            5:
                story_text: "## Let's draw\nIn level 5 you can make a choice with `{if}`. For example between different types of figures.\n"
                example_code: "## Example Hedy code\n\n```\n{print} 'Drawing Figures'\nfigure {is} {ask} 'Do you want a square or a triangle?'\n{if} figure {is} triangle angle {is} 120\n{else} angle {is} 90\n{turn} angle\n{forward} 25\n{turn} angle\n{forward} 25\n{turn} angle\n{forward} 25\n{turn} angle\n{forward} 25\n```\n"
                start_code: "{print} 'Drawing Figures'\nfigure {is} {ask} 'Do you want a square or a triangle?'\n{if} figure {is} triangle angle {is} 120 {else} angle {is} 90\n{turn} angle\n{forward} 25\n"
            7:
                story_text: "## Let's draw\nIn this level you can repeat one line of code with `{repeat}`.\n"
                example_code: "## Example Hedy code\n\n```\n{print} 'Draw figures'\n{repeat} 3 {times} {forward} 10\n```\n"
                start_code: "{print} 'Draw figures'\n{repeat} 3 {times} {forward} 10\n"
            1:
                example_code: "## Example Hedy code\n\n```\n{turn} right\n{forward} 50\n{turn} left\n{forward} 50\n```\n"
                start_code: "{forward} 50\n{turn} left"
                story_text: "## Let's draw\nIn level 1 you can also use Hedy to draw. By combining turns and lines, you can make a square or a stair!\n\nUsing `{forward}` you draw a line forwards. The number behind it determines how far the turtle will walk. `{turn} right` turns a quarter turn in clockwise direction, `{turn} left` turns counter clockwise.\n\nThis is the start of a little staircase. Can you make it have 5 steps?\n"
        description: Make your own drawing
        image: turtle.gif
        default_save_name: turtle
        name: Turtle
    haunted:
        levels:
            1:
                start_code: '{print} How did I get here?'
                story_text: "## Haunted house\nIn this adventure you are working towards making a game in which you have to escape from a haunted house by picking the correct door.\nIf you pick the right door you'll survive, but {if} not a terrible monster might...\n\nIn level 1 we start our haunted house game by making up a scary story and {ask} the player what monster they'll see in the haunted house.\n"
                example_code: "## Example Hedy code\n\n\n```\n{print} How did I get here?\n{print} I remember my friend telling me to go into the old mansion...\n{print} and suddenly everything went black.\n{print} But how did I end up on the floor...?\n{print} My head hurts like Ive been hit by a baseball bat!\n{print} What's that sound?\n{print} Oh no! I feel like Im not alone in this house!\n{print} I need to get out of here!\n{print} There are 3 doors in front of me..\n{ask} Which door should i pick?\n{echo} I choose door\n{print} ...?\n```\n\n## Challenge\nCan you finish the scary story? Or make up your own haunted house story?\n"
                story_text_2: "## Challenge\nCan you finish the scary story? Or make up your own haunted house story?\n"
            14:
                story_text: "## Haunted House\nIn this level you can use the `<` and `>` symbol to introduce lives to your game.\n"
                example_code: "## Example Hedy code\n\n```\n{print} 'Escape from the haunted house'\nlives = 3\ndoors = 1, 2, 3\nmonsters = 'the wicked witch', 'a zombie', 'a sleeping 3 headed dog'\n{for} i {in} {range} 1 {to} 10\n    {if} lives > 0\n        good_door = doors {at} {random}\n        monster = monsters {at} {random}\n        chosen_door = {ask} 'Which door do you choose?'\n        {if} good_door == chosen_door\n            {print} 'You have chosen the correct door'\n        {else}\n            {print} 'You see...' monster\n            {if} monster == 'a sleeping 3 headed dog'\n                {print} 'Pffieuw.... Its asleep'\n            {else}\n                {print} 'You lose one life'\n                lives = lives -1\n    {else}\n        {print} 'GAME OVER'\n```\n"
                start_code: '# place your code here'
            4:
                story_text: "## Haunted house\nIn this level you learn how to use quotation marks in your games.\nCan you make your Haunted House level 4 proof?\n"
                start_code: '# place your code here'
                example_code: "```\n{print} _Escape from the haunted house!_\n{print} _There are 3 doors in front of you..._\nchoice {is} {ask} _Which door do you choose?_\n{print} _You picked door ..._ choice\nmonsters {is} a zombie, a vampire, NOTHING YOUVE ESCAPED\n{print} _You see..._\n{sleep}\n{print} monsters {at} {random}\n ```\n"
            16:
                story_text: "## Haunted House Game\nThis haunted house game uses the connection between the lists you can use in this level.\nFor example: all the properties that belong to the zombie are first in all the lists, witch second and vampire third.\nCheck out the code!\n"
                example_code: "## Example Hedy code\n\n```\nnumbers = [1, 2, 3]\ni = numbers[random]\nhint = ['growling', 'a cackling laugh', 'fluttering batwings']\nmonsters = ['zombie', 'witch', 'vampire']\nbad_fate = ['Your brain is eaten', 'You are forever cursed', 'You are bitten']\ngood_fate = ['You throw the ham. The zombie is distracted and starts etaing it.', 'You set the curtains on fire. The witch flees out of fear for the fire', 'The vampire hates garlic and flees']\nweapons = ['ham', 'lighter', 'garlic']\n{print} 'You are standing in front of an old mension'\n{print} 'Something is not right here'\n{print} 'You hear ' hint[i]\n{print} 'You are going to explore it'\n{print} 'You enter the kitchen en see a lighter, a raw ham and a garlic.'\nyour_weapon = {ask} 'What do you bring with you?'\n{print} 'With your ' your_weapon ' you enter the living room'\n{print} 'There you find a ' monsters[i]\nneeded_weapon = weapons[i]\n{if} your_weapon == needed_weapon\n    {print} 'You use your ' your_weapon\n    {print} good_fate[i]\n    {print} 'YOU WIN!'\n{else}\n    {print} 'You have chosen the wrong weapon...'\n    {print} bad_fate[i]\n    {print} 'GAME OVER'\n```\n"
                start_code: '# place your code here'
            2:
                story_text: "## Haunted House\nIn this haunted house you can choose your monsters with emojis. Of course you could also use words.\n\n## Example Hedy Code\n```\nmonster1 {is} \U0001F47B\nmonster2 {is} \U0001F921\nmonster3 {is} \U0001F476\n{print} You enter the haunted house.\n{print} Suddenly you see a monster1\n{print} You run into the other room, but a monster2 is waiting there for you!\n{print} Oh no! Quickly get to the kitchen.\n{print} But as you enter monster3 attacks you!\n```\n"
                start_code: monster1 {is} _
                example_code: "## Example Hedy Code\n```\nmonster_1 {is} \U0001F47B\nmonster_2 {is} \U0001F921\nmonster_3 {is} \U0001F476\n{print} You enter the haunted house.\n{print} Suddenly you see a monster_1\n{print} You run into the other room, but a monster_2 is waiting there for you!\n{print} Oh no! Quickly get to the kitchen.\n{print} But as you enter monster_3 attacks you!\n```\n"
            11:
                story_text: "## Haunted House\nIn this level we've changed the repeat command and we've added a line to our haunted house that tells the player in which room they are.\n"
                example_code: "## Example Hedy code\n\n```\n{print} 'Escape from the Haunted House!'\nplayer {is} alive\ndoors = 1, 2, 3\nmonsters = zombie, vampire, giant spider\n{for} i {in} {range} 1 {to} 3\n    {if} player {is} alive\n        correct_door = doors {at} {random}\n        {print} 'Room ' i\n        {print} 'There are 3 doors in front of you...'\n        chosendoor = {ask} 'Which door do you choose?'\n        {if} chosendoor {is} correct_door\n            {print} 'No monsters here!'\n        {else}\n            {print} 'You are eaten by a ' monsters {at} {random}\n            player = dead\n    {else}\n        {print} 'GAME OVER'\n{if} player {is} alive\n    {print} 'Great! You survived!'\n```\n"
                start_code: "{print} 'Escape from the haunted house!'"
            9:
                story_text: "## Haunted House\nIn this level you can use nesting, which allows you to make the haunted house even more interactive!\n"
                example_code: "## Example Hedy code\n\n```\n{print} 'Escape from the Haunted House!'\nplayer = alive\ndoors = 1, 2, 3\nmonsters = zombie, vampire, giant spider\n{repeat} 3 {times}\n    {if} player {is} alive\n        correct_door {is} doors {at} {random}\n        {print} 'There are 3 doors in front of you...'\n        chosen_door = {ask} 'Which door do you choose?'\n        {if} chosen_door {is} correct_door\n            {print} 'No monsters here!'\n        {else}\n            {print} 'You are eaten by a ' monsters {at} {random}\n            player = dead\n    {else}\n        {print} 'GAME OVER'\n{if} player {is} alive\n    {print} 'Great! You survived!'\n```\n## Challenge\nNow it's very hard to win this game, can you make it easier to win?\nFor example by only having 1 wrong door and 2 correct doors instead of 1 correct door en 2 wrong ones?\n"
                start_code: "{print} 'Escape from the haunted house!'"
            5:
                story_text: "## Haunted House\nUp until this level the haunted house game always asked the player to choose a door, but as you might have noticed, they didn't really have to answer correctly.\nIf the player filled in a completely random answer, the game would still work and the player might even win (despite not picking a door).\nIn this level you can only win the game by picking the same door Hedy picked randomly.\n"
                example_code: "## Example Hedy code\n\n```\n{print} 'Escape from the haunted house!'\n{print} 'There are 3 doors in front of you...'\ndoors {is} 1, 2, 3\nmonsters {is} werewolf, mummy, vampire, zombie\nchosen_door {is} {ask} 'Which door do you choose?'\n{print} 'You chose door...' chosen_door\n{sleep}\ncorrect_door {is} doors {at} {random}\n{if} chosen_door {is} correct_door {print} 'Great! Youve escaped!'\n{else} {print} 'Oh no! You are being eaten by a...' monsters {at} {random}\n```\n"
                start_code: '# place your code here'
            3:
                story_text: "## Haunted house game\nIn the previous levels you've made an introduction to your haunted house game, but as you might have noticed the story would always have a dreadful end.\nIn this level you can make your story more interactive by changing the outcome of the game; sometimes you'll get eaten, sometimes you'll escape!\nLet Hedy decide randomly!\n"
                example_code: "## Example Hedy code\n\n```\n{print} Escape from the haunted house!\n{print} There are 3 doors in front of you...\nchoice {is} {ask} Which door do you choose?\n{print} You picked door ... choice\nmonsters {is} a zombie, a vampire, NOTHING YOUVE ESCAPED\n{print} You see...\n{sleep}\n{print} monsters {at} {random}\n```\n\n## Challenge\nThis story is pretty straight {forward}, maybe you can spook it up a bit by adding a more exciting story.\nAlso you have very limited outcomes right now, there are only 3 options of what's behind the doors. Maybe you can think of more monsters to add to the list!\n\n## Change the game into a tv gameshow!\nLastly, we'd like to challenge you to change this game into a gameshow (like the ones on tv) where you choose a door or suitcase and it contains a big price!\nCan you do it?\n"
                start_code: '# place your code here'
                story_text_2: "## Challenge\nThis story is pretty straight {forward}, maybe you can spook it up a bit by adding a more exciting story.\nAlso you have very limited outcomes right now, there are only 3 options of what's behind the doors. Maybe you can think of more monsters to add to the list!\n\n## Change the game into a tv gameshow!\nLastly, we'd like to challenge you to change this game into a gameshow (like the ones on tv) where you choose a door or suitcase and it contains a big price!\nCan you do it?\n"
        name: Haunted House
        description: escape from the haunted house
        image: hauntedhouse.gif
        default_save_name: Haunted House
    piggybank:
        name: Piggy Bank
        default_save_name: Piggy Bank
        description: Count your pocketmoney!
        image: piggy.png
        levels:
            12:
                story_text: "## Piggy Bank\nIn this adventure you learn how to make a digital piggy bank, to calculate how much money you have and how long you need to save up to buy what you want!\n"
                example_code: "## Example Hedy code\n\n```\n{print} 'The digital piggy bank'\nwish = {ask} 'What would you like to buy?'\nprice = {ask} 'How much does that cost?'\nsaved = {ask} 'How much money have you saved already?'\nallowance = {ask} 'How much pocket money do you get per week?'\nto_save = price - saved\nweeks = to_save / allowance\n{print} 'You can buy a ' wish ' in ' weeks ' weeks.'\n"
                start_code: '# place your code here'
            14:
                story_text: "## Piggybank\nIn this level you can let Hedy tell you {if} you have saved up enough money!\n"
                example_code: "## Example Hedy code\n\n```\nmoney = {ask} 'How much money have you saved?'\nwish = {ask} 'How much money do you need?'\nallowance = {ask} 'How much pocket money do you get each week?'\nto_save = wish - money\nweeks = to_save / allowance\n{if} wish > money\n    {print} 'You need to save up some more!'\n    {print} 'Youll need ' weeks ' more weeks.'\n{else}\n    {print} 'Great! You have enough'\n    {print} 'Lets go shopping!'\n```\n"
                start_code: '# place your code here'
    next:
        levels:
            2:
                start_code: "{print} Let's go to the next level!"
                story_text: "## What's next?\nIn this level you've learned what a variable is and how you can use it to make your adventures more interactive.\nBut... that's not the only thing you can do with variables! You can also use variables to make lists.\nAnd you can even let Hedy pick a random word out of a list, which allows you to make real games!\nTake a quick look at the next level!\n"
            1:
                start_code: "{print} Let's go!"
                story_text: "## What's next?\nCongratulations! You've reached the end of level 1. Hopefully you've already made some awesome codes, but Hedy has a lot more to discover. \n\nIn the first level you might've notice that the `{echo}` command can only save one bit of information at a time. \nFor example in the restaurant adventure, you could {echo} what the costumer wanted to eat, or what they wanted to drink, but not both in one sentence. \n\n```\n{print} Welcome at Hedy's\n{ask} What would you like to eat?\n{echo} So you want \n{ask} what would you like to drink?\n{echo} So you want \n```\nIf the player types a hamburger and coke, you can't say `so you would like a hamburger and coke`, but you have to make two separate line. \nAlso, the `{echo}` command only echoes the word at the end of the sentence. So you can't say `your hamburger is coming right up!`.\n\nThat changes in level 2. In level 2 you'll learn to work with variables, that allow you to save multiple pieces of information and print them in any place you want.\nBesides, you'll learn how to work with the `{at} {random}` command, that you can use to make games. \nSo let's go to the next level!\n"
                example_code: "## Example code\n```\n{print} Welcome at Hedy's\n{ask} What would you like to eat?\n{echo} So you want \n{ask} what would you like to drink?\n{echo} So you want \n```\n"
                story_text_2: "If the player types a hamburger and coke, you can't say `so you would like a hamburger and coke`, but you have to make two separate line. \nAlso, the `{echo}` command only echoes the word at the end of the sentence. So you can't say `your hamburger is coming right up!`.\n\nThat changes in level 2. In level 2 you'll learn to work with variables, that allow you to save multiple pieces of information and print them in any place you want.\nBesides, you'll learn how to work with the `{at} {random}` command, that you can use to make games. \nSo let's go to the next level!\n"
            9:
                story_text: "## What's next?\nYou're doing great! In this level we still face a small problem. You have learned to repeat lines, but what {if} you'd want to slightly change the line.\nFor example {if} you want to sing the song '{if} you're happy and you knwo it'\n\nIt would look like this:\n```\n{repeat} 2 {times}\n    {print} '{if} youre happy and you know it clap your hands'\n{print} '{if} youre happy and you know it and you really want to show it'\n{print} '{if} youre happy and you know it clap your hands'\n```\n\nIf you'd also want the next verse 'stomp your feet', and the next one, and the next one, you'd have to change the code completely.\nIn the next level you'll learn the `{for}` command, which allows you to make a list of actions and repeat the code with another action each time!\nPlease take a look!\n"
                start_code: "{print} 'Lets go to the next level!'"
                example_code: "## Example Hedy Code\n```\n{repeat} 2 {times}\n    {print} '{if} youre happy and you know it clap your hands'\n{print} '{if} youre happy and you know it and you really want to show it'\n{print} '{if} youre happy and you know it clap your hands'\n```\n"
            12:
                start_code: "{print} 'Lets go to the next level!'"
                story_text: "## What's next?\nIn the previous levels you learned how to put two `{if}`commands inside each other. This works fine, but it does give you very long and unhandy codes like this one:\n```\nusername {is} {ask} 'What is your username?'\npassword {is} {ask} 'What is your password?'\n{if} username {is} 'Hedy'\n    {if} password {is} 'secret'\n        {print} 'Welcome Hedy!'\n    {else}\n        {print} 'Access denied'\n{else}\n    {print} 'Access denied!'\n```\nIn this system you have to give both the correct username and the correct password.\nIn the next level you will learn the `{and}` command that will make this code a ot shorter and more understandable!\nCheck it out!\n"
                example_code: "## Example Hedy code\n```\nusername {is} {ask} 'What is your username?'\npassword {is} {ask} 'What is your password?'\n{if} username {is} 'Hedy'\n    {if} password {is} 'secret'\n        {print} 'Welcome Hedy!'\n    {else}\n        {print} 'Access denied'\n{else}\n    {print} 'Access denied!'\n```\n"
            13:
                start_code: "{print} 'Lets go to the next level!'"
                story_text: "## What's next?\nWith the program below you can calulate {if} you've passed a subject at school (so, a grade of six or higher).\nYou can see this code is extremely inefficient, du to the very long code in line 5.\nAll the different grades from 1 to 5 had to be programmed seperately. Lucky for you, in the next level you'll learn how to do this without this extremely long code!\n```\nfirst_grade = {ask} 'What score did you get on your first test?'\nsecond_grade = {ask} 'What score did you get on your second test?'\nadded {is} first_grade + second_grade\nmean_grade {is} added / 2\n{if} mean_grade = 1 {or} mean_grade = 2 {or} mean_grade = 3 {or} mean_grade = 4 {or} mean_grade = 5\n    {print} 'Oh no! You have failed the subject...'\n{else}\n    {print} 'Great! You have passed the subject!'\n```\n"
                example_code: "## Example Hedy Code\n```\nfirst_grade = {ask} 'What score did you get on your first test?'\nsecond_grade = {ask} 'What score did you get on your second test?'\nadded {is} first_grade + second_grade\nmean_grade {is} added / 2\n{if} mean_grade = 1 {or} mean_grade = 2 {or} mean_grade = 3 {or} mean_grade = 4 {or} mean_grade = 5\n    {print} 'Oh no! You have failed the subject...'\n{else}\n    {print} 'Great! You have passed the subject!'\n```\n"
            14:
                story_text: "## What's next?\nIn this game below a code has been made to make sure the player can play on as long as he/she wants...\nBut the code is ineffective and way too long. Also, what {if} the player wants to play 101 games instead of 100?\nYou can't play to infinity?\nIn the next level you will learn a command that makes all of this a lot easier!\n```\ngame {is} 'on'\n{for} i {in} {range} 1 {to} 100\n    {if} game {is} 'on'\n        answer = {ask} 'Do you want to continue?'\n        {if} answer {is} 'no'\n            game {is} 'over'\n        {if} answer {is} 'yes'\n            {print} 'Ok we will continue'\n```\n"
                start_code: "{print} 'Lets go to the next level!'"
                example_code: "## Example Hedy Code\n```\ngame {is} 'on'\n{for} i {in} {range} 1 {to} 100\n    {if} game {is} 'on'\n        answer = {ask} 'Do you want to continue?'\n        {if} answer {is} 'no'\n            game {is} 'over'\n        {if} answer {is} 'yes'\n            {print} 'Ok we will continue'\n```\n"
            16:
                start_code: "{print} 'Lets go to the next level!'"
                story_text: "## What's next?\nIn the next level it's time for a new command. You might have noticed in the previous levels that `{if}` and `{else}` sometimes aren't enough.\nFor example in this code:\n```\n{print} 'What is for dinner tonight?'\noptions = ['pizza', 'broccoli', 'green beans']\nchosen = options {at} {random}\n{if} chosen = pizza\n    {print} 'Yummy! Pizza!'\n{else}\n    {print} 'Yikes...'\n```\nIn this code it would be great to have 2x an `{else}` so you could have one option for the broccoli and one for the green beans. The next level comes with the new command `{elif}` that makes this possible!\nSo check out the next level now!\n"
                example_code: "## Example Hedy code\n```\n{print} 'What is for dinner tonight?'\noptions = ['pizza', 'broccoli', 'green beans']\nchosen = options {at} {random}\n{if} chosen = 'pizza'\n    {print} 'Yummy! Pizza!'\n{else}\n    {print} 'Yikes...'\n```\n"
                story_text_2: In this code it would be great to have 2x an `{else}` so you could have one option for the broccoli and one for the green beans. The next level comes with the new command `{elif}` that makes this possible! So check out the next level now!
            17:
                story_text: "## What's next?\nIn the next level you will learn a real Python way to use `{print}`.\n"
                start_code: "{print} 'Lets go to the next level!'"
            3:
                story_text: "## What's next?\nIn this level you've been practising with variables, but maybe you've come across this mistake.\n\nTry to run this code:\n```\nname {is} Sophie\n{print} My name is name\n```\nOf course you wanted to print `My name is Sophie` but Hedy prints `My Sophie is Sophie`. \nIn the next level this problem is fixed by using quotation marks.\n"
                start_code: "{print} Let's go to the next level!"
            4:
                start_code: "{print} 'Lets go to the next level!'"
                story_text: "## What's next?\nIn the previous levels you've already learned to use `{at} {random}` which made your games different every time you ran the code.\nBut it's not really interactive, the player doesn't have any influence on what happens in the game.\n\nIn the next level you'll learn the `{if}` command, that allows you to give different responses in your program. This way you can program a secret password for your computer for example.\nSo let's take a peak!\n\n```\npassword {is} {ask} 'What is the correct password?'\n```\n"
            5:
                story_text: "## What's next?\nNow you've reached the end of this level, so you have learned `{ask}` and `{if}`. For example you can {ask} guests what they would like to eat.\nWhat you can't yet do though, is calculate the price for everyone's dinner.\n\nThe next level makes it possible to use addition, subtraction and multiplication in your programs. This way you can calculate the prices in your restaurant, but you could also add a secret code to give your friends and family a discount.\nAnother option in the next level is programming your own maths game, for your little brother or sister to practice their multiplications.\nGo see for yourself in the next level!\n```\n{print} 'Welcome at McHedy'\norder {is} {ask} 'What would you like to eat?'\n{print} 'You would like ' order\n{if} order {is} hamburger price {is} 5\n{if} order {is} fries price {is} 2\ndrinks {is} {ask} 'What would you like to drink?'\n{print} 'You would like ' drinks\n{print} 'That will be ' price ' dollars for your ' order ' please'\n{print} 'The drinks are free in this level because Hedy cant calculate the price yet...'\n```\n"
                start_code: "{print} 'On to the next level!'"
                example_code: "## Free drinks!\n```\n{print} 'Welcome at McHedy'\norder {is} {ask} 'What would you like to eat?'\n{print} 'You would like ' order\n{if} order {is} hamburger price {is} 5\n{if} order {is} fries price {is} 2\ndrinks {is} {ask} 'What would you like to drink?'\n{print} 'You would like ' drinks\n{print} 'That will be ' price ' dollars for your ' order ' please'\n{print} 'The drinks are free in this level because Hedy cant calculate the price yet...'\n```\n"
            6:
                story_text: "## What's next?\n Great job! You've reached the end of this level, which means you have practiced with `{if}` and `{else}`. You have probably noticed that your codes are getting longer and longer.\n For example {if} you want to program 'Happy Birthday'\n\n ```\n {print} 'happy birthday to you'\n {print} 'happy birthday to you'\n {print} 'happy birthday dear Hedy'\n {print} 'happy birthday to you'\n\n ```\n That's a lot of code for mainly the same words over and over again. Luckily in the next level has a solution with the `{repeat}` command, that allows you to repeat a line of code multiple times.\n"
                start_code: "{print} 'On to the next level!'"
                example_code: "## Example Hedy Code\n ```\n {print} 'happy birthday to you'\n {print} 'happy birthday to you'\n {print} 'happy birthday dear Hedy'\n {print} 'happy birthday to you'\n ```\n"
            7:
                story_text: "## What's next?\nNow you've learned how to repeat one single line of code. This comes in handy, but it's not always enough. Sometimes you want to repeat multiple lines at once.\nthe next level allows you to group a couple of lines of code, and repeat that little group of lines all at once!\n\n```\n{repeat} 5 {times} {print} 'In the next level you can repeat multiple lines of code at once!'\n```\n"
                start_code: "{print} 'Lets go to the next level!'"
                example_code: "## Example Hedy Code\n```\n{repeat} 5 {times} {print} 'In the next level you can repeat multiple lines of code at once!'\n```\n"
            11:
                story_text: "## What's next?\nMaybe you have tried using decimal numbers in your restaurant adventure. If you did, you probably noticed that Hedy didn't understand them yet and always rounded off.\nFrom the next level on you can use decimal numbers.\n\nAnother cool feauture in the next level is that you can use mulitiple words in a variable.\nFor intance, you could already do this...\n```\nname = {ask} 'Who is your favorite cartoon character?'\n{print} 'I love watching ' name\n```\nBut you couldn't use multiple words in a variable like the example below. This program does not work yet in this level!\n```\nshow = SpongeBob SquarePants\n{print} show 'is my favorite show!'\n```\nGo to the next level to make this code work!\n"
                start_code: "{print} 'Lets go to the next level!'"
                example_code: "```\nname = {ask} 'Who is your favorite cartoon character?'\n{print} 'I love watching ' name\n```\nBut you couldn't use multiple words in a variable like the example below. This program does not work yet in this level!\n```\nshow = SpongeBob SquarePants\n{print} show 'is my favorite show!'\n```\nGo to the next level to make this code work!\n"
            15:
                story_text: "## What's next?\nIn the next level we will grow a bit more towards real Python code. thon code. You will also learn how to match two lists together.\nThis way you can program a code in which the correct animal is matched to the right sound.\nBecause the two codes below... Are obviously nonsense!\n```\nanimals = 'chicken', 'horse', 'cow'\nsounds = 'cluck', 'neigh', 'moo'\n{for} animal {in} animals\n    {print} 'A ' animal ' says ' sounds {at} {random}\n```\nYou could also try to make it work this way, but....\n```\nanimals = 'chicken', 'horse', 'cow'\nsounds = 'cluck', 'neigh', 'moo'\n{for} animal {in} animals\n    {for} sound {in} sounds\n        {print} 'A ' animal ' says ' sound\n```\n"
                start_code: "{print} 'Lets go to the next level!'"
                example_code: "```\nanimals = 'chicken', 'horse', 'cow'\nsounds = 'cluck', 'neigh', 'moo'\n{for} animal {in} animals\n    {print} 'A ' animal ' says ' sounds {at} {random}\n```\nYou could also try to make it work this way, but....\n```\nanimals = 'chicken', 'horse', 'cow'\nsounds = 'cluck', 'neigh', 'moo'\n{for} animal {in} animals\n    {for} sound {in} sounds\n        {print} 'A ' animal ' says ' sound\n```\n"
            18:
                story_text: "## What's next?\nCongratulations! You have reached the last level of Hedy! But no worries, we are working very hard to create more levels and new adventures. So please come back later to check out the newest levels!\n"
                start_code: "{print} ('Great job!!!')"
            8:
                start_code: "{print} 'Lets go to the next level!'"
                story_text: "## What's next?\nGreat job! You've reached the end of another level! In this level you've learned to use multiple lines of code in an {if} or {repeat} command. But you can't yet combine the two...\nGood news! In the next level you will be allowed to put an {if} inside an {if}, or inside a {repeat} command.\n\nFor example:\n```\nanswer = {ask} 'Would you like to go to teh next level?'\n{if} answer {is} 'yes'\n    {print} 'Great! You can use the {repeat} commando in the {if} command!'\n    {print} 'Hooray!'\n    {print} 'Hooray!'\n    {print} 'Hooray!'\n{else}\n    {print} 'Okay, you can stay here for a little longer!'\n```\nIn this code Hedy will still say 'Your drink is on its way' even {if} you didn't even want to drink something! In the next level this will be fixed!\n"
                example_code: "## Example Hedy Code\n```\nanswer = {ask} 'Would you like to go to the next level?'\n{if} answer {is} yes\n    {print} 'Great! You can use the {repeat} commando in the {if} command!'\n    {print} 'Hooray!'\n    {print} 'Hooray!'\n    {print} 'Hooray!'\n{else}\n    {print} 'Okay, you can stay here for a little longer!'\n```\n"
            10:
                story_text: "## What's next?\nYou have reached the end of this level, you're doing great! You are about to go to the next level. In the higher levels, Hedy is focussing more and more on teaching you the programming language Python.\nIn Python there is no `{repeat}` command, but there is a command that works like {repeat}. Are you curious to find out how to say `{repeat}` in Python language? Quickly go on to find out!\n"
                start_code: "{print} 'Lets go to the next level!'"
        description: What's Next?
        default_save_name: next
        name: What's next?
        image: ' '
    end:
        name: End
        description: Test your Hedy knowledge
        levels:
            1:
                story_text: "## End\nThis is the end of the level! Take the quiz now to test your knowledge.\n"
                start_code: '# place your code here'
            4:
                story_text: "## End\nThis is the end of the level! Take the quiz now to test your knowledge.\n"
                start_code: '# place your code here'
            5:
                story_text: "## End\nThis is the end of the level! Take the quiz now to test your knowledge.\n"
                start_code: '# place your code here'
            2:
                story_text: "## End\nThis is the end of the level! Take the quiz now to test your knowledge.\n"
                start_code: '# place your code here'
            3:
                story_text: "## End\nThis is the end of the level! Take the quiz now to test your knowledge.\n"
                start_code: '# place your code here'
            6:
                story_text: "## End\nThis is the end of the level! Take the quiz now to test your knowledge.\n"
                start_code: '# place your code here'
            7:
                story_text: "## End\nThis is the end of the level! Take the quiz now to test your knowledge.\n"
                start_code: '# place your code here'
            8:
                story_text: "## End\nThis is the end of the level! Take the quiz now to test your knowledge.\n"
                start_code: '# place your code here'
            9:
                story_text: "## End\nThis is the end of the level! Take the quiz now to test your knowledge.\n"
                start_code: '# place your code here'
        image: ' '
        default_save_name: ' '
    fortune:
        name: Fortune teller
        description: Let Hedy predict the future
        image: fortuneteller.png
        default_save_name: Fortune Teller
        levels:
            12:
                story_text: "## Fortune Teller\nIn this level you can make your fortunes multiple words. Like in this example below:\n"
                example_code: "## Example Hedy code\n\n```\nfortunes = 'you will be rich', 'you will fall in love', 'you will slip on a banana peel'\n{print} 'I will take a look in my crystall ball for your future.'\n{print} 'I see... I see...'\n{sleep}\n{print} fortunes {at} {random}\n```\n"
                start_code: '# place your code here'
            10:
                story_text: "## Fortune Teller\nIn this level you'll learn how to program the game MASH (mansion, apartement, shack, house). In this game you can predict for all the players at once, what their future will look like.\n"
                example_code: "## Example Hedy code\n\n```\nhouses = mansion, apartment, shack, house\nloves = nobody, a royal, their neighbour, their true love\npets = dog, cat, elephant\nnames = Jenna, Ryan, Jim\n{for} name {in} names\n    {print} name ' lives in a ' houses {at} {random}\n    {print} name ' will marry ' loves {at} {random}\n    {print} name ' will get a ' pets {at} {random} ' as their pet.'\n    {sleep}\n```\n"
                story_text_2: We can also make a Harry Potter themed fortune teller.
                example_code_2: "## Example Hedy code\n```\nhouses = Gryffindor, Slytherin, Hufflepuff, Ravenclaw\nsubjects = potions, defence against the dark arts, charms, transfiguration\nfears = Voldemort, spiders, failing your OWL test\nnames = Harry, Ron, Hermione\n{for} name in names\n    {print} name ' is placed in ' houses {at} {random}\n    {print} name ' is great at ' subjects {at} {random}\n    {print} name 's greatest fear is ' fears {at} {random}\n```\n"
                start_code: '# place your code here'
            8:
                story_text: "## Fortune Teller\nIn the previous levels you've learned how to use repeat to make the fortune teller answer 3 questions in a row, but we had a problem with printing the questions.\nNow that problem is solved, because of the new way of using the repeat command.\nIn the next example you can have your fortune teller {ask} 3 questions and also print them!\n"
                example_code: "## Example Hedy code\n\n```\n{print} 'I am Hedy the fortune teller!'\n{print} 'You can {ask} me 3 questions.'\nanswers = yes, no, maybe\n{repeat} 3 {times}\n   question = {ask} 'What do you want to know?'\n   {print} question\n   {sleep}\n   {print} 'My crystal ball says...' answers {at} {random}\n```\n"
                start_code: '# place your code here'
            7:
                example_code: "## Example Hedy code\n\n```\n{print} 'Im Hedy the fortune teller!'\n{print} 'You can {ask} 3 questions!'\n{repeat} 3 {times} question = {ask} 'What do you want to know?'\nanswer = yes, no, maybe\n{repeat} 3 {times} {print} 'My crystal ball says... ' answer {at} {random}\n```\n\n## Challenge\nAs you can see, the questions aren't printed in this example. That's because the variable `question` was changed 3 times.\nEvery time the player fills in the new answer, Hedy overwrites the previous one, so the first answer the player gave is forgotten.\nThis means you can't print all the questions this way.\n\nBy using 3 different variables instead of 1 (for example `question1` , `question2` and `question3`), you could solve the problem and print the questions.\nThis does mean that you can only use `{repeat}` for the answers, and you will have to ask and print all the questions separately.\nCan you do it?\n\nIn the upcoming levels the layout of {repeat} command will change, which enables you to repeat multiple lines at once.\n"
                story_text: "## Fortune Teller\nIn this level you can use the `{repeat}` command to make your machine tell multiple fortunes at once.\n"
                start_code: '# place your code here'
                story_text_2: "## Challenge\nAs you can see, the questions aren't printed in this example. That's because the variable `question` was changed 3 times.\nEvery time the player fills in the new answer, Hedy overwrites the previous one, so the first answer the player gave is forgotten.\nThis means you can't print all the questions this way.\n\nBy using 3 different variables instead of 1 (for example `question_1` , `question_2` and `question_3`), you could solve the problem and print the questions.\nThis does mean that you can only use `{repeat}` for the answers, and you will have to ask and print all the questions separately.\nCan you do it?\n\nIn the upcoming levels the layout of {repeat} command will change, which enables you to repeat multiple lines at once.\n"
            6:
                story_text: "## Fortune Teller\nIn this level you can use math in your predictions as a fortune teller. This allows you to make up (silly) formulas to calculate the future.\nFor example you could calculate how rich you'll get or how many kids you will have when you grow up.\n"
                example_code: "## Example Hedy code\n\n```\n{print} 'I am Hedy the fortune teller!'\n{print} 'I can predict how many kids youll get when you grow up!'\nage = {ask} 'How old are you?'\nsiblings = {ask} 'How many siblings do you have?'\nlength = {ask} 'How tall are you in centimetres?'\nkids = length / age\nkids = kids - siblings\n{print} 'You will get ...'\n{sleep}\n{print} kids ' kids!'\n```\n\n## Example Silly Fortune Teller\nIf the previous example wasn't silly enough for you, take a look at this one!\n\n```\n{print} 'Im Hedy the silly fortune teller!'\n{print} 'I will predict how smart you are!'\nfootball = {ask} 'On a scale 1-10 how much do you love football?'\nbananas = {ask} 'How many bananas did you eat this week?'\nhygiene = {ask} 'How many times did you wash your hands today?'\nresult = bananas + hygiene\nresult = result * football\n{print} 'You are ' result ' percent smart.'\n```\n"
                start_code: '# place your code here'
            5:
                example_code: "## Example Hedy code\n\n```\n{print} 'Im Hedy the fortune teller!'\n{print} 'I can predict {if} youll win the lottery tomorrow!'\nperson {is} {ask} 'Who are you?'\n{if} person {is} Hedy {print} 'You will definitely win!\U0001F929' {else} {print} 'Bad luck! Someone {else} will win!\U0001F62D'\n```\n"
                story_text_2: "Replace Hedy with your own name in the last line, and Hedy will always predict that you will win the lottery and others won't!\nOf course this might raise some suspicion with the other players... To avoid that, you can make sure that Hedy does give different answers every time you run the code.\nBut of course, still gives you a positive answer and the other players a negative one.\n"
                example_code_2: "## Example Hedy code\n```\n{print} 'Im Hedy the fortune teller!'\n{print} 'I can predict {if} you will win the lottery tomorrow!'\nperson {is} {ask} 'Who are you?'\ngoodanswer {is} Hurray! You win!, You will definitely win!, We have a winner!\nbadanswer {is} Bad luck! Try again!, Another person will win, You lose!\n{if} person {is} Hedy {print} goodanswer {at} {random} {else} {print} badanswer {at} {random}\n```\n\n## Challenges\nThis concept can be used to make may different programs, just be creative! For example you could create a machine that predicts that your favorite sports team will beat all the competitors!\nOr you could make  Snow White's magic mirror on the wall, to tell everyone you are the fairest of them all!\nLet your imagination do the work!\n"
                story_text: "## Fortune Teller\nIn thsi level you'll learn to (secretly) tip the odds in your favor, when using the fortune teller!\nBy using `{if}` and `{else}` you can make sure that you will always get a good fotune, while other people might not.\nCheck out this example to find out how.\n"
                start_code: '# place your code here'
                story_text_3: "## Challenges\nThis concept can be used to make may different programs, just be creative! For example you could create a machine that predicts that your favorite sports team will beat all the competitors!\nOr you could make  Snow White's magic mirror on the wall, to tell everyone you are the fairest of them all!\nLet your imagination do the work!\n"
            4:
                story_text: "## Fortune Teller\nThis level has no new functions, but allows you to practice with using the quotation marks.\nYou can remake your level 3 code, and make sure to add the quotation marks in the right places!\n\nMind that in level 3, we couldn't use the word 'question' as both the name of the variable and a normal word that could be printed.\nThe quotation marks in level 3 make this possible!\n\nImportant! Mind that now that we're using quotation marks, Hedy will get confused when you use the apostrophe for contractions like I'm or What's.\nMake sure to remove those apostrophes and change the spelling to Im or Whats.\n"
                example_code: "## Example Hedy code\n\n```\n{print} 'Im Hedy the fortune teller!'\nquestion {is} {ask} 'What do you want to know?'\n{print} 'This is your question: ' question\nanswers {is} yes, no, maybe\n{print} 'My crystal ball says...'\n{sleep} 2\n{print} answers {at} {random}\n```\n"
                start_code: '# place your code here'
            3:
                story_text: "## Fortune Teller\nIn the previous levels you've created your first fortune telling machine, but Hedy couldn't really predict anything, only {echo}.\nIn this level you can use a variable and the `{at} {random}` command to really let Hedy choose an answer for you. Check out this code for instance:\n"
                example_code: "## Example Hedy code\n\nIn this example the player can {ask} Hedy a yes-no question and Hedy will pick a random answer for you.\n```\n{print} I’m Hedy the fortune teller!\nquestion {is} {ask} What do you want to know?\n{print} This is what you want to know: question\nanswers {is} yes, no, maybe\n{print} My crystal ball says...\n{sleep} 2\n{print} answers {at} {random}\n```\n\n## Challenges\nNow, Hedy can only answer yes, no or maybe. Can you give Hedy more answer options, like 'definitely' or '{ask} again'.\n"
                start_code: '# place your code here'
                story_text_2: "## Challenges\nNow, Hedy can only answer yes, no or maybe. Can you give Hedy more answer options, like 'definitely' or '{ask} again'.\n"
            1:
                story_text: "## Fortune Teller\nHave you ever been to a carnival and had your future predicted by a fortune teller? Or have you ever played with a magic eight ball?\nThen you probably know that they can't really predict your future, but it's still fun to play!\n\nIn the upcoming levels you can learn how to create your own fortune telling machine!\nIn level 1 you can start off easy by letting Hedy introduce herself as a fortune teller and let her {echo} the players' answers.\nLike this:\n"
                example_code: "## Example Hedy code\n\n```\n{print} Hello, I'm Hedy the fortune teller!\n{ask} Who are you?\n{print} Let me take a look in my crystal ball\n{print} I see... I see...\n{echo} Your name is\n```\n\n## Challenge\nHedy now only tells you your name. Can you expand the code so that Hedy can predict more things about you?\n\nObviously, Hedy isn't a very good fortune teller yet, as she can only repeat the answers that were given by the players!\nTake a look in level 2 to improve your fortune teller.\n"
                start_code: '# place your code here'
                story_text_2: "## Challenge\nHedy now only tells you your name. Can you expand the code so that Hedy can predict more things about you?\nObviously, Hedy isn't a very good fortune teller yet, as she can only repeat the answers that were given by the players!\nTake a look in level 2 to improve your fortune teller.\n"
    quizmaster:
        name: Quizmaster
        description: Make your own quiz!
        levels:
            14:
                example_code: "## Example Hedy code\n\n```\n{print} 'Make your own quiz'\npoints_a = 0\npoints_b = 0\n{print} 'Question'\n{print} 'Answer option A'\n{print} 'Answer option B'\nanswer = {ask} 'Which answer?'\n{if} answer == 'A'\n    points_a = points_a + 1\n{if} answer == 'B'\n    points_b = points_b + 1\n{print} 'End of the quiz!'\n{print} 'Lets see the results!'\n{if} points_a > points_b\n    {print} 'You belong to the A club'\n{if} points_b > points_a\n    {print} 'You belong to the B club'\n```\n"
                story_text: "## Make your own quiz\nIn this adventure you can make your own quiz! Fill in the blanks, add more questions and enjoy your own quiz!\nYou can make a quiz about anything you like: your hobby, your favorite animal, your favorite book or anything at all!\n"
                start_code: '# place your code here'
        image: quizmaster.png
        default_save_name: Quizmaster
    language:
        levels:
            16:
                story_text: "## Learn a new language\nMake your own program to practice your vocabulary in a new language.\n"
                example_code: "## Example Hedy code\n\n```\nfrench_words = ['bonjour', 'ordinateur', 'pomme de terre']\ntranslation = ['hello', 'computer', 'potato']\nscore = 0\n{for} i {in} {range} 1 {to} 3\n    answer = {ask} 'What does ' french_words[i] ' mean?'\n    correct = translation[i]\n    {if} answer == correct\n        {print} 'Correct!'\n        score = score + 1\n    {else}\n        {print} 'Wrong, ' french_words[i] ' means ' translation[i]\n{print} 'You gave ' score ' correct answers.'\n```\n"
                start_code: '# place your code here'
            5:
                story_text: "## Learn a new language\nMake your own program to practice your vocabulary in a new language.\n\n## Example Hedy code\n```\n{print} 'Learn French!'\ncat {is} {ask} '\U0001F431'\n{if} cat {is} chat {print} 'Terrific!'\n{else} {print} 'No, cat is chat'\nfrog {is} {ask} '\U0001F438'\n{if} frog {is} grenouille {print} 'Super!'\n{else} {print} 'No, frog is grenouille'\n```\n"
                start_code: '# place your code here'
                example_code: "## Example Hedy code\n```\n{print} 'Learn French!'\ncat {is} {ask} '\U0001F431'\n{if} cat {is} chat {print} 'Terrific!'\n{else} {print} 'No, cat is chat'\nfrog {is} {ask} '\U0001F438'\n{if} frog {is} grenouille {print} 'Super!'\n{else} {print} 'No, frog is grenouille'\n```\n"
        name: Language
        description: Practice words in a foreign language
        image: languages.png
        default_save_name: language
    secret:
        levels:
            12:
                story_text: "## Make a secret code like a super spy\nIn this adventure you can create your own super spy code. Encode a message that only the right agent can decipher.\nIf the enemy tries to crack the code, they will get some false info to waste their time.\n"
                example_code: "## Example Hedy code\n```\nname is ask 'What is your name?'\nif name is 'Agent007'\n    a is 'Go to the airport '\nelse\n    a is 'Go to the trainstation '\npassword is ask 'What is the password?'\nif password is 'TOPSECRET'\n    b is 'tomorrow at 02.00'\nelse\n    b is 'today at 10.00'\nprint a + b\n```\n"
                start_code: '## place your code here'
            13:
                story_text: "## Superspy\nThe code you made in the previous level can be made a lot easier in this one with the `{and}` command.\n"
                example_code: "## Example Hedy code\n```\nname is ask 'What is your name?'\npassword is ask 'What is your password?'\nif name is 'Agent007' and password is 'TOPSECRET'\n    print 'Go to the airport at 02.00'\nelse\n    print 'Go to the trainstation at 10.00'\n ```\n"
                start_code: '## place your code here'
        name: SuperSpy
        description: Make your own spy code
        image: story.png
        default_save_name: language
    money:
        name: Money Week
        description: Aflatoun
        image: piggybank.png
        default_save_name: money
        levels:
            1:
                story_text: "## Sing a song about money\nUse the `{print}` command to print line in the output screen.\n\nDo you want to hear Hedy sing it? Use the read-aloud function beneath the 'run code' button.\n\nPlay the song and listen to 'Mo money, mo problems' by the notorious B.I.G.\n\n## Challenge\nDo you know any other songs about money that you can let Hedy sing?\n\nThis adventure was co-created with Aflatoun.\n"
                example_code: "## Example Hedy code\n```\n{print} I don't know what they want from me\n{print} It's like the more money we come across\n{print} The more problems we see\n{print} I don't know what they want from me\n{print} It's like the more money we come across\n{print} The more problems we see\n```\n"
                start_code: '{print} Mo money Mo problems'
            2:
                story_text: "## Make your own virtual shop\nIn this adventure you can create your own virtual shop. The example codes gives an easy example, but we bet that you could make your shop more interesting.\n\n## Challenge\nTurn the example code into your own virtual shop. What kind of shop would you like to own?\nHow much money will you charge your costumers? What can you do to make your shop more appealing?\n"
                example_code: "## Example Hedy code\n```\nprice {is} 3\n{print} Welcome to my shop\nproduct {is} {ask} What would you like to buy?\n{print} You would like to buy a product\n{print} That will be price euro please\n{print} Thank you! Bye!\n```\n"
                start_code: '{print} Welcome to my shop'
            3:
                story_text: "## Make smart choices\nIn this level you are faced with some financial dilemmas. You can make a list of products and a list of prices.\nHedy will randomly pick a product and a price and ask you if you think that's a smart choice to buy!\n\n## Challenge\nMake your own list of products and prices and play the game with your friends. Would they buy the same products as you?\nWho is the smartest spender?\n"
                example_code: "## Example Hedy code\n```\nprice {is} 1 euro, 10 euros, 100 euros, 1 million euros\nproduct {is} skateboard, banana, race car, dog\n\nprint Would you buy...\n{print} a product {at} {random} for price {at} {random}\nanswer {is} {ask} Would you buy it?\n```\n"
                start_code: '{print} Make smart choices!'
            4:
                story_text: "## Make your own virtual restaurant\nAfter opening your own shop in level 2, it's time to open a restaurant! Check out the example.\nPlease note that from this level on the print and ask command require quotation marks.\n\n## Challenge\nMake the restaurant your own. Maybe you'd pefer to have a sandwich shop, or a fastfood drive-through or a icecream parlor?\nYou can make anything you want with our example as inspiration!\n"
                example_code: "## Example Hedy code\n```\n{print} 'Welcome to Hedys restaurant!'\n{print} 'Today we are serving pizza or lasagna.'\nfood {is} {ask} 'What would you like to eat?'\n{print} 'Great choice! The ' food ' is my favorite!'\ndrinks {is} {ask} 'What would you like to drink with that?'\n{print} 'Thank you for your order.'\nprice {is} 20 euros\n{print} 'That will be ' price\npayment {is} {ask} 'Would you like to pay cash or card?'\n{print} 'No problem!'\n{print} 'Your ' food ' and ' drinks ' are on their way!'\n```\n"
                start_code: "{print} 'Welcome to Hedys restaurant!'"
            5:
                story_text: "## The price is right\nIn this level you can create your own virtual version of the televisionshow 'The price is right'.\nIn this show the contestants have to guess the price of a product correctly to win it.\n\n## Challenge\nThe example code only gives away one price. Can you add more prices to win?\n"
                example_code: "## Example Hedy code\n```\n{print} 'Welcome to The Price Is Right!'\n{print} 'Im your host, Hedy.'\n{print} 'Our first price tonight is a skateboard!'\nprice {is} 30\n{print} 'Your options are 5 euros, 15 euros or 30 euros'\nguess {is} {ask} 'How much do you guess it costs?'\n{if} guess {is} price {print} 'Great job! You won the skateboard!'\n{else} {print} 'No! You lose! The actual price was... ' price\n```\n"
                start_code: "{print} 'Welcome to The Price is right!'"
            6:
                story_text: "## Piggybank\nIn this level you can create your own digital Piggy Bank.\nYou can see how much money you've saved and vcalculate how long it will take you to save up for anything you'd like to buy.\nTry it out!\n\n## Challenge\nCan you think of extra features you could add to your digital piggy bank?\n"
                example_code: "## Example Hedy code\n```\n{print} 'The digital piggy bank'\nwish = {ask} 'What would you like to buy?'\nprice = {ask} 'How much does that cost?'\nsaved = {ask} 'How much money have you saved already?'\nallowance = {ask} 'How much pocket money do you get per week?'\nto_save = price - saved\nweeks = to_save / allowance\n{print} 'You can buy a ' wish ' in ' weeks ' weeks.'\n\n```\n"
                start_code: "{print} 'The digital piggy bank'"
