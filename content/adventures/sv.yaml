adventures:
    default:
        levels:
            1:
                example_code_2: "```\n{ask} Vad heter du?\n{echo} hej\n```\n"
                start_code: '{print} hej världen!'
                story_text: "På nivå 1 kan du använda kommandona `{print}`, `{ask}` och `{echo}`.\nSkriv din kod i programmeringsrutan eller tryck på den gröna knappen i exempelrutan så skrivs koden åt dig!\nProva koden själv genom att trycka på den gröna knappen märkt 'Kör koden' under programmeringsrutan.\n\nDu kan skriva text på skärmen genom att använda kommandot `{print}` .     \n"
                example_code: "```\n{print} Hej!\n{print} Välkommen till Hedy!\n```\n"
                story_text_2: "Du kan också be om en inmatning med `{ask}` och skriva ut det igen med ett `{echo}`-kommando.\n"
                story_text_3: "Nu börjar vi! Vet du inte vad du vill skapa? I de följande flikarna så hittar du idéer på program du kan bygga.\n"
            2:
                example_code: "```\nnamn {is} Hedy\nålder {is} 15\n{print} namn är ålder år\n```\n"
                story_text_2: "`{print}` fungerar fortfarande likadant men `{ask}`-kommandot har ändrats. Nu måste du använda en variabel när du skriver ett `{ask}`-kommando. Det ser ut så här:\n"
                story_text: "På nivå 2 så lär vi oss två nya kommandon: `{is}` och `{sleep}`.\nDu kan ge ett ord ett namn med `{is}`. Det kallas för en variabel. I det här exemplet har vi skapat en variabel som heter namn och en annan variabel som heter ålder. Du kan använda ordet namn var som helst i din kod så byter Hedy ut det. Så här:\n\nPå det här sättet så behöver du inte längre `{echo}`-kommandot!\n"
                example_code_2: "```\nsvar {is} {ask} Vad heter du?\n{print} Hej svar\n```\n"
                story_text_3: "Ett annat nytt kommando på den här nivån är `{sleep}`, vilket pausar programmet i en sekund. Om du skriver en siffra efter {sleep}-kommandot så pausar programmet i så många sekunder.\n"
                example_code_3: "```\n{print} Min favoritfärg är ...\n{sleep} 2\n{print} grön!\n```\n"
                start_code: '{print} hej världen!'
            3:
                story_text: "På nivå 3 kan du göra en lista. Du kan låta datorn välja någonting slumpvalt ur den listan. Det gör du med `{at} {random}`.\n"
                example_code: "```\ndjur {is} hund, katt, känguru\n{print} djur {at} {random}\n```\n"
                story_text_2: Du kan också lägga till saker till listan med `{add}` och ta bort dem med `{remove}`.
                example_code_2: "```\ndjur {is} hund, katt, känguru\n{add} pingvin {to_list} djur\n{remove} katt {from} djur\n{print} djur {at} {random}\n```\n"
                start_code: '{print} hej världen!'
            4:
                story_text: "På nivå 4 ändrar sig `{ask}` och `{print}`.\nDu måste sätta texten som du vill skriva ut mellan citattecken.\nDetta är användbart eftersom du nu kan skriva ut alla ord du vill. Även de ord som du använde för att spara något med `{is}`.\nDe flesta programmeringsspråk använder också citatteckennär man skriver ut, så vi kommer ett steg närmare riktig programmering!\n"
                example_code: "```\n{print} 'Du måste använda citattecken från och med nu!'\nsvar {is} {ask} 'Vad måste vi använda från och med nu?'\n{print} 'Vi måste använda ' svar\n```\n"
                story_text_2: "Obs! Tänk på att nu när vi använder citattecken kommer Hedy att bli förvirrad när du använder apostrof för sammandragningar som I'm eller What's.\nSe till att ta bort apostroferna och ändra stavningen till I am eller What is.\nTitta på exempelkoden för att se exempel när apostrofer används fel.\n"
                start_code: "{print} 'Hej världen'"
                example_code_2: "```\n_ Detta är fel sätt att använda apostrofer.\n{print} \"Jag är barnvakt åt syrrans barn.\n{print} \"Finns det något roligare?\n```\n"
            5:
                start_code: "namn {is} {ask} 'Vad heter du?'\n{if} namn {is} Hedy {print} 'cool!' {else} {print} 'meh'"
                story_text: "På nivå 5 kommer någonting nytt, `{if}`-kommandot! Med `{if}` kan du välja mellan två olika möjligheter.\nDen här koden skriver trevligt om du svarar att du heter Hedy och buu! om du svarar någonting annat.\n`{ask}` och `{print}` fungerar precis som de gjorde på nivå 4.\n"
                example_code: "```\nnamn {is} {ask} 'Vad heter du?'\n{if} namn {is} Hedy {print} 'trevligt' {else} {print} 'buu!'\n```\n"
                story_text_3: "När vi vill kontrollera om någonting finns i en lista så kan vi använda `{in}`-kommandot.\nDen här koden skriver snyggt! om du väljer grön eller gul och meh om du väljer någonting annat.\n"
                example_code_3: "```\nsnygga_färger {is} grön, gul\nfavorit_färg {is} {ask} 'Vad är din favoritfärg?'\n{if} favorit_färg {in} snygga_färger {print} 'snyggt!'\n{else} {print} 'meh'\n```\n"
                story_text_2: "Ibland blir kod med `{if}` riktigt lång och får inte plats på raden.<br>Du kan också dela upp koden på två rader där den andra raden börjar med `{else}` så här:\n"
                example_code_2: "```\nnamn {is} {ask} 'Vad heter du?'\n{if} namn {is} Hedy {print} 'trevligt'\n{else} {print} 'buu!'\n```\n"

            6:
                story_text: "På den här nivån får du lära dig något nytt: du kan nu också räkna.\n\nAddition är enkelt; du skriver det som i matte: `5 + 5` till exempel. Subtraktion fungerar också bra, det är `5 - 5`.\n\nMultiplikation är lite annorlunda, eftersom det inte finns något gångertecken på ditt tangentbord. Leta på, det bara finns inte!\nDet är därför vi multiplicerar med asterisken till höger om Ä: `5 * 5`. Läs det som \"5 gånger 5\", det är en bra minnesregel.\n"
                example_code_2: "```\nnamn = Hedy\nsvar = 20 + 4\n```\n"
                start_code: "{print} '5 gånger 5 är ' 5 * 5"
                example_code: "```\n{print} '5 plus 5 är ' 5 + 5\n{print} '5 minus 5 är ' 5 - 5\n{print} '5 gånger 5 är ' 5 * 5\n```\n"
                story_text_2: "Vi ändrar också på hur man sparar någonting i en variabel! Nu kan du använda `=` istället för `{is}` när du sparar ett namn eller ett nummer i en variabel. Så här:\n"
            7:
                start_code: "{repeat} 3 {times} {print} 'Hedy är roligt!'"
                story_text: "Nivå 7 lägger till `{repeat}`-kommandot.  `{repeat}` kan användas för att köra en kodrad flera gånger.\n"
                example_code: "```\n{repeat} 3 {times} {print} 'Hedy är roligt!'\n```\n"
            8:
                start_code: "{repeat} 5 {times}\n    {print} 'Hej allihopa'\n    {print} 'Det här kommer att skrivas 5 gånger'"
                story_text: "`{ask}` och `{print}` fungerar fortfarande som du är van. Men `{if}`, `{else}` och `{repeat}` har ändrats!\nDu kan nu gruppera flera rader tillsammans, men du måste *indentera* (dra in) koden.\nDet betyder att du sätter fyra mellanslag i början av raden. Du måste också göra indrag när du bara vill skapa ett block som bara är en rad.\n"
                example_code: "Så här fungerar `{repeat}`-kommandot nu:\n```\n{repeat} 5 {times}\n    {print} 'Hej allihop'\n    {print} 'Allt det här kommer att repeteras 5 gånger'\n```\nSå här fungerar `{if}` och `{else}` nu:\n\n```\nnamn {is} {ask} 'Vad heter du?'\n{if} namn {is} Hedy\n    {print} 'Välkommen Hedy'\n    {print} 'Du kan spela på din dator!'\n{else}\n    {print} 'INKRÄKTARE!'\n    {print} 'Du får inte använda den här datorn!'\n```\n"
            9:
                start_code: "{repeat} 3 {times}\n    mat = {ask} 'Vad vill du äta?'\n    {if} mat {is} pizza\n        {print} 'gott!'\n    {else}\n        {print} 'pizza är godare'"
                story_text: "På den här nivån kan du inte bara använda multipla (flera) rader med `{if}` och `{repeat}`, utan du kan också sätta ihop dem!\nI exemplet kan du se ett `{if}`-kommando med ett `{repeat}`-kommando i. Det är också tillåtet att göra tvärtom. Ett `{if}` är också tillåtet i ett `{if}` och ett `{repeat}` i ett `{repeat}`.\nTesta lite!\n"
                example_code: "```\n{repeat} 3 {times}\n    mat = {ask} 'Vad vill du äta?'\n    {if} mat {is} pizza\n        {print} 'härligt!'\n    {else}\n        {print} 'pizza är godare'\n```\n"
            10:
                start_code: "alla_djur {is} hund, katt, blobfish\n{for} djur {in} alla_djur\n  {print} 'Jag älskar ' djur"
                story_text: "På den här nivån lär vi oss kommandot `{for}`. Med `{for}` kan du göra en lista och använda alla dess element.\n`{for}` skapar ett block, som `{repeat}` och `{if}` så alla rader i blocket måste indenteras och börja med mellanslag."
                example_code: "```\nalla_djur {is} hund, katt, blobfish\n{for} djur {in} alla_djur\n  {print} 'Jag älskar ' djur\n```\n"
            11:
                example_code: "```\n{for} räknare {in} {range} 1 {to} 5\n    {print} räknare\n```\n"
                start_code: "{for} räknare {in} {range} 1 {to} 5\n    {print} räknare"
                story_text: "På den här nivån lägger vi till en ny variant av `{for}`. På tidigare nivåer använde vi `{for}` med en lista, men vi kan också använda `{for}` med tal.\nDet gör vi genom att lägga till ett variabelnamn, följt av `{in}` `{range}`. Efter det skriver vi talet vi ska börja på, `{to}` och talet som vi ska sluta vid.\n\nPröva exemplet för att se vad som händer! På den här nivån ska du använda indragningar på raderna under `{for}` -kommandona."
            12:
                start_code: "{print} 'decimaltal behöver nu en punkt som decimaltecken'\n{print} 2.5 + 2.5"
                story_text: "**Decimaltal**\nHittils har Hedy inte tillåtit decimaltal som 1,5, men nu tillåter vi det. Tänk på att datorer använder `.` (en punkt) för decimaltal istället för kommatecken."
                example_code: "```\n{print} 'Två och en halv plus två och en halv är ...'\n{print} 2.5 + 2.5\n```\n"
                story_text_2: "**Alla texter måste ha citattecken runt sig**\nI denna och nästkommande nivåer behöver du också citattecken när du lagrar text med `=`:\n"
                example_code_3: "```\nstarka = 'Pippi Långstrump', 'Starke Adolf', 'Bamse'\n{print} starka {at} {random}\n```\n"
                story_text_4: "**Alla texter efter `{if}`-jämförelser behöver också citattecken**\n"
                example_code_4: "```\nnamn = {ask} 'Vad heter du?'\n{if} namn = 'Roboten Hedy'\n    {print} 'Hejsan!'\n```\n"
                story_text_5: "**Nummer behöver inte citattecken**\nDu använder inte citattecken för nummer i `=`:\n"
                example_code_5: "```\npoäng = 25\n{print} 'Du fick ' poäng\n```\n"
                example_code_2: "```\nnamn = 'Roboten Hedy'\n{print} 'Hej ' namn\n```\n"
                story_text_3: "**Alla saker i listor behöver också citattecken**\nListor är texter, så de behöver också citattecken. Tänk på att varje enskild sak i listan har sina egna citattecken.\nDet låter dig spara två ord som 1 sak i listan, till exempel \"En robot\".\n"
            13:
                story_text: "Nu ska vi lära oss `{and}` och `{or}`! Om du vill testa två påståenden behöver du inte använda två `{if}` utan kan använda `{and}` och `{or}`.\n\nOm du använder `{and}` måste båda påståendena, till vänster och höger om `{and}`, vara sanna. Vi kan också använda `{or}`. Då behöver bara ett av påståendena vara korrekt."
                example_code: "```\nnamn = {ask} 'vad heter du?'\nålder = {ask} 'hur gammal är du?'\n{if} namn {is} 'Hedy' {and} ålder {is} 2\n    {print} 'Du är den riktiga Hedy!'\n```\n"
                start_code: "namn = {ask} 'vad heter du?'\nålder = {ask} 'hur gammal är du?'\n{if} namn {is} 'Hedy' {and} ålder {is} 2\n    {print} 'Du är den riktiga Hedy!'"
            14:
                example_code_3: "```\nnamn = {ask} 'Vad är ditt namn?'\n{if} namn != 'Hedy'\n    {print} 'Du är inte Hedy'\n```\n"
                start_code: "ålder = {ask} 'Hur gammal är du?'\n{if} ålder < 13\n    {print} 'Du är yngre än jag!'\n{else}\n    {print} 'Du är äldre än jag!'"
                story_text: "Nu ska vi lära oss fler nya saker. Du kanske redan känner till dem från matematiken, jämförelserna `<` och `>`.\nJämförelsen `<` kollar om det första talet är mindre än det andra, till exempel så kollar ålder `<` 12 om åldern är mindre än 12.\nOm du vill kolla om det första talet är mindre eller lika stort som det andra så kan du använda `<=`, till exempel ålder `<=` 11.\nJämförelsen `>` kollar om det första talet är större än det andra, till exempel så kollar poäng `>` 10 om poäng är större än 10.\nVill du kolla om första talet är större eller lika stort som det andra så kan du använda `>=`, till exempel poäng `>=` 11.\nDu kan använda dessa jämförelser i en `{if}`, så här:\n"
                example_code: "```\nålder = {ask} 'Hur gammal är du?'\n{if} ålder > 12\n    {print} 'Du är äldre än jag!'\n```\n"
                story_text_2: "Från och med denna nivå så kan du använda två likhetstecken för att jämföra exakt. Detta är vad de flesta programmeringsspråk gör:\n"
                example_code_2: "```\nnamn = {ask} 'Vad är ditt namn?'\n{if} namn == 'Hedy'\n    {print} 'Du är cool!'\n```\n"
                story_text_3: "Du kan också jämföra om något *inte* är lika med något annat med `!=`, på detta vis:\n"
            15:
                start_code: "svar = 0\n{while} svar != 25\n    svar = {ask} 'Vad är 5 gånger 5?'\n{print} 'Det var det korrekta svaret'"
                story_text: "Nu ska vi lära oss en ny loop: `{while}`-loopen! Denna loop fortsätter så länge uttrycket är sant.\nSå glöm inte att ändra värdet i loopen.\n\nI denna exempelkod fortsätter vi till vi får rätt svar.\nOm rätt svar aldrig ges så kommer loopen aldrig att sluta!"
                example_code: "```\nsvar = 0\n{while} svar != 25\n    svar = {ask} 'Vad är 5 gånger 5?'\n{print} 'Det var rätt svar'\n```\n"
            16:
                start_code: "frukt = ['äpple', 'banan', 'körsbär']\n{print} frukt"
                story_text: "Vi kommer att göra listor på Pythons vis, med hakparenteser runt listorna! Vi behåller också citattecken runt varje element, som vi har lärt oss i tidigare nivåer.\nVi använder hakparenteser för att peka ut en plats i en lista. Kommandot {at} kan inte användas längre."
                example_code: "```\nvänner = ['Ahmed', 'Björn', 'Christina']\nlyckotal = [15, 18, 6]\n{for} i {in} {range} 1 {to} 3\n    {print} 'Lyckotalet från ' vänner[i]\n    {print} 'är ' lyckotal[i]\n```\n"
            17:
                example_code: "```\npriser = ['1 miljon kronor', 'en äppelpaj', 'ingenting']\nditt_pris = priser[{random}]\n{print} 'Du vinner ' ditt_pris\n{if} ditt_pris == '1 miljon kronor' :\n    {print} 'Just det! Du är rik!'\n{elif} ditt_pris == 'en äppelpaj' :\n    {print} 'Underbart, en äppelpaj!'\n{else}:\n    {print} 'Bättre lycka nästa gång..'\n```\n"
                start_code: "{for} i {in} {range} 1 {to} 10:\n    {print} i\n{print} 'Nu kommer jag!'"
                story_text: "Nu ska vi ändra indragningen lite grann. Varje gång vi behöver en indragning behöver vi `:` på raden före indragningen.\n\nPå den här nivån kan du också använda ett nytt kommando: `{elif}`. `{elif}` är en förkortning av `{else}` `{if}` och du behöver det när du vill göra tre (eller fler!) alternativ.\nKolla in det!\n"
            18:
                start_code: "namn = 'Hedy'\n{print}('Mitt namn är ', namn)"
                story_text: "Vi har kommit fram till riktig Python-kod! Det betyder att vi måste använda parenteser med `{print}` och `{range}` från och med nu.\nDet betyder också att du kan använda Hedy-kod från den här nivån i vilken Python-miljö som helst så länge du använder de engelska kommandona. Om du inte har gjort det hittills så kan du ställa om i kommandomenyn för att göra det."
                example_code: "```\n{print}('Hej!')\n{for} i {in} {range}(1, 10):\n    {print}('Detta är rad ', i)\n```\n"
                story_text_2: Om du vill skriva ut mer än en sak så måste du separera dem med kommatecken.
                example_code_2: "```\ntemperatur = 25\n{print}('Det är ', temperature, ' grader utomhus')\n```\n"
                story_text_3: "Den sista ändringen vi behöver göra för att få Python-kod är att byta ut `{ask}` mot `{input}`."
                example_code_3: "```\n{print}('Mitt namn är Hedy!')\nnamn = {input}('Vad är ditt namn?')\n{print}('Så ditt namn är ', namn)\n```\n"
        name: Introduktion
        description: Nivåbeskrivning
        default_save_name: introduktion
    story:
        levels:
            1:
                story_text: "På nivå 1 kan du göra en berättelse där du får ange namnet på huvudkaraktären själv.\n\nPå första raden, använd `{ask}` för att fråga vem huvudkaraktären i din saga ska vara.\n\nEfter den första raden, börja med `{print}` om en mening ska skrivas ut på skärmen.\nDu använder `{echo}` om du vill att namnet på huvudkaraktären ska vara på slutet av meningen.\n"
                example_code: "```\n{ask} Huvudkaraktären av denna berättelse är\n{print} Nu kommer huvudkaraktären ta en promenad i skogen\n{echo} Han är lite rädd,\n{print} Han hör galna ljud överallt\n{print} Han är rädd för att detta är en hemsökt skog\n```\n"
                start_code: '{print} Din berättelse börjar här'
                story_text_2: "### Övning\nGör nu en egen berättelse med minst sex kodrader.\nBerättelsen får inte vara samma som exempelkoden.\nAnvänd minst ett `{ask}` - och ett `{echo}` -kommando.\nDu kan göra den om vilket ämne som helst.\nOm du inte kan komma på något ämne kan du använda ett av våra val: ett biobesök, en sportmatch eller en dag i djurparken.\n"
            2:
                story_text: "På nivå 2 kan du göra din berättelse roligare. Huvudpersonens namn kan nu stå var som helst i meningen.\n\nMen du får programmera lite extra för det. Du måste nu namnge din huvudperson först.\n\nDu kan sedan sätta det namnet var som helst i meningen.\n"
                example_code: "```\nnamn {is} {ask} Vad heter huvudkaraktären?\n{print} namn ska nu gå en promenad i skogen\n{print} namn är lite rädd\n{print} Plötsligt hör han ett galet ljud...\n{sleep}\n{print} namn är rädd att detta är en hemsökt skog\n```"
                start_code: '{print} Din berättelse'
                story_text_2: "### Övning\nDags att lägga till variabler till din egen berättelse som du skapade på föregående nivå.\nGå till \"Mina program\", leta efter ditt nivå 1-berättelseäventyr och kopiera koden. Klistra in koden på din inmatningsskärm på den här nivån.\n\nDen här koden fungerar inte på den här nivån eftersom du inte har använt variabler än.\nÄndra `{ask}`-kommandona och `{echo}`-kommandona i din kod till rätt form som du har lärt dig på den här nivån.\n\n**Extra** Lägg till ett sovkommando till din kod för att bygga upp spänningen i din berättelse.\n"
            3:
                story_text: "I nivå 3 kan du göra din berättelse lite roligare. Du kan använda slumpen för monster, djur, eller annat hinder, så här:\n"
                example_code: "```\ndjur {is} 🦔, 🐿, 🦉, 🦇\n{print} Han hör nu ljudet av en djur {at} {random}\n```\n"
                story_text_2: "Kommandot `{add}` kan också vara användbar för din berättelse.\n"
                example_code_2: "```\n{print} Han hör ett ljud\ndjur {is} 🐿, 🦔, 🦇, 🦉\ndjuret {is} {ask} Vad tror du det är?\n{add} djuret {to_list} djur\n{print} det var ett djur {at} {random}\n```\n"
                story_text_3: "Detta är ett exempel på kommandot `{remove}` i din berättelse\n\n### Övning\nKopiera din berättelse från de tidigare nivåerna till den här nivån.\nPå den här nivån har du lärt dig tre nya kommandon: `{at} {random}`, `{add} {to}` och `{remove} {from}`.\nLägg till nya kodrader i din berättelse så att alla de nya kommandona finns med minst en gång i din berättelse.\n"
                example_code_3: "```\n{print} Hans ryggsäck blev alldeles för tung.\n{print} Inuti var en vattenflaska, en ficklampa, och en tegelsten.\nsäck {is} vatten, ficklampa, tegelsten\nkasta {is} {ask} Vad ska han kasta bort?\n{remove} kasta {from} säck\n```\n"
                start_code: '{print} Din berättelse'
            5:
                start_code: "{print} 'Här börjar din berättelse!'"
                story_text: "På den här nivån kan du programmera olika slut, vilket gör din berättelse ännu roligare.\nI exempelkoden kan du se hur du skapar två olika slut.\n\n### Övning 1\nSkriv en ny berättelse på minst sex kodrader om ett ämne som du själv väljer.\nIngen inspiration? Välj ett av dessa ämnen: en superhjälte, en tråkig skoldag, strandad på en öde ö.\n\nGe nu spelaren möjlighet att välja ett lyckligt eller dåligt slut, precis som i exempelkoden.\nProgrammera båda sluten.\n\n### Övning 2\nKopiera den berättelse som du har skapat i ditt eget berättelseäventyr i de tidigare nivåerna.\nHitta ett sätt att lägga till minst två kommandon `{if}` och `{else}` i din berättelse.\nDetta kan vara med ett lyckligt eller dåligt slut, men du kan också försöka hitta andra sätt att få med kommandona.\n"
                example_code: "```\nnamn {is} {ask} 'Vem går genom skogen?'\n{print} namn ' går genom skogen'\n{print} namn ' stöter på ett monster'\nslutet {is} {ask} 'Vill du ha ett lyckligt eller olyckligt slut?'\n{if} slutet {is} lyckligt {print} namn ' tar sitt svärd och monstret springer bort'\n{else} {print} 'Monstret äter upp ' namn\n```\n"
            7:
                example_code: "```\n{print} 'Prinsen fortsatte ropa på hjälp'\n{repeat} 5 {times} {print} 'Hjälp!'\n{print} 'Varför hjälper ingen mig?'\n```\n"
                start_code: "{repeat} 5 {times} {print} 'Hjälp!'"
                story_text: "I en berättelse säger någon samma ord flera gånger. Till exempel när någon ropar på hjälp eller sjunger en sång.\nDu kan lägga in sådana upprepningar i din berättelse, på den här nivån med `{repeat}`.\n\n### Övning\nLägg till upprepningar i din egen berättelse. Gå tillbaka till dina sparade program, välj ditt berättelseprogram från nivå 6 och\nhitta en rad som innehåller `{print}` och upprepa den!\n"
            9:
                story_text: "På den här nivån kan du använda kommandona `{if}` och `{repeat}` inuti andra `{if}`- och `{repeat}`-kommandon.\nDetta ger dig många möjligheter och hjälper dig verkligen att göra din berättelse interaktiv.\n\n### Övning 1\nGör klart koden så att `{if}` fungerar korrekt.\n\n### Övning 2\nLägg till en `{if}` och `{else}` för den del av berättelsen där Robin också åker hem.\n\n### Övning 3\nGå tillbaka till din berättelse på nivå 8 och använd minst två `{if}` inom ett annat `{if}`.\n"
                example_code: "```\n{print} 'Robyn promenerar i stan'\nplats = {ask} 'Går Robyn till en affär eller går hon hem?'\n{if} plats {is} affär\n    {print} 'Hon går in i affären'\n    {print} 'Robyn ser en bok som ser spännande ut'\n    bok = {ask} 'Köper Robyn boken?'\n    {if} bok {is} ja\n        {print} 'Robyn köper boken och går hem'\n    {else}\n        {print} 'Robyn lämnar affären och går hem'\n{else}\n    {print} 'Robyn går hem'\n```\n"
                start_code: '# placera din kod här'
            13:
                start_code: '# placera din kod här'
                story_text: "Med kommandona `{and}` och `{or}` kan du göra dina berättelser mer flexibla. Du kan ställa två frågor och svara baserat på båda svaren.\n\n### Övning 1\nTitta på exempelkoden och gör den klar. Lägg sedan till minst två ytterligare `{if}` -satser med `{and}` eller `{or}`.\n\n### Övning 2\nHitta en berättelse från en tidigare nivå och lägg till ett `{and}` eller `{or}`.\n"
                example_code: "```\n{print} 'Vår hjälte går genom skogen'\n{print} 'Vägen delar sig på två håll'\nväg = {ask} 'Vilken väg ska hon välja?'\nvapen = {ask} 'Vilket vapen drar hon?'\n{if} väg {is} 'vänster' {and} vapen {is} 'svärd'\n    _\n```\n"
            4:
                example_code: "```\nname {is} {ask} _ Vad heter du? _\n{print} Huvudpersonen heter _ namn\n{print} namn _ ska nu vandra i skogen _\n{print} namn _ är lite rädd _\ndjur {is} 🦔, 🐿, 🦉, 🦇\n{print} _ Han hör ljudet av _ djur {at} {random}\n{print} namn _ är rädd för att detta är en trollskog _\n```\n"
                start_code: "{print} 'Din berättelse skrivs ut här!'"
                story_text: "Du kanske har märkt att det fortfarande finns ett problem på de tidigare nivåerna. Försökte du skriva ut en mening som innehöll ordet namn? T.ex. `{print}` mitt namn är namn.\nDu kan lösa det på den här nivån. Du måste använda citattecken runt allt du ska skriva ut.\n\n### Övning\nKopiera exempelkoden och få den att funka genom att lägga till citattecken på raderna.\n\n### Övning 2\nGå tillbaka till föregående nivå och kopiera koden för din berättelse. Få koden att fungera på den här nivån genom att lägga till citattecken på rätt ställen.\nTänk efter: variablerna i din egen berättelse ska stå utanför citattecknen. Precis som den andra raden i exempelkoden. På den raden är variabelns namn placerat utanför citattecken.\n"
            8:
                story_text: "På den här nivån kan du använda flera rader i dina `{if}` -kommandon; på så sätt kan du uppgradera ditt lyckliga eller sorgliga slut!\n\n### Övning 1\nExempelkoden visar två olika slut: ett där karaktärerna hoppar in i en tidsmaskin och ett där de inte gör det.\nFyll i luckorna med minst en mening per slut.\n**(extra)** Gör berättelsen längre. Vad händer i berättelsen? Du kan också lägga till en andra `{ask}` med olika alternativ.\n\n### Övning 2\nGå tillbaka till dina sparade program, välj ditt berättelseprogram från nivå 5. Skriv nu ett bra och ett dåligt slut på minst tre rader vardera!\n"
                example_code: "```\n{print} 'ÅH NEJ! T-rex närmar sig!\"\nend = {ask} 'Vill du ha ett lyckligt eller sorgligt slut?'\n{if} slut {is} lyckligt\n    {print} 'I sista ögonblicket hoppar Richard tillbaka in i tidsmaskinen!'\n    {print} _\n{else}\n    {print} 'Åh nej! Richard är för långsam ...\"\n    {print} _\n```\n"
                start_code: '# Placera din kod här'
            10:
                story_text: "På den här nivån kan du använda kommandot {for} i din berättelse. På detta sätt kan du enkelt programmera barnboken  'Brown bear, Brown bear, what do you see'.\n\n### Övning\n\nTitta på <a href=\"https://www.yonkerspublicschools.org/cms/lib/NY01814060/Centricity/Domain/1621/Brown%20Bear%20Book.pdf\"> berättelsen</a> om du inte känner till den, och se till att den skrivs ut som i boken.\n"
                example_code: "```\ndjur = _ , _ , _ , _ \n{print} 'Brunbjörn, brunbjörn'\n{print} 'Vad ser du?'\n```\n"
                start_code: '# placera din kod här'
            12:
                story_text: "På den här nivån behövs citattecken för att spara flera ord i en variabel.\n\n### Övning\n\nHitta en berättelse från en tidigare nivå, vilken nivå som helst är okej. Lägg till citattecken på rätt ställen."
                example_code: "```\nnamn = 'Drottningen av England'\n{print} namn ' åt en tårtbit, när plötsligt...'\n```\n"
                start_code: '# placera din kod här'
            15:
                start_code: '# placera din kod här'
                story_text: "Using the `{while}` loop can make your stories more interesting. For example, you can use `{while} game {is} 'on'` so you can play until the game is over.\nOr you can use `{while} sword {is} 'lost'` so the player can't continu the game until they have found something.\n"
                example_code: "```\nnycklar = 'förlorade'\n{print} 'Du står i din trädgård och du har tappat dina nycklar.'\n{print} 'Var vill du leta efter dem?'\n{print} 'Du kan välja: träd, rabatt, sten, postlåda'\n{while} nycklar == 'förlorade'\n    plats = {ask} 'Var vill du titta?'\n    {if} plats == 'rabatt'\n        {print} 'Här är de!'\n        nycklar = 'hittade'\n    {else}\n        {print} 'Nej, de är inte här: ' plats\n{print} 'Nu kan du gå in i huset!'\n```\n"
            18:
                start_code: '# placera din kod här'
                story_text: "We are going to print another story, but now we have to use brackets with `{print}`.\n\n### Exercise 1\nCreate a story of at least 5 sentences. You don't have to use 'name' just yet.\n"
                story_text_2: "### Övning 2\nVi har redan förberett en `{input}` åt dig. Använd först variabeln `name` i din berättelse.\nLägg sedan till en andra `{ask}` och använd den variabeln också.\nTips: Kom ihåg kommatecken i en `{print}` mellan text och variabler!\n"
                example_code: "```\n{print}('Välkommen till den här berättelsen!')\n```\n"
                example_code_2: "```\nnamn = {input}(\"Vad heter du?\")\n{print}('Välkommen till den här berättelsen!')\n```\n"
        name: Berättelse
        description: Berättelse
        default_save_name: Berättelse
    parrot:
        levels:
            2:
                start_code: '{print} Jag är papegojan Hedy!'
                story_text: "Skapa din egen papegoja som härmar dig!\n"
                example_code: "```\n{print} Jag heter papegojan Hedy\nnamn {is} {ask} vad heter du?\n{print} namn\n{sleep}\n{print} krax\n{sleep}\n{print} namn\n```\n"
                story_text_2: "### Exercise\nYou can use variables to make the parrot say more than only your name. Can you complete this code?\n"
                example_code_2: "```\n{print} Jag är papegojan Hedy\nnamn {is} {ask} vad heter du?\n{print} namn\n{sleep}\n{print} namn\nefternamn {is} {ask} vad heter du i efternamn?\n_\n{sleep}\n_\n```\n"
            3:
                story_text: "Lär din papegoja ett nytt ord med `{add}`.\n### Övning\nHur kan du få din papegoja att säga flera ord?\n"
                start_code: '# placera din kod här'
                example_code: "```\nord {is} skri, Hedy\n{print} Träna din papegoja!\nnytt_ord {is} {ask} Vilket ord vill du lära den?\n{add} new_word {to_list} ord\n{print} 🧒 Säg nytt_ord, Hedy!\n{print} 🦜 ord {at} {random}\n```\n"
            1:
                example_code: "```\n{print} Jag heter papegojan Hedy\n{ask} vad heter du?\n{echo}\n{echo}\n```\n"
                start_code: '{print} Jag är papegojan Hedy

                    {ask} Vad heter du?

                    {echo}

                    {echo}

                    '
                story_text: "Skapa din egen papegoja som härmar dig!\n"
                story_text_2: "### Övning\nKopiera exempelkoden till din inmatningsskärm genom att klicka på den gula knappen.\nLåt papegojan ställa en annan fråga. Fyll i de tomma rutorna i exemplet!\n**Extra** Du kan också låta papegojan ställa flera frågor. Lägg till några fler rader kod under din egen kod.\n"
                example_code_2: "```\n{print} Jag heter papegojan Hedy\n{ask} _\n{echo}\n{echo}\n"
            5:
                story_text: "Belöna din papegoja om den säger rätt ord!\n\n### Övning\nAvsluta koden genom att fylla i de fyra saknade kommandona.\n"
                example_code: "```\nord {is} skri, Hedy\n{print} 'Träna din papegoja!'\nnytt_ord {is} {ask} 'Vilket ord vill du lära den?'\n{add} nytt_ord {to_list} ord\nsagt_ord {is} ord {at} {random}\n{print} '🧒 Säg ' nytt_ord', Hedy!'\n{print} '🦜' sagt_ord\n_ sagt_ord {is} nytt_ord _ '🧒 Bra jobbat, Hedy! 🍪'\n_ _ '🧒 Nej, Hedy! Säg ' nytt_ord\n```\n"
                start_code: '# placera din kod här'
            4:
                start_code: '# Skriv din kod här'
                story_text: "På den här nivån måste vi använda citattecken i kommandona `{ask}` och `{print}`.\n### Övning\nKomplettera koden genom att fylla i citattecken på de tomma platserna.\n"
                example_code: "```\nord {is} skri, Hedy\n{print} _ Träna din papegoja! _\nnytt_ord {is} {ask} _ Vilket ord vill du lära den? _\n{add} nytt_ord {to_list} ord\n{print} _ 🧒 Säg _nytt_ord _, hedy!_\n{print} _ 🦜 _ ord {at} {random}\n```\n"
        name: Papegoja
        description: Skapa din egen papegoja som härmar dig!
        default_save_name: Papegoja
    songs:
        levels:
            11:
                start_code: '# placera din kod här'
                example_code: "```\n_ monkeys _ _ 5 _ 1\n    {print} monkeys ' little monkeys jumping on the bed'\n    _\n```\n"
                story_text: "På den här nivån kan du använda `{for}` med `{range}` för att göra sånger där du räknar, till exempel fem små apor.\n\n### Övning 1\nFyll i luckorna och få koden att fungera! Om du inte kommer ihåg sångtexten kan du slå upp den själv.\n\n### Övning 2\nSångens sista rad skiljer sig från de andra. Skriv ut den raden inuti `{for}` och använd en `{if}` för att få den att fungera korrekt.\n"
            12:
                story_text: "I den här sången kan vi göra det ännu enklare att programmera 'if you're happy and you know it, clap your hands'. Eftersom vi kan placera alla handlingar i en variabel, kolla in det:\n\n### Övning\nKan du lägga till rätt antal indrag (mellanslag) på varje rad för att få låten att spelas korrekt?\nTips: Alla rader behöver inte vara indragna.\n"
                example_code: "```\nactions = 'clap your hands', 'stomp your feet', 'shout Hurray!'\n{for} action {in} actions\n    {for} i {in} {range} 1 {to} 2\n        {print} 'if youre happy and you know it'\n        {print} action\n    {print} 'if youre happy and you know it and you really want to show it'\n    {print} 'if youre happy and you know it'\n    {print} action\n```\n"
                start_code: '# placera din kod här'
            16:
                story_text: "In this level, you can program a song like OldMacDonald even more quickly. You can connect the right animal to the right sound by simply putting them in the same place in the list.\nThe Drunken Sailor is also quickly made in this level. You only need 8 lines for the entire song, check it out!\n"
                example_code: "```\nanimals = ['pig', 'dog', 'cow']\nsounds = ['oink', 'woof', 'moo']\n{for} i {in} {range} 1 {to} 3\n    animal = animals[i]\n    sound = sounds[i]\n    {print} 'Old McDonald had a farm'\n    {print} 'E I E I O!'\n    {print} 'and on that farm he had a ' animal\n    {print} 'E I E I O!'\n    {print} 'with a ' sound sound ' here'\n    {print} 'and a ' sound sound ' there'\n    {print} 'here a ' sound\n    {print} 'there a ' sound\n    {print} 'everywhere a ' sound sound\n```\n\n```\nlines = ['what shall we do with the drunken sailor', 'shave his belly with a rusty razor', 'put him in a long boat till hes sober']\n{for} line {in} lines\n    {for} i {in} {range} 1 {to} 3\n        {print} line\n    {print} 'early in the morning'\n    {for} i {in} {range} 1 {to} 3\n        {print} 'way hay and up she rises'\n    {print} 'early in the morning'\n```\n"
                start_code: '# placera din kod här'
            6:
                start_code: "{print} 'Vi sjunger!'"
                story_text: "Sånger innehåller ofta många upprepningar. Ibland bygger upprepningarna också på räkning.\nTill exempel i den välkända sången 'Bottles of beer'. Du kan programmera den låten med lite matematik.\n\nTips: Använd funktionen för högläsning för att låta Hedy sjunga sången för dig!\n\n### Övning\nDu kan nu upprepa raderna 2 till 7 hur många gånger som helst genom att kopiera raderna.\n"
                example_code: "```\nvers = 99\n{print} vers ' ölflaskor på väggen'\n{print} vers ' ölflaskor'\n{print} 'Ta en ner, skicka runt den'\nvers = vers - 1\n{print} vers ' ölflaskor på väggen'\n{sleep}\n```\n"
                story_text_2: "This children's song counts down from 5 little monkeys to 1 monkey.\nIf you copy line 2 - 7 and paste it under the the code, you can sing the whole song!\n"
                example_code_2: "```\nantal = 6\nantal = antal - 1\n{print} antal ' små apor som hoppar på sängen'.\n{print} 'En av dem ramla ner av och slog huvudet.'\n{print} 'Mamma ringde till doktorn och doktorn sa'\n{print} 'INGA FLER APOR SOM HOPPAR PÅ SÄNGEN!'\n{sleep}\n```\n"
            7:
                story_text: "Sånger innehåller ofta många upprepningar. Till exempel ... Baby Shark! Om du sjunger den sjunger du samma sak hela tiden:\n\nBaby Shark tututududutudu <br>\nBaby Shark tututududutudu <br>\nBaby Shark tututudutudu <br>\nBaby Shark\n\n### Övning\nKan du skriva ut låten Baby Shark med `{repeat}`? Avsluta koden genom att ersätta tomrummen i koden?\n**Extra** Efter Baby Shark kan du naturligtvis också programmera andra låtar. Det finns många låtar med upprepning!\nKan du komma på en sång  tilloch skriva ut den?\n"
                example_code: "```\n{repeat} _ _ {print} 'Baby Shark tututudutudu'\n{print} 'Baby Shark'\n```\n"
                start_code: "{print} 'Baby Shark'"
            8:
                story_text: "I en tidigare nivå har du programmerat låten 'Bottles of beer'. Men utan kommandot `{repeat}` var du tvungen att kopiera verserna många gånger.\nI den här nivån kan du upprepa sången 99 gånger, bara genom att lägga till en endarad!\n\n### Övning\nLägg till rätt kommando på de tomma platserna och indentera koden på rätt sätt.\n"
                example_code: "```\nverse = 99\n_ 99 {times}\n{print} verse ' bottles of beer on the wall'\n{print} verse ' bottles of beer'\n{print} 'Take one down, pass it around'\nverse = verse - 1\n{print} verse ' bottles of beer on the wall'\n```\n"
                start_code: '# placera din kod här'
            10:
                story_text: "Med `{for}` kan du skriva ut hela sången om baby shark (inklusive alla andra hajar i familjen) på bara 6 rader!\n\n### Övning 1\nKan du göra baby shark-koden ännu kortare genom att använda kommandot `{for}`? Gör klart exempelkoden.\n"
                example_code: "```\nfamily = baby, mammy, daddy, grandma, grandpa\n_ _ _ _ \n  {print} _\n```\n"
                start_code: '# placera din kod här'
                example_code_2: "```\napor = 5, 4, 3, 2, 1\n```\n"
                story_text_2: "### Övning 2\nSkriv ut låten Fem små apor hoppade på sängen. Slå upp texten om du inte kommer ihåg.\n\n**(extra)** Skriv ut låten Old MacDonald had a farm och se till att alla djur gör ett annat ljud med hjälp av en `{if}`.\n"
            18:
                start_code: '# placera din kod här'
                story_text: "In level 16 we made songs using lists. These programs however are no longer working properly in this level. The colons from level 17 and the brackets from level 18 still need to be added.\n\n### Exercise 1\nThe Drunken sailor song is given as sample code, but not yet working.\nCan you make sure everything works again? To help you, we've put _ in the places of _some_ errors.\n\n### Exercise 2\nNow also look up your Old MacDonald song from level 16, and correct it.\n"
                example_code: "```\nlines = ['what shall we do with the drunken sailor', 'shave his belly with a rusty razor', 'put him in a long boat till hes sober']\n{for} line {in} lines _\n    {for} i {in} {range} 1 {to} 3 _\n        {print} _ line _\n    {print} 'early in the morning'\n    {for} i {in} {range} 1 {to} 3\n        {print} 'way hay and up she rises'\n    {print} 'early in the morning'\n```\n"
        name: Sjung en sång!
        description: Skriv ut en sång
        default_save_name: Sång
    turtle:
        name: Sköldpadda
        description: Gör din egen ritning
        default_save_name: Sköldpadda
        levels:
            1:
                story_text: "Du kan också rita med Hedy. Genom att kombinera svängar och linjer kan du göra en fyrkant eller trappa!\n\nMed `{forward}` ritar du en linje framåt. Talet efter avgör hur långt sköldpaddan kommer att gå. `{turn} {right}` vrider ett kvarts varv medurs, `{turn} {left}` vrider moturs.\n\nOm du vill gå bakåt använder du kommandot `{forward}` men med ett negativt tal. Till exempel `{forward} -100`\n\n### Övning\nDet här är början på en liten trappa. Kan du göra så den får fem steg?\n"
                example_code: "```\n{forward} 50\n{turn} {right}\n{forward} 50\n{turn} {left}\n{forward} 50\n```\n"
                start_code: "{forward} 50\n{turn} {left}"
            8:
                start_code: angles = {ask} 'How many angles should I draw?'
                story_text: "Nu när vi kan upprepa flera rader kan vi lättare skapa figurer.\nVi behöver bara ställa in vinkeln en gång och sedan använda den variabeln i `{repeat}`.\n\n### Övning 1\nExempelkoden skapar en kvadrat. Ändra koden så att den skapar en annan figur, till exempel en triangel eller en sexhörning. \nDetta kräver en ändring av två kodrader.\nTips: En hel cirkel är 360 grader.\n\n### Övning 2\nSkapa nu en ritning som består av minst två polygoner.\n"
                example_code: "```\nvinkel = 90\n{repeat} 4 {times}\n    {turn} vinkel\n    {forward} 50\n```\n"
                story_text_2: "**(extra)** Vi kan nu förbättra programmet för att rita olika figurer. Gör klart koden och du kan rita vilken polygon som helst!\n"
                example_code_2: "```\nangles = {ask} 'How many angles should I draw?'\nangle = 360 / angles\n{repeat} angle {times}\n    {turn} _\n    {forward} _\n```\n"
            2:
                story_text: "In this level you can use variables to make the turtle interactive. For example you can ask the player how many steps the turtle must make.\n"
                example_code: "```\nsvar {is} {ask} Hur många steg ska sköldpaddan ta?\n{forward} svar\n```\n"
                story_text_2: "På nivå 1 kunde sköldpaddan dessutom bara svänga till vänster eller höger. Det är lite tråkigt!\nPå nivå 2 kan den peka med näsan åt alla håll.\n\nAnvänd 90 för att vrida en kvarts varv. Vi kallar detta för grader. Ett helt varv är 360 grader.\n\n### Övning\nKan du göra en figur med den här koden? Kanske en triangel eller en cirkel?\n"
                example_code_2: "```\n{print} Rita figurer\nvinkel {is} 90\n{turn} vinkel\n{forward} 25\n{turn} vinkel\n{forward} 25\n```\n"
                start_code: "{print} Sköldpaddslopp!\nvinkel {is} 90\n{turn} vinkel\n{forward} 25"
            3:
                example_code: "```\nvinklar {is} 10, 50, 90, 150, 250\n{turn} vinklar {at} {random}\n{forward} 25\n```\n"
                story_text: "På den här nivån kan du använda `{at} {random}` med sköldpaddan. Ett slumpmässigt val gör att sköldpaddan går en annan väg varje gång.\nAnvänd `{at} {random}` för att välja ett värde från en lista.\n### Övning\nKan du kopiera och klistra in rad 2 och 3 för att skapa en längre slumpmässig väg?\n"
                start_code: "vinklar {is} 10, 50, 90, 150, 250\n{turn} vinklar {at} {random}\n{forward} 25"
            4:
                story_text: "In level 4 you have to use quotation marks with `{print}` and `{ask}`. Also when drawing!\n"
                example_code: "```\n{print} _ Rita figurer _\nvinkel {is} 90\n{turn} vinkel\n{forward} 25\n{turn} vinkel\n{forward} 25\n```\n"
                start_code: "{print} 'Rita figurer'\nvinkel {is} 90\n{turn} vinkel\n{forward} 25"
                example_code_2: "```\n{color} {white}\n{forward} -80\n{color} {green}\n{forward} 50\n{color} {yellow}\n{forward} 50\n{color} {red}\n{forward} 50\n```\n"
                story_text_2: "You can also change the color of the lines with the command `{color}`. Check out the example.\nYou can also use the command `{color} {white}` to make 'invisible' lines. You could use these white lines to move the turtle anywhere in the screen before you start drawing.\n"
            5:
                example_code: "```\n{print} 'Rita figurer'\nfigur {is} {ask} 'Vill du ha en kvadrat eller en triangel?'\n{if} figur {is} triangel vinkel {is} 120\n{else} vinkel {is} 90\n{turn} vinkel\n{forward} 25\n{turn} vinkel\n{forward} 25\n{turn} vinkel\n{forward} 25\n{turn} vinkel\n{forward} 25\n```\n"
                start_code: "{print} 'Rita figurer'\nfigur {is} {ask} 'Vill du ha en kvadrat eller triangel?'\n{if} figur {is} triangel vinkel {is} 120 {else} vinkel {is} 90\n{turn} vinkel\n{forward} 25"
                story_text: "In level 5 you can make a choice with `{if}`. For example between different types of figures.\n"
                story_text_2: "### Övning\nFyll i rätt tal i den här koden för att få det att fungera.\nNär du har gjort det kan du försöka lägga till alternativet baklänges.\n\n**Extra** Istället för att använda 'vänster' och 'höger', gör om programmet med nord, ost, syd och väst.\nPå så sätt kan du lägga till ännu fler vägbeskrivningar som nordost och sydväst etc.\n"
                example_code_2: "```\nriktning {is} {ask} \"Vill du gå åt vänster, höger eller rakt fram?\n{if} riktning {is} vänster {turn} _\n{if} riktning {is} höger {turn} _\n{forward} 100\n```\n"
            6:
                story_text: "In this level you can use calculations to draw different figures.\nYou may have learned in school that turning a full circle is 360 degrees. If not, now you know!\nThat's why you also use 90 degrees for a square. 360 divided by 4 is 90.\nNow that we can do math with Hedy, we can draw all the figures we want!\n"
                example_code: "```\nvinklar = {ask} 'Hur många vinklar vill du ha?'\nvinkel = 360 / vinklar\n{forward} 50\n{turn} vinkel\n{forward} 50\n{turn} vinkel\n{forward} 50\n{turn} vinkel\n{forward} 50\n{turn} vinkel\n{forward} 50\n{turn} vinkel\n{forward} 50\n{turn} vinkel\n```\n"
                start_code: "{print} 'Rita figurer'"
            9:

                start_code: '# place your code here'
                story_text: "Now that we can use a `{repeat}` inside a `{repeat}`, we can create more complex figures.\n\n### Exercise 1\nThis code creates three black triangles, change that into five pink squares.\n\n **(extra)** Create a figure of your own choosing consisting of at least two different shapes types.\n"
                example_code: "```\n{color} {black}\n{repeat} 3 {times}\n    {repeat} 3 {times}\n        {forward} 10\n        {turn} 120\n    {color} {white}\n    {forward} 50\n    {color} {black}\n```\n"
    dishes:
        name: Dishes?
        levels:
            4:
                story_text: "Med citattecken kan du göra ditt diskprogram ännu bättre.\n\n### Övning\nFyll först i rätt symboler eller kommandon i tomrummen för att få detta exempelprogram att fungera.\nFick du rätt på det? Bra! Kopiera nu din egen kod från föregående nivå och få den att fungera på den här nivån genom att lägga till citattecken på rätt ställen.\n"
                example_code: "```\npeople {is} mom, dad, Emma, Sophie\n{print} _ the dishes are done by _\n{sleep}\n{print} people {at} _\n```\n"
                start_code: "{print} 'Who does the dishes?'"
            10:
                example_code: "```\ndays = Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday\nnames = mom, dad, Emma, Sophie\n{for} day {in} days\n    {print} names {at} {random} ' does the dishes on ' day\n```\n"
                start_code: '# place your code here'
                story_text: "På den här nivån kan du göra ett schema för hela veckan på ett enkelt sätt!\n\n### Övning\nLägg till en andra syssla, t.ex. dammsugning eller städning, och se till att den också är uppdelad för hela veckan.\n<br> **(extra)** Programmet är inte rättvist, du kan ha otur och behöva diska hela veckan. Hur skulle du kunna göra programmet mer rättvist?\n"
            3:
                story_text: "Är ni alltid oense hemma om vem som ska diska eller göra vid kattlådan idag?\nDå kan du låta datorn välja mycket rättvist. Det kan du programmera på den här nivån!\n"
                example_code: "```\npeople {is} mom, dad, Emma, Sophie\n{print} people {at} {random}\n```\n"
                story_text_2: "### Övning\nGör en egen version av programmet för diskmaskinen. Gör först en lista över dina familjemedlemmar.\nTänk sedan ut en uppgift som måste göras och låt datorn bestämma vem som ska göra uppgiften med kommandot `{at} {random}`.\n\n**Extra** Känner du inte för att diska själv? Hacka programmet genom att ta bort ditt namn från listan med kommandot `{remove}` `{from}`.\n"
                start_code: '{print} Who does the dishes?'
            6:
                story_text_2: "If you are extremely unlucky the previous program might choose you to to the dishes for the whole week! That's not fair!\nTo create a fairer system you can use the `{remove}` command to remove the chosen person from the list. This way you don't have to do the dishes again untill everybody has had a turn.\n\nMonday and tuesday are ready for you! Can you add the rest of the week?\nAnd... can you come up with a solution for when your list is empty?\n"
                story_text: "How often is everyone going to do the dishes? Is that fair? You can count it in this level.\n"
                example_code: "```\npeople = mom, dad, Emma, Sophie\nemma_washes = 0\ndishwasher = people {at} {random}\n{print} 'The dishwasher is' dishwasher\n{if} dishwasher {is} Emma emma_washes = emma_washes + 1\n{print} 'Emma will do the dishes this week' emma_washes 'times'\n```\n\nNow you can copy lines 3 to 5 a few times (e.g. 7 times for a whole week) to calculate for a whole week again.\nDo you make the code for the whole week?\n"
                example_code_2: "```\npeople = mom, dad, Emma, Sophie\ndishwasher = people {at} {random}\n{print} 'Monday the dishes are done by: ' dishwasher\n{remove} dishwasher {from} people\ndishwasher = people {at} {random}\n{print} 'Tuesday the dishes are done by: ' dishwasher\n{remove} dishwasher {from} people\ndishwasher = people {at} {random}\n```\n"
                start_code: "{print} 'Who does the dishes?'"
            5:
                story_text: "Med `{if}` kan du nu ha roligare valmöjligheter i programmet. Du kan låta programmet reagera på datorns val.\n### Övning\nKan du avsluta koden så att den skriver ut 'tyvärr' när det är din tur och annars 'ja!'?\nGlöm inte citattecken!\n"
                example_code: "```\npersoner {is} mamma, pappa, Emma, Sophie\ndiskmaskin {is} personer {at} {random}\n_ diskmaskin {is} Sophie {print} _ Synd att jag måste diska.\n_ {print} 'som tur är ingen disk eftersom' _ 'redan diskar'\n```\n"
                start_code: "{print} 'Who does the dishes?'"
            7:
                story_text: "Med `{repeat}` kan du upprepa delar av koden. Du kan använda detta för att beräkna vem som kommer att diska under flera dagar!\n### Övning\nAnvänd kommandot `{repeat}` för att bestämma vem som ska diska under en hel vecka. Varje tomrum måste fyllas med ett kommando eller ett tal!\n**(extra)** Kan du komma på andra uppgifter i huset? Anpassa koden så att den beslutar om tre hushållssysslor. Glöm inte att skriva ut vilka uppgifter det handlar om!\n"
                example_code: "```\npeople = mom, dad, Emma, Sophie\n{repeat} _ _ {print} 'the dishwasher is' _\n```\n"
                start_code: "{print} 'Who does the dishes?'"
        description: Use the computer to see who does the dishes (Start at level 2)
        default_save_name: Dishes
    dice:
        name: Dice
        description: Make your own dice
        default_save_name: Dice
        levels:
            3:
                story_text: "In this level we can choose from a list. With that we can let the computer choose one side of the die.\nTake a look at the games you have in your closet at home.\nAre there games with a (special) die? You can also copy it with this code.\nFor example, the dice of the game Earthworms with the numbers 1 to 5 and an earthworm on it.\n\n![Die of earthworms with 1 to 5 and an earthworm on it](https://cdn.jsdelivr.net/gh/felienne/hedy@24f19e9ac16c981517e7243120bc714912407eb5/coursedata/img/dobbelsteen.jpeg)\n"
                example_code: "```\nchoices {is} 1, 2, 3, 4, 5, earthworm\n{print} choices {at} {random}\n```\n"
                start_code: '{print} What will the die indicate this time?'
                story_text_2: "### Exercise\nThe dice in the example above are dice for a specific game. Can you make normal dice?\nOr other special dice from a different game?\n"
                example_code_2: "```\nchoices {is} _\n```\n"
            4:
                start_code: "{print} 'What will the die indicate this time?'"
                story_text: "På den här nivån kan du också skapa tärningar. Men den här gången kan du prova det själv, utan exempelkod!\n\n### Övning\nGör dina egna tärningar i den här nivån.\nTips: Om du inte har någon aning om hur man gör tärningar. Ta en titt på dina tärningar från föregående nivå, men glöm inte att lägga till citattecken.\n"
            5:
                story_text: "Vi ska lägga till kommandona `{if}` och `{else}` till vår tärning!\n\n### Övning\nKomplettera exempelkoden så att koden säger \"Du kan sluta kasta\" när du har kastat en daggmask. Den ska säga \"Du måste kasta igen\" om du har kastat något annat.\n**Extra** Kanske vill du återskapa en tärning från ett helt annat spel. Det går också bra! Hitta då på en egen reaktion, t.ex. 'ja' för 6 och 'synd' för något annat.\n"
                start_code: "{print} 'What will the die indicate this time?'"
                example_code: "```\nvalmöjligheter {is} 1, 2, 3, 4, 5, daggmask\nkast {is} val {at} {random}\n{print} 'du har kastat' valmöjligheter\n_ throw {is} daggmask {print} 'Du kan sluta kasta.'\n_ {print} 'Du måste kasta igen!'\n```\n"
            6:
                story_text: "Du kan också låta en daggmask dö igen, men nu kan du också beräkna hur många poäng som har kastats.\nDu kanske vet att masken räknar fem poäng för daggmaskar. Nu kan du efter ett kast direkt räkna ut hur många poäng du har kastat.\nDetta är koden för att beräkna poäng för en tärning:\n\n### Övning\nKan du göra koden så att du får fram den totala poängen för åtta tärningar? För att göra det måste du klippa och klistra in några rader i koden.\n"
                start_code: "{print} 'What will the die indicate this time?'"
                example_code: "```\nval = 1, 2, 3, 4, 5, daggmask\npoäng = 0\nkast = val {at} {random}\n{print} 'du kastade' kast\n{if} kast {is} daggmask poäng = poäng + 5 {else} poäng = poäng + kast\n{print} 'det är' poäng 'poäng'\n```\n"
                example_code_2: "\nDid you manage to calculate the score for 8 dice? That required a lot of cutting and pasting, right? We are going to make that easier in level 7!\n"
            7:
                story_text: "Du kan också göra en tärning igen på nivå 5. Med `{repeat}` -koden kan du enkelt kasta en handfull tärningar.\n\n### Övning\nFörsök att avsluta exempelkoden!  **(extra)** Tänk på ett spel du känner till som använder en tärning och programmera det med hjälp av `{repeat}`.\n"
                example_code: "```\nval = 1, 2, 3, 4, 5, 6\n_ _ _ _ _ _ _\n```\n"
                start_code: "{print} 'What will the die indicate this time?'"
            10:
                story_text: "Tar alla för lång tid på sig att kasta tärningarna? I den här nivån kan du låta Hedy kasta alla tärningar på en gång!\n\n### Övning \nÄndra namnen till namn på dina vänner eller din familj och avsluta koden så att alla kastar.\n"
                example_code: "```\nspelare = Ann, John, Jesse\nval = 1, 2, 3, 4, 5, 6\n_ _ _ _\n    {print} 'spelare ' kastar ' val {at} {random}\n   {sleep}\n```\n"
                start_code: '# place your code here'
            15:
                story_text: "In this game you have to throw 6 in as little tries as possible.\n"
                example_code: "```\noptions = 1, 2, 3, 4, 5, 6\n{print} 'Throw 6 as fast as you can!'\nthrown = 0\ntries = 0\n{while} thrown != 6\n    thrown = options {at} {random}\n    {print} 'You threw ' thrown\n    tries = tries + 1\n{print} 'Yes! You have thrown 6 in ' tries ' tries.'\n```\n"
                start_code: '# place your code here'
    rock:
        description: Make your own rock, paper, scissors game
        levels:
            15:
                start_code: '# place your code here'
                story_text: "Play until you beat the computer! But first, finish the example code...\n"
                example_code: "```\nvunnit = 'nej'\nalternativ = 'sten', 'sax', 'påse'\n{while} vunnit == 'nej'\n    ditt_val = {ask} 'Vad väljer du?'\n    datorval = alternativ {at} {random}\n    {print} 'du valde ' ditt_val\n    {print} 'datorn valde ' datorval\n    {if} datorval == ditt_val\n        {print} 'Oavgjort!'\n    {if} computer_choice == 'sten' {and} your_choice == 'sax'\n        {print} 'Du förlorade!'\n    {if} computer_choice == 'sten' {and} your_choice == 'påse'\n        {print} 'Du vann!'\n        vunnit = 'ja'\n_\n```\n"
            1:
                story_text: "I nivå 1 kan du börja med ett sten, sax, påse-spel.\n\nMed `{ask}` kan du göra ett val, och med `{echo}` kan du upprepa det valet.\n"
                example_code: "```\n{print} Vad väljer du?\n{ask} Välj mellan sten, sax eller påse.\n{echo} Så ditt val var:\n```\n"
                start_code: '{print} Välkommen till din egen sten sax påse!

                    {ask} Vad väljer du?

                    '
                story_text_2: "### Övning\nIstället för att använda ord skulle man kunna använda emojier: ✊✋✌\nKan du skriva en kod med emojier?\n"
                example_code_2: "```\n{print} what do you choose?\n{ask} choose from _\n{echo} so your choice was:\n```\n"
            2:
                story_text: "In this level you can practise using the variables, so that you can make the rock, paper, scissors game in the next level!\n"
                example_code: "```\n_ {is} {ask} sten, sax eller påse?\n{print} Jag väljer ...\n```\n"
                start_code: '# place your code here'
                story_text_2: "### Exercise\nCopy the example code to your input screen by clicking the yellow button.\nFinish the code by filling in the right commands on the blanks.\n"
            3:
                story_text: "\nIn this level we can enter lists and choose things from them.\nYou first make a list with `{is}`. Then you can let the computer choose something from the list with `{at} {random}`.\nFor example, you can let the computer pick from rock, paper and scissors.\n"
                example_code: "```\nchoices {is} rock, paper, scissors\n{print} choices {at} {random}\n```\n"
                start_code: '{print} Welcome to your own rock scissors paper!'
                story_text_2: "### Övning\nKopiera exempelkoden och fyll i de tomma rutorna för att lägga till en extra spelare i det här spelet.\n\n**Extra** Nu kallas spelarna bara spelare 1 och spelare 2. Kan du lägga till ask-kommandon (med variabler förstås) för att fråga efter spelarnas namn?\nDå skulle du kunna skriva ut så här till exempel: `James picks... paper`\n"
                example_code_2: "```\nchoices {is} rock, paper, scissors\n{print} player 1 chooses... choices {at} {random}\n{print} player 2 _\n```\n"
            4:
                story_text: "På den här nivån kan vi också programmera sten, sax, påse. Men om du vill lägga till text måste du använda citattecken även här.\n### Övning\nKopiera din kod från föregående nivå och få den att fungera genom att använda citattecken efter varje `{print}` - eller `{ask}` -kommando.\n"
                start_code: "{print} 'Welcome to your own rock scissors paper!'"
            5:
                story_text: "På den här nivån kan vi avgöra om det är oavgjort eller inte. För det behöver du den nya koden `{if}`.\n\n### Övning\nAvsluta koden genom att fylla i luckorna:\n* Låt datorn välja ett slumpmässigt alternativ\n* Fråga spelaren vad han eller hon vill välja\n* Fyll i de korrekta variablerna på rad 4 och 5.\n* Programmera rad 6 så att Hedy kan kolla om det är oavgjort eller inte.\n"
                example_code: "```\nalternativ {is} sten, sax, påse\ndatorns_val {is} _\nval {is} _\n{print} 'du valde ' _\n{print} 'datorn valde ' _\n{if} _ {is} _ {print} 'oavgjort!' {else} {print} 'inte oavgjort'\n```\n\nFyll i rätt kod i tomrummen för att se om det är oavgjort.\n"
                start_code: "{print} 'Welcome to your own rock scissors paper!'"
            9:
                story_text: "På den här nivån kan du programmera hela spelet sten, sax, påse genom att nästla `{if}` -kommandon. \n\n### Övning\nKan du göra klart koden? Programmet behöver berätta vem som har vunnit för varje kombination.\n\n**(extra)** Vill du spela mer än en omgång? Utöka koden så att du kan spela flera omgångar. Du kan till och med använda en `{ask}` för att fråga användaren hur många rundor hen vill spela.\n"
                example_code: "```\nchoices {is} rock, paper, scissors\nyour_choice {is} {ask} 'What do you choose?'\n{print} 'You choose ' your_choice\ncomputer_choice {is} choices {at} {random}\n{print} 'The computer chooses ' computer_choice\n{if} computer_choice {is} your_choice\n    {print} 'Tie'\n{if} computer_choice {is} rock\n    {if} your_choice {is} paper\n        {print} 'You win!'\n    {if} your_choice {is} scissors\n        {print} 'You lose!'\n# finish this code\n```\n"
                start_code: '# place your code here'
            10:
                story_text: "Känner du dig för lat för att spela spelet själv? Låt Hedy spela det åt dig!\nDu behöver bara fylla i namnen på spelarna så får de ett slumpmässigt val.\n\n### Övning 1\nAvsluta programmet genom att fylla i en lista med namn.\n\n### Övning 2\nLägg till en datorspelare som väljer åt varje spelare.\n\n**(extra)** Gå tillbaka till din kod och bestäm vem som vinner i varje omgång: datorn eller den namngivna personen.\n"
                example_code: "```\nchoices = rock, paper, scissors\nplayers = Marleen, Michael\n{for} player {in} players\n     {print} player ' chooses ' choices {at} {random}\n```\n"
                start_code: '# place your code here'
            13:
                story_text: "Med kommandot `{and}` kan du förkorta din sten-, sax-, påsekod! Kolla in exempelkoden.\n\n### Övning\nGör färdigt koden så att en vinnare alltid koras. Kör din kod några gånger för att kolla att vinnaren alltid skrivs ut.\n"
                example_code: "```\nalternativ = 'sten', 'sax', 'påse'\nditt val = {ask} 'Vad väljer du?'\ndatorval = alternativ {at} {random}\n{print} 'Du väljer' ditt_val\n{print} 'Datorn väljer ' datorval\n{if} datorval {is} ditt_val\n    {print} 'Oavgjort'\n{if} datorval {is} 'sten' {and} ditt_val {is} 'påse'\n    {print} 'Du vann!'\n{if} datorval {is} 'sten' {and} ditt_val {is} 'sax'\n    {print} 'Datorn vann!'\n_\n```\n"
                start_code: '# place your code here'
        name: Rock, paper, scissors
        default_save_name: Rock
    calculator:
        name: Calculator
        description: Create a calculator
        default_save_name: Calculator
        levels:
            6:
                story_text: "Now that you can calculate, you can also create a program to practice maths calculations. You can make up the calculations yourself, for example:\n"
                example_code: "```\ntal_1 {is} {ask} 'Mata in första talet:'\ntal_2 {is} {ask} 'Mata in andra talet:'\nrätt_svar = tal_1 * tal_2\n{print} tal_1 ' gånger ' tal_2 ' är ' rätt_svar\n```\n"
                story_text_2: "### Övning\nKalkylatorn här ovanför räknar ut svaret åt dig, men du kan också göra ett program för att testa dina egna matteskills, så här:\nFyll i luckorna för att göra det klart!\n"
                example_code_2: "```\nrätt_svar = 11 * 27\nanswer = {ask} 'Hur mycket är 11 gånger 27?'\n{if} svar {is} _ {print} 'Bra jobbat!'\n{else} {print} 'Fel! Det var ' _\n```\n"
                start_code: "{print} 'Welcome to this calculator!'"
                story_text_3: "You can also let the computer do random sums on its own using random.\nThis is how you choose a number of tables to practice, and from that you always get a different sum:\n"
                example_code_3: "```\ntables = 4, 5, 6, 8\nnumbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\ntable = tables {at} {random}\nnumber = numbers {at} {random}\ncorrect_answer = table * number\nanswer = {ask} 'how much is ' table ' times ' number '?'\n{if} answer {is} correct_answer {print} 'okay'\n{else} {print} 'mistake! it was ' correct_answer\n```\n"
            9:
                story_text: "På nivå 6 gjorde du en miniräknare och på den här nivån kan du utöka den koden så att den ställer flera frågor.\n\n### Övning 1\nKan du avsluta rad 10 så programmet fungerar?\n\n### Övning 2\nGe spelaren feedback när den matar in rätt eller fel svar. För att göra det behöver du lägga till ett `{else}`.\n"
                example_code: "```\npoäng = 0\n{repeat} 10 {times}\n    tal = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n    tal1 = tal {at} {random}\n    tal2 = tal {at} {random}\n    korrekt_svar = tal1 * tal 2\n    {print} 'Vad är ' tal1 ' gånger ' tal2 '?'\n    svar = {ask} 'Skriv ditt svar här ...'\n    {print} 'Du svarade' svar\n    {if} _ {is} _\n        poäng = poäng + 1\n{print} 'Bra jobbat! Du har ... ' poäng ' av 10 poäng!'\n```\n"
                start_code: "{print} 'Welcome to this calculator!'"
            12:
                start_code: '# place your code here'
                story_text: "På den här nivån kan du göra en miniräknare som fungerar för decimaltal.\n\n### Övning 1\nFyll i tomrummen för att göra klart miniräknaren. Kom ihåg att använda punkt och inte komma för decimaltal.\n\n### Övning 2\nSkapa ett nytt matematikövningsprogram, men använd nu decimaltal.\nSkapa en lista med tal, välj två som ska multipliceras och låt spelaren svara.\nOch naturligtvis måste du kolla svaret! **(extra)** Öka svårighetsgraden genom att lägga till liv: En spelare förlorar ett liv för ett felaktigt svar och efter tre felaktiga svar slutar spelet.\n"
                example_code: "```\nnumber1 = {ask} 'What is the first number?'\nnumber2 = {ask} 'What is the second number?'\nanswer = number1 + number2\n{print} number1 ' plus ' number2 ' is ' answer\n```\n"
            14:
                story_text: "In this level you can programm the game 'Guess which number'\n"
                example_code: "```\n{print} 'Guess which number'\nnumbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\nnumber = numbers {at} {random}\ngame = 'on'\n{for} i {in} {range} 1 {to} 10\n    {if} game == 'on'\n        guess = {ask} 'Which number do you think it is?'\n        {if} guess > number\n            {print} 'Lower!'\n        {if} guess < number\n            {print} 'Higher!'\n        {if} guess == number\n            {print} 'You win!'\n            game = 'over'\n```\n"
                start_code: '# place your code here'
            10:
                story_text: "Det här räknespelet hjälper dig att öva på multiplikationstabellerna!\n### Övning\nKan du lägga till fler tal i listan så du kan öva multiplikationstabellerna upp till 10?\n"
                example_code: "```\nnumbers = 1, 2, 3\n{for} number1 {in} numbers\n    {for} number2 {in} numbers\n        answer = {ask} 'How much is ' number2 ' times ' number1 '?'\n        correct = number1 * number2\n        {if} answer {is} correct\n            {print} 'Great job!'\n        {else}\n            {print} 'Thats wrong. The right answer is ' correct\n```\n"
                start_code: '# place your code here'
            15:
                story_text: "Du kan lägga till `{while}` -slingan i räknespelet som du lärder dig göra på en tidigare nivå.\nDet gör att spelaren inte kan fortsätta till nästa fråga om den svarar fel.\n"
                example_code: "```\nscore = 0\n{for} i {in} {range} 0 {to} 9\n    numbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n    number1 = numbers {at} {random}\n    number2 = numbers {at} {random}\n    correct = number1 * number2\n    answer = 0\n    {while} answer != correct\n        {print} 'How much is ' number1 ' times ' number2 '?'\n        answer = {ask} 'Fill in your answer:'\n        {print} 'Your answer is ' answer\n    {print} 'Good job!'\n{print} 'You win!'\n```\n"
                start_code: '# place your code here'
            11:
                story_text: "With a `{for}` you can simplify tables of multiplication practise program.\n\n### Exercise 1\nImprove the example code such that it prints a nice multiplication table: <br> \"1 times 10 is 10\", \"2 times 10 is 20\", etc.\n\n### Exercise 2\nGo back to your level 10 multiplication code, and modify it so that it uses a `{for}` and `{range}`.\n"
                example_code: "```\nnumber = 10\n{for} i {in} {range} 1 to 10\n    {print} i * number\n```\n"
                start_code: '# place your code here'
            13:
                example_code: "```\nanswer1 = {ask} 'What is 10 times 7?'\nanswer2 = {ask} 'What is 6 times 7?'\n{if} _ _ _ _ _ _ _\n    {print} _\n```\n"
                story_text: "\n### Exercise 1\nLet's make the practice program a bit harder. The player now has to answers two questions correctly. Fill out the blanks to complete the program.\n\n### Exercise 2 (extra)\nSometimes, calculations have multiple correct answers. For example, 10 can be divided by 5 and by 2. So the question 'What number divides 10?' can be answered by 2 and by 5.\nAsk for a calculation that has multiple correct answers, ask the player to answer it, and determine if it is correct using `{or}`.\nEmpty the programming field and create your own solution.\n"
                start_code: '# Schrijf jouw code hier'
    restaurant:
        levels:
            4:
                start_code: '# place your code here'
                story_text: "På den här nivån måste du använda citattecken när du använder kommandona `{print}` eller `{ask}`.\n\n### Övning\nLägg till citattecken i den här koden för att få det att fungera! Var försiktig: variabler ska inte stå inom citattecken.\n\n### Övning 2\nGå tillbaka till förra nivån och kopiera din restaurangkod. Få koden att fungera på den här nivån genom att lägga till citattecken på rätt ställen.\n"
                example_code: "```\n_ Lägg till citattecken i den här koden _\n{print} Välkommen till Restaurang Chez Hedy!\n{print} Idag serverar vi pizza eller lasagne.\nmat {is} {ask} Vad vill du äta?\n{print} Bra val! Det är min älsklingsrätt!\ntopping {is} {ask} Vill du ha kött eller grönsaker till det?\n{print} mat med topping är på väg!\ndryck {is} {ask} Vad vill du dricka till?\n{print} Tack för din beställning.\n{print} Din mat och dryck kommer strax!\n```\n"
            5:
                story_text_2: "### Övning\nKoden ovan visar ett exempel hur du kan programmera att en meny är slut i din restaurang.\nKopiera din egen restaurangkod från de föregående nivåerna. Skapa ett problem i din restaurang och koda det, på samma sätt som i exempelkoden.\nTill exempel kan du också ha slut på ett menyalternativ, eller så tar du inte emot kreditkort, eller så är glassmaskinen trasig.\n\n**Extra** Har du kodat problemet och kodat lämpliga svar? Försök då att lägga till fler `{if}` - och `{else}` -kommandon i din kod.\nFörsök att lägga till ett `{if}` efter varje `{ask}` -kommando i din kod för att göra koden så interaktiv som möjligt!\n"
                story_text: "På den här nivån kan du med `{if}`-kommandot ställa frågor, `{ask}`, till dina kunder och ge olika svar beroende på deras svar.\nI exemplet nedan kan du se att du kan `{ask}` kunden `{if}` de vill höra specialmenyn och Hedy kan svara i enlighet med detta.\n"
                example_code: "```\n{print} 'Välkommen till restaurang Chez Hedy!'\nspecial {is} {ask} 'Vill du höra våra specialerbjudanden idag?'\n{if} special {is} ja {print} 'Dagens special är kyckling piri piri och ris.' {else} {print} 'Inga problem.'\nmat {is} {ask} 'Vad önskas att äta?'\n{print} 'En ' mat ', kommer direkt!'\ndricka {is} {ask} 'Vad vill du dricka till det?'\n{if} dricka {is} cola {print} 'Ursäkta, vi har slut på cola!' {else} {print} 'Bra val!'\nnågot {is} {ask} 'Vill du ha något annat?'\n{print} 'Låt mig upprepa din beställning ...'\n{print} 'En ' mat\n{if} dricka {is} cola {print} 'och ...' {else} {print} 'En' dricka\n{if} någonting {is} nej {print} 'Det var allt!' {else} {print} 'En ' något\n{print} 'Tack för din beställning och smaklig måltid!'\n```\n"
                start_code: '# place your code here'
            9:
                start_code: '# place your code here'
                story_text: "På den här nivån kan du använda dig av nästlad kod för att göra din restaurang mer realistisk och roligare!\n\n### Övning\nIndragen (mellanslagen) togs bort i exempelkoden. \nKan du räkna ut hur mycket indrag varje rad behöver för att koden ska fungera korrekt?\nOm kunden beställer pizza ska Hedy inte fråga vilken sås kunden vill ha.\n\n**(extra)** En restaurang har inte alla såser i lager. Gör en lista över tillgängliga såser och ge ett svar vid varje beställning om ni säljer den. <br>\n**(extra)** Pizzor har en fyllning. Fråga kunderna vad de vill ha.<br>\n**(extra)** Vill kunderna ha något att dricka? Fråga dem också! <br>                    \n"
                example_code: "```\n{print} 'Välkommen till restaurang Chez Hedy!'\npeople = {ask} 'Hur många personer är det i sällskapet?'\n{print} 'Bra!'\npris = 0\n{repeat} personer {times}\n_ mat = {ask} 'Vad önskas?'\n_ {print} mat\n_ {if} mat {is} pommes frites\n_ pris = pris + 3\n_ sås = {ask} 'Vilken typ av sås vill du ha till dina pommes frites?'\n_ {if} sås {is} nej\n_ {print} 'ingen sås'\n_ {else}\n_ pris = pris + 1\n_ {print} 'med ' sås\n_ {if} mat {is} pizza\n_ pris = pris + 4\n{print} 'Det blir ' pris ' dollar'\n{print} 'Smaklig måltid!'\n```\n"
            10:
                story_text: "På den här nivån lär du dig hur du enkelt tar upp beställningar för olika maträtter.\n\n### Övning 1\nGör klart koden med en `{ask}` där det är tomt så att kunden får en fråga vad de vill äta för varje rätt.\n"
                example_code: "```\nrätter = förrätt, varmrätt, efterrätt\n{for} rätt {in} rätter\n    {print} 'Vad önskas till ' rätt '?'\n    _\n    _\n```\n"
                story_text_2: "### Övning\nNaturligtvis kan du också beställa för flera personer!\nKan du lägga till rätt mängd indrag före varje rad så att koden fungerar korrekt?\nTips: Vissa rader behöver inte ha någon indragning alls.\n"
                example_code_2: "```\ncourses = appetizer, main course, dessert\nnames = Timon, Onno\n{for} name {in} names\n    {for} course {in} courses\n        food = {ask} name ', what would you like to eat as your ' course '?'\n        {print} name ' orders ' food ' as their ' course\n```\n"
                start_code: courses = appetizer, main course, dessert
            1:
                story_text: "På nivå 1 kan du göra din egen virtuella restaurang och ta emot dina gästers beställningar.\n"
                example_code: "```\n{print} Välkommen till Hedys restaurang 🍟\n_ Vad vill du beställa?\n{echo} Så du vill beställa\n{print} Tack för din beställning!\n{print} Den är på väg!\n```\n"
                story_text_2: "### Övning\nKopiera exempelkoden till din inmatningsskärm genom att klicka på den gula knappen.\nFyll först i rätt kommando på de tomma platserna för att koden ska fungera korrekt.\nLägg sedan till minst fyra rader kod till restaurangprogrammet.\nFråga kunden vad han eller hon vill dricka och fråga om han eller hon vill betala med kontanter eller kort.\nFundera till sist ut ett trevligt sätt att säga hejdå till din kund.\n"
                start_code: '# place your code here'
            2:
                story_text: "På nivå 2 kan du utöka din restaurang genom att använda variabler. På nivå 1 kunde Hedy bara `{echo}` beställningen en gång och bara komma ihåg det sista som beställdes.\nNu kan du använda variabler och Hedy kan komma ihåg både maten och påläggen!\n"
                example_code: "```\n{print} Välkommen till Hedys restaurang!\n{print} Idag serverar vi pizza eller lasagne.\nmat {is} {ask} Vad vill du äta?\n{print} Bra val! Det är min älsklingsrätt!\ntopping {is} {ask} Vill du ha kött eller grönsaker till?\n{print} mat med topping är på väg!\n```\n"
                start_code: '# place your code here'
                story_text_2: "#### Övning\nKopiera din egen restaurangkod från föregående nivå till inmatningsskärmen nedan.\nRätta koden genom att byta ut kommandona `{ask}` och `{echo}` och använda variabler, som du har lärt dig på den här nivån.\n\nNu när din kod fungerar igen är det dags att lägga till något mer.\nTitta på den sista raden i exempelkoden: `{print} mat med topping är på väg!`\nPå den raden används två variabler för att skapa en sammanfattning av beställningen.\nLägg nu till din egen sammanfattning av den mat och dryck som kunden beställt.\n\n**Extra** Nu när du har lärt dig hur man använder variabler kan du använda så många variabler i en rad som du vill. Kan du lägga till fler variabler i din kod, till exempel äta på plats eller take away, kontant eller kort, med eller utan sugrör osv.\n"
            3:
                story_text: "Having trouble to decide what you wanna have for dinner? You can let Hedy choose for you!\nSimply add lists of your favorite (or least favorite) meals and Hedy can randomly choose your dinner.\nYou can also have a bit of fun, by letting Hedy choose the price for your dinner as well! What will you get?\n"
                example_code: "```\nrätter {is} spagetti, brysselkål, hamburgare\n{print} Du kommer att få rätter {at} {random} ikväll!\npriser {is} 1 euro, 10 euro, 100 euro\n{print} Det kostar priser {at} {random} tack.\n```\n"
                story_text_2: "### Övning\nGör nu din egen version av den slumpmässiga restaurangen.\nGör själv en lista över förrätter, huvudrätter, efterrätter, drycker och priser.\nAnvänd sedan kommandona `{print}` och `{at} {random}` för att tala om för kunden vad som kommer att finnas menyn ikväll.\n"
                example_code_2: "```\n{print} Välkommen till din egen slumpmässiga restaurang!\nförrätter {is} _\nhuvudrätter {is} _\nefterrätter {is} _\ndrycker {is} _\npriser {is} _\n_\n```\n"
                start_code: '# place your code here'
                story_text_3: "**Extra** Does your costumer have any allergies or do they dislike certain dishes? Then you can use the `{remove}`command to remove it from your menu.\n"
                example_code_3: "```\n{print} Mystery milkshake\nflavors {is} strawberry, chocolate, vanilla\nallergies {is} {ask} Are you allergic to any falvors?\n_\n{print} You get a flavors {at} {random} milkshake\n```\n"
            6:
                story_text: "In this level you can use maths to calculate the total price of your customer's order, which can make your virtual restaurant more realistic.\n"
                example_code: "\nYou can make a simple restaurant code, like this:\n```\n{print} 'Welcome to Hedys restaurant'\n{print} 'Here is our menu:'\n{print} 'Our main courses are pizza, lasagne, or spaghetti'\nmain = {ask} 'Which main course would you like?'\nprice = 0\n{if} main {is} pizza price = 10\n{if} main {is} lasagne price = 12\n{if} main {is} spaghetti price = 8\n{print} 'You have ordered ' main\n{print} 'That will be ' price ' dollars, please'\n{print} 'Thank you, enjoy your meal!'\n```\n"
                story_text_2: "Men du kan också lägga till många fler saker till din virtuella restaurang, till exempel fler rätter.\n\n### Övning\nDu kan lägga till många fler saker till din virtuella restaurang. Kan du till exempel ...\n- fråga hur många som kommer och multiplicera priset med det beloppet?\n- lägga till en ny rätt?\n- ge folk rabatt när de anger en (hemlig) rabattkod?\n- lägga till en barnmeny?\n- tänka ut andra roliga saker att lägga till?\n"
                example_code_2: "\nIn this example there are three courses, which requires more code and more additions in calculating the price.\n```\n{print} 'Welcome to Hedys restaurant'\n{print} 'Here is our menu:'\n{print} 'Our starters are salad, soup, or carpaccio'\n{print} 'Our main courses are pizza, lasagne, or spaghetti'\n{print} 'Our desserts are brownie, icecream, or milkshake'\nstarter = {ask} 'Which starter would you like to have?'\nmain = {ask} 'Which main course would you like?'\ndessert = {ask} 'Which dessert do you pick?'\nprice = 0\n{if} starter {is} soup price = price + 6 {else} price = price + 7\n{if} main {is} pizza price = price + 10\n{if} main {is} lasagne price = price + 12\n{if} main {is} spaghetti price = price + 8\n{if} dessert {is} brownie price = price + 7\n{if} dessert {is} icecream price = price + 5\n{if} dessert {is} milkshake price = price + 4\n{print} 'You have ordered ' starter ' , ' main ' and ' dessert\n{print} 'That will be ' price ' dollars, please'\n{print} 'Thank you, enjoy your meal!'\n```\n"
                start_code: '# place your code here'
            7:
                story_text: "På den här nivån har du lärt dig hur du använder kommandot `{repeat}` för att upprepa en kodrad ett visst antal gånger.\nDu kan använda det i din restaurang för att `{ask}` flera personer vad de vill äta.\n\n### Övning\nKan du komplettera koden? Hedy måste upprepa den här frågan lika många gånger som det finns människor. Så om det finns fem personer måste frågan ställas fem gånger.\n**(extra)** Utöka din kod med fler frågor, till exempel om drycker eller sås.\n"
                example_code: "```\n{print} 'Välkommen till restaurang Chez Hedy'\npeople = {ask} 'Hur många personer är det i sällskapet?'\n```\n"
                start_code: '# place your code here'
            11:
                start_code: '# place your code here'
                story_text: "Vi kan använda `{for}` med `{range}` för att skriva ut beställningar från flera kunder på ett ordnat sätt.\n\n### Övning\nAvsluta restaurangkoden så att du kan ta upp en beställning av flera personer. Skriv ut ordernumret varje gång: 'Order 1', 'Order 2' osv.\nÄr du osäker på hur du ska gå till väga? Ta en titt på din nivå 8-kod.\n\n**(extra)** På nivå 9 använde restaurangen även priser. Det kan du lägga till här också!\n"
                example_code: "```\n{print} 'Välkommen till restaurang Hedy!'\nmänniskor = {ask} 'För hur många personer vill du beställa?'\n{print} 'Du vill alltså beställa för ' människor ' människor.'\n{print} 'Då börjar vi!'\n```\n"
            12:
                story_text: "Från och med den här nivån kan du använda decimaltal för att göra menyn mer realistisk.\n\n### Övning\nKan du komma på en kod för att ge dina vänner och din familj 15% rabatt?\n"
                example_code: "```\nprice = 0\nfood = {ask} 'What would you like to order?'\ndrink = {ask} 'What would you like to drink?'\n{if} food {is} 'hamburger'\n    price = price + 6.50\n{if} food {is} 'pizza'\n    price = price + 5.75\n{if} drink {is} 'water'\n    price = price + 1.20\n{if} drink {is} 'soda'\n    price = price + 2.35\n{print} 'That will be ' price ' dollar, please'\n```\n"
                start_code: '# place your code here'
            8:
                story_text: "In this level you can make your virtual restaurant more elaborate by repeating multiple lines of code. Like this:\n"
                example_code: "```\n{print} 'Welcome to Hedys restaurant!'\npeople = {ask} 'How many people will be joining us today?'\n{print} 'Great!'\n{repeat} people {times}\n    food = {ask} 'What would you like to order?'\n    {print} food\n{print} 'Thank you for ordering!'\n{print} 'Enjoy your meal!'\n```\n"
                story_text_2: "### Övning\nDen här koden kan utökas med fler alternativ på menyn, t.ex. drycker och/eller flera rätter eller efterrätter. Lägg till minst ett ytterligare alternativ.\n**(extra)** Lägg till ännu fler artiklar, så många alternativ du vill!\n"
                start_code: '# place your code here'
            13:
                story_text: "På den här nivån kommer du att lära dig nya kommandon för att utöka din kod ytterligare.\n\n### Övning 1\nPlacera ett `{and}` och ett `{or}` på den logiska platsen i programmet.\n\n### Övning 2\nUtöka din restaurang med minst ett till `{and}` och ett `{or}`.\nSkapa till exempel en speciell rabattkupong som endast gäller pizza, eller ge din kund en gratis dryck\nmed pommes frites och pannkakor. Eller något helt annat förstås!\n"
                example_code: "```\n    {print} 'Detta är vår rabattmeny'\n    pris = pris - 3\n{if} dryck {is} 'vatten' _ dryck {is} 'juice'\n    {print} 'Det är ett hälsosamt val'\n{print} 'Det kostar ' pris ' dollar'\n```\n"
                start_code: '# place your code here'
            15:
                story_text: "With the `{while}` you can make sure your costumers can keep adding orders until they are done.\n"
                example_code: "```\n{print} 'Välkommen till McHedy'\nmer = 'ja'\n{while} mer == 'ja'\n    order = {ask} 'Vad vill du beställa?'\n    {print} order\n    mer = {ask} 'Vill du beställa något mer?'\n{print} 'Tack!'\n```\n"
                start_code: '# place your code here'
        name: Restaurant
        description: Create your own virtual restaurant
        default_save_name: Restaurant
    fortune:
        levels:
            1:
                story_text: "Har du någonsin varit på marknad och fått din framtid förutspådd av en spåkvinna? Eller har du någonsin spelat med en magisk åttaboll?\nDå vet du säkert att de inte riktigt kan förutse din framtid, men det är ändå kul att spela!\n\nPå de kommande nivåerna kan du lära dig hur du skapar din egen spåmaskin!\nPå nivå 1 kan du börja enkelt genom att låta Hedy presentera sig som en spåkvinna och låta henne `{echo}` spelarnas svar.\nSå här:\n"
                example_code: "```\n_ Hej, jag är spåkvinnan Hedy!\n_ Vem är du?\n_ Låt mig ta en titt i min kristallkula.\n_ Jag ser ... Jag ser ...\n_ Ditt namn är\n```\n"
                story_text_2: "### Övning\nKopiera exempelkoden till din inmatningsskärm och fyll i de tomma rutorna så att koden fungerar.\n**Extra** Ändra koden och låt spåkvinnan inte bara förutsäga ditt namn utan även din ålder, ditt favoritsportlag eller något annat om dig själv.\n"
                start_code: '# place your code here'
            3:
                story_text: "På de tidigare nivåerna har du skapat din första spåmaskin, men Hedy kunde inte förutsäga någonting, bara `{echo}`.\nPå den här nivån kan du använda en variabel och kommandot `{at} {random}` för att verkligen låta Hedy välja ett svar åt dig. Titta till exempel på den här koden:\n"
                example_code: "\nIn this example the player can {ask} Hedy a yes-no question and Hedy will pick a random answer for you.\n```\n{print} I’m Hedy the fortune teller!\nquestion {is} {ask} What do you want to know?\n{print} This is what you want to know: question\nanswers {is} yes, no, maybe\n{print} My crystal ball says...\n{sleep} 2\n{print} answers {at} {random}\n```\n"
                story_text_2: "### Övning\nJust nu kan Hedy bara svara ja, nej eller kanske. Kan du ge Hedy fler svarsalternativ, till exempel 'definitivt' eller 'fråga igen'.\n"
                start_code: '# place your code here'
            4:
                start_code: '# place your code here'
                story_text: "Den här nivån har inga nya funktioner, men ger dig chansen att öva på att använda citattecken.\nDu kan göra om din kod från nivå 3 och se till att lägga till citattecken på rätt ställen!\n\nTänk på att vi på nivå 3 inte kunde använda ordet 'fråga' både som namn på variabeln och som ett normalt ord som kan skrivas ut.\nCitattecken på nivå 3 gör detta möjligt!\n\n### Övning\nVi har tagit bort alla citattecken från den här exempelkoden; kan du lägga till dem på alla ställen där det behövs?\n\n### Övning 2\nGå tillbaka till den föregående nivån och kopiera din spådomskod. Få koden att fungera på den här nivån genom att lägga till citattecken på rätt ställen.\n"
                example_code: "```\n_ Lägg till citattecken i denna kod _\n{print} Jag är spåkvinnan Hedy!\nfråga {is} {ask} Vad vill du veta?\n{print} Detta är din fråga: fråga\nsvar {is} ja, nej, kanske\n{print} Min kristallkula säger ...\n{sleep} 2\n{print} svar {at} {random}\n```\n"
            10:
                story_text_2: "### Övning 2\nVi kan också göra en spåmaskin med Harry Potter-tema. Fyll i de tomma rutorna så att nio rader skrivs ut.\n**(extra)** Ändra temat för spåmaskinen till något annat, t.ex. din favoritbok, film eller tv-serie.\n"
                story_text: "På den här nivån lär du dig att programmera spelet MASH (M=herrgård, A=lägenhet, S=stuga, H=hus). I det här spelet kan du förutsäga för alla spelare samtidigt hur deras framtid kommer att se ut.\n\n### Övning 1\nLägg till två namn i listan och se hur programmets utdata förändras när du kör det.\n"
                example_code: "```\nhouses = mansion, apartment, shack, house\nloves = nobody, a royal, their neighbour, their true love\npets = dog, cat, elephant\nnames = Jenna, Ryan, Jim\n{for} name {in} names\n    {print} name ' lives in a ' houses {at} {random}\n    {print} name ' will marry ' loves {at} {random}\n    {print} name ' will get a ' pets {at} {random} ' as their pet.'\n    {sleep}\n```\n"
                example_code_2: "```\nhus = Gryffindor, Slytherin, Hufflepuff, Ravenclaw\nämnen = trolldrycker, försvar mot de mörka konsterna, trollformler, transfigurering\nrädslor = Voldemort, spindlar, att misslyckas med OWL-provet\nnamn = Harry, Ron, Hermione\n_\n_ {print} namn ' är placerad i ' husen {at} {random}\n_ {print} namn ' är bra på ' ämnen {at} {random}\n {print} namn 's största rädsla är ' rädslor {at} {random}\n```\n"
                start_code: '# place your code here'
            5:
                story_text: "In this level you'll learn to (secretly) tip the odds in your favor, when using the fortune teller!\nBy using `{if}` and `{else}` you can make sure that you will always get a good fotune, while other people might not.\nCheck out this example to find out how.\n"
                example_code: "```\n{print} 'Jag är spåkvinnan Hedy!'\n{print} 'Jag kan förutsäga om du vinner på lotteriet imorgon!'\nperson {is} {ask} 'Vem är du?'\n{if} person {is} Hedy {print} 'Du kommer definitivt att vinna!🤩' {else} {print} 'Otur! Någon annan kommer att vinna!😭'\n```\n"
                story_text_2: "### Hacka koden\nErsätt Hedy med ditt eget namn på sista raden, så kommer Hedy alltid att förutsäga att du kommer att vinna på lotteriet och andra inte!\nNaturligtvis kan detta väcka misstankar hos de andra spelarna ... För att undvika det kan du se till att Hedy ger olika svar varje gång du kör koden.\nMen naturligtvis ger hon fortfarande dig ett positivt svar och de andra spelarna ett negativt.\n"
                example_code_2: "```\n{print} 'Jag är spåkvinnan Hedy!'\n{print} 'Jag kan förutspå om du kommer att vinna på lotteriet imorgon!'\nperson {is} {ask} 'Vem är du?'\nbra_svar {is} Hurra! Du vinner!, Du kommer definitivt att vinna!, Vi har en vinnare!\ndåligt_svar {is} Otur! Försök igen!, En annan person kommer att vinna, Du förlorar!\n{if} person {is} Hedy {print} bra_svar {at} {random} {else} {print} dåligt_svar {at} {random}\n```\n"
                story_text_3: "### Övning\nAnvänd detta för att göra ditt eget program; var kreativ! Du kan till exempel skriva kod som förutsäger att:\n* ditt favoritidrottslag kommer att slå alla konkurrenter!\n* din favoritfilm kommer att väljas till filmkvällen!\n* du vinner biljetter till din favoritshow!\n* du är den vackraste av dem alla, som Snövits magiska spegel.\nLåt fantasin jobba!\n\nDitt program måste ha minst 10 rader kod och måste ha minst ett `{if}`- och `{else}`-kommando.\n"
                start_code: '# place your code here'
            6:
                story_text: "På den här nivån kan du använda matematik i dina förutsägelser som spåkvinna. Detta gör att du kan hitta på (fåniga) formler för att beräkna framtiden.\nDu kan till exempel beräkna hur rik du kommer att bli eller hur många barn du kommer att få när du blir vuxen.\n\n\n\n### Övning\nKan du hitta på en egen (fånig) spåmaskin?\n"
                example_code: "```\n{print} 'Jag är spåkvinnan Hedy!'\n{print} 'Jag kan förutsäga hur många barn du kommer att få när du blir stor!'\nålder = {ask} 'Hur gammal är du?'\nsyskon = {ask} 'Hur många syskon har du?'\nlängd = {ask} 'Hur lång är du i centimeter?'\nbarn = längd / ålder\nbarn = barn - syskon\n{print} 'Du kommer att få ...'\n{sleep}\n{print} barn ' barn!'\n```\n\nOm det föregående exemplet inte var dumt nog för dig, ta en titt på det här!\n```\n{print} 'Jag är Hedy, den dumma spåkvinnan!'\n{print} 'Jag kommer att förutsäga hur smart du är!'\nfotboll = {ask} 'På en skala 1-10, hur mycket älskar du fotboll?'\nbananer = {ask} 'Hur många bananer har du ätit den här veckan?'\nhygien = {ask} 'Hur många gånger har du tvättat händerna idag?'\nresultat = bananer + hygien\nresultat = resultat * fotboll\n{print} 'Du är ' resultat ' procent smart.'\n```\n"
                start_code: '# place your code here'
            7:
                story_text: "In this level you can use the `{repeat}` command to make your machine tell multiple fortunes at once.\n"
                example_code: "```\n{print} 'Jag är spåkvinnan Hedy!'\n{print} 'Du kan ställa tre frågor!'\n{repeat} 3 {times} fråga = {ask} 'Vad vill du veta?'\nsvar = ja, nej, kanske\n{repeat} 3 {times} {print} 'Min kristallkula säger ... ' svar {at} {random}\n```\n"
                story_text_2: "### Övning\nExempelprogrammet ställer tre frågor men ... ger inte tre svar.\nGör en lista med svar och skriv ut ett slumpmässigt svar, tre gånger. Tänk på roliga svar själv.\n\nTyvärr kan vi ännu inte visa svaren parvis. På de kommande nivåerna kommer layouten för kommandot `{repeat}` att ändras, vilket löser det problemet.\n"
                start_code: '# place your code here'
            8:
                example_code: "```\n{print} 'Jag är spåkvinnan Hedy!'\n{print} 'Du kan ställa tre frågor till mig.'\nsvar = ja, nej, kanske\n_ _ _\n   fråga = {ask} 'Vad vill du veta?'\n   {print} fråga\n   {sleep}\n   {print} 'Min kristallkula säger ...' svar {at} {random}\n```\n"
                start_code: '# place your code here'
                story_text: "På de tidigare nivåerna har du lärt dig hur du använder `{repeat}` för att få spåkvinnan att svara på tre frågor i rad, men vi hade problem med att skriva ut frågorna.\nNu är det problemet löst tack vare det nya sättet att använda kommandot `{repeat}`.\nI nästa exempel kan du få din spåkvinnan att ställa tre frågor och även skriva ut dem!\n\n### Övning\nKan du fylla i rätt kommando på de tomma platserna?\n"
            12:
                story_text: "Från och med nivå 12 måste du också använda citattecken i listor, före och efter varje punkt.\n\n### Övning\nLägg till två förutsägelser i listan"
                example_code: "```\nfortunes = 'you will be rich', 'you will fall in love', 'you will slip on a banana peel'\n{print} 'I will take a look in my crystall ball for your future.'\n{print} 'I see... I see...'\n{sleep}\n{print} fortunes {at} {random}\n```\n"
                start_code: '# place your code here'
        name: Fortune teller
        description: Let Hedy predict the future
        default_save_name: Fortune Teller
    haunted:
        levels:
            4:
                example_code: "```\n_ Lägg till citattecken till denna kod _\n{print} Fly från spökhuset!\n{print} Det finns tre dörrar framför dig ...\nval {is} {ask} Vilken dörr väljer du?\n{print} Du valde dörr ... val\nmonster {is} en zombie, en vampyr, INGENTING DU KLARADE DIG\n{print} Du ser ...\n{sleep}\n{print} monster {at} {random}\n ```\n"
                start_code: '# place your code here'
                story_text: "På den här nivån lär du dig att använda citattecken i dina spel.\n\n### Övning\nKan du göra ditt spökhus så att det fungerar på nivå 4?\n\n### Övning 2\nGå tillbaka till föregående nivå och kopiera koden för ditt spökhus. Få koden att fungera i den här nivån genom att lägga till citattecken på rätt ställen.\n"
            5:
                start_code: '# place your code here'
                story_text: "Fram till den här nivån har Spökhusspelet alltid bett spelaren att välja en dörr, men som du kanske har märkt behöver spelaren inte svara rätt.\nOm spelaren fyllde i ett helt slumpmässigt svar fungerade spelet fortfarande och spelaren kunde till och med vinna (trots att hen inte valde en dörr).\nI den här nivån kan du bara vinna spelet genom att välja samma dörr som Hedy valde slumpmässigt.\n\n### Övning\nKan du hitta de fyra ord som saknas för att göra koden färdig?\n"
                example_code: "```\n{print} 'Fly från spökhuset!'\n{print} 'Det finns tre dörrar framför dig ...'\ndörrar {is} 1, 2, 3\nmonster {is} varulv, mumie, vampyr, zombie\nvald_dörr {is} {ask} 'Vilken dörr väljer du?'\n{print} 'Du valde dörr ...' vald_dörr\n{sleep}\nkorrekt_dörr {is} dörrar {at} {random}\n_ _ _ _ {print} 'Bra! Du har rymt!'\n{else} {print} 'Åh nej! Du blir uppäten av en ...' monster {at} {random}\n```\n"
            16:
                start_code: '# place your code here'
                story_text: "This haunted house game uses the connection between the lists you can use in this level.\nFor example: all the properties that belong to the zombie are first in all the lists, witch second and vampire third.\nCheck out the code!\n"
                example_code: "```\nnumbers = [1, 2, 3]\ni = numbers[{random}]\nhint = ['growling', 'a cackling laugh', 'fluttering batwings']\nmonsters = ['zombie', 'witch', 'vampire']\nbad_fate = ['Your brain is eaten', 'You are forever cursed', 'You are bitten']\ngood_fate = ['You throw the ham. The zombie is distracted and starts eating it.', 'You set the curtains on fire. The witch flees out of fear for the fire', 'The vampire hates garlic and flees']\nweapons = ['ham', 'lighter', 'garlic']\n{print} 'You are standing in front of an old mansion'\n{print} 'Something is not right here'\n{print} 'You hear ' hint[i]\n{print} 'You are going to explore it'\n{print} 'You enter the kitchen and see a lighter, a raw ham and a garlic.'\nyour_weapon = {ask} 'What do you bring with you?'\n{print} 'With your ' your_weapon ' you enter the living room'\n{print} 'There you find a ' monsters[i]\nneeded_weapon = weapons[i]\n{if} your_weapon == needed_weapon\n    {print} 'You use your ' your_weapon\n    {print} good_fate[i]\n    {print} 'YOU WIN!'\n{else}\n    {print} 'You have chosen the wrong weapon...'\n    {print} bad_fate[i]\n    {print} 'GAME OVER'\n```\n"
            2:
                start_code: monster1 {is} _
                story_text: "In this haunted house you can choose your monsters with emojis. Of course you could also use words.\n"
                example_code: "```\nmonster_1 {is} 👻\nmonster_2 {is} 🤡\nmonster_3 {is} 👶\n{print} You enter the haunted house.\n{print} Suddenly you see a monster_1\n{print} You run into the other room, but a monster_2 is waiting there for you!\n{print} Oh no! Quickly get to the kitchen.\n{print} But as you enter monster_3 attacks you!\n```\n"
                story_text_2: "### Exercise\nIn the example above the monsters are predetermined. So each time you run your code, the output is the same.\nCan you add `{ask}` commands to make the haunted house interactive and have the players choose the monsters they come across?\n"
                example_code_2: "```\nmonster_1 {is} _\nmonster_2 {is} _\nmonster_3 {is} _\n{print} You enter the haunted house.\n{print} Suddenly you see a monster_1\n{print} You run into the other room, but a monster_2 is waiting there for you!\n{print} Oh no! Quickly get to the kitchen.\n{print} But as you enter monster_3 attacks you!\n```\n"
            3:
                story_text: "In the previous levels you've made an introduction to your haunted house game, but as you might have noticed the story would always have a dreadful end.\nIn this level you can make your story more interactive by changing the outcome of the game; sometimes you'll get eaten, sometimes you'll escape!\nLet Hedy decide randomly!\n"
                story_text_2: "### Övning\nKopiera exempelkoderna och fyll i de tomma rutorna för att få det att fungera!\n\n**Extra** Den här berättelsen är ganska enkel, men du kanske kan göra den lite mer spännande genom att lägga till en mer spännande berättelse.\nDessutom har du mycket begränsade resultat just nu; det finns bara tre alternativ för vad som finns bakom dörrarna. Kanske kan du komma på fler monster att lägga till på listan!\n"
                start_code: '# place your code here'
                example_code_3: "```\n{print} The big gameshow!\n{print} There are 3 suitcases in front of you...\n{print} One of them contains _\n_\n```\n"
                story_text_3: "### Övning\nTill sist vill vi utmana dig att ändra det här spelet till ett spelprogram (som de som visas på tv) där man väljer en dörr eller en resväska som innehåller ett stort pris!\nKan du göra det? Vi har redan lagt in de första raderna i exempelkoden.\n"
                example_code_2: "```\n_ Escape from the haunted house!\n_ There are 3 doors in front of you...\n_ _ _ Which door do you choose?\n_ You picked door ... choice\nmonsters _ a zombie, a vampire, NOTHING YOUVE ESCAPED\n_ You see...\n{sleep}\n_ _ _ _\n```\n"
            1:
                story_text: "I det här äventyret jobbar du med att skapa ett spel där du måste fly från ett hemsökt hus genom att välja rätt dörr.\nOm du väljer rätt dörr kommer du att överleva, men om du inte gör det kan ett hemskt monster...\n \nPå nivå 1 börjar vi vårt spökhusspel med att hitta på en skrämmande historia och frågar spelaren vilket monster de kommer att se i spökhuset.\n"
                example_code: "```\n{print} How did I get here?\n{print} I remember my friend telling me to go into the old mansion...\n{print} and suddenly everything went black.\n{print} But how did I end up on the floor...?\n{print} My head hurts like Ive been hit by a baseball bat!\n{print} What's that sound?\n{print} Oh no! I feel like Im not alone in this house!\n{print} I need to get out of here!\n{print} There are 3 doors in front of me..\n{ask} Which door should i pick?\n{echo} I choose door\n{print} ...?\n```\n"
                story_text_2: "### Övning\nKopiera exempelkoden till din inmatningsskärm genom att klicka på den gula knappen.\nAvsluta nu berättelsen genom att lägga till minst fem rader kod.\nKom ihåg att börja varje kodrad med ett `{print}`-kommando.\n"
                start_code: '{print} How did I get here?'
            9:
                story_text: "På den här nivån kan du använda dig av nästlade satser, vilket gör spökhuset ännu mer interaktivt!\n\n### Övning\nNu är det väldigt svårt att vinna det här spelet; kan du göra det lättare att vinna?\nÄndra din kod så att den bara har en felaktig dörr och två korrekta dörrar istället för en korrekt dörr och två felaktiga? \nTips: Detta innebär att du ändrar variabeln korrekt_dörr till fel_dörr och byter ut koden `{if}` och `{else}`.\nOch naturligtvis kan du också ändra berättelsen och göra den mer personlig. Ändra monstren eller gör det till en glad spelshow där du får en gåva!\n"
                example_code: "```\n{print} 'Escape from the Haunted House!'\nplayer = alive\ndoors = 1, 2, 3\nmonsters = zombie, vampire, giant spider\n{repeat} 3 {times}\n    {if} player {is} alive\n        correct_door {is} doors {at} {random}\n        {print} 'There are 3 doors in front of you...'\n        chosen_door = {ask} 'Which door do you choose?'\n        {if} chosen_door {is} correct_door\n            {print} 'No monsters here!'\n        {else}\n            {print} 'You are eaten by a ' monsters {at} {random}\n            player = dead\n    {else}\n        {print} 'GAME OVER'\n{if} player {is} alive\n    {print} 'Great! You survived!'\n```\n"
                start_code: "{print} 'Escape from the haunted house!'"
            11:
                story_text: "På den här nivån har vi ändrat kommandot `{for}` så att vi kan berätta för spelaren var de befinner sig. \n\n### Övning 1\nAvsluta programmet så att spelaren vet vilket rum de befinner sig i.\n\n### Övning 2\nGör programmet till ett äventyr genom att följa dessa steg:\n\n1. Gör en lista med valmöjligheter (till exempel: slåss eller fly).\n2. Se till att spelaren kan välja ett alternativ med `{ask}`\n3. Är svaret rätt? Då får de gå vidare till nästa monster. Ger de fel svar? Låt spelaren veta det med en `{print}`. \n\n**(extra)** Om du gör ett felaktigt val visas ändå ett monster! Hur kan man ändra på det?\n"
                start_code: "{print} 'Escape from the haunted house!'"
                example_code: "```\n{print} \"Escape from the Haunted House!\"\nmonster = zombie, vampyr, jättespindel\n_\n    {print} 'Rum' i\n    vilket_monster = monster {at} {random}\n```\n"
            14:
                story_text: "In this level you can use the `<` and `>` symbol to introduce lives to your game.\n"
                example_code: "```\n{print} 'Escape from the haunted house'\nlives = 3\ndoors = 1, 2, 3\nmonsters = 'the wicked witch', 'a zombie', 'a sleeping 3 headed dog'\n{for} i {in} {range} 1 {to} 10\n    {if} lives > 0\n        good_door = doors {at} {random}\n        monster = monsters {at} {random}\n        chosen_door = {ask} 'Which door do you choose?'\n        {if} good_door == chosen_door\n            {print} 'You have chosen the correct door'\n        {else}\n            {print} 'You see...' monster\n            {if} monster == 'a sleeping 3 headed dog'\n                {print} 'Pffieuw.... Its asleep'\n            {else}\n                {print} 'You lose one life'\n                lives = lives -1\n    {else}\n        {print} 'GAME OVER'\n```\n"
                start_code: '# place your code here'
        name: Haunted House
        description: Escape from the haunted house
        default_save_name: Haunted House
    piggybank:
        name: Piggy Bank
        description: Count your pocketmoney!
        default_save_name: Piggy Bank
        levels:
            12:
                story_text: "I det här äventyret får du lära dig att göra en digital spargris.\n\n### Övning\nGör klart koden för att beräkna hur mycket pengar du har och hur lång tid du behöver spara för att köpa det du vill ha!\n**(extra)** Kanske har du redan sparat lite pengar? Dra av det från det belopp som du kommer att behöva spara ihop.\n"
                example_code: "```\n{print} 'Den digitala spargrisen'\nönskan = {ask} 'Vad skulle du vilja köpa?'\npris = {ask} 'Vad kostar det?'\nsparat = {ask} 'Hur mycket pengar har du redan sparat?'\nfickpeng = {ask} 'Hur mycket fickpengar får du per vecka?'\natt_spara = pris - sparat\nveckor = att_spara / fickpeng\n{print} 'Du kan köpa en ' _ ' om ' _ ' veckor.'\n```\n"
                start_code: '# place your code here'
            14:
                story_text: "På den här nivån kan du låta Hedy berätta för dig om du har sparat tillräckligt med pengar!\n"
                example_code: "```\nmoney = {ask} 'How much money have you saved?'\nwish = {ask} 'How much money do you need?'\nallowance = {ask} 'How much pocket money do you get each week?'\nto_save = wish - money\nweeks = to_save / allowance\n{if} wish > money\n    {print} 'You need to save up some more!'\n    {print} 'Youll need ' weeks ' more weeks.'\n{else}\n    {print} 'Great! You have enough'\n    {print} 'Lets go shopping!'\n```\n"
                start_code: '# place your code here'
    language:
        levels:
            16:
                example_code: "```\nfrench_words = ['bonjour', 'ordinateur', 'pomme de terre']\ntranslation = ['hello', 'computer', 'potato']\nscore = 0\n{for} i {in} {range} 1 {to} 3\n    answer = {ask} 'What does ' french_words[i] ' mean?'\n    correct = translation[i]\n    {if} answer == correct\n        {print} 'Correct!'\n        score = score + 1\n    {else}\n        {print} 'Wrong, ' french_words[i] ' means ' translation[i]\n{print} 'You gave ' score ' correct answers.'\n```\n"
                start_code: '# place your code here'
                story_text: "Make your own program to practice your vocabulary in a new language.\n"
            5:
                story_text: "Gör ditt eget program för att öva glosor på ett nytt språk.\n\n### Övning\nGör koden längre genom att lägga till minst tre ytterligare glosor som spelaren ska lära sig.\n**Extra** Du kan naturligtvis välja att använda ett annat språk än franska. Du kan ändra koden till vilket språk som helst som du vill lära dig.\n"
                example_code: "```\n{print} 'Learn French!'\ncat {is} {ask} '🐱'\n{if} cat {is} chat {print} 'Terrific!'\n{else} {print} 'No, cat is chat'\nfrog {is} {ask} '🐸'\n{if} frog {is} grenouille {print} 'Super!'\n{else} {print} 'No, frog is grenouille'\n```\n"
                start_code: '# place your code here'
        name: Language
        description: Practice words in a foreign language
        default_save_name: Language
    secret:
        name: SuperSpy
        description: Make your own spy code
        levels:
            12:
                start_code: '# place your code here'
                story_text: "I det här äventyret kan du skapa din egen superspionkod. Koda ett meddelande som bara rätt agent kan avkoda.\nOm fienden försöker knäcka koden kommer de att få falsk information för att slösa på deras tid.\n\n### Övning 1\nGör din egen hemliga kod för din superspion och lämna tillbaka båda delarna bara till den rätta spionen.\n\n### Övning 2\nLägg till en tredje komponent till koden, till exempel ett klädesplagg eller ett föremål.\n"
                example_code: "```\nnamn {is} {ask} 'Vad heter du?'\nom namn {is} '_'\n    a {is} 'Åk till flygplatsen'\n{else}\n    a {is} 'Åk till tågstationen'\nlösenord {is} {ask} 'Vad är lösenordet?'\n{if} lösenord {is} _\n    b {is} 'imorgon kl. 02.00'\n{else}\n    b {is} 'idag kl. 10.00'\n{print} _ _ _\n```\n"
            13:
                story_text: "Vi kan förenkla superspionkoden med `{and}`, så att vi bara behöver en `{if}`.\n\n### Övning 1\nKomplettera koden genom att fylla i det rätta kommandot på den tomma platsen. Tips: Superspionen måste besvara BÅDA frågorna korrekt innan hen får den hemliga informationen!\n\n### Övning 2\nVi vill förvirra fienden ännu mer! Skapa en lista med falska svar och välj ett slumpmässigt när ett felaktigt svar ges.\n"
                example_code: "```\nname {is} {ask} 'Vad heter du?'\nlösenord {is} {ask} 'Vad är ditt lösenord?'\n{if} namn {is} 'Agent007' _ lösenord {is} 'TOPSECRET'\n    {print} 'Åk till flygplatsen kl. 02.00'\n{else}\n    {print} 'Åk till tågstationen kl. 10.00'.\n ```\n"
                start_code: '# place your code here'
        default_save_name: SuperSpy
    blackjack:
        levels:
            17:
                story_text: "Blackjack is a simple game of cards in which you have to get as close to 21 points as possible. You get two cards. Each card is worth their numeral value, and the face cards (Jack, Queen and King) are worth 10 points.\nThe Ace is worth either 1 or 11 points (you can choose). The dealer, your opponent, also gets two cards.\nIf you want, you can get another card, and its points will be added to your total. The dealer can also choose to take another card.\nBut be careful not to get more than 21 points, because if you do, you lose!\nThe player who gets closest to 21, without going over it, wins!\n\nHave fun!\n"
                example_code: "```\n{print} 'BLACKJACK'\nkort = [2, 3, 4, 5, 6, 7, 8, 9, 10, 'knekt', 'dam', 'kung', 'ess']\npoäng = 0\ngivens_poäng = 0\nkort_1 = kort[{random}]\nkort_2 = kort[{random}]\nkort_3 = kort [{random}]\ngivens_kort_1 = kort[{random}]\ngivens_kort_2 = kort[{random}]\ngivens_kort_3 = kort[{random}]\n# Poäng för kort 1\n{if} kort_1 == 'knekt' {or} kort_1 == 'dam' {or} kort_1 == 'kung':\n    poäng = poäng + 10\n{elif} kort_1 == 'ess':\n    poäng = poäng + 11\n{else}:\n    poäng = poäng + kort_1\n# Poäng för kort 2\n{if} kort_2 == 'knekt' {or} kort_2 == 'dam' {or} kort_2 == 'kung':\n    poäng = poäng + 10\n{elif} kort_2 == 'ess':\n    poäng = poäng + 11\n{else}:\n    poäng = poäng + kort_2\n# Poäng för givens_kort 1\n{if} givens_kort_1 == 'knekt' {or} givens_kort_1 == 'dam' {or} givens_kort_1 == 'kung':\n    givens_poäng = givens_poäng + 10\n{elif} givens_kort_1 == 'ess':\n    givens_poäng = givens_poäng + 11\n{else}:\n    givens_poäng = givens_poäng + givens_kort_1\n# Poäng för givens_kort 2\n{if} givens_kort_2 == 'knekt' {or} givens_kort_2 == 'dam' {or} givens_kort_2 == 'kung':\n    givens_poäng = givens_poäng + 10\n{elif} givens_kort_2 == 'ess':\n    givens_poäng = givens_poäng + 11\n{else}:\n    givens_poäng = givens_poäng + givens_kort_2\n# Två ess\n{if} kort_1 == 'ess' {and} kort_2 == 'ess':\n    poäng = 12\n{if} givens_kort_1 == 'ess' {and} givens_kort_2 == 'ess':\n    givens_poäng = 12\n# Resultattavla\n{print} 'Du har en ' kort_1 ' och en ' kort_2 ' (' poäng ' poäng)'\n{print} 'Given har en ' givens_kort_1 ' och en ' givens_kort_2 ' (' givens_poäng ' poäng)'\n# Extra kort för spelaren\nhit = {ask} 'Vill du ha ett extra kort?'\n{if} hit == 'ja':\n    {if} kort_3 == 'knekt' {or} kort_3 == 'dam' {or} kort_3 == 'kung':\n        poäng = poäng + 10\n    {elif} kort_3 == 'ess':\n        {if} poäng > 11:\n            poäng = poäng + 11\n        {else}:\n            poäng = poäng + 1\n    {else}:\n        poäng = poäng + kort_3\n    {print} 'Du får ett extra ' kort_3 ' (' poäng ' poäng)'\n{else}:\n    {print} 'Inga extra kort'\n# Vinnare\n{if} poäng > 21 {or} givens_poäng > poäng {or} givens_poäng == 21:\n    {print} 'Du förlorar'\n{elif} givens_poäng < 17:\n    {print} 'Given tar ett extra kort. Det är ... ' givens_kort_3\n    {if} givens_kort_3 == 'knekt' {or} givens_kort_3 == 'dam' {or} givens_kort_3 == 'kung':\n        givens_poäng = givens_poäng + 10\n    {elif} givens_kort_3 == 'ess':\n        {if} givens_poäng < 11:\n            givens_poäng = givens_poäng + 11\n        {else}:\n            givens_poäng = givens_poäng + 1\n    {else}:\n        givens_poäng = givens_poäng + givens_kort_3\n    {print} 'Given har ' givens_poäng ' poäng nu'\n    {if} givens_poäng < 21 {and} givens_poäng > poäng:\n        {print} 'Du förlorar'\n    {else}:\n        {print} 'Du vinner'\n{elif} poäng > givens_poäng {and} poäng < 21:\n    {print} 'Du vinner!'\n```\n"
                start_code: '# place your code here'
        name: Blackjack
        description: Try to get as close to 21 as you can
        default_save_name: Blackjack
    tic:
        name: Tic Tac Toe
        description: Play a game of Tic Tac Toe!
        default_save_name: Tic
        levels:
            13:
                story_text: "I detta äventyr kan du programmera en omgång tripp-trapp-trull. Du kan spela med två personer. I tur och ordning väljer du ett nummer på den plats (1 - 9) du vill sätta ditt tecken (x eller o) på.\nDen första spelaren som får tre i rad (horisontellt, vertikalt eller diagonalt) vinner!\n\n### Övning 1\nSpelet fungerar, men det har några problem. Till exempel kan alla spelare välja vilket fält som helst, även ett som redan tagits! Använd en `{if}` om platsen är tagen, och i så fall varna spelaren.\n\n### Övning 2\nSpelet avgör inte heller vem som har vunnit. Du måste lägga till detta genom att kontrollera om tre rutor på rad har samma symbol.\n\n### Övning 3 (extra)\nMan har inte alltid en kompis att spela med. Kan du skapa en datormotståndare?\n"
                example_code: "```\nspelare = 'x'\nruta = '.', '.', '.', '.', '.', '.', '.', '.', '.'\n\n{for} i {in} {range} 1 {to} 9\n    val = {ask} 'Spelare ' spelare ', vilken plats väljer du?'\n    ruta {at} val = spelare\n    {clear}\n    print ruta {at} 1 ruta {at} 2 ruta {at} 3\n    print ruta {at} 4 ruta {at} 5 ruta {at} 6\n    print ruta {at} 7 ruta {at} 8 ruta {at} 9\n    {if} spelare = 'x'\n        spelare = 'o'\n    {else}\n        spelare = 'x'\n```\n"
                start_code: '# place your code here'
            14:
                story_text: "In the previous levels you've made a tic tac toe game. Now you've learned how to use the = sign, the == sign and the != sign.\nYou can use this knowledge in your new Tic Tac Toe game, like this:\n"
                start_code: '# place your code here'
                example_code: "```\nsign = 'x'\nopen_spots = 1, 2, 3, 4, 5, 6, 7, 8, 9\ngame = 'on'\nspot_1 = '.'\nspot_2 = '.'\nspot_3 = '.'\nspot_4 = '.'\nspot_5 = '.'\nspot_6 = '.'\nspot_7 = '.'\nspot_8 = '.'\nspot_9 = '.'\n{print} 'TIC TAC TOE!'\n{print} spot_1 spot_2 spot_3\n{print} spot_4 spot_5 spot_6\n{print} spot_7 spot_8 spot_9\n{print} ' '\n{for} i {in} {range} 1 {to} 9\n    {if} game != 'over'\n        choice = {ask} 'Player ' sign ', which spot?'\n        {if} choice {in} open_spots\n            {remove} choice {from} open_spots\n            {if} choice == 1\n                spot_1 = sign\n            {if} choice == 2\n                spot_2 = sign\n            {if} choice == 3\n                spot_3 = sign\n            {if} choice == 4\n                spot_4 = sign\n            {if} choice == 5\n                spot_5 = sign\n            {if} choice == 6\n                spot_6 = sign\n            {if} choice == 7\n                spot_7 = sign\n            {if} choice == 8\n                spot_8 = sign\n            {if} choice == 9\n                spot_9 = sign\n        {else}\n            {print} 'That spot was already taken'\n        {print} spot_1 spot_2 spot_3\n        {print} spot_4 spot_5 spot_6\n        {print} spot_7 spot_8 spot_9\n        {print} ' '\n        winner = {ask} 'Did you win?'\n        {if} winner == 'yes'\n            {print} 'Good job, player ' sign '!'\n            game = 'over'\n        {else}\n            {if} sign == 'x'\n                sign = 'o'\n            {else}\n                sign = 'x'\n```\n"
            15:
                start_code: '# place your code here'
                story_text: "På den här nivån kan du förbättra ditt tripp-trapp-trull-spel med {while}-loopen. Med den loopen kan du kombinera `{if} game != 'over'` och `{for} i {in} {range} 1 {to} 9` till bara en kodrad.\nKolla själv:\n"
                example_code: "```\nsign = 'x'\nopen_spots = 1, 2, 3, 4, 5, 6, 7, 8, 9\ngame = 'on'\nspot_1 = '.'\nspot_2 = '.'\nspot_3 = '.'\nspot_4 = '.'\nspot_5 = '.'\nspot_6 = '.'\nspot_7 = '.'\nspot_8 = '.'\nspot_9 = '.'\n{print} 'TIC TAC TOE!'\n{print} spot_1 spot_2 spot_3\n{print} spot_4 spot_5 spot_6\n{print} spot_7 spot_8 spot_9\n{print} ' '\n{while} game != 'over'\n    choice = {ask} 'Player ' sign ', which spot?'\n    {if} choice {in} open_spots\n        {remove} choice {from} open_spots\n        {if} choice == 1\n            spot_1 = sign\n        {if} choice == 2\n            spot_2 = sign\n        {if} choice == 3\n            spot_3 = sign\n        {if} choice == 4\n            spot_4 = sign\n        {if} choice == 5\n            spot_5 = sign\n        {if} choice == 6\n            spot_6 = sign\n        {if} choice == 7\n            spot_7 = sign\n        {if} choice == 8\n            spot_8 = sign\n        {if} choice == 9\n            spot_9 = sign\n    {else}\n        {print} 'That spot was already taken'\n    {print} spot_1 spot_2 spot_3\n    {print} spot_4 spot_5 spot_6\n    {print} spot_7 spot_8 spot_9\n    {print} ' '\n    winner = {ask} 'Did you win?'\n    {if} winner == 'yes'\n        {print} 'Good job, player ' sign '!'\n        game = 'over'\n    {else}\n        {if} sign == 'x'\n            sign = 'o'\n        {else}\n            sign = 'x'\n```\n"
            17:
                start_code: '# place your code here'
                story_text: "På de tidigare nivåerna hade tripp-trapp-trull-spelet en irriterande funktion. Efter varje drag var man tvungen att själv fylla i om man hade vunnit eller inte.\nDetta gjorde spelet spelbart, men också ganska långsamt. På den här nivån har vi lärt oss kommandot `{elif}`, som kan lösa det problemet.\nAtt använda `{elif}` för att låta Hedy kontrollera om en spelare har vunnit eller inte är kul, men det kräver också en hel del extra rader.\n\nI exempelkoden ser du att vi lagt till kraven för att vinna (tre rutor på rad horisontellt, vertikalt eller diagonalt).\nDu hittar dem på rad 46 till 69. Du kan se att varje gång kravet är uppfyllt (alltså om en spelare har vunnit) sätts variabeln spel till 'over'.\nDetta innebär att `{while}`-slingan stoppas och att spelet avslutas.\n"
                example_code: "```\nsign = 'x'\nopen_spots = [1, 2, 3, 4, 5, 6, 7, 8, 9]\ngame = 'on'\nspot_1 = '.'\nspot_2 = '.'\nspot_3 = '.'\nspot_4 = '.'\nspot_5 = '.'\nspot_6 = '.'\nspot_7 = '.'\nspot_8 = '.'\nspot_9 = '.'\n{print} 'TIC TAC TOE!'\n{print} spot_1 spot_2 spot_3\n{print} spot_4 spot_5 spot_6\n{print} spot_7 spot_8 spot_9\n{print} ' '\n{while} game != 'over':\n    choice = {ask} 'Player ' sign ', which spot?'\n    {if} choice {in} open_spots:\n        {remove} choice {from} open_spots\n        {if} choice == 1:\n            spot_1 = sign\n        {if} choice == 2:\n            spot_2 = sign\n        {if} choice == 3:\n            spot_3 = sign\n        {if} choice == 4:\n            spot_4 = sign\n        {if} choice == 5:\n            spot_5 = sign\n        {if} choice == 6:\n            spot_6 = sign\n        {if} choice == 7:\n            spot_7 = sign\n        {if} choice == 8:\n            spot_8 = sign\n        {if} choice == 9:\n            spot_9 = sign\n    {else}:\n        {print} 'That spot was already taken'\n    {print} spot_1 spot_2 spot_3\n    {print} spot_4 spot_5 spot_6\n    {print} spot_7 spot_8 spot_9\n    {print} ' '\n    {if} spot_1 == spot_2 {and} spot_2 == spot_3 {and} spot_1 != '.':\n        {print} 'Player ' sign ' wins!'\n        game = 'over'\n    {elif} spot_4 == spot_5 {and} spot_5 == spot_6 {and} spot_4 != '.':\n        {print} 'Player ' sign ' wins!'\n        game = 'over'\n    {elif} spot_7 == spot_8 {and} spot_8 == spot_9 {and} spot_7 != '.':\n        {print} 'Player ' sign ' wins!'\n        game = 'over'\n    {elif} spot_1 == spot_4 {and} spot_4 == spot_7 {and} spot_1 != '.':\n        {print} 'Player ' sign ' wins!'\n        game = 'over'\n    {elif} spot_2 == spot_5 {and} spot_5 == spot_8 {and} spot_2 != '.':\n        {print} 'Player ' sign ' wins!'\n        game = 'over'\n    {elif} spot_3 == spot_6 {and} spot_6 == spot_9 {and} spot_3 != '.':\n        {print} 'Player ' sign ' wins!'\n        game = 'over'\n    {elif} spot_1 == spot_5 {and} spot_5 == spot_9 {and} spot_1 != '.':\n        {print} 'Player ' sign ' wins!'\n        game = 'over'\n    {elif} spot_3 == spot_5 {and} spot_5 == spot_7 {and} spot_3 != '.':\n        {print} 'Player ' sign ' wins!'\n        game = 'over'\n    {else}:\n        {if} sign == 'x':\n            sign = 'o'\n        {else}:\n            sign = 'x'\n```\n"
    quizmaster:
        name: Quizmaster
        description: Make your own quiz!
        default_save_name: Quizmaster
        levels:
            14:
                story_text: "In this adventure you can make your own quiz! Fill in the blanks, add more questions and enjoy your own quiz!\nYou can make a quiz about anything you like: your hobby, your favorite animal, your favorite book or anything at all!\n"
                example_code: "```\n{print} 'Make your own quiz'\npoints_a = 0\npoints_b = 0\n{print} 'Question'\n{print} 'Answer option A'\n{print} 'Answer option B'\nanswer = {ask} 'Which answer?'\n{if} answer == 'A'\n    points_a = points_a + 1\n{if} answer == 'B'\n    points_b = points_b + 1\n{print} 'End of the quiz!'\n{print} 'Lets see the results!'\n{if} points_a > points_b\n    {print} 'You belong to the A club'\n{if} points_b > points_a\n    {print} 'You belong to the B club'\n```\n"
                start_code: '# place your code here'
    years:
        levels:
            11:
                start_code: '# placera din kod här'
                story_text: "På den här nivån kan du använda kommandot `{for}` number `{in}` `{range}` för att räkna ner till det nya året.\n\n### Övning\nFyll i luckorna och få koden att fungera!\n"
                example_code: "```\n{for} tal {in} {range} _ {to} _\n    {print} tal\n{print} 'Gott nytt år!'\n```\n"
        name: Nyårsdagen
        description: Nedräkning till det nya året!
        default_save_name: Nedräkning till nyår
    pressit:
        levels:
            5:
                story_text_2: "You can also link turtle commands to keys.\n\n### Exercise\nCopy the lines a few times so you can create a larger drawing.\n"
                story_text: "In this level there is another new keyword: `{pressed}`!\nWith `{pressed}` you can use keys on your keyboard to control what lines are used.\n\n### Exercise\nLook at the example and add one more line of code that reacts to a key press.\n"
                start_code: '# place your code here'
                example_code: "```\n{print} 'Do you want a good (g) or bad (b) ending?'\n{if} g {is} {pressed} {print} 'They lived happily ever after ❤'\n{else} {print} 'The prince was eaten by a hippopotamus 😭'\n```\n"
                example_code_2: "```\n{if} y {is} {pressed} {forward} 15\n{else} {turn} 90\n```\n"
            7:
                story_text: "Now that you have learned about `{repeat}`, we can press keys multiple times.\nYou can use it to make the turtle walk forward and turn.\n\n### Exercise\nThe code you have seen in level 5 only checks the key once. Copy the example code and add a `{repeat}` to it, so that you can press the keys many times.\nUse this code to draw something nice.\n"
                example_code: "```\n{if} x {is} {pressed} {forward} 15 {else} {turn} 90\n```\n"
                start_code: '# place your code here'
            9:
                story_text: "Now that you know how to combine statements, you can create a touch type tool with `{pressed}`.\n\n### Exercise\nFinish the code. Each time a random letter should be chosen, which you have to press. You get a point for a correct press, and and two points deduction for a wrong press.\n**(extra)** Clear the screen after each letter, and show the user how many points they have scored.\n"
                example_code: "```\npoints = 0\nletters = a, b, c, d, e\n{repeat} 10 {times}\n    letter = _ _ _\n    {print} 'Press the letter ' letter\n    {if} letter {is} {pressed}\n    _\n    _\n    _\n```\n"
                start_code: '# place your code here'
        description: Try linking a keyboard key to a command!
        default_save_name: Pressed
        name: Key presses
