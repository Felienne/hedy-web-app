adventures:
    default:
        levels:
            1:
                start_code: '{print} hej världen!'
                story_text: "Välkommen till Hedy! På nivå 1 kan du börja med att skriva ut en berättelse.\n\nProva koden själv med den gröna 'Kör kod'-knappen under programmeringsfältet.\n\nÄr du klar? Gå då till nästa flik och lär dig ditt första kommando!\n"
            2:
                example_code: "```\n{print} Välkommen till Hedys\n{ask} Vad önskas att äta?\n{echo} Så du vill ha\n{ask} Vad vill du dricka till?\n{echo} Så du vill ha\n```\n"
                story_text_2: "Om spelaren skriver en hamburgare och cola kan du inte säga \"så du vill ha en hamburgare och cola\", utan du måste göra två separata rader.\nDessutom  upprepar `{echo}`-kommandot bara ordet i slutet av meningen. Så du kan inte säga \"din hamburgare är på väg!\".\n\nDet ändras på nivå 2. På nivå 2 lär du dig att arbeta med variabler, som låter dig spara flera olika informationer och skriva ut dem var du vill.\nSå fortsätt nu till nästa flik!\n"
                story_text: "Grattis! Du har nått nivå 2. Förhoppningsvis har du redan gjort lite fantastisk kod!\nPå den första nivån kanske du märkte att kommandot `{echo}` bara kan spara en information åt gången.\nTill exempel: i restaurangäventyret kunde man upprepa vad kunden ville äta, eller vad de ville dricka, men inte båda i en mening.\n"
                start_code: '{print} hej världen!'
            3:
                story_text: "På den föregående nivån har du lärt dig vad en variabel är och hur du kan använda den för att göra dina äventyr mer interaktiva.\nMen ... det är inte det enda du kan göra med variabler! Du kan också använda variabler för att skapa listor.\nOch du kan till och med låta Hedy välja ett slumpmässigt ord från en lista, vilket låter dig göra riktiga spel!\nTa en snabb titt på nästa flik!\n"
                start_code: '{print} hej världen!'
            4:
                story_text: "På de tidigare nivåerna har du övat på att använda variabler, men du kanske har stött på ett problem.\nDu kanske har försökt att köra en kod som denna:\n\nNaturligtvis ville du skriva ut\n\n`My name is Sophie`\n\nmen Hedy skriver\n\n`My Sophie is Sophie`.\n\nPå den här nivån löser vi problemet genom att använda citattecken.\n"
                example_code: "```\nnamn {is} Sophie\n{print} Jag heter namn\n```\n"
                start_code: "{print} 'Hej världen'"
            5:
                start_code: "namn {is} {ask} 'Vad heter du?'\n{if} namn {is} Hedy {print} 'cool!' {else} {print} 'meh'"
                story_text: "På de tidigare nivåerna har du redan lärt dig att använda `{at} {random}` som gjorde dina spel annorlunda varje gång du körde koden.\nMen det är inte riktigt interaktivt för spelaren har inget inflytande på vad som händer i spelet.\n\nPå den här nivån kommer du att lära dig kommandot `{if}`, som låter dig ge olika svar i ditt program. På så sätt kan du till exempel programmera ett hemligt lösenord för din dator.\nFortsätt till nästa flik för det nya kommandot!\n"
                example_code: "```\nlösenord {is} {ask} 'Vad är rätt lösenord?'\n```\n"
            6:
                story_text: "På föregående nivå har du övat med `{ask}` och `{if}`. Du kan till exempel fråga gästerna vad de skulle vilja äta.\nVad du dock inte kan göra ännu är att räkna ut priset för allas middag.\n\nNästa nivå gör det möjligt att använda addition, subtraktion och multiplikation i dina program. På så sätt kan du räkna ut priserna i din restaurang, men du kan också lägga till en hemlig kod för att ge dina vänner och familj rabatt.\nEtt annat alternativ i nästa nivå är att programmera ditt eget mattespel, så att ditt småsyskon kan öva multiplikationstabellen.\nGå och se själv!\n"
                start_code: "# placera din kod här"
                example_code: "```\nmatpris {is} 0\ndrickapris {is} 0\ntotalpris {is} 0\n{print} 'Välkommen till McHedy'\nbeställning {is} {ask} 'Vad önskas att äta?'\n{if} beställning {is} hamburgare matpris {is} 5\n{if} beställning {is} pommes frites matpris {is} 2\ndricka {is} {ask} 'Vad vill du dricka?'\n{if} dricka {is} vatten drickapris {is} 0\nelse drickapris {is} 3\ntotalpris {is} food_price + drink_price\n{print} 'Det blir ' totalpris ' dollar, tack'\n```\n"
            7:
                start_code: "{print} 'happy birthday to you'\n{print} 'happy birthday to you'\n{print} 'happy birthday dear Hedy'\n{print} 'happy birthday to you'\n"
                story_text: "Bra jobbat! Du har nått nästa nivå, vilket betyder att du har tränat på `{if}` och `{else}`. Du har säkert märkt att din kod blir längre och längre.\nTill exempel om du vill programmera 'Happy Birthday'.\n\nDet är mycket kod för i huvudsak samma ord om och om igen. I nästa flik lär du dig tack och lov en lösning med kommandot `{repeat}`, som låter dig upprepa en kodrad flera gånger.\n"
                example_code: "```\n{print} 'happy birthday to you'\n{print} 'happy birthday to you'\n{print} 'happy birthday dear Hedy'\n{print} 'happy birthday to you'\n```\n"
            8:
                start_code: "{print} 'Vi forsätter till nästa flik!'"
                story_text: "Nu har du lärt dig hur du upprepar en enstaka kodrad. Detta är praktiskt, men det räcker inte alltid. Ibland vill du upprepa flera rader samtidigt.\nDen här nivån låter dig gruppera flera rader kod och upprepa den gruppen av rader på en gång!\n"
                example_code: "```\n{repeat} 5 {times} {print} 'På nästa flik kan du upprepa flera rader kod samtidigt!'\n```\n"
            9:
                start_code: "{print} Fortsätt till nästa flik!"
                story_text: "Bra jobbat! Du har nått en ny nivå! På den föregående nivån lärde du dig använda flera rader kod i ett {if}- eller {repeat}-kommando. Men du kan ännu inte kombinera dem ...\nGoda nyheter! På den här nivån kommer du att få lägga en {if} inuti en {if}, eller inuti ett {repeat}-kommando.\n"
                example_code: "```\nsvar = {ask} 'Är du redo att lära dig något nytt?'\n{if} svar {is} ja\n    {print} 'Bra! Du kan lära dig att använda kommandot repeat i if-kommandot!'\n    {print} 'Hurra!'\n    {print} 'Hurra!'\n    {print} 'Hurra!'\n{else}\n    {print} 'Kanske du ska öva lite mer på förra nivån'\n"
            10:
                start_code: "{print} 'Vi forsätter till nästa flik!'"
                story_text: "Det här gå ju bra! På de tidigare nivåerna stod vi fortfarande inför ett litet problem. Du har lärt dig att repetera kodrader, men tänk om du skulle vilja ändra raden lite.\nTill exempel om du vill sjunga låten 'if you're happy and you know it' så skulle det se ut så här:\n\nOm du vill fortsätta med nästa vers, 'stomp your feet' och nästa och nästa, måste du ändra koden helt.\nPå den här nivån kommer du att lära dig kommandot `{for}`, som låter dig göra en lista med moment och upprepa koden med en nytt moment varje gång!\nTa en titt!\n"
                example_code: "```\n{repeat} 2 {times}\n    {print} 'if youre happy and you know it clap your hands'\n{print} 'if youre happy and you know it and you really want to show it'\n{print} 'if youre happy and you know it clap your hands'\n```\n"
            11:
                start_code: "{print} 'Fortsätt till nästa flik!'"
                story_text: "Du har nått nivå 10: bra jobbat! På de högre nivåerna fokuserar Hedy mer och mer på att lära dig programspråket Python.\nI Python finns inget `{repeat}` -kommando, men det finns ett kommando som fungerar som {repeat}. Är du nyfiken på hur man säger `{repeat}` på Python-språk? Fortsätt snabbt för att ta reda på det!\n"
            12:
                start_code: "{print} 'Fortsätt till nästa flik!'"
                story_text: "Kanske du testade att använda decimaltal i ditt restaurangäventyr. Om du gjorde det märkte du förmodligen att Hedy inte förstod dem än och alltid avrundade.\nFrån den här nivån kan du använda decimaltal.\n"
                example_code: "```\nhamburgare = 5\ndryck = 2\ntotalt = hamburgare + dryck\nprint 'Du har beställt en hamburgare och en dryck'\nprint 'Det kostar' totalt 'dollar tack'\n```\n"
            13:
                story_text: "På de tidigare nivåerna lärde du dig hur man lägger två `{if}`-kommandon inuti varandra. Det här fungerar bra, men det ger dig väldigt lång och klumpig kod som den här:\n\nI det här systemet måste du ange både rätt användarnamn och rätt lösenord.\nPå den här nivån kommer du att lära dig kommandot `{and}` som att gör den här koden mycket kortare och lättbegriplig!\nKolla in det!\n"
                example_code: "```\nanvändar = {ask} 'Vad är ditt användarnamn?'\nlösenord = {ask} 'Vad är ditt lösenord?'\n{if} användarnamn {is} 'Hedy'\n    {if} lösenord {is} 'hemligt'\n        {print} 'Välkommen Hedy!'\n    {else}\n        {print} 'Tillträde förbjudet'\n{else}\n    {print} 'Tillträde förbjudet!'\n```\n"
                start_code: "{print} 'Fortsätt till nästa nivå!'"
            14:
                start_code: "{print} 'Fortsätt till nästa flik'"
                story_text: "Med programmet här under kan du räkna ut om du har godkänt ett ämne i skolan (alltså ett betyg på sex eller högre).\nDu kan se att den här koden är extremt ineffektiv, på grund av den mycket långa koden på rad fem.\nAlla olika betyg från 1 till 5 måste programmeras separat. Tur för dig, för på den här nivån kommer du att lära dig hur du gör detta utan denna extremt långa kod!\n"
                example_code: "```\nförsta_poäng = {ask} 'Vilken poäng fick du på ditt första prov?'\nandra_poäng = {ask} 'Vilket poäng fick du på ditt andra prov?'\nsammanlagt = första_poäng + andra_poäng\nmedelvärde = sammanlagt / 2\n{if} medelvärde = 1 {or} medelvärde = 2 {or} medelvärde = 3 {or} medelvärde = 4 {or} medelvärde = 5\n    {print} 'Åh nej! Du har misslyckats med ämnet ...'\n{else}\n    {print} 'Bra! Du har klarat ämnet!'\n```\n"
            15:
                start_code: "{print} 'Fortsätt till nästa nivå!'"
                story_text: "I det spelet här nedanför finns kod för att se till att spelaren kan spela så länge den vill ...\nMen koden är ineffektiv och alldeles för lång. Och vad händer om spelaren vill spela 101 spel istället för 100?\nKan du inte spela hur många gånger som helst?\nPå den här nivån kommer du att lära dig ett kommando som gör allt detta mycket enklare!\n"
                example_code: "```\nspel {is} 'pågår'\n{for} i {in} {range} 1 {to} 100\n    {if} spel {is} 'pågår'\n        svar = {ask} 'Vill du fortsätta?'\n        {if} svar {is} 'nej'\n            spel {is} 'över'\n        {if} svar {is} 'ja'\n            {print} 'Ok, vi fortsätter'\n```\n"
            16:
                start_code: "{print} 'Fortsätt till nästa flik!'"
                story_text: "På den här nivån kommer vi att växa lite mer mot riktig Python-kod. Du kommer också att lära dig hur du matchar två listor.\nPå så sätt kan du skriva kod där ett djur matchas till rätt ljud.\nFör de två koderna här under är rent nonsens!\n"
                example_code: "```\ndjur = 'höna', 'häst', 'ko'\nläten = 'kluck', 'gnägg', 'mu'\n{for} vad {in} djur\n    {print} 'En 'vad' säger ' läten {at} {random}\n```\nDu kan också försöka få det att fungera på det här sättet, men ...\n```\ndjur = 'höna', 'häst', 'ko'\nläten = 'kluck', 'gnägg', 'mu'\n{for} vad {in} djur\n    {for} läte {in} läten\n        {print} 'En 'vad' säger 'läte\n```\n"
            17:
                start_code: "{print} 'Fortsätt till nästa nivå!'"
                story_text: "Du har nästan nått sista nivån i Hedy – bra jobbat! På den här nivån kommer du att lära dig ett riktigt Python-sätt att använda `{print}`.\n"
            18:
                start_code: "{print} ('Bra jobbat!!!')"
                story_text: "Grattis! Du har nått den sista nivån i Hedy! Koden du skrivit här kan kopieras till riktiga Python-miljöer som replit eller PyCharm och du kan fortsätta lära dig där!\nNotera att Python bara kan läsa engelska kommandon, så om du har använt andra språk måste du byta till engelska nu.\n"
        name: Introduction
        description: Nivåbeskrivning
        default_save_name: introduktion
    story:
        levels:
            1:
                story_text: "På nivå 1 kan du göra en berättelse där du får ange namnet på huvudkaraktären själv.\n\nPå första raden, använd `{ask}` för att fråga vem huvudkaraktären i din saga ska vara.\n\nEfter den första raden, börja med `{print}` om en mening ska skrivas ut på skärmen.\nDu använder `{echo}` om du vill att namnet på huvudkaraktären ska vara på slutet av meningen.\n"
                example_code: "```\n{ask} Huvudkaraktären av denna berättelse är\n{print} Nu kommer huvudkaraktären ta en promenad i skogen\n{echo} Han är lite rädd,\n{print} Han hör galna ljud överallt\n{print} Han är rädd för att detta är en hemsökt skog\n```\n"
                start_code: '{print} Din berättelse börjar här'
                story_text_2: "### Övning\nGör nu en egen berättelse med minst sex kodrader.\nBerättelsen får inte vara samma som exempelkoden.\nAnvänd minst ett `{ask}` - och ett `{echo}` -kommando.\nDu kan göra den om vilket ämne som helst.\nOm du inte kan komma på något ämne kan du använda ett av våra val: ett biobesök, en sportmatch eller en dag i djurparken.\n"
            2:
                story_text: "På nivå 2 kan du göra din berättelse roligare. Huvudpersonens namn kan nu stå var som helst i meningen.\n\nMen du får programmera lite extra för det. Du måste nu namnge din huvudperson först.\n\nDu kan sedan sätta det namnet var som helst i meningen.\n"
                example_code: "```\nnamn {is} {ask} Vad heter huvudkaraktären?\n{print} namn ska nu gå en promenad i skogen\n{print} namn är lite rädd\n{print} Plötsligt hör han ett galet ljud...\n{sleep}\n{print} namn är rädd att detta är en hemsökt skog\n```"
                start_code: '{print} Din berättelse'
                story_text_2: "### Övning\nDags att lägga till variabler till din egen berättelse som du skapade på föregående nivå.\nGå till 'Mina program', leta efter ditt nivå 1-äventyr och kopiera koden. Klistra in koden på din inmatningsskärm på den här nivån.\n\nDen här koden fungerar inte på den här nivån eftersom du inte har använt variabler än.\nÄndra kommandona `{ask}` och `{echo}` i din kod till rätt form som du har lärt dig på den här nivån.\n\n**Extra** Lägg till ett {sleep}-kommando i din kod för att bygga upp spänningen i berättelsen.\n"
            3:
                story_text: "I nivå 3 kan du göra din berättelse lite roligare. Du kan använda slumpen för monster, djur, eller annat hinder, så här:\n"
                example_code: "```\ndjur {is} 🦔, 🐿, 🦉, 🦇\n{print} Han hör nu ljudet av en djur {at} {random}\n```\n"
                story_text_2: "Kommandot `{add}` kan också vara användbar för din berättelse.\n"
                example_code_2: "```\n{print} Han hör ett ljud\ndjur {is} 🐿, 🦔, 🦇, 🦉\ndjuret {is} {ask} Vad tror du det är?\n{add} djuret {to_list} djur\n{print} det var ett djur {at} {random}\n```\n"
                story_text_3: "Detta är ett exempel på kommandot `{remove}` i din berättelse\n\n### Övning\nKopiera din berättelse från de tidigare nivåerna till den här nivån.\nPå den här nivån har du lärt dig tre nya kommandon: `{at} {random}`, `{add} {to}` och `{remove} {from}`.\nLägg till nya kodrader i din berättelse så att alla de nya kommandona finns med minst en gång i din berättelse.\n"
                example_code_3: "```\n{print} Hans ryggsäck blev alldeles för tung.\n{print} Inuti var en vattenflaska, en ficklampa, och en tegelsten.\nsäck {is} vatten, ficklampa, tegelsten\nkasta {is} {ask} Vad ska han kasta bort?\n{remove} kasta {from} säck\n```\n"
                start_code: '{print} Din berättelse'
            5:
                start_code: "{print} 'Här börjar din berättelse!'"
                story_text: "På den här nivån kan du programmera olika slut, vilket gör din berättelse ännu roligare.\nI exempelkoden kan du se hur du skapar två olika slut.\n\n### Övning 1\nSkriv en ny berättelse på minst sex kodrader om ett ämne som du själv väljer.\nIngen inspiration? Välj ett av dessa ämnen: en superhjälte, en tråkig skoldag, strandad på en öde ö.\n\nGe nu spelaren möjlighet att välja ett lyckligt eller dåligt slut, precis som i exempelkoden.\nProgrammera båda sluten.\n\n### Övning 2\nKopiera den berättelse som du har skapat i ditt eget berättelseäventyr i de tidigare nivåerna.\nHitta ett sätt att lägga till minst två kommandon `{if}` och `{else}` i din berättelse.\nDetta kan vara med ett lyckligt eller dåligt slut, men du kan också försöka hitta andra sätt att få med kommandona.\n"
                example_code: "```\nnamn {is} {ask} 'Vem går genom skogen?'\n{print} namn ' går genom skogen'\n{print} namn ' stöter på ett monster'\nslutet {is} {ask} 'Vill du ha ett lyckligt eller olyckligt slut?'\n{if} slutet {is} lyckligt {print} namn ' tar sitt svärd och monstret springer bort'\n{else} {print} 'Monstret äter upp ' namn\n```\n"
            7:
                example_code: "```\n{print} 'Prinsen fortsatte ropa på hjälp'\n{repeat} 5 {times} {print} 'Hjälp!'\n{print} 'Varför hjälper ingen mig?'\n```\n"
                start_code: "{repeat} 5 {times} {print} 'Hjälp!'"
                story_text: "I en berättelse säger någon samma ord flera gånger. Till exempel när någon ropar på hjälp eller sjunger en sång.\nDu kan lägga in sådana upprepningar i din berättelse, på den här nivån med `{repeat}`.\n\n### Övning\nLägg till upprepningar i din egen berättelse. Gå tillbaka till dina sparade program, välj ditt berättelseprogram från nivå 6 och\nhitta en rad som innehåller `{print}` och upprepa den!\n"
            9:
                story_text: "På den här nivån kan du använda kommandona `{if}` och `{repeat}` inuti andra `{if}`- och `{repeat}`-kommandon.\nDetta ger dig många möjligheter och hjälper dig verkligen att göra din berättelse interaktiv.\n\n### Övning 1\nGör klart koden så att `{if}` fungerar korrekt.\n\n### Övning 2\nLägg till en `{if}` och `{else}` för den del av berättelsen där Robin också åker hem.\n\n### Övning 3\nGå tillbaka till din berättelse på nivå 8 och använd minst två `{if}` inom ett annat `{if}`.\n"
                example_code: "```\n{print} 'Robyn promenerar i stan'\nplats = {ask} 'Går Robyn till en affär eller går hon hem?'\n{if} plats {is} affär\n    {print} 'Hon går in i affären'\n    {print} 'Robyn ser en bok som ser spännande ut'\n    bok = {ask} 'Köper Robyn boken?'\n    {if} bok {is} ja\n        {print} 'Robyn köper boken och går hem'\n    {else}\n        {print} 'Robyn lämnar affären och går hem'\n{else}\n    {print} 'Robyn går hem'\n```\n"
                start_code: '# placera din kod här'
            13:
                start_code: '# placera din kod här'
                story_text: "Med kommandona `{and}` och `{or}` kan du göra dina berättelser mer flexibla. Du kan ställa två frågor och svara baserat på båda svaren.\n\n### Övning 1\nTitta på exempelkoden och gör den klar. Lägg sedan till minst två ytterligare `{if}` -satser med `{and}` eller `{or}`.\n\n### Övning 2\nHitta en berättelse från en tidigare nivå och lägg till ett `{and}` eller `{or}`.\n"
                example_code: "```\n{print} 'Vår hjälte går genom skogen'\n{print} 'Vägen delar sig på två håll'\nväg = {ask} 'Vilken väg ska hon välja?'\nvapen = {ask} 'Vilket vapen drar hon?'\n{if} väg {is} 'vänster' {and} vapen {is} 'svärd'\n    _\n```\n"
            4:
                example_code: "```\nname {is} {ask} _ Vad heter du? _\n{print} Huvudpersonen heter _ namn\n_\n_\n{print} namn _ ska nu vandra i skogen _\n{print} namn _ är lite rädd _\ndjur {is} 🦔, 🐿, 🦉, 🦇\n{print} _ Han hör ljudet av _ djur {at} {random}\n{print} namn _ är rädd för att detta är en trollskog _\n```\n"
                start_code: "{print} 'Din berättelse skrivs ut här!'"
                story_text: "Du kanske har märkt att det fortfarande finns ett problem i de tidigare nivåerna. Försökte du skriva ut en mening som innehöll ordet namn? Dvs. `{print}` mitt namn är namn.\nDu kan lösa det på den här nivån. Du måste använda citattecken runt allt du ska skriva ut.\n\n### Övning\nKopiera exempelkoden och avsluta den genom att lägga till citattecken på de tomma fälten på rad 1 och 2.\nDe tomma fälten på rad 3 och 4 ska inte ersättas med citattecken, utan ett `{sleep}`- och ett `{clear}`-kommando. Kan du få det att fungera?\n\n### Övning 2\nGå tillbaka till föregående nivå och kopiera din berättelsekod. Få koden att fungera på den här nivån genom att lägga till citattecken på rätt ställen.\nTänk på: Variablerna i din egen berättelse ska vara utanför citattecknen. Precis som den andra raden i exempelkoden. På den raden placeras variabelnamnet utanför citattecken.\n"
            8:
                story_text: "På den här nivån kan du använda flera rader i dina `{if}` -kommandon; på så sätt kan du uppgradera ditt glada eller sorgliga slut!\n\n### Övning 1\nExempelkoden visar två olika slut; ett där karaktärerna hoppar i en tidsmaskin och ett där de inte gör det.\nFyll i tomrummen med minst en mening per slut.\n**Extra** Gör berättelsen längre. Vad händer i berättelsen? Du kan också lägga till ett andra `{ask}`-kommando med olika alternativ.\n\n### Övning 2\nGå tillbaka till dina sparade program och välj ditt berättelseprogram från nivå 5. Skriv nu ett bra och ett dåligt slut på minst tre rader vardera!\n"
                example_code: "```\n{print} 'ÅH NEJ! T-rex närmar sig!\"\nend = {ask} 'Vill du ha ett lyckligt eller sorgligt slut?'\n{if} slut {is} lyckligt\n    {print} 'I sista ögonblicket hoppar Richard tillbaka in i tidsmaskinen!'\n    {print} _\n{else}\n    {print} 'Åh nej! Richard är för långsam ...\"\n    {print} _\n```\n"
                start_code: '# Placera din kod här'
            10:
                story_text: "På den här nivån kan du använda kommandot {for} i din berättelse. På detta sätt kan du enkelt programmera barnboken  'Brown bear, Brown bear, what do you see'.\n\n### Övning\n\nTitta på <a href=\"https://www.yonkerspublicschools.org/cms/lib/NY01814060/Centricity/Domain/1621/Brown%20Bear%20Book.pdf\"> berättelsen</a> om du inte känner till den, och se till att den skrivs ut som i boken.\n"
                example_code: "```\ndjur = _ , _ , _ , _ \n{print} 'Brunbjörn, brunbjörn'\n{print} 'Vad ser du?'\n```\n"
                start_code: '# placera din kod här'
            12:
                story_text: "På den här nivån behövs citattecken för att_spara flera ord i en variabel.\n\n### Övning\n\nHitta en berättelse från en tidigare nivå, vilken nivå som helst är okej. Lägg till citattecken på rätt ställen."
                example_code: "```\nnamn = 'Drottningen av England'\n{print} namn ' åt en tårtbit, när plötsligt...'\n```\n"
                start_code: '# placera din kod här'
            15:
                start_code: '# placera din kod här'
                story_text: "Med `{while}`-loopen kan du göra dina berättelser mer intressanta. Du kan t.ex. använda `{while} game {is} 'on'` så att du kan spela tills spelet är slut.\nEller så kan du använda `{while} sword {is} 'lost'` så att spelaren inte kan fortsätta spelet förrän den har hittat något.\n"
                example_code: "```\nnycklar = 'förlorade'\n{print} 'Du står i din trädgård och du har tappat dina nycklar.'\n{print} 'Var vill du leta efter dem?'\n{print} 'Du kan välja: träd, rabatt, sten, postlåda'\n{while} nycklar == 'förlorade'\n    plats = {ask} 'Var vill du titta?'\n    {if} plats == 'rabatt'\n        {print} 'Här är de!'\n        nycklar = 'hittade'\n    {else}\n        {print} 'Nej, de är inte här: ' plats\n{print} 'Nu kan du gå in i huset!'\n```\n"
            18:
                start_code: '# placera din kod här'
                story_text: "Vi ska skriva ut en annan historia, men nu måste vi använda parenteser med `{print}`.\n\n### Övning 1\nSkapa en berättelse med minst fem meningar. Du behöver inte använda 'namn' än.\n"
                story_text_2: "### Övning 2\nVi har redan förberett en `{input}` åt dig. Använd först variabeln `name` i din berättelse.\nLägg sedan till en andra `{ask}` och använd den variabeln också.\nTips: Kom ihåg kommatecken i en `{print}` mellan text och variabler!\n"
                example_code: "```\n{print}('Välkommen till den här berättelsen!')\n```\n"
                example_code_2: "```\nnamn = {input}(\"Vad heter du?\")\n{print}('Välkommen till den här berättelsen!')\n```\n"
        name: Berättelse
        description: Berättelse
        default_save_name: Berättelse
    parrot:
        levels:
            2:
                start_code: '{print} Jag är papegojan Hedy!'
                story_text: "På förra nivån skapade du en papegoja som härmar dig. På den här nivån kommer vi att göra papegojan interaktiv med en variabel och `{ask}`-kommandot.\nVi kommer också att göra papegojan mer verklighetstrogen genom att lägga till `{sleep}`-kommandon efter att något har sagts.\n"
                example_code: "```\n{print} Jag är papegojan Hedy\nnamn _ _ vad heter du?\n{print} namn\n_\n{print} skri\n_\n{print} namn\n```\n"
                story_text_2: "### Övning\nAvsluta först rad 2 med ett `{is}`- och ett `{ask}`-kommando.\nFyll sedan i ett `{sleep}`-kommando på rad 4 och 6 för att låta papegojan vara tyst en liten stund.\n\n**Extrauppgift** Kan du få papegojan att fråga efter mer än bara ditt namn genom att lägga till fler rader kod?\n"
            3:
                story_text: "Lär din papegoja ett nytt ord med `{add}`.\n### Övning\nKan du lägga till kommandot `{add} {to}` för att få koden att fungera?\n"
                start_code: '# placera din kod här'
                example_code: "```\nord {is} skri, Hedy\n{print} Träna din papegoja!\nnytt_ord {is} {ask} Vilket ord vill du lära den?\n_ nytt_ord _ ord\n{print} 🧒 Säg nytt_ord, Hedy!\n{print} 🦜 ord {at} {random}\n```\n"
            1:
                example_code: "```\n{print} Jag heter papegojan Hedy\n{ask} vad heter du?\n{echo}\n{echo}\n```\n"
                start_code: '{print} Jag är papegojan Hedy

                    {ask} Vad heter du?

                    {echo}

                    {echo}

                    '
                story_text: "Skapa din egen papegoja som härmar dig!\n"
                story_text_2: "### Övning\nKopiera exempelkoden till din inmatningsskärm genom att klicka på den gula knappen.\nLåt papegojan ställa en annan fråga. Fyll i de tomma rutorna i exemplet!\n**Extra** Du kan också låta papegojan ställa flera frågor. Lägg till några fler rader kod under din egen kod.\n"
                example_code_2: "```\n{print} Jag heter papegojan Hedy\n{ask} _\n{echo}\n{echo}\n"
            5:
                story_text: "Belöna din papegoja om den säger rätt ord!\n\n### Övning\nAvsluta koden genom att fylla i de fyra saknade kommandona.\n"
                example_code: "```\nord {is} skri, Hedy\n{print} 'Träna din papegoja!'\nnytt_ord {is} {ask} 'Vilket ord vill du lära den?'\n{add} nytt_ord {to_list} ord\nsagt_ord {is} ord {at} {random}\n{print} '🧒 Säg ' nytt_ord', Hedy!'\n{print} '🦜' sagt_ord\n_ sagt_ord {is} nytt_ord _ '🧒 Bra jobbat, Hedy! 🍪'\n_ _ '🧒 Nej, Hedy! Säg ' nytt_ord\n```\n"
                start_code: '# placera din kod här'
            4:
                start_code: '# Skriv din kod här'
                story_text: "På den här nivån måste vi använda citattecken i kommandona `{ask}` och `{print}`.\n### Övning\nKomplettera koden genom att fylla i citattecken på de tomma platserna.\n"
                example_code: "```\nord {is} skri, Hedy\n{print} _ Träna din papegoja! _\nnytt_ord {is} {ask} _ Vilket ord vill du lära den? _\n{add} nytt_ord {to_list} ord\n{print} _ 🧒 Säg _nytt_ord _, hedy!_\n{print} _ 🦜 _ ord {at} {random}\n```\n"
        name: Papegoja
        description: Skapa din egen papegoja som härmar dig!
        default_save_name: Papegoja
    songs:
        levels:
            11:
                start_code: '# placera din kod här'
                example_code: "```\n_ monkeys _ _ 5 _ 1\n    {print} monkeys ' little monkeys jumping on the bed'\n    _\n```\n"
                story_text: "På den här nivån kan du använda `{for}` med `{range}` för att göra sånger där du räknar, till exempel fem små apor.\n\n### Övning 1\nFyll i luckorna och få koden att fungera! Om du inte kommer ihåg sångtexten kan du slå upp den själv.\n\n### Övning 2\nSångens sista rad skiljer sig från de andra. Skriv ut den raden inuti `{for}` och använd en `{if}` för att få den att fungera korrekt.\n"
            12:
                story_text: "I den här sången kan vi göra det ännu enklare att programmera 'if you're happy and you know it, clap your hands'. Eftersom vi kan placera alla handlingar i en variabel, kolla in det:\n\n### Övning\nKan du lägga till rätt antal indrag (mellanslag) på varje rad för att få låten att spelas korrekt?\nTips: Alla rader behöver inte vara indragna.\n"
                example_code: "```\n_ handlingar = 'klappa händerna', 'stampa fötterna', 'ropa hej till nån'\n_ {for} handling {in} handlingar\n_ {for} i {in} {range} 1 {to} 2\n_ {print} handling\n_ {print} 'om du är riktigt glad'\n_ {print} 'du kan också glädja andra som på denna jorden vandra'\n_ {print} handling\n_ {print} 'om du är riktigt glad'\n```\n"
                start_code: '# placera din kod här'
            16:
                story_text: "På den här nivån kan du programmera en sång som OldMacDonald ännu snabbare. Du kan koppla rätt djur till rätt ljud genom att helt enkelt placera dem på samma plats i listan.\nThe Drunken Sailor går också snabbt att göra på den här nivån. Du behöver bara åtta rader för hela låten; kolla in det här!\n"
                example_code: "```\nanimals = ['pig', 'dog', 'cow']\nsounds = ['oink', 'woof', 'moo']\n{for} i {in} {range} 1 {to} 3\n    animal = animals[i]\n    sound = sounds[i]\n    {print} 'Old McDonald had a farm'\n    {print} 'E I E I O!'\n    {print} 'and on that farm he had a ' animal\n    {print} 'E I E I O!'\n    {print} 'with a ' sound sound ' here'\n    {print} 'and a ' sound sound ' there'\n    {print} 'here a ' sound\n    {print} 'there a ' sound\n    {print} 'everywhere a ' sound sound\n```\n\n```\nlines = ['what shall we do with the drunken sailor', 'shave his belly with a rusty razor', 'put him in a long boat till hes sober']\n{for} line {in} lines\n    {for} i {in} {range} 1 {to} 3\n        {print} line\n    {print} 'early in the morning'\n    {for} i {in} {range} 1 {to} 3\n        {print} 'way hay and up she rises'\n    {print} 'early in the morning'\n```\n"
                start_code: '# placera din kod här'
            6:
                start_code: "{print} 'Vi sjunger!'"
                story_text: "Sånger innehåller ofta många upprepningar. Ibland bygger upprepningarna också på räkning.\nTill exempel i den välkända sången 'Bottles of beer'. Du kan programmera den låten med lite matematik.\n\nTips: Använd funktionen för högläsning för att låta Hedy sjunga sången för dig!\n\n### Övning\nDu kan nu upprepa raderna 2 till 7 hur många gånger som helst genom att kopiera raderna.\n"
                example_code: "```\nvers = 99\n{print} vers ' ölflaskor på väggen'\n{print} vers ' ölflaskor'\n{print} 'Ta en ner, skicka runt den'\nvers = vers - 1\n{print} vers ' ölflaskor på väggen'\n{sleep}\n```\n"
                story_text_2: "Denna barnvisa räknar ner från fem små apor till en apa.\nOm du kopierar rad 2–7 och klistrar in dem under koden kan du sjunga hela sången!\n"
                example_code_2: "```\nantal = 6\nantal = antal - 1\n{print} antal ' små apor som hoppar på sängen'.\n{print} 'En av dem ramla ner av och slog huvudet.'\n{print} 'Mamma ringde till doktorn och doktorn sa'\n{print} 'INGA FLER APOR SOM HOPPAR PÅ SÄNGEN!'\n{sleep}\n```\n"
            7:
                story_text: "Sånger innehåller ofta många upprepningar. Till exempel ... Baby Shark! Om du sjunger den sjunger du samma sak hela tiden:\n\nBaby Shark tututududutudu <br>\nBaby Shark tututududutudu <br>\nBaby Shark tututudutudu <br>\nBaby Shark\n\n### Övning\nKan du skriva ut låten Baby Shark med `{repeat}`? Avsluta koden genom att ersätta tomrummen i koden?\n**Extra** Efter Baby Shark kan du naturligtvis också programmera andra låtar. Det finns många låtar med upprepning!\nKan du komma på en sång  tilloch skriva ut den?\n"
                example_code: "```\n{repeat} _ _ {print} 'Baby Shark tututudutudu'\n{print} 'Baby Shark'\n```\n"
                start_code: "{print} 'Baby Shark'"
            8:
                story_text: "I en tidigare nivå har du programmerat låten 'Bottles of beer'. Men utan kommandot `{repeat}` var du tvungen att kopiera verserna många gånger.\nI den här nivån kan du upprepa sången 99 gånger, bara genom att lägga till en endarad!\n\n### Övning\nLägg till rätt kommando på de tomma platserna och indentera koden på rätt sätt.\n"
                example_code: "```\nverse = 99\n_ 99 {times}\n{print} verse ' bottles of beer on the wall'\n{print} verse ' bottles of beer'\n{print} 'Take one down, pass it around'\nverse = verse - 1\n{print} verse ' bottles of beer on the wall'\n```\n"
                start_code: '# placera din kod här'
            10:
                story_text: "Med `{for}` kan du skriva ut hela sången om baby shark (inklusive alla andra hajar i familjen) på bara 6 rader!\n\n### Övning 1\nKan du göra baby shark-koden ännu kortare genom att använda kommandot `{for}`? Gör klart exempelkoden.\n"
                example_code: "```\nfamily = baby, mammy, daddy, grandma, grandpa\n_ _ _ _ \n  {print} _\n```\n"
                start_code: '# placera din kod här'
                example_code_2: "```\napor = 5, 4, 3, 2, 1\n```\n"
                story_text_2: "### Övning 2\nSkriv ut låten Fem små apor hoppade på sängen. Slå upp texten om du inte kommer ihåg.\n\n**Extrauppgift** Skriv ut låten Old MacDonald had a farm och se till att alla djur gör olika ljud med hjälp av ett `{if}`.\n"
            18:
                start_code: '# placera din kod här'
                story_text: "På nivå 16 gjorde vi låtar med hjälp av listor. De programmen fungerar inte längre korrekt på denna nivå. Kolonen från nivå 17 och parenteserna från nivå 18 behöver fortfarande läggas till.\n\n### Övning 1\nDrunken sailor-låten ges som exempelkod, men fungerar inte än.\nKan du se till att allt fungerar igen? För att hjälpa dig har vi placerat _ på platsen för _några_ av felen.\n\n### Övning 2\nSlå nu också upp din Old MacDonald-låt från nivå 16 och korrigera den.\n"
                example_code: "```\nlines = ['what shall we do with the drunken sailor', 'shave his belly with a rusty razor', 'put him in a long boat till hes sober']\n{for} line {in} lines _\n    {for} i {in} {range} 1 {to} 3 _\n        {print} _ line _\n    {print} 'early in the morning'\n    {for} i {in} {range} 1 {to} 3\n        {print} 'way hay and up she rises'\n    {print} 'early in the morning'\n```\n"
        name: Sjung en sång!
        description: Skriv ut en sång
        default_save_name: Sång
    turtle:
        name: Sköldpadda
        description: Gör din egen ritning
        default_save_name: Sköldpadda
        levels:
            1:
                story_text: "Du kan också rita med Hedy. Genom att kombinera svängar och linjer kan du göra en fyrkant eller trappa!\n\nMed `{forward}` ritar du en linje framåt. Talet efter avgör hur långt sköldpaddan kommer att gå. `{turn} {right}` vrider ett kvarts varv medurs, `{turn} {left}` vrider moturs.\n\nOm du vill gå bakåt använder du kommandot `{forward}` men med ett negativt tal. Till exempel `{forward} -100`\n\n### Övning\nDet här är början på en liten trappa. Kan du göra så den får fem steg?\n"
                example_code: "```\n{forward} 50\n{turn} {right}\n{forward} 50\n{turn} {left}\n{forward} 50\n```\n"
                start_code: "{forward} 50\n{turn} {left}"
            8:
                start_code: figur = {ask} 'Hur många vinklar ska jag rita?'
                story_text: "Nu när vi kan upprepa flera rader kan vi lättare skapa figurer.\nVi behöver bara ställa in vinkeln en gång och sedan använda den variabeln i `{repeat}`.\n\n### Övning 1\nExempelkoden skapar en kvadrat. Ändra koden så att den skapar en annan figur, till exempel en triangel eller en sexhörning. \nDetta kräver en ändring av två kodrader.\nTips: En hel cirkel är 360 grader.\n\n### Övning 2\nSkapa nu en ritning som består av minst två polygoner.\n"
                example_code: "```\nvinkel = 90\n{repeat} 4 {times}\n    {turn} vinkel\n    {forward} 50\n```\n"
                story_text_2: "**Extrauppgift** Vi kan nu förbättra programmet för att rita olika figurer. Gör klart koden så kan du vilken polygon som helst!\n"
                example_code_2: "```\nfigur = {ask} 'Hur många hörn ska jag rita?'\nvinkel = 360 / figur\n{repeat} figur {times}\n    {turn} _\n    {forward} _\n```\n"
            2:
                story_text: "På den här nivån kan du använda variabler för att göra sköldpaddan interaktiv. Du kan t.ex. fråga spelaren hur många steg sköldpaddan ska ta.\n"
                example_code: "```\nsvar {is} {ask} Hur många steg ska sköldpaddan ta?\n{forward} svar\n```\n"
                story_text_2: "På nivå 1 kunde sköldpaddan dessutom bara svänga till vänster eller höger. Det är lite tråkigt!\nPå nivå 2 kan den peka med näsan åt alla håll.\n\nAnvänd 90 för att vrida en kvarts varv. Vi kallar detta för grader. Ett helt varv är 360 grader.\n\n### Övning\nKan du göra en figur med den här koden? Kanske en triangel eller en cirkel?\n"
                example_code_2: "```\n{print} Rita figurer\nvinkel {is} 90\n{turn} vinkel\n{forward} 25\n{turn} vinkel\n{forward} 25\n```\n"
                start_code: "{print} Sköldpaddslopp!\nvinkel {is} 90\n{turn} vinkel\n{forward} 25"
            3:
                example_code: "```\nvinklar {is} 10, 50, 90, 150, 250\n{turn} vinklar {at} {random}\n{forward} 25\n```\n"
                story_text: "På den här nivån kan du använda `{at} {random}` med sköldpaddan. Ett slumpmässigt val gör att sköldpaddan går en annan väg varje gång.\nAnvänd `{at} {random}` för att välja ett värde från en lista.\n### Övning\nKan du kopiera och klistra in rad 2 och 3 för att skapa en längre slumpmässig väg?\n"
                start_code: "vinklar {is} 10, 50, 90, 150, 250\n{turn} vinklar {at} {random}\n{forward} 25"
            4:
                story_text: "På nivå 4 måste du använda citattecken med `{print}` och `{ask}`. Även när du ritar!\n"
                example_code: "```\n{print} _ Rita figurer _\nvinkel {is} 90\n{turn} vinkel\n{forward} 25\n{turn} vinkel\n{forward} 25\n```\n"
                start_code: "{print} 'Rita figurer'\nvinkel {is} 90\n{turn} vinkel\n{forward} 25"
                example_code_2: "```\n{color} {white}\n{forward} -80\n{color} {green}\n{forward} 50\n{color} {yellow}\n{forward} 50\n{color} {red}\n{forward} 50\n```\n"
                story_text_2: "Du kan också ändra färgen på linjerna med kommandot `{color}`. Kolla in exemplet.\nDu kan också använda kommandot `{color} {white}` för att skapa 'osynliga' linjer. Du kan använda dessa vita linjer för att flytta sköldpaddan var som helst på skärmen innan du börjar rita.\n"
            5:
                example_code: "```\n{print} 'Rita figurer'\nfigur {is} {ask} 'Vill du ha en kvadrat eller en triangel?'\n{if} figur {is} triangel vinkel {is} 120\n{else} vinkel {is} 90\n{turn} vinkel\n{forward} 25\n{turn} vinkel\n{forward} 25\n{turn} vinkel\n{forward} 25\n{turn} vinkel\n{forward} 25\n```\n"
                start_code: "{print} 'Rita figurer'\nfigur {is} {ask} 'Vill du ha en kvadrat eller triangel?'\n{if} figur {is} triangel vinkel {is} 120 {else} vinkel {is} 90\n{turn} vinkel\n{forward} 25"
                story_text: "På nivå 5 kan du göra ett val med `{if}`, till exempel mellan olika typer av figurer.\n"
                story_text_2: "### Övning\nFyll i rätt tal i den här koden för att få det att fungera.\nNär du har gjort det kan du försöka lägga till alternativet baklänges.\n\n**Extra** Istället för att använda 'vänster' och 'höger', gör om programmet med nord, ost, syd och väst.\nPå så sätt kan du lägga till ännu fler vägbeskrivningar som nordost och sydväst etc.\n"
                example_code_2: "```\nriktning {is} {ask} \"Vill du gå åt vänster, höger eller rakt fram?\n{if} riktning {is} vänster {turn} _\n{if} riktning {is} höger {turn} _\n{forward} 100\n```\n"
            6:
                story_text: "På den här nivån kan du använda beräkningar för att rita olika figurer.\nDu kanske har lärt dig i skolan att det är 360 grader på ett helt varv. Om inte så vet du det nu!\nDärför använder du 90 grader för en kvadrat. 360 dividerat med 4 är 90.\nNu när vi kan matte med Hedy kan vi rita alla figurer vi vill ha!\n"
                example_code: "```\nvinklar = {ask} 'Hur många vinklar vill du ha?'\nvinkel = 360 / vinklar\n{forward} 50\n{turn} vinkel\n{forward} 50\n{turn} vinkel\n{forward} 50\n{turn} vinkel\n{forward} 50\n{turn} vinkel\n{forward} 50\n{turn} vinkel\n{forward} 50\n{turn} vinkel\n```\n"
                start_code: "{print} 'Rita figurer'"
            9:

                start_code: '# skriv din kod här'
                story_text: "Nu när vi kan använda en `{repeat}` inuti en `{repeat}`, kan vi skapa mer komplexa figurer.\n\n### Övning 1\nDen här koden skapar tre svarta trianglar – ändra det till fem rosa kvadrater.\n\n **Extrauppgift** Skapa en figur som du själv väljer som består av minst två olika former.\n"
                example_code: "```\n{color} {black}\n{repeat} 3 {times}\n    {repeat} 3 {times}\n        {forward} 10\n        {turn} 120\n    {color} {white}\n    {forward} 50\n    {color} {black}\n```\n"
    dishes:
        name: Disk?
        levels:
            4:
                story_text: "Med citattecken kan du göra ditt diskprogram ännu bättre.\n\n### Övning\nFyll först i rätt symboler eller kommandon i tomrummen för att få detta exempelprogram att fungera.\nFick du rätt på det? Bra! Kopiera nu din egen kod från föregående nivå och få den att fungera på den här nivån genom att lägga till citattecken på rätt ställen.\n"
                example_code: "```\npersoner {is} mamma, pappa, Emma, Sophie\n{print} _ ansvarig för att diska är _\n{sleep}\n{print} personer {at} _\n```\n"
                start_code: "{print} 'Vem diskar?'"
            10:
                example_code: "```\ndagar = måndag, tisdag, onsdag, torsdag, fredag, lördag, söndag\nnamn = mamma, pappa, Emma, Sophie\n{for} dag {in} dagar\n    {print} namn {at} {random} ' diskar på ' dag\n```\n"
                start_code: '# skriv din kod här'
                story_text: "På den här nivån kan du göra ett schema för hela veckan på ett enkelt sätt!\n\n### Övning\nLägg till en andra syssla, t.ex. dammsugning eller städning, och se till att den också är uppdelad för hela veckan.\n<br> **Extrauppgift** Programmet är inte rättvist – du kan ha otur och behöva diska hela veckan. Hur skulle du kunna göra programmet mer rättvist?\n"
            3:
                story_text: "Är ni alltid oense hemma om vem som ska diska eller göra vid kattlådan idag?\nDå kan du låta datorn välja mycket rättvist. Det kan du programmera på den här nivån!\n"
                example_code: "```\npersoner {is} mamma, pappa, Emma, Sophie\n{print} personer {at} {random} får diska\n```\n"
                story_text_2: "### Övning\nGör en egen version av programmet för diskmaskinen. Gör först en lista över dina familjemedlemmar.\nTänk sedan ut en uppgift som måste göras och låt datorn bestämma vem som ska göra uppgiften med kommandot `{at} {random}`.\n\n**Extra** Känner du inte för att diska själv? Hacka programmet genom att ta bort ditt namn från listan med kommandot `{remove}` `{from}`.\n"
                start_code: '{print} Vem diskar?'
            6:
                story_text_2: "Om du har extrem otur kan det tidigare programmet bestämma att du ska diska hela veckan! Det är inte rättvist!\nFör att skapa ett mer rättvist system kan du använda kommandot `{remove}` för att ta bort den valda personen från listan. På så sätt behöver du inte diska igen förrän alla andra har gjort det.\n\nMåndag och tisdag är redan klara för dig! Kan du lägga till resten av veckan?\nOch … kan du komma på en lösning för när din lista är tom?\n"
                story_text: "Hur ofta ska var och en diska? Är det rättvist? Du kan räkna ut det på den här nivån.\n"
                example_code: "```\npersoner = mamma, pappa, Emma, Sophie\nemma_diskar = 0\ndiskare = personer {at} {random}\n{print} 'Disken sköts av ' diskare\n{if} diskare {is} Emma emma_diskar = emma_diskar + 1\n{print} 'Den här veckan kommer Emma att diska' emma_diskar 'gånger'\n```\n\nNu kan du kopiera raderna 3 till 5 några gånger (t.ex. sju gånger för en hel vecka) för att beräkna för en hel vecka igen.\nHar du gjort koden för hela veckan?\n"
                example_code_2: "```\npersoner = mamma, pappa, Emma, Sophie\ndiskare = personer {at} {random}\n{print} 'Måndagsdisken sköts av: ' diskare\n{remove} diskare {from} personer\ndiskare = personer {at} {random}\n{print} 'Tisdagsdisken sköts av: ' diskare\n{remove} diskare {from} personer\n```\n"
                start_code: "{print} 'Vem diskar?'"
            5:
                story_text: "Med `{if}` kan du nu ha roligare valmöjligheter i programmet. Du kan låta programmet reagera på datorns val.\n### Övning\nKan du avsluta koden så att den skriver ut 'tyvärr' när det är din tur och annars 'ja!'?\nGlöm inte citattecken!\n"
                example_code: "```\npersoner {is} mamma, pappa, Emma, Sophie\ndiskare {is} personer {at} {random}\n_ diskare {is} Sophie {print} _ synd att jag måste diska _\n_ {print} 'lyckligtvis ingen disk eftersom ' _ ' redan diskar'\n```\n"
                start_code: "{print} 'Vem diskar?'"
            7:
                story_text: "Med `{repeat}` kan du upprepa delar av koden. Du kan använda detta för att beräkna vem som kommer att diska under flera dagar!\n### Övning\nAnvänd kommandot `{repeat}` för att bestämma vem som ska diska under en hel vecka. Varje tomrum måste fyllas med ett kommando eller ett tal!\n**Extrauppgift** Kan du komma på andra uppgifter i huset? Anpassa koden så att den beslutar om tre hushållssysslor. Glöm inte att skriva ut vilka uppgifter det handlar om!\n"
                example_code: "```\npersoner = mamma, pappa, Emma, Sophie\n{repeat} _ _ {print} 'Disken kommer att skötas av ' _ _ _\n```\n"
                start_code: "{print} 'Vem diskar?'"
        description: Använd datorn för att se vem som diskar
        default_save_name: Disk
    dice:
        name: Tärning
        description: Gör din egen tärning
        default_save_name: Tärning
        levels:
            3:
                story_text: "På den här nivån kan vi välja från en lista. I och med det kan vi låta datorn kasta tärning åt oss.\nTa en titt på de spel du har i garderoben hemma.\nFinns det spel med en (speciell) tärning? Du kan också kopiera den med den här koden.\nTill exempel tärningen i spelet Earthworms som har siffrorna 1 till 5 och en daggmask.\n\n![Tärning av daggmaskar med 1 till 5 och en daggmask på den](https://cdn.jsdelivr.net/gh/felienne/hedy@24f19e9ac16c981517e7243120bc714912407eb5/coursedata/img/dobbelsteen.jpeg)\n"
                example_code: "```\nval {is} 1, 2, 3, 4, 5, earthworm\n{print} Du kastade _ {at} {random}\n```\n"
                start_code: '{print} Vad kommer tärningen att visa den här gången?'
                story_text_2: "### Övning\nTärningarna i exemplet ovan är för ett visst spel. Kan du göra vanliga tärningar?\nEller andra specialtärningar från ett annat spel?\n"
                example_code_2: "```\nval {is} _\n```\n"
            4:
                start_code: "{print} 'Vad kommer tärningen att visa den här gången?'"
                story_text: "På den här nivån kan du också skapa tärningar. Men den här gången kan du prova det själv, utan exempelkod!\n\n### Övning\nGör dina egna tärningar i den här nivån.\nTips: Om du inte har någon aning om hur man gör tärningar. Ta en titt på dina tärningar från föregående nivå, men glöm inte att lägga till citattecken.\n"
            5:
                story_text: "Vi ska lägga till kommandona `{if}` och `{else}` till vår tärning!\n\n### Övning\nKomplettera exempelkoden så att koden säger \"Du kan sluta kasta\" när du har kastat en daggmask. Den ska säga \"Du måste kasta igen\" om du har kastat något annat.\n**Extra** Kanske vill du återskapa en tärning från ett helt annat spel. Det går också bra! Hitta då på en egen reaktion, t.ex. 'ja' för 6 och 'synd' för något annat.\n"
                start_code: "{print} 'Vad kommer tärningen att visa den här gången?'"
                example_code: "```\nvalmöjligheter {is} 1, 2, 3, 4, 5, daggmask\nkast {is} val {at} {random}\n{print} 'du har kastat' kast\n_ throw {is} daggmask {print} 'Du kan sluta kasta.'\n_ {print} 'Du måste kasta igen!'\n```\n"
            6:
                story_text: "Du kan också låta en daggmask dö igen, men nu kan du också beräkna hur många poäng som har kastats.\nDu kanske vet att masken räknar fem poäng för daggmaskar. Nu kan du efter ett kast direkt räkna ut hur många poäng du har kastat.\nDetta är koden för att beräkna poäng för en tärning:\n\n### Övning\nKan du göra koden så att du får fram den totala poängen för åtta tärningar? För att göra det måste du klippa och klistra in några rader i koden.\n"
                start_code: "{print} 'Vad kommer tärningen att visa den här gången?'"
                example_code: "```\nval = 1, 2, 3, 4, 5, daggmask\npoäng = 0\nkast = val {at} {random}\n{print} 'du kastade ' kast\n{if} kast {is} daggmask poäng = poäng + 5 {else} poäng = poäng + kast\n{print} 'det är ' poäng ' poäng'\n```\n"
                example_code_2: "\nLyckades du räkna ut poängen för åtta tärningar? Det behövdes en hel del klippande och klistrande, eller hur? Vi kommer att göra det enklare på nivå 7!\n"
            7:
                story_text: "Du kan också göra en tärning igen på den här nivån. Med `{repeat}` -koden kan du enkelt kasta en handfull tärningar.\n\n### Övning\nFörsök att avsluta exempelkoden!  **Extrauppgift** Tänk på ett spel du känner till som använder en tärning och programmera det med hjälp av `{repeat}`.\n"
                example_code: "```\nval = 1, 2, 3, 4, 5, 6\n_ _ _ _ _ _ _\n```\n"
                start_code: "{print} 'Vad kommer tärningarna att visa den här gången?'"
            10:
                story_text: "### Övning\nÄr alla för långsamma på att kasta tärning? På den här nivån kan du låta Hedy kasta allas tärningar på en gång!\nByt ut namnen mot namnen på dina vänner eller familj och avsluta koden så att alla kastar.\n"
                example_code: "```\nspelare = Ann, John, Jesse\nval = 1, 2, 3, 4, 5, 6\n_ _ _ _\n    {print} 'spelare ' kastar ' val {at} {random}\n   {sleep}\n```\n"
                start_code: '# skriv din kod här'
            15:
                story_text: "I det här spelet måste du kasta en sexa på så få försök som möjligt.\n"
                example_code: "```\nalternativ = 1, 2, 3, 4, 5, 6\n{print} 'Kasta 6 så fort du kan!'\nkastad = 0\nförsök = 0\n{while} kastad != 6\n    kastad = alternativ {at} {random}\n    {print} 'Du kastade ' kastad\n    försök = försök + 1\n{print} 'Ja! Du kastade 6 på ' försök ' försök.'\n```\n"
                start_code: '# skriv din kod här'
    rock:
        description: Gör ditt eget sten, sax, påse-spel
        levels:
            15:
                start_code: '# skriv din kod här'
                story_text: "Spela tills du slår datorn! Men först måste du göra klart exempelkoden …\n"
                example_code: "```\nvunnit = 'nej'\nalternativ = 'sten', 'sax', 'påse'\n{while} vunnit == 'nej'\n    ditt_val = {ask} 'Vad väljer du?'\n    datorval = alternativ {at} {random}\n    {print} 'du valde ' ditt_val\n    {print} 'datorn valde ' datorval\n    {if} datorval == ditt_val\n        {print} 'Oavgjort!'\n    {if} computer_choice == 'sten' {and} your_choice == 'sax'\n        {print} 'Du förlorade!'\n    {if} computer_choice == 'sten' {and} your_choice == 'påse'\n        {print} 'Du vann!'\n        vunnit = 'ja'\n_\n```\n"
            1:
                story_text: "I nivå 1 kan du börja med ett sten, sax, påse-spel.\n\nMed `{ask}` kan du göra ett val, och med `{echo}` kan du upprepa det valet.\n"
                example_code: "```\n{print} Vad väljer du?\n{ask} Välj mellan sten, sax eller påse.\n{echo} Så ditt val var:\n```\n"
                start_code: '{print} Välkommen till din egen sten sax påse!

                    {ask} Vad väljer du?

                    '
                story_text_2: "### Övning\nIstället för att använda ord skulle man kunna använda emojier: ✊✋✌\nKan du skriva en kod med emojier?\n"
                example_code_2: "```\n{print} vad väljer du?\n{ask} välj bland _\n{echo} så ditt val var:\n```\n"
            2:
                story_text: "På den här nivån kan du öva på att variablerna, så att du kan göra spelet sten, sax, påse på nästa nivå!\n### Övning\nAvsluta koden genom att fylla i **variabeln** i tomrummen.\nDet här spelet är inte särskilt interaktivt, men inga bekymmer! På nästa flik kommer du att lära dig hur du använder variabler med kommandot `{ask}` för att göra ditt spel interaktivt!\n"
                example_code: "```\nval är sten\n{print} Jag väljer _\n```\n"
                start_code: '# skriv din kod här'
            3:
                story_text: "Du kan använda kommandot `{at} {random}` för att låta datorn välja sten, sax eller påse!\n\n### Övning\nAvsluta koden genom att använda kommandot `{at} {random}`.\n"
                example_code: "```\nval {is} sten, sax, påse\n{print} val _\n```\n"
                start_code: '{print} Välkommen till ditt eget sten, sax, påse!'
                story_text_2: "**Extra** Gör ett spel för två spelare. Be först de två spelarna att mata in sina namn. Låt sedan datorn slumpmässigt välja åt dem.\n"
                example_code_2: "```\nval {is} sten, sax, påse\nspelare_1 {is} {ask} Namn på spelare 1:\n_\n```\n"
            4:
                story_text: "På den här nivån kan vi också programmera sten, sax, påse. Men om du vill lägga till text måste du använda citattecken även här.\n### Övning\nKopiera din kod från föregående nivå och få den att fungera genom att använda citattecken efter varje `{print}` - eller `{ask}` -kommando.\n"
                start_code: "{print} 'Välkommen till ditt eget sten, sax, påse!'"
            5:
                story_text: "På den här nivån kan vi avgöra om det är oavgjort eller inte. För det behöver du det nya nyckelordet `{if}`.\n\n### Övning\nAvsluta koden genom att fylla i luckorna:\n* Låt datorn välja ett slumpmässigt alternativ\n* Fråga spelaren vad han eller hon vill välja\n* Fyll i de korrekta variablerna på rad 4 och 5.\n* Gör klart rad 6 så att Hedy kan kolla om det är oavgjort eller inte.\n"
                example_code: "```\nalternativ {is} sten, sax, påse\ndatorns_val {is} _\nval {is} _\n{print} 'du valde ' _\n{print} 'datorn valde ' _\n{if} _ {is} _ {print} 'oavgjort!' {else} {print} 'inte oavgjort'\n```\n\nFyll i rätt kod i tomrummen för att se om det är oavgjort.\n"
                start_code: "{print} 'Välkommen till ditt eget sten, sax, påse!'"
            9:
                story_text: "På den här nivån kan du programmera hela spelet sten, sax, påse genom att nästla `{if}` -kommandon. \n\n### Övning\nKan du göra klart koden? Programmet behöver berätta vem som har vunnit för varje kombination.\n\n**Extrauppgift** Vill du spela mer än en omgång? Bygg ut koden så att du kan spela flera omgångar. Du kan till och med använda en `{ask}` för att fråga användaren hur många rundor hen vill spela.\n"
                example_code: "```\nval {is} sten, sax, påse\nditt_val {is} {ask} 'Vad väljer du?'\n{print} 'Du väljer ' ditt_val\ndatorval {is} val {at} {random}\n{print} 'Datorn väljer ' datorval\n{if} datorval {is} ditt_val\n    {print} 'Oavgjort'\n{if} datorval {is} sten\n    {if} ditt_val {is} påse\n        {print} 'Du vann!'\n    {if} ditt_val {is} sax\n        {print} 'Du förlorade!'\n# gör klart koden\n```\n"
                start_code: '# skriv din kod här'
            10:
                story_text: "### Övning\nPå de tidigare nivåerna har du ofta gjort ditt eget sten-sax-påse-spel. Kan du skriva klart koden och använda kommandot {for} rätt så spelet fungerar?\n"
                example_code: "```\nval = _\nspelare = _\n{for} _\n```\n"
                start_code: '# skriv din kod här'
            13:
                story_text: "Med kommandot `{and}` kan du förkorta din sten-, sax-, påsekod! Kolla in exempelkoden.\n\n### Övning\nGör färdigt koden så att en vinnare alltid koras. Kör din kod några gånger för att kolla att vinnaren alltid skrivs ut.\n"
                example_code: "```\nalternativ = 'sten', 'sax', 'påse'\nditt val = {ask} 'Vad väljer du?'\ndatorval = alternativ {at} {random}\n{print} 'Du väljer' ditt_val\n{print} 'Datorn väljer ' datorval\n{if} datorval {is} ditt_val\n    {print} 'Oavgjort'\n{if} datorval {is} 'sten' {and} ditt_val {is} 'påse'\n    {print} 'Du vann!'\n{if} datorval {is} 'sten' {and} ditt_val {is} 'sax'\n    {print} 'Datorn vann!'\n_\n```\n"
                start_code: '# skriv din kod här'
        name: Sten, sax, påse
        default_save_name: Sten_2
    calculator:
        name: Kalkylator
        description: Gör en kalkylator
        default_save_name: Kalkylator
        levels:
            6:
                story_text: "Nu när du kan räkna kan du göra en miniräknare själv!\n"
                example_code: "```\ntal_1 {is} {ask} 'Mata in första talet:'\ntal_2 {is} {ask} 'Mata in andra talet:'\nrätt_svar = tal_1 * tal_2\n{print} tal_1 ' gånger ' tal_2 ' är ' rätt_svar\n```\n"
                story_text_2: "### Övning\nKalkylatorn här ovanför räknar ut svaret åt dig, men du kan också göra ett program för att testa dina egna matteskills, så här:\nFyll i luckorna för att göra det klart!\n"
                example_code_2: "```\nrätt_svar = 11 * 27\nanswer = {ask} 'Hur mycket är 11 gånger 27?'\n{if} svar {is} _ {print} 'Bra jobbat!'\n{else} {print} 'Fel! Det var ' _\n```\n"
                start_code: "{print} 'Välkommen till den här kalkylatorn!'"
                story_text_3: "\n**Extrauppgift** Du kan också låta datorn göra slumpmässiga summor på egen hand med random.\n\nSå här väljer du ett antal tabeller att öva på och av det får du alltid en annan summa:\n"
            9:
                story_text: "På nivå 6 gjorde du en miniräknare och på den här nivån kan du utöka den koden så att den ställer flera frågor.\n\n### Övning 1\nKan du avsluta rad 10 så programmet fungerar?\n\n### Övning 2\nGe spelaren feedback när den matar in rätt eller fel svar. För att göra det behöver du lägga till ett `{else}`.\n"
                example_code: "```\npoäng = 0\n{repeat} 10 {times}\n    tal = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n    tal1 = tal {at} {random}\n    tal2 = tal {at} {random}\n    korrekt_svar = tal1 * tal 2\n    {print} 'Vad är ' tal1 ' gånger ' tal2 '?'\n    svar = {ask} 'Skriv ditt svar här ...'\n    {print} 'Du svarade' svar\n    {if} _ {is} _\n        poäng = poäng + 1\n{print} 'Bra jobbat! Du har ... ' poäng ' av 10 poäng!'\n```\n"
                start_code: "{print} 'Välkommen till den här kalkylatorn!'"
            12:
                start_code: '# skriv din kod här'
                story_text: "På den här nivån kan du göra en miniräknare som fungerar för decimaltal.\n\n### Övning 1\nFyll i tomrummen för att göra klart miniräknaren. Kom ihåg att använda punkt och inte komma för decimaltal.\n\n### Övning 2\nSkapa ett nytt matematikövningsprogram, men använd nu decimaltal.\nSkapa en lista med tal, välj två som ska multipliceras och låt spelaren svara.\nOch naturligtvis måste du kolla svaret! **Extrauppgift** Öka svårighetsgraden genom att lägga till liv: En spelare förlorar ett liv för ett felaktigt svar och efter tre felaktiga svar slutar spelet.\n"
                example_code: "```\ntal1 = {ask} 'Vilket är det första talet?'\ntal1 = {ask} 'Vilket är det andra talet?'\nsvar = _\n{print} tal1 ' plus ' tal2 ' är ' _\n```\n"
            14:
                story_text: "På den här nivån kan du programmera spelet 'Gissa talet'\n"
                example_code: "```\n{print} 'Gissa talet'\ntal = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\ntalet = tal {at} {random}\nspel = 'pågår'\n{for} i {in} {range} 1 {to} 10\n    {if} spel == 'pågår'\n        gissning = {ask} 'Vilket tal tror du det är?'\n        {if} gissning > talet\n            {print} 'Lägre!'\n        {if} gissning < talet\n            {print} 'Högre!'\n        {if} gissning == talet\n            {print} 'Du vann!'\n            spel = 'slut'\n```\n"
                start_code: '# skriv din kod här'
            10:
                story_text: "Det här räknespelet hjälper dig att öva på multiplikationstabellerna!\n### Övning\nKan du lägga till fler tal i listan så du kan öva multiplikationstabellerna upp till 10?\n"
                example_code: "```\ntal = 1, 2, 3\n{for} tal1 {in} tal\n    {for} tal2 {in} tal\n        svar = {ask} 'Hur mycket är ' tal2 ' gånger ' tal1 '?'\n        rätt = tal1 * tal2\n        {if} svar {is} rätt\n            {print} 'Bra jobbat!'\n        {else}\n            {print} 'Det är fel. Rätt svar är ' rätt\n```\n"
                start_code: '# skriv din kod här'
            15:
                story_text: "Du kan lägga till `{while}` -slingan i räknespelet som du lärder dig göra på en tidigare nivå.\nDet gör att spelaren inte kan fortsätta till nästa fråga om den svarar fel.\n"
                example_code: "```\npoäng = 0\n{for} i {in} {range} 0 {to} 9\n    tal = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n    tal1 = tal {at} {random}\n    tal2 = tal {at} {random}\n    rätt = tal1 * tal2\n    svar = 0\n    {while} svar != rätt\n        {print} 'Hur mycket är ' tal1 ' gånger ' tal2 '?'\n        svar = {ask} 'Fyll i ditt svar:'\n        {print} 'Ditt svar är ' svar\n    {print} 'Bra jobbat!'\n{print} 'Du vann!'\n```\n"
                start_code: '# skriv din kod här'
            11:
                story_text: "Med en `{for}` kan du förenkla övningsprogrammet för multiplikationstabeller.\n\n### Övning 1\nFörbättra exempelkoden så att den skriver ut en snygg multiplikationstabell: <br> \"1 gånger 10 är 10\", \"2 gånger 10 är 20\", etc.\n\n### Övning 2\nGå tillbaka till din multiplikationskod på nivå 10 och ändra den så att den använder `{for}` och `{range}`.\n"
                example_code: "```\ntal = 10\n{for} i {in} {range} 1 till 10\n    {print} i * tal\n```\n"
                start_code: '# skriv din kod här'
            13:
                example_code: "```\nsvar1 = {ask} 'Vad är 10 gånger 7?'\nsvar2 = {ask} 'Vad är 6 gånger 7?'\n{if} _ _ _ _ _ _ _\n    {print} _\n```\n"
                story_text: "\n### Övning 1\nVi gör övningsprogrammet lite svårare. Spelaren måste nu svara rätt på två frågor. Fyll i de tomma fälten för att göra klart programmet.\n\n### Övning 2 Extrauppgift\nIbland har beräkningar flera rätta svar. Till exempel kan 10 delas med 5 och med 2. Så frågan 'Vilket tal delar 10?' kan besvaras med 2 och med 5.\nBe om en beräkning som har flera korrekta svar, be spelaren att svara på den och avgör om den är korrekt med hjälp av `{or}`.\nTöm programmeringsfältet och skapa din egen lösning.\n"
                start_code: '# Skriv din kod här'
    restaurant:
        levels:
            4:
                start_code: '# skriv din kod här'
                story_text: "På den här nivån måste du använda citattecken när du använder kommandona `{print}` eller `{ask}`.\n\n### Övning\nLägg till citattecken till den här koden för att få det att fungera! Var försiktig: variabler ska inte vara inom citattecken.\nAnvänd sedan kommandot `{clear}` för att bara visa en rad i taget på utdataskärmen.\n\n### Övning 2\nGå tillbaka till föregående nivå och kopiera din restaurangkod. Få koden att fungera på den här nivån genom att lägga till citattecken på rätt ställen och lägga till några `{clear}`-kommandon.\n"
                example_code: "```\n_ Lägg till citattecken i den här koden _\n{print} Välkommen till Restaurang Chez Hedy!\n{print} Idag serverar vi pizza eller lasagne.\nmat {is} {ask} Vad vill du äta?\n{print} Bra val! Det är min älsklingsrätt!\ntopping {is} {ask} Vill du ha kött eller grönsaker till det?\n{print} mat med topping är på väg!\ndryck {is} {ask} Vad vill du dricka till?\n{print} Tack för din beställning.\n{print} Din mat och dryck kommer strax!\n```\n"
            5:
                story_text: "### Övning\nExempelkoden visar hur du kan programmera att du har slut på ett menyalternativ i din restaurang.\nKopiera din egen restaurangkod från de tidigare nivåerna. Skapa ett problem i din restaurang och koda det, som i exempelkoden.\nDu kan till exempel också få slut på ett menyalternativ, eller så tar du inte kreditkort eller så är glassmaskinen trasig.\n\n**Extrauppgift** Har du programmerat problemet och lämpliga svar? Försök sedan att lägga till fler `{if}`- och `{else}`-kommandon i din kod.\nFörsök att lägga till en `{if}` efter varje `{ask}`-kommando i din kod för att göra den så interaktiv som möjligt!\n"
                example_code: "```\ndrycker_i_lager {is} vatten, läsk, cola, apelsinjuice\ndryck {is} {ask} 'Vad vill du dricka?'\n{if} dryck {in} drycker_i_lager {print} 'En' dryck 'på väg!'\n{else} {print} 'Tyvärr, vi har inte det'\n```\n"
                start_code: '# skriv din kod här'
            9:
                start_code: '# skriv din kod här'
                story_text: "På den här nivån kan du använda dig av nästlad kod för att göra din restaurang mer realistisk och roligare!\n\n### Övning\nIndragen (mellanslagen) togs bort i exempelkoden. \nKan du räkna ut hur mycket indrag varje rad behöver för att koden ska fungera korrekt?\nOm kunden beställer pizza ska Hedy inte fråga vilken sås kunden vill ha.\n\n**Extrauppgift** En restaurang har inte alla såser i lager. Gör en lista över tillgängliga såser och ge ett svar vid varje beställning om ni säljer den. <br>\n**Extrauppgift** Pizzor har en fyllning. Fråga kunderna vad de vill ha.<br>\n**Extrauppgift** Vill kunderna ha något att dricka? Fråga dem också! <br>\n"
                example_code: "```\n{print} 'Välkommen till restaurang Chez Hedy!'\npeople = {ask} 'Hur många personer är det i sällskapet?'\n{print} 'Bra!'\npris = 0\n{repeat} personer {times}\n_ mat = {ask} 'Vad önskas?'\n_ {print} mat\n_ {if} mat {is} pommes frites\n_ pris = pris + 3\n_ sås = {ask} 'Vilken typ av sås vill du ha till dina pommes frites?'\n_ {if} sås {is} nej\n_ {print} 'ingen sås'\n_ {else}\n_ pris = pris + 1\n_ {print} 'med ' sås\n_ {if} mat {is} pizza\n_ pris = pris + 4\n{print} 'Det blir ' pris ' dollar'\n{print} 'Smaklig måltid!'\n```\n"
            10:
                story_text: "På den här nivån lär du dig hur du enkelt tar upp beställningar för olika maträtter.\n\n### Övning 1\nGör klart koden med en `{ask}` där det är tomt så att kunden får en fråga vad de vill äta för varje rätt.\n"
                example_code: "```\nrätter = förrätt, varmrätt, efterrätt\n{for} rätt {in} rätter\n    {print} 'Vad önskas till ' rätt '?'\n    _\n    _\n```\n"
                story_text_2: "### Övning\nNaturligtvis kan du också beställa för flera personer!\nKan du lägga till rätt mängd indrag före varje rad så att koden fungerar korrekt?\nTips: Vissa rader behöver inte ha någon indragning alls.\n"
                example_code_2: "```\n_ rätter = förrätt, varmrätt, efterrätt\n_ namn = Timon, Onno\n_ {for} namnet {in} namn\n_ {for} rätt {in} rätter\n_ mat = {ask} namnet ', vad vill du ha till ' rätt '?'\n_ {print} namnet ' beställer ' mat ' till ' rätt\n```\n"
                start_code: rätter = förrätt, huvudrätt, efterrätt
            1:
                story_text: "På nivå 1 kan du göra din egen virtuella restaurang och ta emot dina gästers beställningar.\n"
                example_code: "```\n{print} Välkommen till Hedys restaurang 🍟\n_ Vad vill du beställa?\n{echo} Så du vill beställa\n{print} Tack för din beställning!\n{print} Den är på väg!\n```\n"
                story_text_2: "### Övning\nKopiera exempelkoden till din inmatningsskärm genom att klicka på den gula knappen.\nFyll först i rätt kommando på de tomma platserna för att koden ska fungera korrekt.\nLägg sedan till minst fyra rader kod till restaurangprogrammet.\nFråga kunden vad han eller hon vill dricka och fråga om han eller hon vill betala med kontanter eller kort.\nFundera till sist ut ett trevligt sätt att säga hejdå till din kund.\n"
                start_code: '# skriv din kod här'
            2:
                story_text: "På nivå 2 kan du utöka din restaurang genom att använda variabler. På nivå 1 kunde Hedy bara `{echo}` beställningen en gång och bara komma ihåg det sista som beställdes.\nNu kan du använda variabler och Hedy kan komma ihåg både maten och påläggen!\n"
                example_code: "```\n{print} Välkommen till Hedys restaurang!\n{print} Idag serverar vi pizza eller lasagne.\nmat {is} {ask} Vad vill du äta?\n{print} Bra val! Det är min älsklingsrätt!\ntopping {is} {ask} Vill du ha kött eller grönsaker till?\n{print} mat med topping är på väg!\n```\n"
                start_code: '# skriv din kod här'
                story_text_2: "#### Övning\nKopiera din egen restaurangkod från föregående nivå till inmatningsskärmen nedan.\nRätta koden genom att byta ut kommandona `{ask}` och `{echo}` och använda variabler, som du har lärt dig på den här nivån.\n\nNu när din kod fungerar igen är det dags att lägga till något mer.\nTitta på den sista raden i exempelkoden: `{print} mat med topping är på väg!`\nPå den raden används två variabler för att skapa en sammanfattning av beställningen.\nLägg nu till din egen sammanfattning av den mat och dryck som kunden beställt.\n\n**Extra** Nu när du har lärt dig hur man använder variabler kan du använda så många variabler i en rad som du vill. Kan du lägga till fler variabler i din kod, till exempel äta på plats eller take away, kontant eller kort, med eller utan sugrör osv.\n"
            3:
                story_text: "Har du svårt att bestämma vad du vill äta till middag? Du kan låta Hedy välja åt dig!\nLägg helt enkelt till listor över dina favoriträtter (eller minst favoriträtter) så kan Hedy slumpmässigt välja din middag.\nDu kan också ha lite kul genom att låta Hedy välja priset för din middag också! Vad kommer du att få?\n"
                example_code: "```\nrätter {is} spagetti, brysselkål, hamburgare\n{print} Du kommer att få rätter {at} {random} ikväll!\npriser {is} 1 euro, 10 euro, 100 euro\n{print} Det kostar priser {at} {random} tack.\n```\n"
                story_text_2: "### Övning\nGör nu din egen version av den slumpmässiga restaurangen.\nGör själv en lista över förrätter, huvudrätter, efterrätter, drycker och priser.\nAnvänd sedan kommandona `{print}` och `{at} {random}` för att tala om för kunden vad som kommer att finnas menyn ikväll.\n"
                example_code_2: "```\n{print} Välkommen till din egen slumpmässiga restaurang!\nförrätter {is} _\nhuvudrätter {is} _\nefterrätter {is} _\ndrycker {is} _\npriser {is} _\n_\n```\n"
                start_code: '# skriv din kod här'
            6:
                story_text: "På den här nivån kan du använda matematik för att beräkna det totala priset på din kunds beställning, vilket kan göra din virtuella restaurang mer realistisk.\nMen du kan också lägga till många fler saker till din virtuella restaurang, till exempel fler rätter.\n\n### Övning\nDu kan lägga till många fler saker till din virtuella restaurang. Kan du till exempel …\n- fråga hur många som kommer och multiplicera priset med det beloppet?\n- lägga till en ny rätt?\n- ge folk rabatt när de anger en (hemlig) kupongkod?\n- lägga till en barnmeny?\n- komma på andra roliga saker att lägga till?\n"
                example_code: "\nDu kan skapa en enkel restaurangkod, så här:\n```\n{print} 'Välkommen till restaurang Chez Hedy'\n{print} 'Här är vår meny:'\n{print} 'Våra huvudrätter är pizza, lasagne eller spagetti'\nhuvudrätt = {ask} 'Vilken huvudrätt vill du ha?'\npris = 0\n{if} huvudrätt {is} pizza pris = 10\n{if} huvudrätt {is} lasagne pris = 12\n{if} huvudrätt {is} spagetti pris = 8\n{print} 'Du har beställt ' huvudrätt\n{print} 'Det blir ' pris ' dollar, tack'\n{print} 'Tack, smaklig måltid!'\n```\n"
                start_code: '# skriv din kod här'
            7:
                story_text: "På den här nivån har du lärt dig hur du använder kommandot `{repeat}` för att upprepa en kodrad ett visst antal gånger.\nDu kan använda det i din restaurang för att `{ask}` flera personer vad de vill äta.\n\n### Övning\nKan du komplettera koden? Hedy måste upprepa den här frågan lika många gånger som det finns människor. Så om det finns fem personer måste frågan ställas fem gånger.\n**Extrauppgift** Utöka din kod med fler frågor, till exempel om drycker eller sås.\n"
                example_code: "```\n{print} 'Välkommen till restaurang Chez Hedy'\npeople = {ask} 'Hur många personer är det i sällskapet?'\n```\n"
                start_code: '# skriv din kod här'
            11:
                start_code: '# skriv din kod här'
                story_text: "Vi kan använda `{for}` med `{range}` för att skriva ut beställningar från flera kunder på ett ordnat sätt.\n\n### Övning\nAvsluta restaurangkoden så att du kan ta upp en beställning av flera personer. Skriv ut ordernumret varje gång: 'Order 1', 'Order 2' osv.\nÄr du osäker på hur du ska gå till väga? Ta en titt på din nivå 8-kod.\n\n**Extrauppgift** På nivå 9 använde restaurangen även priser. Det kan du lägga till här också!\n"
                example_code: "```\n{print} 'Välkommen till restaurang Hedy!'\nmänniskor = {ask} 'För hur många personer vill du beställa?'\n{print} 'Du vill alltså beställa för ' människor ' människor.'\n{print} 'Då börjar vi!'\n```\n"
            12:
                story_text: "Från och med den här nivån kan du använda decimaltal för att göra menyn mer realistisk.\n\n### Övning\nKan du komma på en kod för att ge dina vänner och din familj 15% rabatt?\n"
                example_code: "```\npris = 0.0\nmat = {ask} 'Vad önskas?'\ndricka = {ask} 'Vad vill du dricka?'\n{if} mat {is} 'hamburgare'\n    pris = pris + 6.50\n{if} mat {is} 'pizza'\n    pris = pris + 5.75\n{if} dricka {is} 'vatten'\n    pris = pris + 1.20\n{if} dricka {is} 'läsk'\n    pris = pris + 2.35\n{print} 'Det blir ' pris ' dollar, tack'\n```\n"
                start_code: '# skriv din kod här'
            8:
                story_text: "På den här nivån kan du göra din virtuella restaurang mer avancerad genom att upprepa flera kodrader. Till exempel så här:\n"
                example_code: "```\n{print} 'Välkommen till restaurang Chez Hedy!'\npersoner = {ask} 'Hur många personer är det i sällskapet idag?'\n{print} 'Bra!'\n{repeat} personer {times}\n    mat = {ask} 'Vad skulle du vilja beställa?'\n    {print} mat\n{print} 'Tack för beställningen!'\n{print} 'Smaklig måltid!'\n```\n"
                story_text_2: "### Övning\nDen här koden kan utökas med fler alternativ på menyn, t.ex. drycker eller flera rätter eller efterrätter. Lägg till minst ett ytterligare alternativ.\n**Extrauppgift** Lägg till ännu fler artiklar, så många alternativ du vill!\n"
                start_code: '# skriv din kod här'
            13:
                story_text: "På den här nivån kommer du att lära dig nya kommandon för att utöka din kod ytterligare.\n\n### Övning 1\nPlacera ett `{and}` och ett `{or}` på den logiska platsen i programmet.\n\n### Övning 2\nUtöka din restaurang med minst ett till `{and}` och ett `{or}`.\nSkapa till exempel en speciell rabattkupong som endast gäller pizza, eller ge din kund en gratis dryck\nmed pommes frites och pannkakor. Eller något helt annat förstås!\n"
                example_code: "```\n    {print} 'Detta är vår rabattmeny'\n    pris = pris - 3\n{if} dryck {is} 'vatten' _ dryck {is} 'juice'\n    {print} 'Det är ett hälsosamt val'\n{print} 'Det kostar ' pris ' dollar'\n```\n"
                start_code: '# skriv din kod här'
            15:
                story_text: "Med `{while}` kan du göra så att dina kunder kan fortsätta att lägga till beställningar tills de är klara.\n"
                example_code: "```\n{print} 'Välkommen till McHedy'\nmer = 'ja'\n{while} mer == 'ja'\n    order = {ask} 'Vad vill du beställa?'\n    {print} order\n    mer = {ask} 'Vill du beställa något mer?'\n{print} 'Tack!'\n```\n"
                start_code: '# skriv din kod här'
        name: Restaurang
        description: Skapa din egen virtuella restaurang
        default_save_name: Restaurang
    fortune:
        levels:
            1:
                story_text: "Har du någonsin varit på marknad och fått din framtid förutspådd av en spådam? Eller har du någonsin spelat med en magisk åttaboll?\nDå vet du säkert att de inte riktigt kan förutse din framtid, men det är ändå kul att spela!\n\nPå de kommande nivåerna kan du lära dig hur du skapar din egen spåmaskin!\nPå nivå 1 kan du börja enkelt genom att låta Hedy presentera sig som en spådam och låta henne `{echo}` spelarnas svar.\nSå här:\n"
                example_code: "```\n_ Hej, jag är spådamen Hedy!\n_ Vem är du?\n_ Låt mig ta en titt i min kristallkula.\n_ Jag ser ... Jag ser ...\n_ Ditt namn är\n```\n"
                story_text_2: "### Övning\nKopiera exempelkoden till din inmatningsskärm och fyll i de tomma rutorna så att koden fungerar.\n**Extra** Ändra koden och låt spådamen inte bara förutsäga ditt namn utan även din ålder, ditt favoritsportlag eller något annat om dig själv.\n"
                start_code: '# skriv din kod här'
            3:
                story_text: "På de tidigare nivåerna har du skapat din första spåmaskin, men Hedy kunde inte förutsäga någonting, bara `{echo}`.\nPå den här nivån kan du använda en variabel och kommandot `{at} {random}` för att verkligen låta Hedy välja ett svar åt dig. Titta till exempel på den här koden:\n"
                example_code: "```\n{print} Jag är spådamen Hedy!\nfråga {is} {ask} Vad vill du veta?\n{print} Det här är vad du vill veta: fråga\nsvar {is} ja, nej, kanske\n{print} Min kristallkula säger …\n{sleep} 2\n{print} svar {at} {random}\n```\n"
                story_text_2: "### Övning\nJust nu kan Hedy bara svara ja, nej eller kanske. Kan du ge Hedy fler svarsalternativ, till exempel 'definitivt' eller 'fråga igen'.\n"
                start_code: '# skriv din kod här'
            4:
                start_code: '# skriv din kod här'
                story_text: "Den här nivån har inga nya funktioner, men ger dig chansen att öva på att använda citattecken.\nDu kan göra om din kod från nivå 3 och se till att lägga till citattecken på rätt ställen!\n\nTänk på att vi på nivå 3 inte kunde använda ordet 'fråga' både som namn på variabeln och som ett normalt ord som kan skrivas ut.\nCitattecken på nivå 4 gör detta möjligt!\n\n### Övning\nVi har tagit bort alla citattecken från den här exempelkoden – kan du lägga till dem på alla ställen där det behövs?\n\n### Övning 2\nGå tillbaka till den föregående nivån och kopiera din spådomskod. Få koden att fungera på den här nivån genom att lägga till citattecken på rätt ställen.\n"
                example_code: "```\n_ Lägg till citattecken i denna kod _\n{print} Jag är spådamen Hedy!\nfråga {is} {ask} Vad vill du veta?\n{print} Detta är din fråga: fråga\nsvar {is} ja, nej, kanske\n{print} Min kristallkula säger ...\n{sleep} 2\n{print} svar {at} {random}\n```\n"
            10:
                story_text: "På den här nivån lär du dig att programmera spelet MASH (M=herrgård, A=lägenhet, S=stuga, H=hus). I det här spelet kan du förutsäga för alla spelare samtidigt hur deras framtid kommer att se ut.\n\n### Övning\nFyll i tomrummen genom att använda de nya kommandon du lärt dig på den här nivån.\n"
                example_code: "```\nbostäder = en herrgård, en lägenhet, ett skjul, ett hus\nkärlekar = ingen, en kunglighet, sin granne, sin sanna kärlek\nhusdjur = hund, katt, elefant\nnamn = Jenna, Ryan, Jim\n_\n    {print} namn ' bor i ' bostäder {at} {random}\n    {print} namn ' kommer att gifta sig med ' älskar {at} {random}\n    {print} namn ' kommer att få en ' husdjur {at} {random} ' som husdjur.\n   {sleep}\n```\n"
                start_code: '# place your code here'
            5:
                story_text: "### Övning\nI exempelkoden ser du hur man gör ett spåprogram som låter dig vända oddsen till din fördel. Detta fuskprogram säger alltid att du kommer att vinna på lotteriet, men dina vänner kommer aldrig att vinna.\n\nAnvänd detta för att göra ditt eget program – var kreativ! Du kan till exempel skriva kod som förutspår att:\n* ditt favoritsportlag kommer att slå alla konkurrenter!\n* din favoritfilm kommer att väljas till filmkvällen!\n* du vinner biljetter till din favoritshow!\n* du är den vackraste av dem alla, som Snövits magiska spegel.\nSläpp loss din fantasi!\n\nDitt program måste bestå av minst 10 rader kod och måste ha minst ett `{if}`- och `{else}`-kommando.\n"
                example_code: "```\nvänner {is} Jordan, Lucy, Dave\n{print} 'Jag kan förutse om du kommer att vinna på lotteriet imorgon!'\nperson {is} {ask} 'Vem är du?'\nbra_svar {is} Hurra! Du vinner!, Du kommer definitivt att vinna!, Vi har en vinnare!\ndåligt_svar {is} Otur! Försök igen!, En annan person kommer att vinna, Du förlorar!\n{if} person {in} vänner {print} bra_svar {at} {random}\n{else} {print} dåligt_svar {at} {random}\n```\n"
                start_code: '# skriv din kod här'
            6:
                story_text: "På den här nivån kan du använda matematik i dina förutsägelser som spåkvinna. Detta gör att du kan hitta på (fåniga) formler för att beräkna framtiden.\nDu kan till exempel beräkna hur rik du kommer att bli eller hur många barn du kommer att få när du blir vuxen.\n\n\n\n### Övning\nKan du hitta på en egen (fånig) spåmaskin?\n"
                example_code: "```\n{print} 'Jag är spådamen Hedy!'\n{print} 'Jag kan förutsäga hur många barn du kommer att få när du blir stor!'\nålder = {ask} 'Hur gammal är du?'\nsyskon = {ask} 'Hur många syskon har du?'\nlängd = {ask} 'Hur lång är du i centimeter?'\nbarn = längd / ålder\nbarn = barn - syskon\n{print} 'Du kommer att få …'\n{sleep}\n{print} barn ' barn!'\n```\n"
                start_code: '# skriv din kod här'
            7:
                story_text: "### Övning\nAvsluta det här programmet som talar om för dig om din crush älskar dig tillbaka eller inte.\n"
                example_code: "```\n{print} 'Jag har en blomma med magiska kronblad'\n{print} 'Om du plockar kronbladen kommer blomman att berätta för dig om din crush älskar dig tillbaka'\nantal = {ask} 'Hur många kronblad vill du välja?'\nalternativ = de älskar dig, de älskar dig inte\n_ _ _ _ alternativ {at} {random}\n```\n"
                start_code: '# skriv din kod här'
            8:
                example_code: "```\n{print} 'Jag är spådamen Hedy!'\n{print} 'Du kan ställa tre frågor till mig.'\nsvar = ja, nej, kanske\n_ _ _\n   fråga = {ask} 'Vad vill du veta?'\n   {print} fråga\n   {sleep}\n   {print} 'Min kristallkula säger ...' svar {at} {random}\n```\n"
                start_code: '# skriv din kod här'
                story_text: "I nästa exempel kan du låta din spådam ställa flera frågor och även skriva ut dem!\n\n### Övning\nKan du fylla i rätt kommando på de tomma platserna?\n"
            12:
                story_text: "Från och med nivå 12 måste du också använda citattecken i listor, före och efter varje punkt.\n\n### Övning\nLägg till två förutsägelser i listan"
                example_code: "```\nspådomar = 'du kommer att halka på ett bananskal', _\n{print} 'Jag ska ta en titt i min kristallkula om din framtid.'\n{print} 'Jag ser … jag ser …'\n{sleep}\n{print} spådomar {at} {random}\n```\n"
                start_code: '# skriv din kod här'
        name: Spådam
        description: Låt Hedy förutspå framtiden
        default_save_name: Spådam
    haunted:
        levels:
            4:
                example_code: "```\n_ Lägg till citattecken till denna kod _\n{print} Fly från spökhuset!\n{print} Det finns tre dörrar framför dig ...\nval {is} {ask} Vilken dörr väljer du?\n{print} Du valde dörr ... val\nmonster {is} en zombie, en vampyr, INGENTING DU KLARADE DIG\n{print} Du ser ...\n{sleep}\n{print} monster {at} {random}\n ```\n"
                start_code: '# skriv din kod här'
                story_text: "På den här nivån lär du dig att använda citattecken i dina spel.\n\n### Övning\nKan du göra ditt spökhus så att det fungerar på nivå 4?\n\n### Övning 2\nGå tillbaka till föregående nivå och kopiera koden för ditt spökhus. Få koden att fungera i den här nivån genom att lägga till citattecken på rätt ställen.\n"
            5:
                start_code: '# skriv din kod här'
                story_text: "Fram till den här nivån har Spökhusspelet alltid bett spelaren att välja en dörr, men som du kanske har märkt behöver spelaren inte svara rätt.\nOm spelaren fyllde i ett helt slumpmässigt svar fungerade spelet fortfarande och spelaren kunde till och med vinna (trots att hen inte valde en dörr).\nI den här nivån kan du bara vinna spelet genom att välja samma dörr som Hedy valde slumpmässigt.\n\n### Övning\nKan du hitta de fyra ord som saknas för att göra koden färdig?\n"
                example_code: "```\n{print} 'Fly från spökhuset!'\n{print} 'Det finns tre dörrar framför dig ...'\ndörrar {is} 1, 2, 3\nmonster {is} varulv, mumie, vampyr, zombie\nvald_dörr {is} {ask} 'Vilken dörr väljer du?'\n{print} 'Du valde dörr ...' vald_dörr\n{sleep}\nkorrekt_dörr {is} dörrar {at} {random}\n_ _ _ _ {print} 'Bra! Du har rymt!'\n{else} {print} 'Åh nej! Du blir uppäten av en ...' monster {at} {random}\n```\n"
            16:
                start_code: '# skriv din kod här'
                story_text: "Detta spökhusspel använder sambandet mellan listorna du kan använda på denna nivå.\nTill exempel: alla egenskaper som tillhör zombien är först i alla listor, häxan på andra plats och vampyren på tredje plats.\nKolla in koden!\n"
                example_code: "```\nsiffror = [1, 2, 3]\ni = siffror[{random}]\nledtråd = ['morrande', 'ett kacklande skratt', 'fladdrande fladdermusvingar']\nmonster = ['zombie', 'häxa', 'vampyr']\notur = ['Din hjärna är uppäten', 'Du är för evigt förbannad', 'Du är biten']\ntur = ['Du kastar skinkan. Zombien är distraherad och börjar äta den.', 'Du sätter eld på gardinerna. Häxan flyr av rädsla för elden', 'Vampyren hatar vitlök och flyr']\nvapen = ['skinka', 'tändare', 'vitlök']\n{print} 'Du står framför en gammal herrgård'\n{print} 'Det är något som inte stämmer här'\n{print} 'Du hör ' ledtråd[i]\n{print} 'Du ska utforska det'\n{print} 'Du går in i köket och ser en tändare, en rå skinka och en vitlök.'\nditt_vapen = {ask} 'Vad tar du med dig?'\n{print} 'Med en ' ditt_vapen ' går du in i vardagsrummet'\n{print} 'Där hittar du ett ' monster[i]\nbehöver_vapen = vapen[i]\n{if} ditt_vapen == behövs_vapen\n    {print} 'Du använder ' ditt_vapen\n    {print} tur[i]\n    {print} 'DU VANN!'\n{else}\n    {print} 'Du valde fel vapen ...'\n    {print} otur[i]\n    {print} 'SPELET SLUT'\n```\n"
            2:
                start_code: monster1 {is} _
                story_text: "I detta spökhus kan du välja dina monster med emoji. Naturligtvis kan du också använda ord.\n"
                example_code: "```\nmonster_1 {is} 👻\nmonster_2 {is} 🤡\nmonster_3 {is} 👶\n{print} Du går in i spökhuset.\n{print} Plötsligt ser du ett monster_1\n{print} Du springer in i det andra rummet …\n{print} Men där väntar ett monster_2 på dig!\n{print} Åh, nej! Gå snabbt till köket.\n{print} Men när du går in anfaller monster_3 dig!\n```\n"
                story_text_2: "### Övning\nI exemplet ovan är monstren förutbestämda. Så varje gång du kör din kod blir resultatet detsamma.\nKan du lägga till `{ask}` -kommandon för att göra spökhuset interaktivt och låta spelarna välja vilka monster de stöter på?\n"
                example_code_2: "```\nmonster_1 {is} _\nmonster_2 {is} _\nmonster_3 {is} _\n{print} Du går in i spökhuset.\n{print} Plötsligt ser du ett monster_1\n{print} Du springer in i det andra rummet …\n{print} Men där väntar ett monster_2 på dig!\n{print} Åh, nej! Gå snabbt till köket.\n{print} Men när du går in anfaller monster_3 dig!\n```\n"
            3:
                story_text: "På de tidigare nivåerna har du gjort en början till ditt spökhusspel, men som du kanske har märkt har berättelsen alltid haft ett hemskt slut.\nPå den här nivån kan du göra din berättelse mer interaktiv genom att ändra utgången av spelet; ibland blir du uppäten, ibland flyr du!\nLåt Hedy bestämma slumpmässigt!\n\n### Övning\nKopiera exempelkoden och fyll i luckorna för att få det att fungera!\n\n**Extrauppgift** Den här berättelsen är ganska enkel, så du kanske kan lägga till en mer spännande berättelse.\nDu har också mycket begränsade resultat just nu – det finns bara tre alternativ för vad som finns bakom dörrarna. Kanske kan du komma på fler monster att lägga till i listan!\n"
                start_code: '# skriv din kod här'
                example_code: "```\n_ Fly från spökhuset!\n_ Det finns 3 dörrar framför dig …\n_ _ _ Vilken dörr väljer du?\n_ Du valde dörr … val\nmonster _ en zombie, en vampyr, INGENTING DU KOM UNDAN\n_ Du ser …\n{sleep}\n_ _ _ _\n```\n"
            1:
                story_text: "I det här äventyret jobbar du med att skapa ett spel där du måste fly från ett hemsökt hus genom att välja rätt dörr.\nOm du väljer rätt dörr kommer du att överleva, men om du inte gör det kan ett hemskt monster...\n \nPå nivå 1 börjar vi vårt spökhusspel med att hitta på en skrämmande historia och frågar spelaren vilket monster de kommer att se i spökhuset.\n"
                example_code: "```\n{print} Hur kom jag hit?\n{print} Jag minns att min vän sa åt mig att gå in i den gamla herrgården …\n{print} och plötsligt blev allt svart.\n{print} Men hur hamnade jag på golvet …?\n{print} Mitt huvud gör ont som om jag blivit slagen av ett baseballträ!\n{print} Vad är det för ljud?\n{print} Åh nej! Det känns som om jag inte är ensam i det här huset!\n{print} Jag måste ta mig ut härifrån!\n{print} Det finns tre dörrar framför mig …\n{ask} Vilken dörr ska jag välja?\n{echo} Jag väljer dörr\n{print} …?\n```\n"
                story_text_2: "### Övning\nKopiera exempelkoden till din inmatningsskärm genom att klicka på den gula knappen.\nAvsluta nu berättelsen genom att lägga till minst fem rader kod.\nKom ihåg att börja varje kodrad med ett `{print}`-kommando.\n"
                start_code: '{print} Hur kom jag hit?'
            9:
                story_text: "På den här nivån kan du använda dig av nästlade satser, vilket gör spökhuset ännu mer interaktivt!\n\n### Övning\nNu är det väldigt svårt att vinna det här spelet; kan du göra det lättare att vinna?\nÄndra din kod så att den bara har en felaktig dörr och två korrekta dörrar istället för en korrekt dörr och två felaktiga? \nTips: Detta innebär att du ändrar variabeln korrekt_dörr till fel_dörr och byter ut koden `{if}` och `{else}`.\nOch naturligtvis kan du också ändra berättelsen och göra den mer personlig. Ändra monstren eller gör det till en glad spelshow där du får en gåva!\n"
                example_code: "```\n{print} 'Fly från spökhuset!'\nspelare = lever\ndörrar = 1, 2, 3\nmonster = zombie, vampyr, jättespindel\n{repeat} 3 {times}\n    {if} spelare {is} lever\n        rätt_dörr {is} dörrar {at} {random}\n        {print} 'Det finns tre dörrar framför dig …'\n        vald_dörr = {ask} 'Vilken dörr väljer du?'\n        {if} vald_dörr {is} rätt_dörr\n            {print} 'Inga monster här!'\n        {else}\n            {print} 'Du blir uppäten av en ' monster {at} {random}\n            spelare = död\n    {else}\n        {print} 'GAME OVER'\n{if} spelare {is} lever\n    {print} 'Bra! Du överlevde!'\n```\n"
                start_code: "{print} 'Fly från spökhuset!'"
            11:
                story_text: "På den här nivån har vi ändrat kommandot `{for}` så att vi kan berätta för spelaren var den befinner sig. \n\n### Övning 1\nAvsluta programmet så att spelaren vet vilket rum den befinner sig i.\n\n### Övning 2\nGör programmet till ett äventyr genom att följa dessa steg:\n\n1. Gör en lista med valmöjligheter (till exempel: slåss eller fly).\n2. Se till att spelaren kan välja ett alternativ med `{ask}`\n3. Är svaret rätt? Då får den gå vidare till nästa monster. Ger den fel svar? Låt spelaren veta det med en `{print}`. \n\n**Extrauppgift** Om du väljer fel visas ändå ett monster! Hur kan man ändra på det?\n"
                start_code: "{print} 'Fly från spökhuset!'"
                example_code: "```\n{print} \"Escape from the Haunted House!\"\nmonster = zombie, vampyr, jättespindel\n_\n    {print} 'Rum' i\n    vilket_monster = monster {at} {random}\n```\n"
            14:
                story_text: "På den här nivån kan du använda symbolerna `<` och `>` för att lägga till liv i ditt spel.\n"
                example_code: "```\n{print} 'Fly från spökhuset'\nliv = 3\ndörrar = 1, 2, 3\nmonster = 'den onda häxan', 'en zombie', 'en sovande trehövdad hund'\n{for} i {in} {range} 1 {to} 10\n    {if} liv > 0\n        bra_dörr = dörrar {at} {random}\n        monster = monster {at} {random}\n        vald_dörr = {ask} 'Vilken dörr väljer du?'\n        {if} bra_dörr == vald_dörr\n            {print} 'Du har valt rätt dörr'\n        {else}\n            {print} 'Du ser … ' monster\n            {if} monster == 'en sovande trehövdad hund'\n                {print} 'Puuh … den sover'\n            {else}\n                {print} 'Du förlorar ett liv'\n                liv = liv - 1\n    {else}\n        {print} 'GAME OVER'\n```\n"
                start_code: '# skriv din kod här'
        name: Spökhuset
        description: Flykten från spökhuset
        default_save_name: Spökhuset
    piggybank:
        name: Spargris
        description: Räkna dina fickpengar!
        default_save_name: Spargris
        levels:
            12:
                story_text: "I det här äventyret får du lära dig att göra en digital spargris.\n\n### Övning\nGör klart koden för att beräkna hur mycket pengar du har och hur lång tid du behöver spara för att köpa det du vill ha!\n**Extrauppgift** Kanske har du redan sparat lite pengar? Dra av det från det belopp som du kommer att behöva spara ihop.\n"
                example_code: "```\n{print} 'Den digitala spargrisen'\nönskan = {ask} 'Vad skulle du vilja köpa?'\npris = {ask} 'Vad kostar det?'\nsparat = {ask} 'Hur mycket pengar har du redan sparat?'\nfickpeng = {ask} 'Hur mycket fickpengar får du per vecka?'\natt_spara = pris - sparat\nveckor = att_spara / fickpeng\n{print} 'Du kan köpa en ' _ ' om ' _ ' veckor.'\n```\n"
                start_code: '# skriv din kod här'
            14:
                story_text: "På den här nivån kan du låta Hedy berätta för dig om du har sparat tillräckligt med pengar!\n"
                example_code: "```\npengar = {ask} 'Hur mycket pengar har du sparat?'\nönskan = {ask} 'Hur mycket pengar behöver du?'\nveckopeng = {ask} 'Hur mycket fickpengar får du varje vecka?'\natt_spara = önskan - pengar\nveckor = att_spara / veckopeng\n{if} önskan > pengar\n    {print} 'Du måste spara lite mer!'\n    {print} 'Du behöver ' veckor ' veckor till.'\n{else}\n    {print} 'Bra! Du har tillräckligt'\n    {print} 'Nu handlar vi!'\n```\n"
                start_code: '# skriv din kod här'
    language:
        levels:
            16:
                example_code: "```\nfranska_ord = ['bonjour', 'ordinateur', 'pomme de terre']\növersättning = ['hej', 'dator', 'potatis']\npoäng = 0\n{for} i {in} {range} 1 {to} 3\n    svar = {ask} 'Vad betyder ' franska_ord[i] '?'\n    rätt = översättning[i]\n    {if} svar == rätt\n        {print} 'Rätt!'\n        poäng = poäng + 1\n    {else}\n        {print} 'Fel, ' franska_ord[i] ' betyder ' översättning[i]\n{print} 'Du gav ' poäng ' rätta svar.'\n```\n"
                start_code: '# skriv din kod här'
                story_text: "Gör ditt eget program för att öva ditt ordförråd på ett nytt språk.\n"
            5:
                story_text: "Gör ditt eget program för att öva glosor på ett nytt språk.\n\n### Övning\nGör koden längre genom att lägga till minst tre ytterligare glosor som spelaren ska lära sig.\n**Extra** Du kan naturligtvis välja att använda ett annat språk än franska. Du kan ändra koden till vilket språk som helst som du vill lära dig.\n"
                example_code: "```\n{print} 'Lär dig franska!'\nkatt {is} {ask} '🐱'\n{if} katt {is} chat {print} 'Fantastiskt!'\n{else} {print} 'Nej, katt heter chat'\ngroda {is} {ask} '🐸'\n{if} groda {is} grenouille {print} 'Superbt!'\n{else} {print} 'Nej, groda heter grenouille'\n```\n"
                start_code: '# skriv din kod här'
        name: Språk
        description: Öva glosor på ett främmande språk
        default_save_name: Språk
    secret:
        name: SuperSpion
        description: Skapa din egen spionkod
        levels:
            12:
                start_code: '# ha din kod här'
                story_text: "I det här äventyret kan du skapa din egen superspionkod. Koda ett meddelande som bara rätt agent kan avkoda.\nOm fienden försöker knäcka koden kommer de att få falsk information för att slösa på deras tid.\n\n### Övning 1\nGör din egen hemliga kod för din superspion och lämna tillbaka båda delarna bara till den rätta spionen.\n\n### Övning 2\nLägg till en tredje komponent till koden, till exempel ett klädesplagg eller ett föremål.\n"
                example_code: "```\nnamn {is} {ask} 'Vad heter du?'\nom namn {is} '_'\n    a {is} 'Åk till flygplatsen'\n{else}\n    a {is} 'Åk till tågstationen'\nlösenord {is} {ask} 'Vad är lösenordet?'\n{if} lösenord {is} _\n    b {is} 'imorgon kl. 02.00'\n{else}\n    b {is} 'idag kl. 10.00'\n{print} _ _ _\n```\n"
            13:
                story_text: "Vi kan förenkla superspionkoden med `{and}`, så att vi bara behöver en `{if}`.\n\n### Övning 1\nKomplettera koden genom att fylla i det rätta kommandot på den tomma platsen. Tips: Superspionen måste besvara BÅDA frågorna korrekt innan hen får den hemliga informationen!\n\n### Övning 2\nVi vill förvirra fienden ännu mer! Skapa en lista med falska svar och välj ett slumpmässigt när ett felaktigt svar ges.\n"
                example_code: "```\nname {is} {ask} 'Vad heter du?'\nlösenord {is} {ask} 'Vad är ditt lösenord?'\n{if} namn {is} 'Agent007' _ lösenord {is} 'TOPSECRET'\n    {print} 'Åk till flygplatsen kl. 02.00'\n{else}\n    {print} 'Åk till tågstationen kl. 10.00'.\n ```\n"
                start_code: '# ha din kod här'
        default_save_name: SuperSpion
    blackjack:
        levels:
            17:
                story_text: "Blackjack är ett enkelt kortspel där det gäller att komma så nära 21 poäng som möjligt. Du får två kort. Varje kort är värt sitt siffervärde och bildkorten (knekt, dam och kung) är värda tio poäng.\nEsset är värt antingen 1 eller 11 poäng (du kan välja). Given, din motspelare, får också två kort.\nOm du vill kan du ta ytterligare ett kort, och dess poäng läggs till din totala poängsumma. Given kan också välja att ta ett annat kort.\nMen se upp så att du inte får mer än 21 poäng, för om du får det förlorar du!\nDen spelare som kommer närmast 21, utan att gå över det, vinner!\n\nHa det så kul!\n"
                example_code: "```\n{print} 'BLACKJACK'\nkort = [2, 3, 4, 5, 6, 7, 8, 9, 10, 'knekt', 'dam', 'kung', 'ess']\npoäng = 0\ngivens_poäng = 0\nkort_1 = kort[{random}]\nkort_2 = kort[{random}]\nkort_3 = kort [{random}]\ngivens_kort_1 = kort[{random}]\ngivens_kort_2 = kort[{random}]\ngivens_kort_3 = kort[{random}]\n# Poäng för kort 1\n{if} kort_1 == 'knekt' {or} kort_1 == 'dam' {or} kort_1 == 'kung':\n    poäng = poäng + 10\n{elif} kort_1 == 'ess':\n    poäng = poäng + 11\n{else}:\n    poäng = poäng + kort_1\n# Poäng för kort 2\n{if} kort_2 == 'knekt' {or} kort_2 == 'dam' {or} kort_2 == 'kung':\n    poäng = poäng + 10\n{elif} kort_2 == 'ess':\n    poäng = poäng + 11\n{else}:\n    poäng = poäng + kort_2\n# Poäng för givens_kort 1\n{if} givens_kort_1 == 'knekt' {or} givens_kort_1 == 'dam' {or} givens_kort_1 == 'kung':\n    givens_poäng = givens_poäng + 10\n{elif} givens_kort_1 == 'ess':\n    givens_poäng = givens_poäng + 11\n{else}:\n    givens_poäng = givens_poäng + givens_kort_1\n# Poäng för givens_kort 2\n{if} givens_kort_2 == 'knekt' {or} givens_kort_2 == 'dam' {or} givens_kort_2 == 'kung':\n    givens_poäng = givens_poäng + 10\n{elif} givens_kort_2 == 'ess':\n    givens_poäng = givens_poäng + 11\n{else}:\n    givens_poäng = givens_poäng + givens_kort_2\n# Två ess\n{if} kort_1 == 'ess' {and} kort_2 == 'ess':\n    poäng = 12\n{if} givens_kort_1 == 'ess' {and} givens_kort_2 == 'ess':\n    givens_poäng = 12\n# Resultattavla\n{print} 'Du har en ' kort_1 ' och en ' kort_2 ' (' poäng ' poäng)'\n{print} 'Given har en ' givens_kort_1 ' och en ' givens_kort_2 ' (' givens_poäng ' poäng)'\n# Extra kort för spelaren\nhit = {ask} 'Vill du ha ett extra kort?'\n{if} hit == 'ja':\n    {if} kort_3 == 'knekt' {or} kort_3 == 'dam' {or} kort_3 == 'kung':\n        poäng = poäng + 10\n    {elif} kort_3 == 'ess':\n        {if} poäng > 11:\n            poäng = poäng + 11\n        {else}:\n            poäng = poäng + 1\n    {else}:\n        poäng = poäng + kort_3\n    {print} 'Du får ett extra ' kort_3 ' (' poäng ' poäng)'\n{else}:\n    {print} 'Inga extra kort'\n# Vinnare\n{if} poäng > 21 {or} givens_poäng > poäng {or} givens_poäng == 21:\n    {print} 'Du förlorar'\n{elif} givens_poäng < 17:\n    {print} 'Given tar ett extra kort. Det är ... ' givens_kort_3\n    {if} givens_kort_3 == 'knekt' {or} givens_kort_3 == 'dam' {or} givens_kort_3 == 'kung':\n        givens_poäng = givens_poäng + 10\n    {elif} givens_kort_3 == 'ess':\n        {if} givens_poäng < 11:\n            givens_poäng = givens_poäng + 11\n        {else}:\n            givens_poäng = givens_poäng + 1\n    {else}:\n        givens_poäng = givens_poäng + givens_kort_3\n    {print} 'Given har ' givens_poäng ' poäng nu'\n    {if} givens_poäng < 21 {and} givens_poäng > poäng:\n        {print} 'Du förlorar'\n    {else}:\n        {print} 'Du vinner'\n{elif} poäng > givens_poäng {and} poäng < 21:\n    {print} 'Du vinner!'\n```\n"
                start_code: '# skriv din kod här'
        name: Blackjack
        description: Försök att hamna så nära 21 som möjligt
        default_save_name: Blackjack
    tic:
        name: Luffarschack
        description: Spela en omgång Luffarschack!
        default_save_name: Tripp
        levels:
            13:
                story_text: "I det här äventyetr kan du programmera en omgång Luffarschack. Två personer kan spela. I tur och ordning väljer du ett nummer på den plats (1–9) du vill sätta ditt tecken (x eller o) på.\nDen första spelaren som får tre i rad (horisontellt, vertikalt eller diagonalt) vinner!\n\n### Övning 1\nSpelet fungerar, men det har några problem. Till exempel kan alla spelare välja vilket fält som helst, även ett som redan tagits! Använd en `{if}` om platsen är tagen, och varna isåfall spelaren.\n\n### Övning 2\nSpelet avgör inte heller vem som har vunnit. Du behöver lägga till detta genom att kontrollera om tre rutor på rad har samma symbol.\n\n### Övning 3 Extrauppgift\nMan har inte alltid en kompis att spela med. Kan du skapa en datormotståndare?\n"
                example_code: "```\nspelare = 'x'\nruta = '.', '.', '.', '.', '.', '.', '.', '.', '.'\n\n{for} i {in} {range} 1 {to} 9\n    val = {ask} 'Spelare ' spelare ', vilken plats väljer du?'\n    ruta {at} val = spelare\n    {clear}\n    print ruta {at} 1 ruta {at} 2 ruta {at} 3\n    print ruta {at} 4 ruta {at} 5 ruta {at} 6\n    print ruta {at} 7 ruta {at} 8 ruta {at} 9\n    {if} spelare = 'x'\n        spelare = 'o'\n    {else}\n        spelare = 'x'\n```\n"
                start_code: '# Skriv din kod här'
            14:
                story_text: "På de tidigare nivåerna har du gjort ett tripp-trapp-trull-spel. Nu har du lärt dig hur du använder =-tecknet, ==-tecknet och !=-tecknet.\nDu kan använda den kunskapen i ditt nya Tripp Trapp Trull, så här:\n"
                start_code: '# ha din kod här'
                example_code: "```\ntecken = 'x'\nlediga_rutor = 1, 2, 3, 4, 5, 6, 7, 8, 9\nspel = 'pågår'\nruta_1 = '.'\nruta_2 = '.'\nruta_3 = '.'\nruta_4 = '.'\nruta_5 = '.'\nruta_6 = '.'\nruta_7 = '.'\nruta_8 = '.'\nruta_9 = '.'\n{print} 'LUFFARSCHACK!'\n{print} ruta_1 ruta_2 ruta_3\n{print} ruta_4 ruta_5 ruta_6\n{print} ruta_7 ruta_8 ruta_9\n{print} ' '\n{for} i {in} {range} 1 {to} 9\n    {if} spel != 'över'\n        val = {ask} 'Spelare ' tecken ', vilken ruta?'\n        {if} val {in} lediga_rutor\n            {remove} val {from} lediga_rutor\n            {if} val == 1\n                ruta_1 = tecken\n            {if} val == 2\n                ruta_2 = tecken\n            {if} val == 3\n                ruta_3 = tecken\n            {if} val == 4\n                ruta_4 = tecken\n            {if} val == 5\n                ruta_5 = tecken\n            {if} val == 6\n                ruta_6 = tecken\n            {if} val == 7\n                ruta_7 = tecken\n            {if} val == 8\n                ruta_8 = tecken\n            {if} val == 9\n                ruta_9 = tecken\n        {else}\n            {print} 'Den rutan är redan tagen'\n        {print} ruta_1 ruta_2 ruta_3\n        {print} ruta_4 ruta_5 ruta_6\n        {print} ruta_7 ruta_8 ruta_9\n        {print} ' '\n        vinnare = {ask} 'Vann du?'\n        {if} vinnare == 'ja'\n            {print} 'Bra jobbat, spelare ' tecken '!'\n            spel = 'över'\n        {else}\n            {if} tecken == 'x'\n                tecken = 'o'\n            {else}\n                tecken = 'x'\n```\n"
            15:
                start_code: '# ha din kod här'
                story_text: "På den här nivån kan du förbättra ditt tripp-trapp-trull-spel med {while}-loopen. Med den loopen kan du kombinera `{if} game != 'over'` och `{for} i {in} {range} 1 {to} 9` till bara en kodrad.\nKolla själv:\n"
                example_code: "```\ntecken = 'x'\nlediga_rutor = 1, 2, 3, 4, 5, 6, 7, 8, 9\nspel = 'pågår'\nruta_1 = '.'\nruta_2 = '.'\nruta_3 = '.'\nruta_4 = '.'\nruta_5 = '.'\nruta_6 = '.'\nruta_7 = '.'\nruta_8 = '.'\nruta_9 = '.'\n{print} 'LUFFARSCHACK!'\n{print} ruta_1 ruta_2 ruta_3\n{print} ruta_4 ruta_5 ruta_6\n{print} ruta_7 ruta_8 ruta_9\n{print} ' '\n{while} spel != 'över'\n    val = {ask} 'Spelare ' tecken ', vilken ruta?'\n    {if} val {in} lediga_rutor\n        {remove} val {from} lediga_rutor\n        {if} val == 1\n            ruta_1 = tecken\n        {if} val == 2\n            ruta_2 = tecken\n        {if} val == 3\n            ruta_3 = tecken\n        {if} val == 4\n            ruta_4 = tecken\n        {if} val == 5\n            ruta_5 = tecken\n        {if} val == 6\n            ruta_6 = tecken\n        {if} val == 7\n            ruta_7 = tecken\n        {if} val == 8\n            ruta_8 = tecken\n        {if} val == 9\n            ruta_9 = tecken\n    {else}\n        {print} 'Den rutan var redan tagen'\n    {print} ruta_1 ruta_2 ruta_3\n    {print} ruta_4 ruta_5 ruta_6\n    {print} ruta_7 ruta_8 ruta_9\n    {print} ' '\n    vinnare = {ask} 'Vann du?'\n    {if} vinnare == 'ja'\n        {print} 'Bra jobbat, spelare ' tecken '!'\n        spel = 'över'\n    {else}\n        {if} tecken == 'x'\n            tecken = 'o'\n        {else}\n            tecken = 'x'\n```\n"
            17:
                start_code: '# ha din kod här'
                story_text: "På de tidigare nivåerna hade tripp-trapp-trull-spelet en irriterande funktion. Efter varje drag var man tvungen att själv fylla i om man hade vunnit eller inte.\nDetta gjorde spelet spelbart, men också ganska långsamt. På den här nivån har vi lärt oss kommandot `{elif}`, som kan lösa det problemet.\nAtt använda `{elif}` för att låta Hedy kontrollera om en spelare har vunnit eller inte är kul, men det kräver också en hel del extra rader.\n\nI exempelkoden ser du att vi lagt till kraven för att vinna (tre rutor på rad horisontellt, vertikalt eller diagonalt).\nDu hittar dem på rad 46 till 69. Du kan se att varje gång kravet är uppfyllt (alltså om en spelare har vunnit) sätts variabeln spel till 'over'.\nDetta innebär att `{while}`-slingan stoppas och att spelet avslutas.\n"
                example_code: "```\ntecken = 'x'\nlediga_rutor = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nspel = 'på'\nruta_1 = '.'\nruta_2 = '.'\nruta_3 = '.'\nruta_4 = '.'\nruta_5 = '.'\nruta_6 = '.'\nruta_7 = '.'\nruta_8 = '.'\nruta_9 = '.'\n{print} 'LUFFARSCHACK!'\n{print} ruta_1 ruta_2 ruta_3\n{print} ruta_4 ruta_5 ruta_6\n{print} ruta_7 ruta_8 ruta_9\n{print} ' '\n{while} spel != 'över':\n    val = {ask} 'Spelare ' tecken ', vilken ruta?'\n    {if} val {in} lediga_rutor:\n        {remove} val {from} lediga_rutor\n        {if} val == 1:\n            ruta_1 = tecken\n        {if} val == 2:\n            ruta_2 = tecken\n        {if} val == 3:\n            ruta_3 = tecken\n        {if} val == 4:\n            ruta_4 = tecken\n        {if} val == 5:\n            ruta_5 = tecken\n        {if} val == 6:\n            ruta_6 = tecken\n        {if} val == 7:\n            ruta_7 = tecken\n        {if} val == 8:\n            ruta_8 = tecken\n        {if} val == 9:\n            ruta_9 = tecken\n    {else}:\n        {print} ‘Den rutan var redan tagen’\n    {print} ruta_1 ruta_2 ruta_3\n    {print} ruta_4 ruta_5 ruta_6\n    {print} ruta_7 ruta_8 ruta_9\n    {print} ' '\n    {if} ruta_1 == ruta_2 {and} ruta_2 == ruta_3 {and} ruta_1 != '.':\n        {print} 'Spelare ' tecken ' vinner!'\n        spel = 'över'\n    {elif} ruta_4 == ruta_5 {and} ruta_5 == ruta_6 {and} ruta_4 != '.':\n        {print} 'Spelare ' tecken ' vinner!'\n        spel = 'över'\n    {elif} ruta_7 == ruta_8 {and} ruta_8 == ruta_9 {and} ruta_7 != '.':\n        {print} 'Spelare ' tecken ' vinner!'\n        spel = 'över'\n    {elif} ruta_1 == ruta_4 {and} ruta_4 == ruta_7 {and} ruta_1 != '.':\n        {print} 'Spelare ' tecken ' vinner!'\n        spel = 'över'\n    {elif} ruta_2 == ruta_5 {and} ruta_5 == ruta_8 {and} ruta_2 != '.':\n        {print} 'Spelare ' tecken ' vinner!'\n        spel = 'över'\n    {elif} ruta_3 == ruta_6 {and} ruta_6 == ruta_9 {and} ruta_3 != '.':\n        {print} 'Spelare ' tecken ' vinner!'\n        spel = 'över'\n    {elif} ruta_1 == ruta_5 {and} ruta_5 == ruta_9 {and} ruta_1 != '.':\n        {print} 'Spelare ' tecken ' vinner!'\n        spel = 'över'\n    {elif} ruta_3 == ruta_5 {and} ruta_5 == ruta_7 {and} ruta_3 != '.':\n        {print} 'Spelare ' tecken ' vinner!'\n        spel = 'över'\n    {else}:\n        {if} tecken == 'x':\n            tecken = 'o'\n        {else}:\n            tecken = 'x'\n```\n"
    quizmaster:
        name: Quizmästare
        description: Gör ditt eget quiz!
        default_save_name: Quizmästare
        levels:
            14:
                story_text: "I det här äventyret kan du göra din egen frågesport! Fyll i luckorna, lägg till fler frågor och njut av din egen frågesport!\nDu kan göra en frågesport om vad du vill: din hobby, ditt favoritdjur, din favoritbok eller vad som helst!\n"
                example_code: "```\n{print} 'Gör ditt eget quiz'\npoäng_a = 0\npoäng_b = 0\n{print} 'Fråga'\n{print} 'Svarsalternativ A'\n{print} 'Svarsalternativ B'\nsvar = {ask} 'Vilket svar?'\n{if} svar == 'A'\n    poäng_a = poäng_a + 1\n{if} svar == 'B'\n    poäng_b = poäng_b + 1\n{print} 'Slut på quizet!'\n{print} 'Vi kollar resultatet!'\n{if} poäng_a > poäng_b\n    {print} 'Du tillhör A-klubben'\n{if} poäng_b > poäng_a\n    {print} 'Du tillhör B-klubben'\n```\n"
                start_code: '# skriv din kod här'
    years:
        levels:
            11:
                start_code: '# placera din kod här'
                story_text: "På den här nivån kan du använda kommandot `{for}` number `{in}` `{range}` för att räkna ner till det nya året.\n\n### Övning\nFyll i luckorna och få koden att fungera!\n"
                example_code: "```\n{for} tal {in} {range} _ {to} _\n    {print} tal\n{print} 'Gott nytt år!'\n```\n"
        name: Nyårsdagen
        description: Nedräkning till det nya året!
        default_save_name: Nedräkning till nyår
    pressit:
        levels:
            5:
                story_text_2: "Du kan också koppla sköldpaddskommandon till knappar.\n\n### Övning\nKopiera raderna några gånger så att du kan skapa en större ritning.\n"
                story_text: "På den här nivån finns ytterligare ett nytt nyckelord: `{pressed}`!\nMed `{pressed}` kan du använda tangenterna på ditt tangentbord för att styra vilka rader som används.\n\n### Övning\nTitta på exemplet och lägg till ytterligare en kodrad som reagerar på en tangenttryckning.\n"
                start_code: '# skriv din kod här'
                example_code: "```\n{print} 'Vill du ha ett lyckligt (l) eller olyckligt (o) slut?'\n{if} l {is} {pressed} {print} 'De levde lyckliga i alla sina dagar ❤'\n{else} {print} 'Prinsen blev uppäten av en flodhäst 😭'\n```\n"
                example_code_2: "```\n{if} y {is} {pressed} {forward} 15\n{else} {turn} 90\n```\n"
            7:
                story_text: "Nu när du har lärt dig om `{repeat}`, kan vi trycka på tangenterna flera gånger.\nDu kan använda det för att få sköldpaddan att gå framåt och vända sig.\n\n### Övning\nKoden som du har sett på nivå 5 kontrollerar bara tangenten en gång. Kopiera exempelkoden och lägg till en `{repeat}` till den, så att du kan trycka på tangenterna många gånger.\nAnvänd denna kod för att rita något snyggt.\n"
                example_code: "```\n{if} x {is} {pressed} {forward} 15 {else} {turn} 90\n```\n"
                start_code: '# skriv din kod här'
            9:
                story_text: "Nu när du vet hur man kombinerar påståenden kan du skapa ett verktyg för att skriva på tangentbord med `{pressed}`-kommandot.\n\n### Övning\nGör klart koden. Varje gång ska en slumpmässig bokstav väljas, som du måste trycka på. Du får en poäng för en korrekt tryckning och två poängs avdrag för en felaktig tryckning.\n**Extrauppgift** Rensa skärmen efter varje bokstav, och visa användaren hur många poäng de har fått.\n"
                example_code: "```\npoäng = 0\nbokstäver = a, b, c, d, e\n{repeat} 10 {times}\n    bokstav = _ _ _\n    {print} 'Tryck på bokstaven ' bokstav\n    {if} bokstav {is} {pressed}\n    _\n    _\n    _\n```\n"
                start_code: '# skriv din kod här'
        description: Prova att koppla en tangent till ett kommando!
        default_save_name: Tryckt
        name: Knapptryckningar
    ask_command:
        name: "{ask}"
        levels:
            1:
                example_code_2: "```\n{print} Hej!\n{ask} Vad heter du?\n{echo} hej\n```\n"
                story_text: "## Kommandot fråga\nNu när du kan använda kommandot `{print}` är du redo att lära dig nästa kommando: `{ask}`. Med kommandot `{ask}` kan du ställa en fråga. Kolla in det här:\n"
                example_code: "```\n{print} Hej!\n{ask} Vad heter du?\n```\n"
                story_text_2: "## Kommandot eko\nOm du vill att datorn ska upprepa svaret kan du använda kommandot `{echo}`. Tänk på att svaret återges i slutet av meningen, så i det här exemplet efter hej.\n"
                story_text_3: "### Övning\nProva kommandona `{ask}` och `{echo}`. Fyll först i de tomma fälten för att få programmet att fungera.\nStäll sedan ytterligare två frågor med kommandot `{ask}`. Efter varje `{ask}` använder du ett `{echo}` för att skriva ut svaret på skärmen.\n"
                example_code_3: "```\n_ Hur mår du?\n_\n```\n"
                start_code: "{print} Hej!\n{ask} Vad heter du?\n{echo} hej\n"
            2:
                story_text: "## Kommandot fråga\nNu när vi kan använda **variabler** i vår kod behöver vi inte längre kommandot `{echo}`.\nVi kan använda variabler för att lagra svaren på våra frågor och på så sätt kan vi använda svaret på flera frågor i vår kod.\nKolla in det:\n\nPå så sätt blir din kod interaktiv!\n"
                example_code: "```\nnamn {is} {ask} Vad heter du?\n{print} Hej namn\nålder {is} {ask} Hur gammal är du?\n{print} namn är ålder år gammal.\n```\n"
                story_text_2: "### Övning\nI förra fliken övade du på att tilldela variabler med kommandot `{is}`.\nDu har skapat minst tre variabler och använt dem med ett print-kommando.\nNu vill vi att du istället för att sätta variablerna gör dem interaktiva, som vi gjorde i vårt exempel.\n\nKopiera din kod från föregående flik och gör variablerna interaktiva med `{ask}`-kommandon.\n"
                example_code_2: "```\nfavoritdjur is ask Vilket är ditt favoritdjur?\nprint Jag gillar favoritdjur\n```\n"
                start_code: "namn {is} {ask} Vad heter du?\n{print} Hej namn\nålder {is} {ask} Hur gammal är du?\n{print} namn är ålder år gammal."
        description: Introduktion till kommandot fråga
        default_save_name: kommandot_fråga
    random_command:
        levels:
            16:
                story_text: "Vi ska göra listor på Python-sättet, med hakparenteser runt listorna! Vi skriver också citattecken runt varje element som vi har lärt oss på tidigare nivåer.\nVi använder hakparenteser för att peka ut en plats i en lista. Kommandot {at} {random} kan inte längre användas."
                start_code: "frukt = ['äpple', 'banan', 'körsbär']\n{print} frukt[slump]"
                example_code: "```\nvänner = ['Ahmed', 'Ben', 'Cayden']\nlyckotal = [15, 18, 6]\n{for} i {in} {range} 1 {to} 3\n    {print} 'lyckotalet för ' vänner[i]\n    {print} 'är ' lyckotal[i]\n```\n"
            3:
                story_text: "## På slump\nPå den här nivån kan du göra en lista med kommandot `{is}`. Du kan låta datorn välja ett slumpmässigt element från den listan. Det gör du med `{at} {random}`.\n"
                example_code: "```\ndjur {is} hundar, katter, kängurur\n{print} djur {at} {random}\n```\n"
                story_text_2: "Du kan använda kommandot `{at} {random}` i en mening också.\n"
                example_code_2: "```\nmat {is} smörgås, pizzaslice, sallad, burrito\n{print} Jag ska ha mat {at} {random} till lunch.\n```\n"
                start_code: "djur {is} hund, katt, känguru\n{print} djur {at} {random}\n"
                story_text_3: "### Övning\nProva kommandot `{at} {random}` genom att göra din egen spelshow (som de på tv) där du väljer en dörr eller resväska och den innehåller ett stort pris!\nKan du göra det? Vi har redan lagt in de första raderna i exempelkoden.\n"
                example_code_3: "```\n{print} Den stora spelshowen!\n{print} Det står tre resväskor framför dig …\nvalt {is} {ask} Vilken resväska väljer du?\npriser {is} _\n_\n```\n"
        name: slump
        description: introduktion av kommandot random
        default_save_name: kommandot_random
    sleep_command:
        levels:
            2:
                start_code: "{print} Min favoritfärg är …\n{sleep} 2\n{print} grön!"
                story_text: "Ett annat nytt kommando på denna nivå är `{sleep}`, som pausar ditt program i en sekund. Om du skriver ett tal efter kommandot {sleep}, pausas programmet i det antalet sekunder.\n\n### Övning\nÖva på det nya kommandot genom att göra egen kod där du använder kommandot {sleep} minst 3 gånger. För varje {sleep}-kommando ska paustiden variera.\n"
                example_code: "```\n{print} Min favoritfärg är …\n{sleep} 2\n{print} grön!\n```\n"
        name: sov
        description: introduktion till kommandot sov
        default_save_name: kommandot_sov
    if_command:
        name: om annars
        description: Introduktion till kommandot if
        default_save_name: kommandot_if
        levels:
            5:
                story_text: "## Om … annars …\nPå nivå 5 finns det något nytt, `{if}`! Med `{if}` kan du välja mellan två olika alternativ.\nDen här koden skrivs ut fint om du anger Hedy som namn, och bu! om du anger något annat.\n`{ask}` och `{print}` fungerar fortfarande som på nivå 4.\n"
                example_code: "```\nnamn {is} {ask} 'vad heter du?'\n{if} namn {is} Hedy {print} 'nice' {else} {print} 'bu!'\n```\n"
                story_text_2: "Ibland blir koden med `{if}` riktigt lång och får inte plats på raden. <br> Du kan också dela koden över två rader så att den andra raden börjar med `{else}` så här:\n"
                example_code_2: "```\nnamn {is} {ask} 'vad heter du?'\n{if} namn {is} Hedy {print} 'nice'\n{else} {print} 'bu!'\n```\n"
                story_text_3: "### Övning\nFörsök att skriva din egen kod med `{if}` och `{else}`. Du kan använda exempelkoden om du vill.\n"
                example_code_3: "```\nsvara {is} {ask} '2 + 2 = ?'\n_ _ _ 4 _ 'Bra jobbat!'\n_ _ 'Nej, 2 + 2 = 4'\n```\n"
                start_code: "namn {is} {ask} 'vad heter du?'\n{if} namn {is} Hedy {print} 'nice'\n{else} {print} 'bu!'"
            8:
                start_code: "namn {is} {ask} 'Vad heter du?'\n{if} namn {is} Hedy\n    {print} 'Välkommen Hedy'\n    {print} 'Du kan spela på din dator!'\n"
                example_code: "```\nnamn {is} {ask} 'Vad heter du?'\n{if} namn {is} Hedy\n    {print} 'Välkommen Hedy'\n    {print} 'Du kan spela på din dator!'\n```\n"
                story_text: "## Om … Annars …\nDu har lärt dig att upprepa ett block med kodrader efter ett `{repeat}`-kommando.\nNu kan du också använda indrag för att skapa block efter ett {if}- eller {else}-kommando.\nKolla in exempelkoden.\n\n### Övning\nLägg till ett {else}-kommando till exempelkoden. Gör ett kodblock med indrag. Det gör du genom att börja varje rad med fyra mellanslag.\n"
    quotation_marks:
        levels:
            12:
                example_code: "```\nnamn = 'Roboten Hedy'\n{print} 'Hej ' namn\n```\n"
                story_text: "**All text måste stå inom citattecken**\nFrån och med den här nivån måste du också använda citattecken när du sparar en text med `=`:\n"
                story_text_2: "**Alla element i listor behöver också citattecken**.\nListor är texter, så de behöver också citattecken. Tänk på att varje element i listan ska ha citattecken.\nDetta gör att du kan spara två ord som ett element i listan, till exempel 'Iron Man'.\n"
                example_code_2: "```\nsuperhjältar = 'Spiderman', 'Batman', 'Iron Man'\n{print} superhjältar {at} {random}\n```\n"
                story_text_3: "**All text efter `{if}`-jämförelser behöver också citattecken**\n"
                example_code_3: "```\nnamn = {ask} 'Vad heter du?'\n{if} namn = 'Roboten Hedy'\n    {print} 'Hej på dig!'\n```\n"
                story_text_4: "**Tal behöver inte citattecken**\nFör tal använder du inte citattecken i `=`:\n"
                example_code_4: "```\npoäng = 25\n{print} 'Du har ' poäng ' poäng'\n```\n"
                start_code: "namn = {ask} 'Vad heter du?'\n{if} namn = 'Roboten Hedy'\n    {print} 'Hej på dig!'"
            4:
                story_text: "## 'Citattecken'\nPå nivå 4 har `{ask}` och `{print}` ändrats.\nDu måste sätta texten du vill skriva ut mellan citattecken.\nDetta är bra, för nu kan du skriva ut alla ord du vill ha. Även orden du använde för att spara något med `{is}`.\nDe flesta programspråk använder citattecken vid utskrift, så vi kommer också ett steg närmare riktig programmering!\n"
                story_text_2: "##  Sammandragningar i engelsk text\nObs! Tänk på att nu när vi använder citattecken kommer Hedy att bli förvirrad när du använder apostrof för sammandragningar som I'm eller What's.\nSe till att ta bort dessa apostrofer och ändra stavningen till Im eller Whats om du skriver på engelska.\nKolla in exempelkoden för att se fel sätt att använda apostrof.\n"
                example_code: "```\n{print} 'Du måste använda citattecken från och med nu!'\nsvar {is} {ask} 'Vad behöver vi använda från och med nu?'\n{print} 'Vi måste använda ' svar\n```\n"
                example_code_2: "```\n_ Detta är fel sätt att använda apostrof t.ex. i engelsk text_\n{print} 'I'm babysitting my sister's kids'\n{print} 'What's more fun than that?'\n```\n"
                start_code: "{print} 'Du måste använda citattecken från och med nu!'\nsvar {is} {ask} 'Vad behöver vi använda från och med nu?'\n{print} 'Vi måste använda ' svar"
        name: "'citattecken'"
        description: Introduktion till citattecken
        default_save_name: citattecken
    repeat_command_2:
        name: "{repeat} 2"
        description: kommandot upprepa 2
        default_save_name: kommandot_upprepa_2
        levels:
            7:
                story_text: "## Upprepa med andra kommandon och med variabler\nDu har övat på kommandot `{repeat}` i kombination med kommandot `{print}` nu, men visste du att du också kan använda andra kommandon med `{repeat}`?\nI exempelkoden kan du se att `{repeat}` även kan användas med ett `{ask}`-, `{if}`- eller `{else}`-kommando.\n"
                story_text_2: "En annan intressant sak du kan göra med kommandot `{repeat}` är att använda variabler för att ställa in hur många gånger något ska upprepas. I exempelkoden kan du se att vi först frågar personen hur gammal den är.\nSedan, på rad 3, upprepas frågan 'ålder' gånger. Så vi använder variabeln 'ålder' med kommandot `{repeat}`.\n"
                example_code: "```\n{repeat} 2 {times} svar = {ask} 'Visste du att du kan ställa en fråga flera gånger?'\n{if} svar {is} ja {repeat} 2 {times} {print} 'Det visste du redan!'\n{else} {repeat} 3 {times} {print} 'Du har lärt dig något nytt!'\n```\n"
                example_code_2: "```\n{print} 'Hurra! Det är din födelsedag!'\nålder = {ask} 'Hur gammal är du nu?'\n{repeat} ålder {times} {print} 'Hipp hipp hurra!'\n```\n"
                start_code: "{repeat} 2 {times} svar = {ask} 'Visste du att du kan ställa en fråga flera gånger?'\n{if} svar {is} ja {repeat} 2 {times} {print} 'Det visste du redan!'\n{else} {repeat} 3 {times} {print} 'Du har lärt dig något nytt!'"
            8:
                story_text: "### Inuti blocket eller inte?\nPå den här nivån måste du tänka noga vilka rader kod som ska vara i blocket och vilka som inte ska vara det.\nTill exempel: Du vill sjunga låten *the muffin man*. Då vill du att bara raden med 'the muffin man' ska upprepas två gånger.\nDet betyder att den sista raden inte ska börja med indrag eftersom den inte hör till blocket.\nOm du börjar den sista raden med indrag kommer låten att bli fel.\n\n## Övning\nVarje rad i exempelkoden börjar med ett mellanrum. Ta bort mellanrummen och försök ta reda på vilken rad som behöver dras in och vilken som inte ska dras in för att sjunga sången.\n"
                example_code: "```\n_ {print} 'Do you know the muffin man?'\n_ {repeat} 2 {times}\n_ {print} 'The muffin man'\n_ {print} 'Do you know the muffin man, who lives on Drury Lane?'\n```\n"
                start_code: "{repeat} 3 {times}\n    {print} 'Den här raden kommer att upprepas …'\n    {print} 'Den här också …'\n{print} 'men inte denna!'"
    maths:
        description: Introduktion till matte
        name: matte
        default_save_name: matte
        levels:
            6:
                start_code: "{print} '5 gånger 5 är ' 5 * 5"
                story_text: "## 1 + 1\nPå den här nivån lär du dig något nytt: du kan nu också räkna ut saker.\n\nPlus är enkelt, du skriver det som med matematik: `5 + 5` till exempel. Minus fungerar också bra, det är `5 - 5`.\n\nGånger är lite annorlunda, eftersom det inte finns någon gångersymbol på tangentbordet. Sök bara, det finns verkligen inte!\nDet är därför vi multiplicerar med asterisken till vänster om ä: `5 * 5`. Läs det som '5 gånger 5' – det är bästa minnesregeln.\n"
                example_code: "```\n{print} '5 plus 5 är ' 5 + 5\n{print} '5 minus 5 är ' 5 - 5\n{print} '5 gånger 5 är ' 5 * 5\n```\n"
                story_text_2: "Vi ändrar också hur man sparar ett ord i en variabel! Du kan nu använda `=` istället för `{is}` när vi sparar ett namn eller ett tal i en variabel, så här:\n"
                example_code_2: "```\nnamn = Hedy\nsvar = 20 + 4\n```\n"
            12:
                start_code: "{print} 'decimaltal behöver nu använda en punkt'\n{print} 2.5 + 2.5"
                story_text: "**Decimaltal**\nHittills har Hedy inte tillåtit decimaltal som 1.5, men nu tillåter vi det. Tänk på att datorer använder `.` för decimaltal."
                example_code: "```\n{print} 'Två och en halv plus två och en halv är …'\n{print} 2.5 + 2.5\n```\n"
    while_command:
        name: så länge
        description: så länge
        default_save_name: kommandot_så_länge
        levels:
            15:
                start_code: "svar = 0\n{while} svar != 25\n    svar = {ask} 'Vad är 5 gånger 5?'\n{print} 'Ett korrekt svar har getts'"
                story_text: "Vi ska lära oss en ny slinga, `{while}`-slingan! Vi fortsätter slingan så länge påståendet är sant.\nSå glöm inte att uppdatera värdet inuti slingan.\n\nI exempelkoden fortsätter vi tills ett korrekt svar har getts.\nOm det rätta svaret aldrig ges slutar slingan aldrig!"
                example_code: "``\nsvar = 0\n{while} svar != 25\n    svar = {ask} 'Vad är 5 gånger 5?'\n{print} 'Ett korrekt svar har getts'\n```\n"
    harry_potter:
        name: Harry Potter
        description: Harry Potter-äventyr
        default_save_name: Harry Potter
        levels:
            10:
                story_text: "### Övning\nVi kan också skapa en spådam med Harry Potter-tema. Fyll i tomrummen så att nio rader skrivs ut.\n**Extrauppgift** Ändra temat för spådamen till något annat, till exempel din favoritbok, film eller tv-program.\n"
                example_code: "```\nhus = Gryffindor, Slytherin, Hufflepuff, Ravenclaw\nämnen = drycker, försvar mot svartkonst, förtrollningar, förvandling\nrädslor = Voldemort, spindlar, att misslyckas med sitt OWL-test\nnamn = Harry, Ron, Hermione\n_\n_ {print} namn ' är placerad i ' hus {at} {random}\n_ {print} namn ' är bra på ' ämnen {at} {random}\n_ {print} namn 's största rädsla är ' rädslor {at} {random}\n```\n"
                start_code: '# skriv din kod här'
    print_command:
        name: skriv
        description: Introduktion till kommandot print
        default_save_name: skriv
        levels:
            1:
                story_text: "## Kommandot skriv\nDu kan skriva ut text på skärmen med kommandot `{print}`.\n"
                story_text_2: "### Övning\nI Hedy hittar du övningar i varje äventyr. En övning ger dig möjlighet att öva på de nya kommandona och begreppen och låter dig gör exempelkoden mer personlig.\nI den här övningen ser du ett rosa tomt utrymme. Du måste fylla i det tomma utrymmet innan koden kan köras.\n\nFyll i kommandot `{print}` i det tomma utrymmet och lägg sedan till ytterligare fem rader kod. Varje rad måste börja med ett `{print}`-kommando.\nHa så kul!\n"
                example_code: "```\n{print} Hej, programmerare!\n{print} Välkommen till Hedy!\n```\n"
                example_code_2: "```\n_ Hej!\n```\n"
                start_code: "{print} Välkommen till Hedy!\n"
            17:
                start_code: "{for} i {in} {range} 1 {to} 10:\n    {print} i\n{print} 'Klar eller inte, här kommer jag!'"
                story_text: "Nu ska vi ändra reglerna för indragning lite. Varje gång vi behöver en indragning måste vi ha `:` på raden före indragningen.\n"
                example_code: "```\n{for} i {in} {range} 1 {to} 10:\n    {print} i\n{print} 'Klar eller inte, här kommer jag!'\n```\n"
            18:
                start_code: "namn = 'Hedy'\n{print}('Jag heter ', namn)"
                story_text: "Vi har kommit fram till riktig Python-kod! Det betyder att vi måste använda parenteser med `{print}` och `{range}` från och med nu.\nDet betyder också att du kan använda Hedy-kod från den här nivån i vilken Python-miljö som helst så länge du använder de engelska nyckelorden. Om du inte har gjort det hittils kan du ställa om det i kommandomenyn."
                example_code: "```\n{print}('Hej!')\n{for} i {in} {range}(1, 10):\n   {print}('Detta är rad ', i)\n```\n"
                story_text_2: Om du vill skriva ut mer än en sak måste du ha kommatecken mellan.
                example_code_2: "```\ntemperatur = 25\n{print}('Det är ', temperatur, ' grader ute')\n```\n"
                story_text_3: Den sista ändringen vi behöver göra för att få Python-kod är att ändra `{ask}` till `{input}`.
                example_code_3: "```\n{print}('Jag heter Hedy!')\nnamn = {input}('Vad heter du?')\n{print}('Du heter alltså ', namn)\n```\n"
    is_command:
        name: är
        description: introduktion till kommandot är
        default_save_name: kommandot_är
        levels:
            2:
                story_text: "## Variabler\nDu kan döpa ett ord med `{is}`. Det kallas för en **variabel**. I det här exemplet har vi skapat en variabel som heter namn och en variabel som heter ålder. Du kan använda ordet namn var som helst i din kod och det kommer att ersättas med Hedy, till exempel så här:\n"
                example_code: "```\nnamn {is} Hedy\nålder {is} 15\n{print} namn är ålder år gammal\n```\n"
                story_text_2: "### Övning\nDags att göra dina egna variabler!\nI exempelkoden gjorde vi ett exempel på variabeln `favorite_animals`. På rad 1 sätts (tilldelas) variabeln och på rad 2 har vi använt variabeln i ett skriv-kommando.\nAvsluta först vårt exempel genom att fylla i ditt favoritdjur i de tomma fälten. Gör sedan minst tre av dessa koder själv. Välj en variabel och sätt variabeln med kommandot {is}. Använd den sedan med ett {print}-kommando, precis som vi gjorde.\n"
                example_code_2: "```\nfavoritdjur är _\n{print} Jag gillar favoritdjur\n```\n"
                start_code: "namn {is} Hedy\nålder {is} 15\n{print} namn är ålder år gammal"
            14:
                start_code: "ålder = {ask} 'Hur gammal är du?'\n{if} ålder < 13\n    {print} 'Du är yngre än jag!'\n{else}\n    {print} 'Du är äldre än jag!'"
                story_text: "Vi kommer att lära oss fler nya saker. Du kanske redan känner till dem från matematiken, `<` och `>`.\n `<` kollar om det första talet är mindre än det andra, t.ex. ålder `<` 12 kontrollerar om ålder är mindre än 12.\nOm du vill kolla om det första talet är mindre eller lika med det andra kan du använda `<=`, t.ex. ålder `<=` 11.\n `>` kollar om det första talet är större än det andra, t.ex. poäng `>` 10 kollar om poäng är större än 10.\nOm du vill kolla om det första talet är större eller lika med det andra kan du använda `>=`, t.ex. poäng `>=` 11.\nDu använder dessa jämförelser i en `{if}`, så här:\n"
                example_code: "```\nålder = {ask} 'Hur gammal är du?'\n{if} ålder > 12\n    {print} 'Du är äldre än jag!'\n```\n"
                story_text_2: "Från och med den här nivån kan du använda två likhetstecken om du vill jämföra exakt. Detta är vad de flesta programspråk gör:\n"
                example_code_2: "```\nnamn = {ask} 'Vad heter du?'\n{if} namn == 'Hedy'\n    {print} 'Du är cool!'\n```\n"
                story_text_3: "Du kan också jämföra om något *inte* är lika med något annat med hjälp av `!=` så här:\n"
                example_code_3: "```\nnamn = {ask} 'Vad heter du?'\n{if} namn != 'Hedy'\n    {print} 'Du är inte Hedy'\n```\n"
    add_remove_command:
        name: lägg till och ta bort
        description: introduktion till lägg till och ta bort
        default_save_name: kommandot_lägg_till_ta_bort
        levels:
            3:
                story_text: "## Lägg till\nDu kan lägga till element i listan med kommandot `{add} {to}`. För att lägga till ett element i en lista kan du helt enkelt skriva `{add} penguin {to} animals` eller så kan du använda kommandot `{ask}` som i exempelkoden.\n"
                example_code: "```\ndjur {is} hund, katt, känguru\ngillar {is} {ask} Vilket är ditt favoritdjur?\n{add} gillar {to_list} djur\n{print} Jag väljer djur {at} {random}\n```\n"
                story_text_2: "## Ta bort\nOm du kan lägga till element i en lista kan du naturligtvis också ta bort dem. Detta görs med kommandot `{remove} {from}`.\n"
                example_code_2: "```\ndjur {is} hund, katt, känguru\nogillar {is} {ask} Vilket djur gillar du inte?\n{remove} ogillar {from} djur\n{print} Jag väljer djur {at} {random}\n```\n"
                story_text_3: "### Övning\nProva de nya kommandona i denna virtuella restaurang. Lägg till den smak som spelaren hoppas på i listan och ta bort de smaker som den är allergisk mot.\n"
                example_code_3: "```\n{print} Hemlig milkshake\nsmaker {is} jordgubb, choklad, vanilj\nhoppas {is} {ask} Vilken smak hoppas du på?\n_\nallergier {is} {ask} Är du allergisk mot några smaker?\n_\n{print} Du får en milkshake med smaker {at} {random}\n```\n"
                start_code: "djur {is} hund, katt, känguru\ngillar {is} {ask} Vilket är ditt favoritdjur?\n{add} gillar {to_list} djur\nogillar {is} {ask} Vilket djur gillar du inte?\n{remove} ogillar {from} djur\n{print} Jag väljer djur {at} {random}"
    in_command:
        name: i
        description: Introduktion till kommandot i
        default_save_name: kommandot_i
        levels:
            5:
                story_text: "## Listor\nNär vi vill kontrollera om något finns i en lista kan vi nu använda kommandot `{in}`.\nDen här koden skriver ut snyggt! om du väljer grönt eller gult, annars meh.\n"
                example_code: "```\nsnygga_färger {is} grönt, gult\nfavoritfärg {is} {ask} 'Vilken är din favoritfärg?'\n{if} favoritfärg {in} snygga_färger {print} 'snyggt!'\n{else} {print} 'meh'\n```\n"
                story_text_2: "### Övning\nGör klar exempelkoden genom att fylla i luckorna med kommandon som du har lärt dig.\nNär du är klar med koden, försök att lägga till egen kod och använd en fråga som du själv har kommit på.\n"
                example_code_2: "```\ndjur är hund, ko, får\nsvaret är fråga 'Vilket är ditt favoritdjur?'\n_ svar _ djur _ 'Mitt också!'\n_ _ 'Mina favoritdjur är hundar, kor och får'\n```\n"
                start_code: "snygga_färger {is} grön, gul\nfavoritfärg {is} {ask} 'Vilken är din favoritfärg?'\n{if} favoritfärg {in} snygga_färger {print} 'snyggt!'\n{else} {print} 'meh'"
    repeat_command:
        name: Upprepa
        description: kommandot upprepa
        default_save_name: kommandot_upprepa
        levels:
            7:
                story_text: "## Upprepa! Upprepa! Upprepa!\nNivå 7 lägger till kommandot `{repeat}`. `{repeat}` kan användas för att köra en kodrad flera gånger. Så här:\n\n### Övning\nLek litet med kommandot upprepa. Kan du göra happy birthday på bara tre rader kod istället för fyra nu?\n"
                example_code: "```\n{repeat} 3 {times} {print} 'Hedy är kul!'\n```\n"
                start_code: "{print} 'happy birthday to you'\n{print} 'happy birthday to you'\n{print} 'happy birthday dear Hedy'\n{print} 'happy birthday to you'\n"
            8:
                start_code: "{repeat} 5 {times}\n    {print} 'Hej allihop!'\n    {print} 'Detta kommer att skrivas ut fem gånger'"
                story_text: "### Upprepa-kommandon och indrag\nPå den här nivån kan du upprepa flera rader kod med bara ett upprepa-kommando.\nDet gör du genom att ha ett block med rader som du vill upprepa.\nRaderna i det blocket kommer att behöva **indrag** .\nDet betyder att man sätter fyra mellanslag i början av varje rad. Du måste också göra indrag även om ditt kodblock bara har en kodrad.\n"
                example_code: "```\n{repeat} 5 {times}\n    {print} 'Hej allihop'\n    {print} 'Allt detta upprepas fem gånger'\n```\n"
            9:
                start_code: "{repeat} 3 {times}\n    mat = {ask} 'Vad vill du äta?'\n    {if} mat {is} pizza\n        {print} 'najs!'\n    {else}\n        {print} 'pizza är bättre'"
                story_text: "På den här nivån kan du inte bara använda flera rader med `{if}` och `{repeat}`, utan du kan också sätta ihop dem!\nI exemplet ser du ett `{if}`-kommando inuti ett `{repeat}`-kommando. Det är också tillåtet tvärtom, och en `{if}` är också tillåten i en `{if}` och en `{repeat}` i en `{repeat}`.\nTesta det!\n"
                example_code: "```\n{repeat} 3 {times}\n    mat = {ask} 'Vad vill du äta?'\n    {if} mat {is} pizza\n        {print} 'najs!'\n    {else}\n        {print} 'pizza är bättre'\n```\n"
    for_command:
        name: för
        description: kommandot för
        default_save_name: för
        levels:
            10:
                start_code: "djur {is} hund, katt, marulk\n{for} djuret {in} djur\n    {print} 'Jag älskar ' djuret"
                story_text: "## För\nPå den här nivån lär vi oss ett nytt kommando som heter `{for}`. Med `{for}` kan du skapa en lista och gå igenom alla element.\n`{for}` skapar ett block, som `{repeat}` och `{if}` så alla rader i blocket måste börja med fyra mellanslag."
                example_code: "```\ndjur {is} hund, katt, marulk\n{for} djuret {in} djur\n    {print} 'Jag älskar ' djuret\n```\n"
            11:
                start_code: "{for} räknare {in} {range} 1 {to} 5\n    {print} räknare"
                story_text: "På den här nivån lägger vi till en ny form av `{for}`. På tidigare nivåer använde vi `{for}` med en lista, men vi kan också använda `{for}` med tal.\nDet gör vi genom att lägga till ett variabelnamn, följt av `{in}` `{range}`. Vi skriver sedan talet vi vill börja på, `{to}` och talet vi vill sluta på.\n\nProva exemplet för att se vad som händer! På den här nivån måste alltid använda indrag på raderna under `{for}`-satserna."
                example_code: "```\n{for} räknare {in} {range} 1 {to} 5\n    {print} räknare\n```\n"
    and_or_command:
        name: och eller
        description: introduktion och eller
        default_save_name: och eller
        levels:
            13:
                start_code: "namn = {ask} 'vad heter du?'\nålder = {ask} 'hur gammal är du?'\n{if} namn {is} 'Hedy' {and} ålder {is} 2\n    {print} 'Du är den riktiga Hedy!'"
                story_text: "Vi ska nu lära oss `{and}` och `{or}`! Om du vill kontrollera två påståenden behöver du inte använda två `{if}` utan kan använda `{and}` och `{or}`.\n\nOm du använder `{and}` måste båda påståendena, vänster och höger om `{and}` vara sanna. Vi kan också använda `{or}`. Då behöver bara ett påstående vara korrekt."
                example_code: "```\nnamn = {ask} 'vad heter du?'\nålder = {ask} 'hur gammal är du?'\n{if} namn {is} 'Hedy' {and} ålder {is} 2\n    {print} 'Du är den riktiga Hedy!'\n```\n"
    elif_command:
        name: "{elif}"
        description: annarsom
        default_save_name: annarsom
        levels:
            17:
                story_text: "På den här nivån kan du också använda ett nytt kommando: `{elif}`. `{elif}` är en förkortning för `{else}` `{if}` och du behöver det när du vill göra tre (eller fler!) alternativ.\nKolla in det!\n"
                example_code: "```\npriser = ['1 miljon dollar', 'en äppelpaj', 'ingenting']\nditt_pris = priser[{random}]\n{print} 'Du vinner ' ditt_pris\n{if} ditt_pris == '1 miljon dollar' :\n    {print} 'Hurra! Du är rik!'\n{elif} ditt_pris == 'en äppelpaj' :\n    {print} 'Härligt, en äppelpaj!'\n{else}:\n    {print} 'Bättre tur nästa gång …'\n```\n"
                start_code: "priser = ['1 miljon dollar', 'en äppelpaj', 'ingenting']\nditt_pris = priser[{random}]\n{print} 'Du vinner ' ditt_pris\n{if} ditt_pris == '1 miljon dollar' :\n    {print} 'Hurra! Du är rik!'\n{elif} ditt_pris == 'en äppelpaj' :\n    {print} 'Härligt, en äppelpaj!'\n{else}:\n    {print} 'Bättre tur nästa gång …'"
    rock_2:
        name: Sten, sax, påse 2
        description: Del 2 av sten, sax, påse
        default_save_name: sten_2
        levels:
            2:
                story_text: "Nu när du har lärt dig använda kommandot `{ask} kan du göra din sten, sax, påse-kod interaktiv också!\n\n### Övning\nGör sten, sax, påse-koden interaktiv genom att lägga till kommandot `{ask}` och en fråga.\n"
                example_code: "```\nval är _\n{print} Jag väljer val\n```\n"
                start_code: "# skriv din kod här"
    clear_command:
        levels:
            4:
                example_code: "```\n{print} '3'\nsov\n{clear}\n{print} '2'\n{sleep}\n{clear}\n{print} '1'\n{sleep}\n{clear}\n{print} 'SURPRISE!'\n```\n"
                start_code: "{print} '3'\n{sleep}\n{clear}\n{print} '2'\n{sleep}\n{clear}\n{print} '1'\n{sleep}\n{clear}\n{print} 'SURPRISE!'\n"
                story_text: "Dags för ett nytt kommando! Med `{clear}` kan du sudda all text från utdataskärmen. På så sätt kan du hindra att skärmen blir för full med text.\nSe upp! Om du använder ett `{clear}`-kommando, så kom ihåg att använda ett `{sleep}` ovanför det. Annars kommer Hedy att sudda skärmen utan att ge dig tid att läsa!\n"
        name: '{clear}'
        description: kommandot sudda
        default_save_name: kommandot_sudda
