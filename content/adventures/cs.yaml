adventures:
    story:
        name: Příběh
        default_save_name: Příběh
        description: Příběh
        levels:
            1:
                story_text: |
                    V úrovni 1 můžete vytvořit příběh s jinou hlavní postavou, kterou sami zadáte.

                    V prvním řádku použijte `{ask}` a zeptejte se, kdo bude hlavní postavou příběhu.

                    Po tomto prvním řádku začněte `{print}`, pokud je třeba větu vytisknout.
                    `{echo}` použijte, pokud chcete, aby byla vaše hlavní postava na konci věty.
                example_code: |
                    ```
                    {ask} Hlavní postavou tohoto příběhu je
                    {print} Hlavní postava se nyní chystá procházet lesem
                    {echo} Trochu se bojí,
                    {print} Všude slyší podivné zvuky
                    {print} Bojí se, že je to strašidelný les
                    ```
                story_text_2: |
                    ### Cvičení
                    Nyní vytvořte vlastní příběh, který bude mít alespoň 6 řádků kódu.
                    Tento příběh nesmí být stejný jako ukázkový kód.
                    Použijte alespoň jeden příkaz `{ask}` a jeden `{echo}`.
                    Můžete si vybrat jakékoliv téma, které se vám líbí.
                    Pokud nevíte, o čem psát, použijte některou z našich možností: návštěva kina, sportovní zápas nebo den v zoo.
            2:
                story_text: |
                    Ve druhé úrovni můžete svůj příběh zpestřit. Jméno vaší hlavní postavy může nyní být kdekoli ve větě.

                    Budete muset naprogramovat trochu více. Nejprve musíte pojmenovat svou hlavní postavu.

                    Poté můžete toto jméno umístit kdekoli ve větě.
                example_code: |-
                    ```
                    jmeno {is} {ask} Jaké je jméno hlavní postavy (holka)?
                    {print} jmeno nyní poběží lesem
                    {print} jmeno je trochu vystrašená
                    {print} Najednou slyší podivný zvuk...
                    {sleep}
                    {print} jmeno se bojí, že je to strašidelný les
                    ```
                story_text_2: |
                    ### Cvičení
                    Nyní je čas přidat proměnné do vašeho vlastního příběhu, který jste vytvořili v předchozí úrovni.
                    Přejděte do 'Moje programy', najděte své dobrodružství z úrovně 1 a zkopírujte kód. Vložte kód do vstupní obrazovky v této úrovni.

                    Tento kód nebude fungovat v této úrovni, protože jste ještě nepoužili proměnné.
                    Změňte příkazy `{ask}` a `{echo}` ve svém kódu na správný formát, který jste se naučili v této úrovni.

                    **Extra** Přidejte příkaz `{sleep}` do svého kódu, abyste zvýšili napětí ve svém příběhu.
            3:
                example_code_2: |
                    ```
                    {print} Slyší zvuk
                    zvířata {is} 🐿, 🦔, 🦇, 🦉
                    zvire {is} {ask} Co si myslíš, že to je?
                    {add} zvire {to_list} zvířata
                    {print} to byla zvířata {at} {random}
                    ```
                story_text: "V úrovni 3 můžete svůj příběh udělat zábavnějším. Můžete použít náhodnost pro jakoukoli příšeru, zvíře nebo jinou překážku, jako je tato:\n"
                example_code: "```\nanimals {is} 🦔, 🐿, 🦉, 🦇\n{print} They now hear the sound of an animals {at} {random}\n```\n"
            7:
                story_text: |
                    V příběhu někdo opakuje slova několikrát. Například, když někdo volá o pomoc nebo zpívá píseň.
                    Takové opakování můžete vložit do svého příběhu, na této úrovni s `{repeat}`.

                    ### Cvičení
                    Přidejte opakování do svého vlastního příběhu. Vraťte se ke svým uloženým programům, vyberte svůj příběhový program z předchozí úrovně a najděte řádek obsahující `{print}` a opakujte ho!
            8:
                story_text: |
                    Na této úrovni můžete použít více řádků ve vašich `{if}` příkazech, tímto způsobem můžete vylepšit svůj šťastný nebo smutný konec!

                    ### Cvičení 1
                    Ukázkový kód zobrazuje dva různé konce; jeden, kde postavy skočí do stroje času, a druhý, kde to neudělají. Doplňte mezery alespoň jednou větou na každý konec.
                    **Extra** Udělejte příběh delší. Co se v příběhu stane? Můžete také přidat druhý `{ask}` s různými možnostmi.

                    ### Cvičení 2
                    Vraťte se ke svým uloženým programům, vyberte svůj příběhový program z úrovně 5. Nyní napište dobrý a špatný konec, každý alespoň o třech větách!
                example_code: |
                    ```
                    {print} 'JEJDA! T-rex se blíží!'
                    end = {ask} 'Chcete šťastný nebo smutný konec?'
                    {if} end {is} stastny
                        {print} 'Richard na poslední chvíli skočí zpátky do stroje času!'
                        {print} _
                    {else}
                        {print} 'Oh ne! Richard je příliš pomalý...'
                        {print} _
                    ```
            9:
                example_code: |
                    ```
                    {print} 'Robin jde do centra města'
                    location = {ask} 'Jde Robin do obchodu, nebo jde domů?'
                    {if} location {is} obchodu
                        {print} 'Vstoupí do obchodu.'
                        {print} 'Robin vidí zajímavou knihu'
                        book = {ask} 'Koupí si Robin knihu?'
                        {if} book {is} ano
                        _ {print} 'Robin si koupí knihu a jde domů'
                        _ {else}
                        _ {print} 'Robin opustí obchod a jde domů'
                    {else}
                        {print} 'Robin jde domů'
                    ```
            10:
                example_code: |
                    ```
                    zvirata = _ , _ , _ 
                    {print} 'Hnědý medvěde, hnědý medvěde'
                    {print} 'Co vidíš?'
                    ```
            12:
                example_code: |
                    ```
                    jmeno = 'Královna Velké Británie'
                    {print} jmeno ' jedla kousek dortu, když najednou…'
                    ```
            13:
                example_code: |
                    ```
                    {print} 'Náš hrdina kráčí lesem'
                    {print} 'Cesta se rozdvojuje'
                    cesta = {ask} 'Kterou cestu by měla zvolit?'
                    zbran = {ask} 'Jakou zbraň vytáhne?'
                    {if} cesta {is} 'levou' {and} zbran {is} 'mec'
                        _
                    ```
            18:
                example_code: |
                    ```
                    {print}('Vítejte v tomto příběhu!')
                    ```
    ask_command:
        levels:
            2:
                story_text: |
                    ## Příkaz ask
                    Nyní, když můžeme používat **proměnné** ve svých kódech, už nepotřebujeme příkaz `{echo}`.
                    Můžeme použít proměnné k uložení odpovědí na naše otázky a tímto způsobem můžeme odpověď použít na více otázek ve svých kódech.
                    Podívejte se na to:

                    Tímto způsobem se váš kód stává interaktivním!
                example_code: |
                    ```
                    jmeno {is} {ask} 'Jaké je vaše jméno?'
                    {print} 'Ahoj, ' jmeno
                    vek {is} {ask} 'Kolik vám je let?'
                    {print} jmeno ' má ' vek ' let.'
                    ```
                story_text_2: |
                    ### Cvičení
                    V předchozím panelu jste cvičili nastavování proměnných pomocí příkazu `{is}`.
                    Vytvořili jste alespoň 3 proměnné a použili je s příkazem print.
                    Nyní místo nastavování proměnných chceme, abyste proměnné učinili interaktivními, jak jsme to udělali v našem příkladu.

                    Zkopírujte svůj kód z předchozího panelu a učiňte proměnné interaktivními pomocí příkazů `{ask}`.
    default:
        description: Vysvětlení úrovně
        levels:
            1:
                story_text: "V první úrovni můžeš používat příkazy `{print}`, `{ask}` a `{echo}`.\n Zapiš svůj kód do levého okna. Nebo stiskni žluté tlačítko v ukázce kódu, které kód zapíše za tebe.\nKód si vždy vyzkoušej pomocí zeleného tlačítka 'Spustit kód' pod levým programovým polem.\n\nMůžeš vypsat text na obrazovku užitím příkazu `{print}`.     \n"
            3:
                story_text: |-
                    V úrovni 3 můžeš také vytvořit seznam. Počítač umí z tohoto seznamu vybrat náhodného člena, konkrétně pomocí příkazu `at random`.
                    ```
                    zvirata is pes, kočka, klokan
                    print zvirata at random
                    ```

                    Všechny kódy úrovně 3 najdeš v levém panelu. Opět tady jsou i záložky s dalšími zadáními.
            4:
                story_text: |
                    V úrovni 4 se mění `{ask}` a `{print}`.
                    Text, který chceš vytisknout, teď musíš dát do uvozovek.
                    Je to užitečné, protože tak můžeš vytisknout všechna slova, která chceš. A to dokonce včetně slov, pod která jsi něco uložil/a pomocí `{is}`.
                    Většina programovacích jazyků také používá při vypisování uvozovky, takže se dostáváme zase o krok blíže ke skutečnému programování!
                example_code: |
                    ```{print} 'Odteď musíte používat uvozovky!'\nodpověď {is} {ask} 'Co musíme od teď používat?'\n{print} 'Musíme používat ' odpověď\n```\n"
            5:
                story_text: |
                    V úrovni 5 je něco nového, `{if}`! S `{if}` si můžete vybrat ze dvou různých možností.
                    Tento kód vypíše "Pěkně!" , pokud zadáte Hedy, nebo "Fůj!", pokud zadáte něco jiného.

                    `{ask}` a `{print}` stále fungují stejně jako v úrovni 4.
                example_code: |
                    ```
                    jméno {is} {ask} 'jak se jmenuješ?'
                    {if} jméno {is} Hedy {print} 'Pěkně!' {else} {print} 'Fůj!'
                    ```
            6:
                story_text: |-
                    `ask`,` print` a `if` stále fungují jako na úrovních 5.
                     V úrovni 6 je ale něco nového, nyní můžeš také počítat!

                     Plus je jednoduché, můžeš ho zapsat jako u matematiky, například `5 + 5`. Mínus funguje stejně, je to `5 - 5`.

                     S krát je to trochu jiné, protože na klávesnici pro něj není žádný symbol. Zkus ho najít, opravdu tam není!
                     Písmenko x by se nám pletlo se slovy, proto násobíme hvězdičkou: `5 * 5`. Přečti si to jako "5 krát 5", pak si to zapamatujete nejsnáze.
                     ```
                     print '5 plus 5 je ' 5 + 5
                     print '5 mínus 5 je ' 5 - 5
                     print '5 krát 5 je ' 5 * 5
                     ```
            7:
                story_text: |-
                    `ask`, `print` a `if` fungují stejně jako na úrovni 5 a 6.
                    Úroveň 7 však přidává příkaz `repeat`, pomocí kterého lze řádek kódu provést vícekrát.
                example_code: |
                    ```
                    repeat 3 times print 'Hedy je zábavná!'
                    ```
            8:
                story_text: |
                    `ask` a `print` stále fungují tak, jak je znáš. Ale `if` a `repeat` se změnily!
                    Od teď můžeš spouštět víc řádků kódu společně, ale musíš je odsadit.
                    To znamená, že na začátek řádku dáš čtyři mezery. To platí i v případě, že chceš vytvořit blok z pouze jednoho řádku.
                example_code: |
                    ```
                    {repeat} 5 {times}
                        {print} 'Ahoj všichni'
                        {print} 'Tohle všechno se 5krát zopakuje'
                    ```
            12:
                story_text: Hedy doteď neumožňovala používat čísla s desetinami jako je 1.5, ale odteď už ano. Pozor, Hedy používá desetinnou tečku `.` namísto desetinné čárky.

            13:
                story_text: Teď se naučíme `and` (česky a) a `or` (nebo)! Když chceš ověřit dvě podmínky, nemusíš k tomu použít dva `if`y, ale stačí ti k tomu `and` a `or`. Pokud použiješ `and`, musí být obě podmínky, napravo i nalevo, pravdivé. S `or` stačí, aby byla pravdivá alespoň jedna z nich.
            14:
                story_text: |-
                    Pojďme se naučit pár nových věcí! Možná už je znáš z matematiky, jde o `<` a `>`.
                    `<`zjišťuje, zda je první číslo menší než to druhé, např. `4 < 5`.
                    `>` naopak zjišťuje, jestli je první číslo větší, jako v `6 > 5`.
                example_code: |
                    ```
                    if vek < 13
                        print 'Jsi mladší než já!'
                    else
                        print 'Jsi starší než já!'
                    ```
            15:
                story_text: Naučíme se nový cyklus, konkrátně `while` cyklus! Tento cyklus se opakuje tak dlouho, dokud je jeho podmínka pravdivá. V příkladu vidíte, že kód opakujeme, dokud nedostaneme správnou odpověď. Pokud bychom ji nikdy nedostali, bude cyklus nekonečný!
                example_code: |
                    ```
                    answer = 0
                    {while} answer != 25
                        odpoved = {ask} 'Kolik je 5 * 5?'
                    {print} 'Dostala jsem správnou odpověď!'
                    ```
            16:
                story_text: Už i naše seznamy mají vlastní závorky! Budeme je psát do hranatých závorek a jejich  jednotlivé položky do jednoduchých uvozovek ('), které už známe.
                example_code: |
                    ```
                    ovoce = ['jablko', 'banán', 'třešně']
                    {print} ovoce
                    ```
            17:
                story_text: |-
                    Nyní trochu změníme odsazení. Pokaždé, když potřebujeme odsazení, je třeba zapsat znak `:` na řádku před tímto odsazením.

                    V této úrovni můžete také použít nový příkaz: `{elif}`. Příkaz `{elif}` je zkratka z `{else} {if}` a využijete jej, když chcete provést tři (nebo více!) možností.
                    Vyzkoušejte jej!
    haunted:
        description: escape from the haunted house
        levels:
            1:
                story_text: |
                    V tomto dobrodružství pracujete na vytvoření hry, ve které se musíte dostat z strašidelného domu tím, že si vyberete správné dveře.
                    Pokud vyberete správné dveře, přežijete, ale pokud ne, strašidelný monster může...

                    V úrovni 1 začneme naši hru ve strašidelném domě tím, že vytvoříme děsivý příběh a zeptáme se hráče, jaké monstrum uvidí ve strašidelném domě.
                example_code: |
                    ```
                    {print} Jak jsem se sem dostal?
                    {print} Pamatuji si, jak mi kamarád řekl, abych šel do starého sídla...
                    {print} a najednou vše zčernalo.
                    {print} Ale jak jsem skončil na podlaze...?
                    {print} Hlava mě bolí, jako bych dostal ránu baseballovou pálkou!
                    {print} Co je to za zvuk?
                    {print} Oh ne! Mám pocit, že nejsem v tomto domě sám!
                    {print} Musím se odsud dostat!
                    {print} Před sebou mám 3 dveře...
                    {ask} Které dveře mám vybrat?
                    {echo} Vybral jsem si dveře
                    {print} ...?
                    ```
                story_text_2: |
                    ### Cvičení
                    Zkopírujte ukázkový kód do své vstupní obrazovky kliknutím na žluté tlačítko.
                    Nyní dokončete příběh přidáním alespoň 5 řádků kódu.
                    Nezapomeňte začít každý řádek kódu příkazem `{print}`.
            2:
                story_text: |
                    V tomto strašidelném domě si můžete vybrat svá monstra pomocí emoji. Samozřejmě můžete také použít slova.
                example_code: |
                    ```
                    monster_1 {is} 👻
                    monster_2 {is} 🤡
                    monster_3 {is} 👶
                    {print} Vstupujete do strašidelného domu.
                    {print} Najednou uvidíte monster_1
                    {print} Utíkáte do jiné místnosti...
                    {print} Ale monster_2 na vás tam čeká!
                    {print} Oh ne! Rychle se dostaňte do kuchyně.
                    {print} Ale když vstoupíte, monster_3 vás napadne!
                    ```
                story_text_2: |
                    ### Cvičení
                    V příkladu výše jsou monstra předem určena. Takže pokaždé, když spustíte svůj kód, je výstup stejný.
                    Dokážete přidat příkazy `{ask}`, aby byl strašidelný dům interaktivní a hráči si mohli vybrat monstra, se kterými se setkají?
                example_code_2: |
                    ```
                    monster_1 {is} _
                    monster_2 {is} _
                    monster_3 {is} _
                    {print} Vstupujete do strašidelného domu.
                    {print} Najednou uvidíte monster_1
                    {print} Utíkáte do jiné místnosti...
                    {print} Ale monster_2 na vás tam čeká!
                    {print} Oh ne! Rychle se dostaňte do kuchyně.
                    {print} Ale když vstoupíte, monster_3 vás napadne!
                    ```
    music:
        default_save_name: Hudba
        levels:
            1:
                story_text: |-
                    V této úrovni se naučíte používat příkaz `{play}` k zahrání melodie!

                    Napište `{play}` následované notou, kterou chcete zahrát. Stupnice obsahuje C-D-E-F-G-A-H.
                    Jak vidíte, je zde 7 různých písmen, ale můžeme hrát více než jen 7 not.
                    Za písmenem zadejte číslo mezi 0 a 9, abyste vybrali stupnici, například po H4 následuje C5.
                    C0 je nejnižší nota, kterou můžete zahrát, B9 je nejvyšší.

                    ### Cvičení
                    Vyzkoušejte si ukázkový kód a pak si s ním pohrajte! Dokážete vytvořit vlastní melodii?
                    V další úrovni se naučíte, jak zahrát některé existující písně.
    parrot:
        name: Papoušek
        default_save_name: Papoušek
        description: Vytvořte si svého vlastního online mazlíčka papouška, který vás bude kopírovat!
        levels:
            1:
                story_text: |
                    Vytvořte si svého vlastního online mazlíčka papouška, který vás bude kopírovat!
                example_code: |
                    ```
                    {print} Jsem papoušek Hedy
                    {ask} Jaké je tvé jméno?
                    {echo}
                    {echo}
                    ```
                story_text_2: |
                    Můžete papouška přimět, aby se zeptal na jinou otázku? Doplňte prázdná místa v příkladu!
                example_code_2: |
                    ```
                    {print} Jsem papoušek Hedy
                    {ask} _
                    {echo}
                    {echo}
            2:
                story_text: |
                    Vytvořte si svého vlastního online mazlíčka papouška, který vás bude kopírovat!
                example_code: |
                    ```
                    {print} Im Hedy the parrot
                    name {is} {ask} whats your name?
                    {print} name
                    {sleep}
                    {print} squawk
                    {sleep}
                    {print} name
                    ```
                story_text_2: |
                    ### Exercise
                    You can use variables to make the parrot say more than only your name. Can you complete this code?
            3:
                story_text: |
                    Teach your parrot a new word with `{add}`.
                example_code: |
                    ```
                    words {is} squawk, Hedy
                    {print} Train your parrot!
                    new_word {is} {ask} Which word do you want to teach them?
                    {add} new_word {to_list} words
                    {print} 🧒 Say new_word , Hedy!
                    {print} 🦜 words {at} {random}
                    ```
    restaurant:
        name: Restaurace
        default_save_name: Restaurace
        description: Vytvořte si vlastní virtuální restauraci
        levels:
            1:
                story_text: |
                    V levelu 1 si můžete vytvořit svou vlastní virtuální restauraci a přijímat objednávky svých hostů..
                story_text_2: |
                    Napadá vás více řádků, které můžete přidat do kódu restaurace? Můžete se například hostů {ask}, co by si přáli k pití, říct jim cenu nebo jim popřát dobrou chuť?
                example_code_2: |
                    ```
                    {print} Vítejte v restauraci Hedy 🍟
                    {ask} Co byste si chtěli objednat?
                    {echo} Takže byste si chtěli objednat
                    {print} Děkujeme za Vaši objednávku!
                    {print} Je to na cestě!
                    ```
    rock:
        name: Kámen, nůžky, papír
        default_save_name: Kámen
        description: Vytvořte si vlastní hru kámen, nůžky, papír
        levels:
            1:
                story_text: |
                    V úrovni 1 můžete začít hrou kámen, nůžky, papír.

                    Pomocí `{ask}` můžete provést výběr a pomocí `{echo}` můžete tuto volbu zopakovat.
                example_code: |
                    ```
                    {print} Co si vybereš?
                    {ask} Vyber si {from} kámen, nůžky, papír
                    {echo} Tvá volba byla:
                    ```
                    Místo slov můžete samozřejmě použít také emotikony: ✊✋✌
                story_text_2: |
                    Místo slov můžete také použít emotikony: ✊✋✌
                    Můžete vytvořit kód pomocí emotikonů?
                example_code_2: |
                    ```
                    {print} Co si vybereš?
                    {ask} Tvá volba from _
                    {echo} Tak tvá volba byla:
                    ```
    tic_2:
        description: Zahrajte si hru Piškvorky!
    turtle:
        name: Želva
        default_save_name: Želva
        description: Vytvořte si vlastní kresbu
        levels:
            1:
                story_text: |
                    Hedy můžete také používat k kreslení. Kombinováním otočení a čar můžete nakreslit čtverec nebo schody!

                    Pomocí `{forward}` nakreslíte čáru dopředu. Číslo za ním určuje, jak daleko želva půjde. `{turn} {right}` otočí želvu o čtvrt otáčky ve směru hodinových ručiček, `{turn} {left}` otočí proti směru hodinových ručiček.

                    Pokud chcete jít dozadu, použijete příkaz `{forward}` s negativním číslem. Například `{forward} -100`
                story_text_2: |
                    ### Cvičení
                    Toto je začátek malých schodů. Dokážete je rozšířit na 5 schodů?
            2:
                story_text: |
                    V této úrovni můžete použít proměnné, aby byla želva interaktivní. Například se můžete  zeptat hráče, kolik kroků má želva udělat.
                example_code: |
                    ```
                    answer {is} {ask} Kolik kroků má želva udělat?
                    {forward} answer
                    ```
                story_text_2: |
                    V první úrovni mohla želva zatáčet pouze doleva nebo doprava. To je trochu nuda!
                    Ve druhé úrovni může mířit nosem do všech směrů.

                    K otočení o čtvrtinu použijte hodnotu 90. Říkáme tomu stupně. Úplné otočení je 360 stupňů.
                    Dokážete z tohoto kódu vytvořit obrazec? Třeba trojúhelník nebo kruh?
                example_code_2: |
                    ```
                    {print} Kreslení obrazce
                    angle {is} 90
                    {turn} angle
                    {forward} 25
                    {turn} angle
                    {forward} 25
                    ```
            3:
                story_text: |
                    V této úrovni můžete použít příkaz `{at} {random}` s kreslící želvou. Náhodná hodnota způsobí, že želva půjde pokaždé jinou cestou.
                    Použijte `{at} {random}` k výběru hodnotu ze seznamu. Můžete zkopírovat a vložit řádky 2 a 3 a vytvořit tak delší náhodnou cestu.
            4:
                story_text: |
                    Ve čtvrté úrovni musíte i při kreslení používat uvozovky s příkazy `{print}` a `{ask}`!
                example_code: |
                    ```
                    {print} 'Kreslení obrazce'
                    angle {is} 90
                    {turn} angle
                    {forward} 25
                    {turn} angle
                    {forward} 25
                    ```
            5:
                story_text: |
                    V páté úrovni můžete provést volbu pomocí příkazu `{if}`. Například mezi různými typy obrazců.
                example_code: |
                    ```
                    {print} 'Kreslení obrazce'
                    figure {is} {ask} 'Chcete nakreslit čtverec nebo trojúhelník?'
                    {if} figure {is} triangle angle {is} 120
                    {else} angle {is} 90
                    {turn} angle
                    {forward} 25
                    {turn} angle
                    {forward} 25
                    {turn} angle
                    {forward} 25
                    {turn} angle
                    {forward} 25
                    ```
                example_code_2: |
                    ```
                    direction {is} {ask} 'Do you want to go left, right, or straight ahead?'
                    if direction is left turn _
                    if direction is right turn _
                    forward 100
                    ```
            6:
                story_text: |
                    V této úrovni můžete pomocí výpočtů kreslit různé obrazce.
                    Možná jste se ve škole učili, že otočení celého kruhu je 360 stupňů. Pokud ne, teď už to víte!
                    Proto také používáte 90 stupňů pro čtverec. Když 360 vydělíte 4, je to 90.
                    Teď, když umíme s Hedy počítat, můžeme kreslit jakékoliv obrazce, které chceme!
                example_code: |
                    ```
                    angles = {ask} 'Kolik úhlů chcete?'
                    angle = 360 / angles
                    {forward} 50
                    {turn} angle
                    {forward} 50
                    {turn} angle
                    {forward} 50
                    {turn} angle
                    {forward} 50
                    {turn} angle
                    {forward} 50
                    {turn} angle
                    {forward} 50
                    {turn} angle
                    ```
            8:
                story_text: |
                    Nyní, když můžeme opakovat několik řádků, můžeme snadněji vytvářet obrazce.
                    Úhel nastavíme pouze jednou a pak tuto proměnnou použijeme v příkazu `{repeat}`.
                story_text_2: |
                    Nyní můžeme vylepšit program, který kreslí různé obrazce.
                    Dokážete určit, kolikrát se musí želva otočit? Dokončete kód a nakreslete libovolný mnohoúhelník!
