adventures:
    story:
        default_save_name: Rakonto
        levels:
            1:
                start_code: '{print} Jen la komenco de via rakonto'
                story_text: |
                    ## Make a story
                    In level 1 you can make a story with a different main character that you enter yourself.

                    In the first line, use `{ask}` and ask who the main character of the story will be.

                    After that first line, start with `{print}` if the sentence needs to be printed.
                    You use `{echo}` if you want your main character to be at the end of the sentence.
                example_code: "```\n{ask} La ĉefrolulo de ĉi tiu rakonto estas\n{print} The main character is now going to walk in the forest\n{echo} He's a bit scared,\n{print} He hears crazy noises everywhere\n{print} He's afraid this is a haunted forest\n```\n"
            8:
                start_code: '# via kodo ĉi tie'
                story_text: "## Rakonto\nEn ĉi tiu nivelo, vi povas uzi plurajn liniojn en viaj `{if}`-komandoj; tiel, vi povas plibonigi vian ĝojan aŭ malĝojan finon!\n"
                example_code: "```\n{print} 'OH NO! The T-rex is closing in!'\nend = {ask} 'Do you want a happy or a sad ending?'\n{if} end {is} happy\n    {print} 'Just in time Richard jumps back into the time machine!'\n    {print} 'Michael types in the code and...'\n    {print} '\U0001F4A5ZAP!\U0001F4A5'\n    {print} 'They are back in their garage'\n{else}\n    {print} 'Michael yells COME ON RICHARD! RUN FASTER!'\n    {print} 'But Richard is too slow...'\n    {print} 'The T-rex closes in and eats him in one big bite!\U0001F996'\n```\n"
            9:
                start_code: '# via kodo ĉi tie'
                story_text: "## Story\nIn this level you can use nesting to put {if}, {repeat} or {for} commands inside other {if}, {repeat} or {for} commands. This gives you many options and really helps you to make your story interactive.\n"
                example_code: "```\n{print} 'Robin is walking downtown'\nlocation = {ask} 'Is Robin going into a shop, or does she go home?'\n{if} location {is} shop\n    {print} 'She enters the shop.'\n    {print} 'Robin sees an interesting looking book'\n    book = {ask} 'Does Robin buy the book?'\n    {if} book {is} yes\n        {print} 'Robin buys the book and goes home'\n    {else}\n        {print} 'Robin leaves the shop and goes home'\n{else}\n    {print} 'Robin goes home'\n```\n"
                story_text_2: La ĉi-supra ekzemplo estas sufiĉe simpla, sed per uzo de `{if}` ene de aliaj `{if}`-blokoj, oni povas ellabori vian kodon kaj igi sian rakonton vera ludo. Rigardu la jenan ekzemplon!
                example_code_2: "## Elaborate code\n```\nsword = lost\ngame = on\n{print} 'Our hero is walking through the forest'\n{print} 'The path splits two ways'\n{repeat} 2 {times}\n    {if} game {is} on\n        path = {ask} 'Which path should she choose?'\n        {if} path {is} left\n            {if} sword {is} found\n                {print} 'Our hero comes across a dragon!'\n                {print} 'Luckily our hero has a sword to defeat the beast!'\n                game = over\n            {else}\n                {print} 'Our hero finds a dragon, but she doesnt have any weapons!'\n                {print} 'Our hero is beaten by the dragon...'\n                {print} 'Try again'\n                game = over\n        {if} path {is} right\n            {if} sword {is} lost\n                {print} 'Our hero finds a sword'\n                {print} 'This could come in very handy'\n                sword = found\n            {else}\n                {print} 'You have already found the sword. There is nothing left here.'\n                {print} 'She walks back'\n```\n"
            10:
                start_code: '# via kodo ĉi tie'
                story_text: "## Story\nIn this level you can use the {for} command in your story. In this way you could easily program the children's book 'brown bear, brown bear, what do you see'.\n"
                example_code: "```\nbestoj = red bird, black sheep, green frog, yellow duck, little child\n{print} 'brown bear'\n{print} 'brown bear'\n{print} 'What do you see?'\n{for} besto {in} bestoj\n    {print} 'I see a ' besto ' looking at me'\n    {print} besto\n    {print} besto\n    {print} 'What do you see?'\n{print} 'I see all the bestoj looking at me!'\n```\n"
            15:
                start_code: '# via kodo ĉi tie'
                story_text: "## Story\nUsing the `{while}` loop can make your stories more interesting. For example, you can use `{while} game {is} 'on'` so you can play until the game is over.\nOr you can use `{while} sword {is} 'lost'` so the player can't continu the game until they have found something.\n"
                example_code: "```\nkeys = 'lost'\n{print} 'You are standing in your garden and you have lost your keys.'\n{print} 'Where do you want to look for them?'\n{print} 'You can choose: tree, flowerbed, rock, postbox'\n{while} keys == 'lost'\n    location = {ask} 'Where do you want to look?'\n    {if} location == 'flowerbed'\n        {print} 'Here they are!'\n        keys = 'found'\n    {else}\n        {print} 'Nope they are not at the ' location\n{print} 'Now you can enter the house!'\n```\n"
            2:
                story_text: "## Story\nIn level 2 you can make your story more fun. Your main character's name can now be anywhere in the sentence.\n\nYou do have to program a little bit extra for that. You must now name your main character first.\n\nYou can then put that name anywhere in a sentence.\n"
                example_code: "```\nname {is} {ask} What is the name of the main character?\n{print} name is now going to run in the woods\n{print} name is a bit scared\n{print} Suddenly he hears a crazy noise...\n{sleep}\n{print} name is afraid this is a haunted forest\n```"
                start_code: '{print} Via rakonto'
            3:
                story_text: "## Rakonto\nEn Nivelo 3, oni povas igi sian rakonton pli amuza. Oni povas uzi hazardecon por iu ajn monstro, besto aŭ alia obstaklo, jene:\n"
                example_code: "```\nbestoj {is} \U0001F994, \U0001F43F, \U0001F989, \U0001F987\n{print} Li nun aŭdas la sonon de bestoj {at} {random}\n```\n"
                story_text_2: "La komando `{add}` ankaŭ povas esti utila en via rakonto.\n"
                example_code_2: "```\n{print} Li aŭdas sonon\nbestoj {is} \U0001F43F, \U0001F994, \U0001F987, \U0001F989\nbesto {is} {ask} Kio estas ĝi laŭ via opinio?\n{add} besto {to_list} bestoj\n{print} ĝi estis bestoj {at} {random}\n```\n"
                story_text_3: "Jen ekzemplo de la komando `{remove}` en via rakonto\n"
                example_code_3: "```\n{print} His backpack got way too heavy.\n{print} Inside were a bottle of water, a flashlight and a brick.\nbag {is} water, flashlight, brick\ndump {is} {ask} Which item should he dump?\n{remove} dump {from} bag\n```\n"
                start_code: '{print} Via rakonto'
            4:
                story_text: "## Story\nYou may have noticed that there is still a problem in the previous levels. Did you try to print a sentence that contained the word name?\nYou can solve that in this level. You must use quotation marks for everything that you are going to print.\n"
                example_code: "```\nname {is} Hans\n{print} 'The name of the main character is' name\n{print} name 'is now going to walk in the woods'\n{print} name 'is a bit scared'\nbestoj {is} \U0001F994, \U0001F43F, \U0001F989, \U0001F987\n{print} 'He hears the sound of an' bestoj {at} {random}\n{print} name 'is afraid this is a haunted forest'\n```\n"
                start_code: "{print} 'Via rakonto ĉi tie!'"
            5:
                story_text: "## Story\nIn this level you can program different endings, which will make your story even more fun.\n\nThink of two endings for your story, for example:\n\n- The princess is walking through the forest\n- She runs into a monster\n\n- Happy ending: She takes her sword and the monster quickly runs away\n- Bad Ending: The monster eats the princess\n\nYou can also ensure that a name can be entered again. That works just like in the previous levels. You can combine that with an `{if}`, and then you have already made a whole program!\n"
                example_code: "```\nname {is} {ask} 'Who is walking in the forest?'\n{print} name 'walks through the forest'\n{print} name 'encounter a monster'\nend {is} {ask} 'Would you like a good or a bad ending?'\n{if} end {is} good {print} name 'takes the sword and the monster quickly runs away'\n{else} {print} 'The monster eats' name\n```\n"
                start_code: "{print} 'Jen la komenco de via rakonto!'"
            7:
                story_text: "## Story\nIn a story, someone says words several times. For example, when someone calls for help or sings a song.\nYou can put such repetitions in your story, in this level with `{repeat}`.\n"
                example_code: "```\n{print} 'La princo petadis por helpo.'\n{repeat} 5 {times} {print} 'Helpon!'\n{print} 'Kial neniu helpas min?'\n```\n"
                start_code: "{repeat} 5 {times} {print} 'Helpon!'"
            12:
                story_text: "## Rakonto\nEn ĉi tiu nivelo, oni povas uzi la citilojn por konservi plurajn vortojn en variablo."
                example_code: "```\nnomo = 'La Reĝino de Anglio'\n{print} nomo ' estis manĝanta pecon da kuko, kiam subite…'\n```\n"
                start_code: '# via kodo ĉi tie'
            13:
                story_text: "## Rakonto\nUzante la komandojn `{and}` kaj `{or}`, oni povas mallongigi siajn rakontojn. Ekzemple, rigardu la jenan rakonton pri drakoj.\n"
                example_code: "```\nsword = 'lost'\ngame = 'on'\n{print} 'Our hero is walking through the forest'\n{print} 'The path splits two ways'\n{for} i {in} {range} 0 {to} 2\n    {if} game {is} 'on'\n        path = {ask} 'Which path should she choose?'\n        {if} path {is} 'left' {and} sword {is} 'found'\n            {print} 'Our hero comes across a dragon!'\n            {print} 'Luckily our hero has a sword to defeat the beast!'\n            game = 'over'\n        {if} path {is} 'left' {and} sword {is} 'lost'\n            {print} 'Our hero finds a dragon, but she doesnt have any weapons!'\n            {print} 'Our hero is beaten by the dragon...'\n            {print} 'Try again'\n            game = 'over'\n        {if} path {is} 'right' {and} sword {is} 'found'\n            {print} 'You have already found the sword. There is nothing left here.'\n            {print} 'She walks back'\n        {if} path {is} 'right' {and} sword {is} 'lost'\n            {print} 'Our hero finds a sword'\n            {print} 'This could come in very handy'\n            sword = 'found'\n```\n"
                start_code: '# via kodo ĉi tie'
        name: Rakonto
        description: Rakonto
    songs:
        levels:
            10:
                start_code: '# via kodo ĉi tie'
                story_text: "## Songs\nIn this level you can easily make the childrens' song 'Five little monkeys'. Can you make the last chorus?\nYou can also make the whole baby shark song (including all the other sharks in the family) in only 6 lines!\nOr you can make Old McDonald with all the different animals.\n"
                example_code: "## 5 simietoj saltantaj sur la lito\n```\nsimioj = 5, 4, 3, 2\n{for} simio {in} simioj\n    {print} simio ' simietoj saltantaj sur la lito'\n    {print} 'Oni defalis kaj frapis sian kapon'\n    {print} 'Panjo vokis la kuraciston, kaj la kuracisto diris:'\n    {print} 'SIMIOJ NE SALTU SUR LA LITO!'\n```\n\n## Ŝarkido\n```\nŝarkoj = ŝarkido, panjo, paĉjo, avinjo, avĉjo\n{for} ŝarko {in} ŝarkoj\n    {print} ŝarko 'tututututudu'\n    {print} ŝarko 'tututututudu'\n    {print} ŝarko 'tututututudu'\n    {print} ŝarko\n```\n## Maljuna McDonald\n```\nbestoj = porko, hundo, bovo\n{for} besto {in} bestoj\n    {if} besto {is} porko\n        sono = grunt\n    {if} besto {is} hundo\n        sono = boj\n    {if} besto {is} bovo\n        sono = muĝ\n    {print} 'Maljuna McDonald havis bienon'\n    {print} 'I Aj I Aj O!'\n    {print} 'kaj en la bieno estis ' besto\n    {print} 'I Aj I Aj O!'\n    {print} 'kun ' sono sono ' ĉi tie'\n    {print} 'kaj ' sono sono ' tie'\n    {print} 'jen ' sono\n    {print} 'aliloke ' sono\n    {print} 'ĉie ' sono sono\n```\n"
            6:
                story_text: "## Songs\nSongs often contain a lot of repetition. Sometimes the repetition is also based on counting.\nFor example, in the well-known song 'Bottles of beer'. You can program that song with a little math.\n"
                example_code: "```\nnombro = 99\n{print} nombro ' boteloj da biero sur la muro'\n{print} nombro ' boteloj da biero'\n{print} 'Prenu unu, ĝuu ĝin kune'\nnombro = nombro - 1\n{print} nombro ' boteloj da biero sur la muro'\n```\n\nVi nun povas ripeti liniojn 2 ĝis 9 tiom da fojoj, kiom vi volas, kopiante la liniojn.\n"
                start_code: "{print} 'Ŝarkido'"
            7:
                story_text: "## Kantoj\nKantoj ofte enhavas multe da ripetaĵojn. Ekzemple… Ŝarkido! Se vi kantas ĝin, vi ripete kantas la samajn vortojn:\n\nŜarkido tututudutudu <br>\nŜarkido tututudutudu <br>\nŜarkido tututudutudu <br>\nŜarkido\n\nVi povas malplilongigi la kanton per `{repeat}`! Ĉu vi povas kompletigi la kodon?\n"
                example_code: "```\n{repeat} _ _ {print} 'Ŝarkido tututudutudu'\n{print} 'Ŝarkido'\n```\n\nPost Ŝarkido, vi povas programi aliajn kantojn. Ekzistas multaj kantoj enhavantaj ripetaĵojn.\n"
                start_code: "{print} 'Ŝarkido'"
            8:
                story_text: "## Songs\nIn a previous level you've programmed the song 'Bottles of beer'. You made one verse and then had to copy the verses 99 times. In level 7 you can repeat the song 99 times, just by adding one simple line!\n"
                example_code: "```\nnombro = 99\n{repeat} 99 {times}\n    {print} nombro ' boteloj da biero sur la muro'\n    {print} nombro ' boteloj da biero'\n    {print} 'Prenu unu, ĝuu ĝin kune'\n    nombro = nombro - 1\n    {print} nombro ' boteloj da biero sur la muro'\n```\n"
                start_code: '# via kodo ĉi tie'
            11:
                story_text: "## Kantoj\nEn ĉi tiu nivelo, oni povas uzi la komandon `{for} i {in} {range}` por fari kantojn, kiuj uzas kalkuladon.\n"
                example_code: "## 5 little monkeys\n```\n{for} i {in} {range} 5 {to} 1\n    {print} i ' little monkeys jumping on the bed'\n    {print} 'One fell off and bumped his head'\n    {print} 'Mama called the doctor and the doctor said'\n    {if} i {is} 1\n        {print} 'PUT THOSE MONKEYS RIGHT TO BED!'\n    {else}\n        {print} 'NO MORE MONKEYS JUMPING ON THE BED!'\n```\n"
                start_code: '# via kodo ĉi tie'
            12:
                story_text: "## Kantu!\nEn ĉi tiu kanto, oni povas eĉ pli facile programi «se vi estas feliĉa kaj vi scias ĝin, frapu la manojn», ĉar oni povas meti ĉiujn agojn en unu variablon jene:\n"
                example_code: "```\nagoj = 'clap your hands', 'stomp your feet', 'shout Hurray!'\n{for} ago {in} agoj\n    {for} i {in} {range} 1 {to} 2\n        {print} 'if youre happy and you know it'\n        {print} ago\n    {print} 'if youre happy and you know it and you really want to show it'\n    {print} 'if youre happy and you know it'\n    {print} ago\n```\n"
                start_code: '# via kodo ĉi tie'
            16:
                story_text: "## Sing a song!\nIn this level, you can program a song like OldMacDonald even more quickly. You can connect the right animal to the right sound by simply putting them in the same place in the list.\nThe Drunken Sailor is also quickly made in this level. You only need 8 lines for the entire song, check it out!\n"
                example_code: "## Maljuna MacDonald\n```\nbestoj = ['porko', 'hundo', 'bovo']\nsonoj = ['oink', 'woof', 'muĝ']\n{for} i {in} {range} 1 {to} 3\n    besto = bestoj[i]\n    sono = sonoj[i]\n    {print} 'Old McDonald had a farm'\n    {print} 'E I E I O!'\n    {print} 'and on that farm he had a ' besto\n    {print} 'E I E I O!'\n    {print} 'with a ' sono sono ' here'\n    {print} 'and a ' sono sono ' there'\n    {print} 'here a ' sono\n    {print} 'there a ' sono\n    {print} 'everywhere a ' sono sono\n```\n\n## Drunken Sailor\n```\nlines = ['what shall we do with the drunken sailor', 'shave his belly with a rusty razor', 'put him in a long boat till hes sober']\n{for} line {in} lines\n    {for} i {in} {range} 1 {to} 3\n        {print} line\n    {print} 'early in the morning'\n    {for} i {in} {range} 1 {to} 3\n        {print} 'way hay and up she rises'\n    {print} 'early in the morning'\n```\n"
                start_code: '# via kodo ĉi tie'
        name: Kantu!
        description: Presi kanton
        default_save_name: Kanto
    turtle:
        levels:
            2:
                example_code_2: "```\n{print} Desegnante figurojn\nangulo {is} 90\n{turn} angulo\n{forward} 25\n{turn} angulo\n{forward} 25\n```\n"
                story_text: "## Turtle\nIn this level you can use variables to make the turtle interactive. For example you can ask the player how many steps the turtle must make.\n"
                example_code: "```\nrespondo {is} {ask} Kiom da paŝoj faru la testudo?\n{forward} respondo\n```\n"
                story_text_2: "Also, in level 1 the turtle could only turn left or right. That is a bit boring!\nIn level 2 he can point his nose in all directions.\n\nUse 90 to turn a quarter. We call this degrees. A full turn is 360 degrees.\nCan you make a figure with this code? Maybe a triangle or a circle?\n"
                start_code: "{print} Testuda vetkuro!\nangulo {is} 90\n{turn} angulo\n{forward} 25"
            1:
                story_text: "## Ni desegnu\nVi ankaŭ povas uzi Hedy por desegni. Kombinante turnojn kaj liniojn, vi povas fari kvadraton aŭ ŝtuparon!\n\nPer `{forward}` oni desegnas linion antaŭen. La nombro malantaŭ ĝi determinas kiom longe la testudo marŝos. `{turn} {right}` turnas la testudon kvaronturnon horloĝdirekte; `{turn} {left}`{left}` turnas la testudon kontraŭhorloĝe.\nSe vi volas iri malantaŭen, uzu la komandon `{forward}` kun negativa nombro. Do ekzemple, `{forward} -100`\n\nJen la komenco de eta ŝtuparo. Ĉu vi povas igi ĝin havi 5 ŝtupojn?\n"
                example_code: "```\n{forward} 50\n{turn} {right}\n{forward} 50\n{turn} {left}\n{forward} 50\n```\n"
                start_code: "{forward} 50\n{turn} {left}"
                story_text_2: "## Colors\nYou can also change the color of the lines with the command `{color}`. Check out the example.\nYou can also use the command `{color} {white}` to make 'invisible' lines. You could use these white lines to move the turtle anywhere in the screen before you start drawing.\n"
                example_code_2: "```\n{color} {white}\n{forward} -80\n{color} {green}\n{forward} 50\n{color} {yellow}\n{forward} 50\n{color} {red}\n{forward} 50\n```\n"
            3:
                story_text: "## Searching turtle\nIn this level you can use use `{at} {random}` with the drawing turtle. A random choice makes the turtle walk a different path each time.\nUse `{at} {random}` to choose a value from a list. You can copy and paste lines 2 and 3 to create a longer random path.\n"
                example_code: "```\nanguloj {is} 10, 50, 90, 150, 250\n{turn} anguloj {at} {random}\n{forward} 25\n```\n"
                start_code: "anguloj {is} 10, 50, 90, 150, 250\n{turn} anguloj {at} {random}\n{forward} 25"
            4:
                story_text: "## Ni desegnu\nEn Nivelo 4, oni devas uzi citilojn kun `{print}` kaj `{ask}`. Ankaŭ dum desegnado!\n"
                example_code: "```\n{print} 'Desegnante figurojn'\nangulo {is} 90\n{turn} angulo\n{forward} 25\n{turn} angulo\n{forward} 25\n```\n"
                start_code: "{print} 'Desegnante figurojn'\nangulo {is} 90\n{turn} angulo\n{forward} 25"
            5:
                story_text: "## Ni desegnu\nEn Nivelo 5, oni povas fari elekton per `{if}`. Ekzemple, inter diversaj specoj de figuroj.\n"
                example_code: "```\n{print} 'Desegnante figurojn'\nfiguro {is} {ask} 'Ĉu vi deziras kvadraton aŭ triangulon?'\n{if} figuro {is} triangulo angulo {is} 120\n{else} angulo {is} 90\n{turn} angulo\n{forward} 25\n{turn} angulo\n{forward} 25\n{turn} angulo\n{forward} 25\n{turn} angulo\n{forward} 25\n```\n"
                start_code: "{print} 'Desegnante figurojn'\nfiguro {is} {ask} 'Ĉu vi deziras kvadraton aŭ triangulon?'\n{if} figuro {is} triangulo angulo {is} 120 {else} angulo {is} 90\n{turn} angulo\n{forward} 25"
            6:
                story_text: "## Let's draw\nIn this level you can use calculations to draw different figures.\nYou may have learned in school that turning a full circle is 360 degrees. If not, now you know!\nThat's why you also use 90 degrees for a square. 360 divided by 4 is 90.\nNow that we can do math with Hedy, we can draw all the figures we want!\n"
                example_code: "```\nanguloj = {ask} 'Kiom da anguloj vi deziras?'\nangulo = 360 / anguloj\n{forward} 50\n{turn} angulo\n{forward} 50\n{turn} angulo\n{forward} 50\n{turn} angulo\n{forward} 50\n{turn} angulo\n{forward} 50\n{turn} angulo\n{forward} 50\n{turn} angulo\n```\n"
                start_code: "{print} 'Desegnante figurojn'"
            7:
                story_text: "## Ni desegnu\nEn ĉi tiu nivelo, oni povas ripeti unu linion da kodo per `{repeat}`.\n"
                example_code: "```\n{print} 'Desegnante figurojn'\n{repeat} 3 {times} {forward} 10\n```\n"
                start_code: "{print} 'Desegni figurojn'\n{repeat} 3 {times} {forward} 10"
            8:
                story_text: "## Ni desegnu\nNun ni povas ripeti plurajn liniojn; tial ni povas fari figurojn pli facile.\nNi devas nur unufoje agordi la angulon kaj poste uzi tiun variablon en la `{repeat}`.\n"
                example_code: "```\nangulo = 90\n{repeat} 10 {times}\n    {turn} angulo\n    {forward} 50\n```\n"
                story_text_2: "## Interaction\nAlso, we can now improve the program that draws different figures.\nCan you figure out how far the turtle has to turn here? Finish the code and you can draw any polygon you'd like!\n"
                example_code_2: "```\nanguloj = {ask} 'Kiom da anguloj mi desegnu?'\nangulo = 360 / anguloj\n{repeat} angulo {times}\n    {turn} _\n    {forward} _\n```\n"
                start_code: anguloj = {ask} 'Kiom da anguloj desegni?'
        name: Testudo
        description: Faru vian propran desegnaĵon
        default_save_name: Testudo
    dishes:
        levels:
            3:
                start_code: '{print} Kiu lavos la telerojn?'
                story_text: "## Dishwashing\nDo you always disagree at home about who should wash the dishes or change the litter box today?\nThen you can let the computer choose very fairly. You can program that in this level!\nYou first make a list of the members of your family. Then choose '{at} {random}' from the list.\n"
                example_code: "```\nhomoj {is} panjo, paĉjo, Emilio, Sofio\n{print} homoj {at} {random}\n```\n"
                story_text_2: "## Hack the dishwashing program!\nDon't feel like doing the dishes yourself? Hack the program to remove your name from the list.\n"
                example_code_2: "```\nhomoj {is} panjo, paĉjo, Emilio, Sofio\nvia_nomo {is} {ask} Kiu vi estas?\n{remove} via_nomo {from} homoj\n{print} homoj {at} {random} lavos la telerojn\n```\n"
            4:
                story_text: "## Dishwashing\nWith quotation marks you can make your dishwashing planning more beautiful.\nThis time the sample code is not quite complete.\n\nCan you complete the code by filling the blanks? Every blank must be replaced with one word of symbol.\n\nTip: Don't forget the quotation marks!\n"
                example_code: "```\nhomoj {is} panjo, paĉjo, Emilio, Sofio\n{print} _ la telerojn lavu _\n{sleep}\n{print} homoj {at} _\n```\n"
                start_code: "{print} 'Kiu lavos la telerojn?'"
            5:
                story_text: "## Dishwashing\nWith the `{if}` you can now have more fun with choice in the program. You can have your program respond to the choice that the computer has made.\n\nCan you finish the code so that it prints 'too bad' when it is your turn and otherwise 'yes!'?\nDon't forget the quotes!\n"
                example_code: "```\nhomoj {is} panjo, paĉjo, Emilio, Sofio\ndishwasher {is} homoj {at} {random}\n{if} dishwasher {is} Sofio {print} _ too bad I have to do the dishes _ {else} {print} 'luckily no dishes because' _ 'is already washing up'\n```\n"
                start_code: "{print} 'Kiu lavos la telerojn?'"
            6:
                story_text: "## Dishwashing\nHow often is everyone going to do the dishes? Is that fair? You can count it in this level.\n"
                example_code: "```\nhomoj = panjo, paĉjo, Emilio, Sofio\nemilio_lavoj = 0\nlavonto = homoj {at} {random}\n{print} 'La lavonto estas' lavonto\n{if} lavonto {is} Emilio emilio_lavoj = emilio_lavoj + 1\n{print} 'Emilio lavos la telerojn ĉi-semajne' emilio_lavoj 'fojojn'\n```\n\nNow you can copy lines 3 to 5 a few times (e.g. 7 times for a whole week) to calculate for a whole week again.\nDo you make the code for the whole week?\n"
                story_text_2: "## Make it fair\nIf you are extremely unlucky the previous program might choose you to to the dishes for the whole week! That's not fair!\nTo create a fairer system you can use the `{remove}` command to remove the chosen person from the list. This way you don't have to do the dishes again untill everybody has had a turn.\n\nMonday and tuesday are ready for you! Can you add the rest of the week?\nAnd... can you come up with a solution for when your list is empty?\n"
                example_code_2: "```\nhomoj = panjo, paĉjo, Emilio, Sofio\nlavonto = homoj {at} {random}\n{print} 'Lunde la telerojn lavos: ' lavonto\n{remove} lavonto {from} homoj\nlavonto = homoj {at} {random}\n{print} 'Marde la telerojn lavos: ' lavonto\n{remove} lavonto {from} homoj\nlavonto = homoj {at} {random}\n```\n"
                start_code: "{print} 'Kiu lavos la telerojn?'"
            7:
                story_text: "## Dishwashing\nWith the `{repeat}` you can repeat pieces of code. You can use this to calculate who will be washing dishes for the entire week.\n"
                example_code: "```\nhomoj = panjo, paĉjo, Emilio, Sofio\n{repeat} _ _ {print} 'la lavonto estas' _\n```\n"
                start_code: "{print} 'Kiu lavos la telerojn?'"
            10:
                story_text: "## Dishwashing\nIn this level you could make an even better dish washing shedule.\n"
                example_code: "```\ntagoj = Lundo, Mardo, Merkolo, Ĵaŭdo, Vendredo, Sabato, Dimanĉo\nnomoj = panjo, paĉjo, Emilio, Sofio\n{for} tago {in} tagoj\n    {print} nomoj {at} {random} ' lavas telerojn je ' tago\n```\n"
                start_code: '# via kodo ĉi tie'
        name: Lavi telerojn?
        description: Use the computer to see who does the dishes (Start at level 2)
        default_save_name: Telerlavado
    rock:
        default_save_name: Roko
        name: Roko, papero, tondilo
        description: Faru vian propran ludon de roko, papero kaj tondilo
        levels:
            1:
                story_text: "## Rock, paper, scissors\nIn level 1 you can start with a rock, paper, scissors  game.\n\nWith `{ask}` you can make a choice, and with `{echo}` you can repeat that choice.\n"
                example_code: "```\n{print} what do you choose?\n{ask} choose from rock, paper or scissors\n{echo} so your choice was:\n```\nInstead of using words, you could also use emojis of course: ✊✋✌\n"
                start_code: '{print} Bonvenon al ludo de roko, papero kaj tondilo!'
            2:
                story_text: "## Roko, papero, tondilo\nEn ĉi tiu nivelo, vi povas praktiki uzi la variablojn, por ke vi povu fari la ludon de roko, papero kaj tondilo en la sekva nivelo!\n"
                example_code: "```\nelekto {is} _\n{print} Mi elektas elekto\n```\n"
                start_code: '# via kodo ĉi tie'
            3:
                story_text: "## Rock, paper, scissors\n\nIn this level we can enter lists and choose things from them.\nYou first make a list with `{is}`. Then you can let the computer choose something from the list with `{at} {random}`.\nFor example, you can let the computer pick from rock, paper and scissors.\n"
                example_code: "```\nelektoj {is} roko, papero, tondilo\n{print} elektoj {at} {random}\n```\n"
                start_code: '{print} Bonvenon al ludo de roko, papero kaj tondilo!'
            4:
                story_text: "## Rock, paper, scissors\nIn this level we can further program rock, paper, scissors. But {if} you want to add text, you have to use quotation marks here too.\nDo you complete the code by entering the correct commands or characters on the underscores?\n"
                example_code: "```\nelektoj {is} roko, papero, tondilo\n{print} _ La komputilo elektis la jenon: _ _ {at} _\n```\n"
                start_code: "{print} 'Bonvenon al ludo de roko, papero kaj tondilo!'"
            5:
                story_text: "## Rock, paper, scissors\nIn this level we can determine who won.\nFor that you need the new `{if}` code.\n\nSave your choice with the name of choice and the choice of computer as computer choice.\nThen you can use `{if}` to see {if} they are the same or different.\nWill you finish the code?\n"
                example_code: "```\noptions {is} rock, paper, scissors\ncomputer_choice {is} _\nchoice {is} {ask} 'What do you choose?'\n{print} 'you chose ' _\n{print} 'computer chose ' _\n{if} _ {is} _ {print} 'tie!' {else} {print} 'no tie'\n```\n\nFill in the correct code on the blanks to see {if} it is a draw.\n"
                start_code: "{print} 'Bonvenon al ludo de roko, papero kaj tondilo!'"
            9:
                story_text: "## Rock, paper, scissors\nIn this level you can program the whole rock, paper, scissors game by nesting the {if}-commands. Can you finish the code?\n"
                example_code: "```\nchoices {is} rock, paper, scissors\nyour_choice {is} {ask} 'What do you choose?'\n{print} 'You choose ' your_choice\ncomputer_choice {is} choices {at} {random}\n{print} 'The computer chooses ' computer_choice\n{if} computer_choice {is} your_choice\n    {print} 'Tie'\n{if} computer_choice {is} rock\n    {if} your_choice {is} paper\n        {print} 'You win!'\n    {if} your_choice {is} scissors\n        {print} 'You lose!'\n# finish this code\n```\n"
                start_code: '# via kodo ĉi tie'
            10:
                story_text: "## Rock, Paper, Scissors\nFeeling too lazy to play the game yourself? Let Hedy play it for you!\n"
                example_code: "```\nelektoj = roko, papero, tondilo\nludantoj = Margareto, Miĥaelo\n{for} ludanto {in} ludantoj\n     {print} ludanto ' elektas la jenon: ' elektoj {at} {random}\n```\n"
                start_code: '# via kodo ĉi tie'
            13:
                story_text: "## Roko, papero, tondilo\nPer la komando `{and}`, vi povas mallongigi vian kodon por la ludo! Rigardu la jenan ekzemplokodon kaj provu kompletigi ĝin.\n"
                example_code: "```\nopcioj = 'rock', 'paper', 'scissors'\nyour_choice = {ask} 'What do you choose?'\ncomputer_choice = opcioj {at} {random}\n{print} 'You choose ' your_choice\n{print} 'The computer chooses ' computer_choice\n{if} computer_choice {is} your_choice\n    {print} 'Tie'\n{if} computer_choice {is} 'rock' {and} your_choice {is} 'paper'\n    {print} 'Vi gajnas!'\n{if} computer_choice {is} 'rock' {and} your_choice {is} 'scissors'\n    {print} 'La komputilo gajnas!'\n```\n"
                start_code: '# via kodo ĉi tie'
            15:
                story_text: "## Roko, Papero, Tondilo\nLudu ĝis vi gajnos! Sed unue, kompletigu la ekzemplan kodon…\n"
                example_code: "```\nwon = 'no'\noptions = 'rock', 'paper', 'scissors'\n{while} won == 'no'\n    your_choice = {ask} 'What do you choose?'\n    computer_choice = options {at} {random}\n    {print} 'you chose ' your_choice\n    {print} 'the computer chose ' computer_choice\n    {if} computer_choice == your_choice\n        {print} 'Tie!'\n    {if} computer_choice == 'rock' {and} your_choice == 'scissors'\n        {print} 'You lose!'\n    {if} computer_choice == 'rock' {and} your_choice == 'paper'\n        {print} 'You win!'\n        won = 'yes'\n```\n"
                start_code: '# via kodo ĉi tie'
    calculator:
        name: Kalkulilo
        levels:
            15:
                start_code: '# via kodo ĉi tie'
                story_text: "## Calculator\nYou can add the `{while}` loop to the calculator game you've learned to make in a previous level.\nThis makes sure the player can't continue to the next question {if} they answer incorrectly.\n"
                example_code: "```\nscore = 0\n{for} i {in} {range} 0 {to} 9\n    numbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n    number1 = numbers {at} {random}\n    number2 = numbers {at} {random}\n    correct = number1 * number2\n    answer = 0\n    {while} answer != correct\n        {print} 'How much is ' number1 ' times ' number2 '?'\n        answer = {ask} 'Fill in your answer:'\n        {print} 'Your answer is ' answer\n    {print} 'Good job!'\n{print} 'You win!'\n```\n"
            6:
                story_text: "## Kalkulilo\nNun, ĉar vi povas kalkuli, vi ankaŭ povas verki programon por ekzerci vin al matematikaj kalkuloj. Vi povas mem fari la kalkulojn, ekzemple:\n"
                example_code: "```\nĝusta_respondo = 11 * 27\nrespondo = {ask} 'Kiom estas 11 multiplikite per 27?'\n{if} respondo {is} ĝusta_respondo {print} 'Bone!'\n{else} {print} 'Malĝuste! Jen la ĝusta respondo: ' ĝusta_respondo\n```\n"
                story_text_2: "## Random numbers\nYou can also let the computer do random sums on its own using random.\nThis is how you choose a number of tables to practice, and from that you always get a different sum:\n"
                example_code_2: "```\ntabeloj = 4, 5, 6, 8\nnombroj = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\ntabelo = tabeloj {at} {random}\nnombro = nombroj {at} {random}\nĝusta_respondo = tabelo * nombro\nrespondo = {ask} 'Kiom estas ' tabelo ' multiplikite per ' nombro '?'\n{if} respondo {is} ĝusta_respondo {print} 'Bone!'\n{else} {print} 'Malĝuste! La ĝusta respondo estas ' ĝusta_respondo\n```\n"
                start_code: "{print} 'Bonvenon al kalkulilo!'"
            9:
                story_text: "## Calculator\nIn previous levels you've learned how to make a calculator, in this level you can expand that code and make it into a little maths game. Like this...\n"
                example_code: "```\npoentaro = 0\n{repeat} 10 {times}\n    nombroj = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n    nombro1 = nombroj {at} {random}\n    nombro2 = nombroj {at} {random}\n    ĝusta_respondo = nombro1 * nombro2\n    {print} 'Kiom estas ' nombro1 ' multiplikite per ' nombro2 '?'\n    respondo = {ask} 'Tajpu vian respondon ĉi tie…'\n    {print} 'Jen via respondo:' respondo\n    {if} respondo {is} ĝusta_respondo\n        poentaro = poentaro + 1\n{print} 'Bonege! Jen via poentaro: ' poentaro '/10!'\n```\n"
                start_code: "{print} 'Bonvenon al kalkulilo!'"
            10:
                story_text: "## Calculator\nThis calculator game helps you practise your tables of multiplication!\nIf you add more numbers to the list, you can practise all the multiplications.\n"
                example_code: "```\nnombroj = 1, 2, 3\n{for} nombro1 {in} nombroj\n    {for} nombro2 {in} nombroj\n        respondo = {ask} 'Kiom estas ' nombro2 ' multiplikite per ' nombro1 '?'\n        ĝusta = numbro1 * nombro2\n        {if} respondo {is} ĝusta\n            {print} 'Bonege!'\n        {else}\n            {print} 'Via respondo ne estas ĝusta. Jen la ĝusta respondo: ' ĝusta\n```\n"
                start_code: '# via kodo ĉi tie'
            12:
                story_text: "## Kalkulilo\nNun oni povas verki kalkulilon, kiu funkcias por decimalaj frakcioj.\n"
                example_code: "```\nnombro1 = {ask} 'Kio estas la unua nombro?'\nnombro2 = {ask} 'Kio estas la dua nombro?'\nrespondo = nombro1 + nombro2\n{print} nombro1 ' plus ' nombro2 ' estas ' respondo\n```\n"
                start_code: '# via kodo ĉi tie'
            14:
                story_text: "## Divenu la nombron\nEn ĉi tiu nivelo, vi povas programi la ludon «Divenu la nombron»\n"
                example_code: "```\n{print} 'Guess which number'\nnumbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\nnumber = numbers {at} {random}\ngame = 'on'\n{for} i {in} {range} 1 {to} 10\n    {if} game == 'on'\n        guess = {ask} 'Which number do you think it is?'\n        {if} guess > number\n            {print} 'Lower!'\n        {if} guess < number\n            {print} 'Higher!'\n        {if} guess == number\n            {print} 'You win!'\n            game = 'over'\n```\n"
                start_code: '# via kodo ĉi tie'
        description: Krei kalkulilon
        default_save_name: Kalkulilo
    restaurant:
        name: Restoracio
        description: Kreu vian propran virtualan restoracion
        default_save_name: Restoracio
        levels:
            1:
                story_text: "## Restoracio\n En Nivelo 1, vi povas krei vian propran virtualan restoracion kaj preni la mendojn de viaj gastoj.\n"
                example_code: "```\n{print} Bonvenon al Restoracio Hedy \U0001F35F\n{ask} Kion vi volas mendi?\n{echo} Do vi volas mendi\n{print} Dankon pro via mendo!\n{print} Ĝi estas kuirata!\n```\n"
                story_text_2: "## Challenge\nCan you think of more lines to add to your restaurant code? For example, can you {ask} the guests what they'd like to drink, tell them the price, or wish them a pleasant meal?\n"
                start_code: '# via kodo ĉi tie'
            2:
                story_text: "## Restaurant\nIn level 2 you could expand your restaurant by using variables. In level 1 Hedy could only {echo} the order once and only remember the last thing that was ordered.\nNow you can use variables and Hedy can remember both the food and the drinks!\n"
                example_code: "```\n{print} Bonvenon al Hedy's restaurant!\n{print} Today we're serving pizza or lasagna.\nfood {is} {ask} What would you like to eat?\n{print} Great choice! The food is my favorite!\ntopping {is} {ask} Would you like meat or veggies on that?\n{print} food with topping is on its way!\ndrinks {is} {ask} What would you like to drink with that?\n{print} Thank you for your order.\n{print} Your food and drinks will be right there!\n```\n"
                start_code: '# via kodo ĉi tie'
            3:
                story_text: "## Hazarda Restoracio\nĈu vi havas problemon decidante, kion vi volas manĝi por vespermanĝo? Vi povas lasi Hedy elekti por vi!\nSimple tajpu listojn de viaj plej ŝatataj (aŭ malplej ŝatataj) manĝoj, kaj Hedy povas hazarde elekti vian vespermanĝon.\nVi ankaŭ povas iomete amuziĝi, lasante Hedy ankaŭ elekti la prezon de via vespermanĝo! Kion vi ricevos?\n"
                example_code: "```\n{print} Bonvenon al la Hazarda Restoracio de Hedy!\n{print} The only restaurant that will randomly choose your meal and its price for you!\nantaŭmanĝaĵoj {is} salato, supo, krudaĵo\nĉefpladoj {is} pico, brussels sprouts, spagetoj\ndesertoj {is} kuketoj, glaciaĵo, francaj fromaĝoj\ntrinkaĵoj {is} kolao, biero, akvo\nprezoj {is} 1 spesmilo, 10 spesmiloj, 100 spesmiloj\n{print} You will start with: antaŭmanĝaĵoj {at} {random}\n{print} Then we'll serve: ĉefpladoj {at} {random}\n{print} Kaj kiel deserto: desertoj {at} {random}\n{print} You will get a trinkaĵoj {at} {random} por trinki\n{print} That will be: prezoj {at} {random}\n{print} Thank you and enjoy your meal!\n```\n"
                story_text_2: "## Allergies\nDoes your costumer have any allergies or do they dislike certain dishes? Then you can use the `{remove}`command to remove it from your menu.\n"
                example_code_2: "```\n{print} Mystery milkshake\nflavors {is} strawberry, chocolate, vanilla\nallergies {is} {ask} Are you allergic to any falvors?\n{remove} allergies {from} flavors\n{print} You get a flavors {at} {random} milkshake\n```\n"
                start_code: '# via kodo ĉi tie'
            4:
                story_text: "## Restaurant\nIn this level you have to use quotation marks when using the `{print}` command.\nCan you make your code from the previous levels work in this level too by adding the quotation marks?\n\nBe careful! In the previous levels apostrophes were allowed in the text, but in this level Hedy will confuse them for quotation marks and the code will not work!\nSo instead of typing  `{print} Today we're serving pizza` , you should type `{print} 'Today we are serving pizza'`\n"
                example_code: "## Example Hedy Restaurant\n```\n{print} 'Bonvenon al Hedys restaurant!'\n{print} 'Today we are serving pizza or lasagna.'\nfood {is} {ask} 'What would you like to eat?'\n{print} 'Great choice! The ' food ' is my favorite!'\ntopping {is} {ask} 'Would you like meat or veggies on that?'\n{print} food ' with ' topping ' is on its way!'\ndrinks {is} {ask} 'What would you like to drink with that?'\n{print} 'Thank you for your order.'\n{print} 'Your ' food ' and ' drinks ' will be right there!'\n```\n"
                start_code: '# via kodo ĉi tie'
            5:
                story_text: "## Restaurant\nIn this level the {if} command allows you to {ask} your customers questions and give different responses to the answers.\nIn the example below, you see that you can {ask} the customer {if} they want to hear the specials and Hedy can respond accordingly.\n"
                example_code: "```\n{print} 'Bonvenon al Hedys restaurant!'\nspecial {is} {ask} 'Would you like to hear our specials today?'\n{if} special {is} yes {print} 'Todays special is chicken piri piri and rice.' {else} {print} 'No problem.'\nfood {is} {ask} 'What would you like to eat?'\n{print} 'One ' food ', coming right up!'\ndrink {is} {ask} 'What would you like to drink with that?'\n{if} drink {is} cola {print} 'Im sorry, we are out of cola!' {else} {print} 'Great choice!'\nanything {is} {ask} 'Would you like anything {else}?'\n{print} 'Let me repeat your order...'\n{print} 'One ' food\n{if} drink {is} cola {print} 'and...' {else} {print} 'One ' drink\n{if} anything {is} no {print} 'Thats it!' {else} {print} 'One ' anything\n{print} 'Thank you for your order and enjoy your meal!'\n```\n"
                story_text_2: "## Challenge\nCan you think of more questions to {ask} the customers when they are ordering, and make up different responses to their answers by using the {if} command?\n"
                start_code: '# via kodo ĉi tie'
            6:
                story_text: "## Restaurant\nIn this level you can use maths to calculate the total price of your customer's order, which can make your virtual restaurant more realistic.\n"
                example_code: "\nVi povas verki simplan kodon por restoracio, jene:\n```\n{print} 'Bonvenon al restoracio Hedy'\n{print} 'Jen nia menuo:'\n{print} 'Jen niaj ĉefpladoj: pico, lasanjoj aŭ spagetoj'\nĉefplado = {ask} 'Kiun ĉefpladon vi deziras?'\nprezo = 0\n{if} ĉefplado {is} pico prezo = 10\n{if} ĉefplado {is} lasanjoj prezo = 12\n{if} ĉefplado {is} spagetoj prezo = 8\n{print} 'Vi mendis ' ĉefplado 'n'\n{print} 'La prezo estas ' prezo ' spesmiloj'\n{print} 'Dankon, ĝuu vian manĝon!'\n```\n"
                story_text_2: "But you can also add many more things to your virtual restaurant, for example more courses.\n\n## Challenge\nYou can add many more things to your virtual restaurant. For example, can you...\n- {ask} how many people are coming and multiply the price by that amount?\n- add another course?\n- give people a discount when they enter a (secret) couponcode?\n- add a children's menu?\n- think of other fun things to add?\n"
                example_code_2: "\nIn this example there are three courses, which requires more code and more additions in calculating the price.\n```\n{print} 'Bonvenon al Restoracio Hedy'\n{print} 'Jen nia menuo:'\n{print} 'Jen niaj entreoj: salato, supo aŭ krudaĵo'\n{print} 'Jen niaj ĉefpladoj: pico, lasanjoj aŭ spagetoj'\n{print} 'Jen niaj desertoj: brownie, glaciaĵo aŭ milkshake'\nentreo = {ask} 'Kiun entreon vi deziras?'\nĉefplado = {ask} 'Kiun ĉefpladon vi deziras?'\ndeserto = {ask} 'Kiun deserton vi deziras?'\nprezo = 0\n{if} entreo {is} supo prezo = prezo + 6 {else} prezo = prezo + 7\n{if} ĉefplado {is} pico prezo = prezo + 10\n{if} ĉefplado {is} lasanjoj prezo = prezo + 12\n{if} ĉefplado {is} spagetoj prezo = prezo + 8\n{if} deserto {is} brownie prezo = prezo + 7\n{if} deserto {is} glaciaĵo prezo = prezo + 5\n{if} deserto {is} milkshake prezo = prezo + 4\n{print} 'Vi mendis ' starter 'n , ' ĉefplado 'n kaj ' deserto 'n'\n{print} 'La totalo estas ' prezo ' spesmiloj'\n{print} 'Dankon, ĝuu vian manĝon!'\n```\n"
                start_code: '# via kodo ĉi tie'
            7:
                story_text: "## Restoracio\nEn ĉi tiu nivelo, vi lernis kiel uzi la komandon `{repeat}` por ripeti linion da kodo iomfoje.\nVi povas uzi tion en via restoracio por demandi (per la komando `{ask}`) plurajn homojn pri iliaj mendoj jene:\n"
                example_code: "```\n{print} 'Bonvenon al Restoracio Hedy!'\nhomoj = {ask} 'How many people are joining us today?'\n{repeat} homoj {times} food = {ask} 'What would you like to eat?'\n{print} 'Dankon pro via mendo! Its coming right up!'\n```\n"
                start_code: '# via kodo ĉi tie'
            8:
                story_text: "## Restoracio\nEn ĉi tiu nivelo, vi povas plu ellabori vian virtualan restoracion ripetante plurajn liniojn da kodo. Jen:\n"
                example_code: "```\n{print} 'Bonvenon al Restoracio Hedy!'\nhomoj = {ask} 'Kiom da gastoj hodiaŭ?'\n{print} 'Bonege!'\n{repeat} homoj {times}\n    mendo = {ask} 'Kion vi volas mendi?'\n    {print} mendo\n{print} 'Dankon pro via mendo!'\n{print} 'Ĝuu vian manĝon!'\n```\n"
                story_text_2: "## Challenge\nOf course, this code can be expanded with more items on the menu, offering drinks, and/or multiple courses, so feel free to add as many options as you like!\n"
                start_code: '# via kodo ĉi tie'
            9:
                story_text: "## Restaurant\nIn this level you can use nesting to make your restaurant more realistic and more fun!\nFor example you would {ask} for sauce {if} somebody orders fries, but you wouldn't {if} someone orders pizza!\nCheck out the example, and try this at your own virtual restaurant!\n"
                example_code: "```\n{print} 'Bonvenon al Hedys restaurant!'\npeople = {ask} 'How many people will be joining us today?'\n{print} 'Great!'\nprice = 0\n{repeat} people {times}\n    food = {ask} 'What would you like to order?'\n    {print} food\n    {if} food {is} fries\n        price = price + 3\n        sauce = {ask} 'What kind of sauce would you like with your fries?'\n        {if} sauce {is} no\n            {print} 'no sauce'\n        {else}\n            price = price + 1\n            {print} 'with ' sauce\n    {if} food {is} pizza\n        price = price + 4\n{print} 'That will be ' price ' dollar'\n{print} 'Enjoy your meal!'\n```\n"
                start_code: '# via kodo ĉi tie'
            10:
                story_text: "## Restaurant\nIn this level you'll learn how to easily {ask} your guests' orders in a short code.\n"
                example_code: "```\npladoj = entreo, ĉefplado, deserto\n{for} plado {in} pladoj\n    manĝaĵo = {ask} 'Kion vi volas manĝi por via ' plado '?'\n    {print} manĝaĵo ' estos via ' plado\n```\n"
                story_text_2: "\nKompreneble, vi ankaŭ povus mendi por pluraj homoj!\n"
                example_code_2: "```\npladoj = entreo, ĉefplado, deserto\nnomoj = Timoteo, Omaro\n{for} nomo {in} nomoj\n    {for} plado {in} pladoj\n        manĝaĵo = {ask} nomo ', kion vi volas manĝi por via ' plado '?'\n        {print} nomo ' mendas ' food 'n por sia ' plado\n```\n"
                start_code: pladoj = entreo, ĉefplado, deserto
            11:
                story_text: "## Restaurant\nWe can use the `{for} i {in} {range} 1 {to} 5` to {print} the orders from multiple customers in an orderly manner.\n"
                example_code: "```\n{print} 'Bonvenon al Restoracio Hedy!'\npeople = {ask} 'For how many people would you like to order?'\n{for} i {in} {range} 1 {to} people\n    {print} 'Order number ' i\n    food = {ask} 'What would you like to eat?'\n    {print} food\n    {if} food {is} fries\n        sauce = {ask} 'What kind of sauce would you like with that?'\n        {print} sauce\n    drinks = {ask} 'What would you like to drink?'\n    {print} drinks\nprice = 4 * people\n{print} 'That will be ' price ' dollars, please!'\n```\n"
                start_code: '# via kodo ĉi tie'
            12:
                story_text: "## Restoracio\nEn ĉi tiu nivelo, vi povas uzi decimalajn frakciojn por igi vian menuon pli realeca.\n"
                example_code: "```\nprezo = 0\nmanĝaĵo = {ask} 'Kion vi volas mendi?'\ntrinkaĵo = {ask} 'Kion vi volas trinki?'\n{if} manĝaĵo {is} 'hamburgero'\n    prezo = prezo + 6.50\n{if} manĝaĵo {is} 'pico'\n    prezo = prezo + 5.75\n{if} trinkaĵo {is} 'akvo'\n    prezo = prezo + 1.20\n{if} trinkaĵo {is} 'sodakvo'\n    prezo = prezo + 2.35\n{print} 'Bonvolu pagi ' prezo ' spesmilojn'\n```\n"
                start_code: '# via kodo ĉi tie'
            13:
                story_text: "## Restaurant\nIn this level we can use the new commands to upgrade our restaurant.\nWe use `{and}` to see {if} two things are both the case.\n"
                example_code: "```\nprezo = 10\nmanĝaĵo = {ask} 'Kion vi volas manĝi?'\ntrinkaĵo = {ask} 'Kion vi volas trinki?'\n{if} manĝaĵo {is} 'sandviĉo' {and} trinkaĵo {is} 'suko'\n    {print} 'Jen nia rabatmenuaĵo'\n    prezo = prezo - 3\n{print} 'La totalo estas ' prezo ' spesmiloj'\n```\n"
                story_text_2: "Oni uzas `{or}` (ofte kun ` {if}`) por kontroli, ĉu almenaŭ unu el du kondiĉoj veras.\n"
                example_code_2: "```\ntrinkaĵo = {ask} 'Kion vi volas trinki?'\n{if} trinkaĵo {is} 'akvo' {or} trinkaĵo {is} 'suko'\n    {print} 'Jen sana elekto'\n```\n"
                start_code: '# via kodo ĉi tie'
            15:
                story_text: "## Restaurant\nWith the `{while}` you can make sure your costumers can keep adding orders until they are done.\n"
                example_code: "```\n{print} 'Bonvenon al McHedy'\npli = 'jes'\n{while} pli == 'jes'\n    mendo = {ask} 'Kion vi volas mendi?'\n    {print} mendo\n    pli = {ask} 'Ĉu vi volas mendi ion pli?'\n{print} 'Dankon!'\n```\n"
                start_code: '# via kodo ĉi tie'
    haunted:
        levels:
            2:
                start_code: monstro1 {is} _
                story_text: "## Haunted House\nIn this haunted house you can choose your monsters with emojis. Of course you could also use words.\n"
                example_code: "```\nmonstro_1 {is} \U0001F47B\nmonstro_2 {is} \U0001F921\nmonstro_3 {is} \U0001F476\n{print} You enter the haunted house.\n{print} Suddenly you see a monstro_1\n{print} You run into the other room, but a monstro_2 is waiting there for you!\n{print} Oh no! Quickly get to the kitchen.\n{print} But as you enter monstro_3 attacks you!\n```\n"
            3:
                start_code: '# via kodo ĉi tie'
                story_text: "## Haunted house game\nIn the previous levels you've made an introduction to your haunted house game, but as you might have noticed the story would always have a dreadful end.\nIn this level you can make your story more interactive by changing the outcome of the game; sometimes you'll get eaten, sometimes you'll escape!\nLet Hedy decide randomly!\n"
                example_code: "```\n{print} Escape from the haunted house!\n{print} There are 3 doors in front of you...\nchoice {is} {ask} Which door do you choose?\n{print} You picked door ... choice\nmonsters {is} a zombie, a vampire, NOTHING YOUVE ESCAPED\n{print} You see...\n{sleep}\n{print} monsters {at} {random}\n```\n"
                story_text_2: "## Challenge\nThis story is pretty straight {forward}, maybe you can spook it up a bit by adding a more exciting story.\nAlso you have very limited outcomes right now, there are only 3 options of what's behind the doors. Maybe you can think of more monsters to add to the list!\n\n## Change the game into a tv gameshow!\nLastly, we'd like to challenge you to change this game into a gameshow (like the ones on tv) where you choose a door or suitcase and it contains a big price!\nCan you do it?\n"
            4:
                start_code: '# via kodo ĉi tie'
                story_text: "## Haunted house\nIn this level you learn how to use quotation marks in your games.\nCan you make your Haunted House level 4 proof?\n"
                example_code: "```\n{print} _Escape from the haunted house!_\n{print} _There are 3 doors in front of you..._\nchoice {is} {ask} _Which door do you choose?_\n{print} _You picked door ..._ choice\nmonsters {is} a zombie, a vampire, NOTHING YOUVE ESCAPED\n{print} _You see..._\n{sleep}\n{print} monsters {at} {random}\n ```\n"
            1:
                story_text: "## Haunted house\nIn this adventure you are working towards making a game in which you have to escape from a haunted house by picking the correct door.\nIf you pick the right door you'll survive, but {if} not a terrible monster might...\n\nIn level 1 we start our haunted house game by making up a scary story and {ask} the player what monster they'll see in the haunted house.\n"
                example_code: "```\n{print} How did I get here?\n{print} I remember my friend telling me to go into the old mansion...\n{print} and suddenly everything went black.\n{print} But how did I end up on the floor...?\n{print} My head hurts like Ive been hit by a baseball bat!\n{print} What's that sound?\n{print} Oh no! I feel like Im not alone in this house!\n{print} I need to get out of here!\n{print} There are 3 doors in front of me..\n{ask} Which door should i pick?\n{echo} I choose door\n{print} ...?\n```\n"
                story_text_2: "## Defio\nĈu vi povas fini la timigan rakonton? Aŭ elpensu vian propran fantomdoman rakonton?\n"
                start_code: '{print} How did I get here?'
            5:
                story_text: "## Haunted House\nUp until this level the haunted house game always asked the player to choose a door, but as you might have noticed, they didn't really have to answer correctly.\nIf the player filled in a completely random answer, the game would still work and the player might even win (despite not picking a door).\nIn this level you can only win the game by picking the same door Hedy picked randomly.\n"
                example_code: "```\n{print} 'Escape from the haunted house!'\n{print} 'There are 3 doors in front of you...'\ndoors {is} 1, 2, 3\nmonsters {is} werewolf, mummy, vampire, zombie\nchosen_door {is} {ask} 'Which door do you choose?'\n{print} 'You chose door...' chosen_door\n{sleep}\ncorrect_door {is} doors {at} {random}\n{if} chosen_door {is} correct_door {print} 'Great! Youve escaped!'\n{else} {print} 'Oh no! You are being eaten by a...' monsters {at} {random}\n```\n"
                start_code: '# via kodo ĉi tie'
            9:
                story_text: "## Haunted House\nIn this level you can use nesting, which allows you to make the haunted house even more interactive!\n\n## Challenge\nNow it's very hard to win this game, can you make it easier to win?\nFor example by only having 1 wrong door and 2 correct doors instead of 1 correct door and 2 wrong ones?\n"
                example_code: "```\n{print} 'Escape from the Haunted House!'\nplayer = alive\ndoors = 1, 2, 3\nmonsters = zombie, vampire, giant spider\n{repeat} 3 {times}\n    {if} player {is} alive\n        correct_door {is} doors {at} {random}\n        {print} 'There are 3 doors in front of you...'\n        chosen_door = {ask} 'Which door do you choose?'\n        {if} chosen_door {is} correct_door\n            {print} 'No monsters here!'\n        {else}\n            {print} 'You are eaten by a ' monsters {at} {random}\n            player = dead\n    {else}\n        {print} 'GAME OVER'\n{if} player {is} alive\n    {print} 'Great! You survived!'\n```\n"
                start_code: "{print} 'Eskapu el la hantata domo!'"
            11:
                story_text: "## Haunted House\nIn this level we've changed the repeat command and we've added a line to our haunted house that tells the player in which room they are.\n"
                example_code: "```\n{print} 'Eskapu el la Hantata Domo!'\nludanto {is} vivanta\npordoj = 1, 2, 3\nmonstroj = kadavromonstro, vampiro, araneego\n{for} i {in} {range} 1 {to} 3\n    {if} ludanto {is} vivanta\n        ĝusta_pordo = pordoj {at} {random}\n        {print} 'Ĉambro ' i\n        {print} 'Jen tri pordoj antaŭ vi…'\n        elektita_pordo = {ask} 'Kiun pordon vi elektos?'\n        {if} elektita_pordo {is} ĝusta_pordo\n            {print} 'Neniu monstro ĉi tie!'\n        {else}\n            {print} 'Vin formanĝas ' monstroj {at} {random}\n            ludanto = mortinta\n    {else}\n        {print} 'FINO'\n{if} ludanto {is} vivanta\n    {print} 'Bonege! Vi pretervivis!'\n```\n"
                start_code: "{print} 'Eskapu el la hantata domo!'"
            14:
                story_text: "## Haunted House\nIn this level you can use the `<` and `>` symbol to introduce lives to your game.\n"
                example_code: "```\n{print} 'Escape from the haunted house'\nlives = 3\ndoors = 1, 2, 3\nmonsters = 'the wicked witch', 'a zombie', 'a sleeping 3 headed dog'\n{for} i {in} {range} 1 {to} 10\n    {if} lives > 0\n        good_door = doors {at} {random}\n        monster = monsters {at} {random}\n        chosen_door = {ask} 'Which door do you choose?'\n        {if} good_door == chosen_door\n            {print} 'You have chosen the correct door'\n        {else}\n            {print} 'You see...' monster\n            {if} monster == 'a sleeping 3 headed dog'\n                {print} 'Pffieuw.... Its asleep'\n            {else}\n                {print} 'You lose one life'\n                lives = lives -1\n    {else}\n        {print} 'GAME OVER'\n```\n"
                start_code: '# via kodo ĉi tie'
            16:
                story_text: "## Haunted House Game\nThis haunted house game uses the connection between the lists you can use in this level.\nFor example: all the properties that belong to the zombie are first in all the lists, witch second and vampire third.\nCheck out the code!\n"
                example_code: "```\nnombroj = [1, 2, 3]\ni = nombroj[{random}]\nsono = ['gruntadon', 'rikanon', 'susurantajn vespertflugilojn']\nmonstroj = ['kadavromonstro', 'sorĉistino', 'vampiro']\nmalbona_rezulto = ['Via cerbo estas formanĝita', 'Vi estas eterne malbenita', 'Vi estas mordita']\nbona_rezulto = ['Vi ĵetas la ŝinkon. La kadavromonstro, distrita, ekmanĝas ĝin.', 'Vi ekbruligas la kurtenojn. La sorĉistino fuĝas pro timo de la fajro.', 'La vampiro malamas la ajlon kaj fuĝas.']\narmiloj = ['ŝinko', 'fajrilo', 'ajlo']\n{print} 'Vi staras antaŭ malnova domego'\n{print} 'Io estas fia ĉi tie'\n{print} 'Vi aŭdas ' sono[i]\n{print} 'Vi esploros ĝin'\n{print} 'Vi eniras la kuirejon kaj vidas fajrilon, krudan ŝinkon kaj ajlon.'\nvia_armilo = {ask} 'Kion vi prenas?'\n{print} 'Portante vian ' via_armilo 'n, vi eniras la ĉefĉambron'\n{print} 'Tie troviĝas ' monstroj[i]\nbezonata_armilo = armiloj[i]\n{if} via_armilo == bezonata_armilo\n    {print} 'Vi uzas vian ' via_armilo 'n'\n    {print} bona_rezulto[i]\n    {print} 'VI GAJNAS!'\n{else}\n    {print} 'Vi elektis maltaŭgan armilon…'\n    {print} malbona_rezulto[i]\n    {print} 'FINO'\n```\n"
                start_code: '# via kodo ĉi tie'
        name: Hantata domo
        description: Eskapu el la hantata domo
        default_save_name: Hantata domo
    language:
        levels:
            5:
                story_text: "## Lernu novan lingvon\nFaru vian propran programon por ekzerci vian vortprovizon en nova lingvo.\n"
                example_code: "```\n{print} 'Lernu la francan!'\nkato {is} {ask} '\U0001F431'\n{if} kato {is} chat {print} 'Bonege!'\n{else} {print} 'Ne, kato estas chat'\nrano {is} {ask} '\U0001F438'\n{if} rano {is} grenouille {print} 'Bonege!'\n{else} {print} 'Ne, rano estas grenouille'\n```\n"
                start_code: '# via kodo ĉi tie'
            16:
                story_text: "## Lernu novan lingvon\nFaru vian propran programon por ekzerci vian vortprovizon en nova lingvo.\n"
                example_code: "```\nfrancaj_vortoj = ['bonjour', 'ordinateur', 'pomme de terre']\ntraduko = ['saluton', 'komputilo', 'terpomo']\npoentaro = 0\n{for} i {in} {range} 1 {to} 3\n    respondo = {ask} 'Kion signifas ' francaj_vortoj[i] '?'\n    ĝusta = traduko[i]\n    {if} respondo == ĝusta\n        {print} 'Ĝuste!'\n        poentaro = poentaro + 1\n    {else}\n        {print} 'Malĝuste, ' francaj_vortoj[i] ' signifas la jenon: ' traduko[i]\n{print} 'Vi respondis ' score ' fojojn ĝuste.'\n```\n"
                start_code: '# via kodo ĉi tie'
        name: Lingvo
        description: Praktiku vortojn de fremda lingvo
        default_save_name: Lingvo
    tic:
        levels:
            13:
                start_code: '## via kodo ĉi tie'
                story_text: "## Tri en vico\nEn ĉi tiu aventuro, vi povas programi la ludon «Tri en Vico», kiu estas por du ludantoj. Laŭvice, oni elektas numeron de la punkto (1–9), sur kiun oni metos sian signon (X aŭ O).\nGajnas la unua ludanto, kiu metas 3 signojn en vico (horizontale, vertikale aŭ diagonale)!\n"
                example_code: "```\nsigno = 'x'\nneokupataj = 1, 2, 3, 4, 5, 6, 7, 8, 9\nludo = 'nefinita'\nkvadrato1 = '.'\nkvadrato2 = '.'\nkvadrato3 = '.'\nkvadrato4 = '.'\nkvadrato5 = '.'\nkvadrato6 = '.'\nkvadrato7 = '.'\nkvadrato8 = '.'\nkvadrato9 = '.'\n{print} 'TRI EN VICO!'\n{print} kvadrato1 kvadrato2 kvadrato3\n{print} kvadrato4 kvadrato5 kvadrato6\n{print} kvadrato7 kvadrato8 kvadrato9\n{print} ' '\n{for} i {in} {range} 1 {to} 9\n    {if} ludo {is} 'nefinita'\n        elekto = {ask} 'Ludanto ' signo ' metos signon sur kiun kvadraton?'\n        {if} elekto {in} neokupataj\n            {remove} elekto {from} neokupataj\n            {if} elekto {is} 1\n                kvadrato1 = signo\n            {if} elekto {is} 2\n                kvadrato2 = signo\n            {if} elekto {is} 3\n                kvadrato3 = signo\n            {if} elekto {is} 4\n                kvadrato4 = signo\n            {if} elekto {is} 5\n                kvadrato5 = signo\n            {if} elekto {is} 6\n                kvadrato6 = signo\n            {if} elekto {is} 7\n                kvadrato7 = signo\n            {if} elekto {is} 8\n                kvadrato8 = signo\n            {if} elekto {is} 9\n                kvadrato9 = signo\n        {else}\n            {print} 'Tiu kvadrato estas jam okupata'\n        {print} kvadrato1 kvadrato2 kvadrato3\n        {print} kvadrato4 kvadrato5 kvadrato6\n        {print} kvadrato7 kvadrato8 kvadrato9\n        {print} ' '\n        gajninto = {ask} 'Ĉu vi gajnis?'\n        {if} gajninto {is} 'jes'\n            {print} 'Gratulon, ludanto ' signo '!'\n            ludo = 'finita'\n        {else}\n            {if} signo {is} 'x'\n                signo = 'o'\n            {else}\n                signo = 'x'\n```\n"
            14:
                start_code: '## via kodo ĉi tie'
                story_text: "## Tri en Vico\nEn la antaŭaj niveloj, vi faris la ludon «Tri en Vico». Nun vi lernis kiel uzi la signon `=`, la signon `==` kaj la signon `!=`.\nVi povas uzi ĉi tiun scion en via nova ludo «Tri en Vico», jene:\n"
                example_code: "```\nsigno = 'x'\nneokupataj = 1, 2, 3, 4, 5, 6, 7, 8, 9\nludo = 'nefinita'\nkvadrato1 = '.'\nkvadrato2 = '.'\nkvadrato3 = '.'\nkvadrato4 = '.'\nkvadrato5 = '.'\nkvadrato6 = '.'\nkvadrato7 = '.'\nkvadrato8 = '.'\nkvadrato9 = '.'\n{print} 'TRI EN VICO!'\n{print} kvadrato1 kvadrato2 kvadrato3\n{print} kvadrato4 kvadrato5 kvadrato6\n{print} kvadrato7 kvadrato8 kvadrato9\n{print} ' '\n{for} i {in} {range} 1 {to} 9\n    {if} ludo != 'finita'\n        elekto = {ask} 'Ludanto ' sign ' metos signon sur kiun kvadraton?'\n        {if} elekto {in} neokupataj\n            {remove} elekto {from} neokupataj\n            {if} elekto == 1\n                kvadrato1 = signo\n            {if} elekto == 2\n                kvadrato2 = signo\n            {if} elekto == 3\n                kvadrato3 = signo\n            {if} elekto == 4\n                kvadrato4 = signo\n            {if} elekto == 5\n                kvadrato5 = signo\n            {if} elekto == 6\n                kvadrato6 = signo\n            {if} elekto == 7\n                kvadrato7 = signo\n            {if} elekto == 8\n                kvadrato8 = signo\n            {if} elekto == 9\n                kvadrato9 = signo\n        {else}\n            {print} 'Tiu kvadrato estas jam okupata'\n        {print} kvadrato1 kvadrato2 kvadrato3\n        {print} kvadrato4 kvadrato5 kvadrato6\n        {print} kvadrato7 kvadrato8 kvadrato9\n        {print} ' '\n        gajninto = {ask} 'Ĉu vi gajnis?'\n        {if} gajninto == 'jes'\n            {print} 'Gratulon, ludanto ' signo '!'\n            ludo = 'finita'\n        {else}\n            {if} signo == 'x'\n                signo = 'o'\n            {else}\n                signo = 'x'\n```\n"
            15:
                start_code: '## via kodo ĉi tie'
                story_text: "## Tri en Vico\nEn ĉi tiu nivelo, vi povas plibonigi vian ludon «Tri en Vico» per la iteracio `{while}`. Per ĉi tiu iteracio, vi povas kombini la `{if} ludo != 'finita'` kaj la `{for} i {in} {range} 1 ĝis 9` en unu simplan linion.\nJen:\n"
                example_code: "```\nsigno = 'x'\nneokupataj = 1, 2, 3, 4, 5, 6, 7, 8, 9\nludo = 'nefinita'\nkvadrato1 = '.'\nkvadrato2 = '.'\nkvadrato3 = '.'\nkvadrato4 = '.'\nkvadrato5 = '.'\nkvadrato6 = '.'\nkvadrato7 = '.'\nkvadrato8 = '.'\nkvadrato9 = '.'\n{print} 'TRI EN VICO!'\n{print} kvadrato1 kvadrato2 kvadrato3\n{print} kvadrato4 kvadrato5 kvadrato6\n{print} kvadrato7 kvadrato8 kvadrato9\n{print} ' '\n{while} ludo != 'finita'\n    elekto = {ask} 'Ludanto ' signo ' metos signon sur kiun kvadraton?'\n    {if} elekto {in} neokupataj\n        {remove} elekto {from} neokupataj\n        {if} elekto == 1\n            kvadrato1 = signo\n        {if} elekto == 2\n            kvadrato2 = signo\n        {if} elekto == 3\n            kvadrato3 = signo\n        {if} elekto == 4\n            kvadrato4 = signo\n        {if} elekto == 5\n            kvadrato5 = signo\n        {if} elekto == 6\n            kvadrato6 = signo\n        {if} elekto == 7\n            kvadrato7 = signo\n        {if} elekto == 8\n            kvadrato8 = signo\n        {if} elekto == 9\n            kvadrato9 = signo\n    {else}\n        {print} 'Tiu kvadrato estas jam okupata'\n    {print} kvadrato1 kvadrato2 kvadrato3\n    {print} kvadrato4 kvadrato5 kvadrato6\n    {print} kvadrato7 kvadrato8 kvadrato9\n    {print} ' '\n    gajninto = {ask} 'Ĉu vi gajnis?'\n    {if} gajninto == 'jes'\n        {print} 'Gratulon, ludanto ' sign '!'\n        ludo = 'finita'\n    {else}\n        {if} signo == 'x'\n            signo = 'o'\n        {else}\n            signo = 'x'\n```\n"
            17:
                story_text: "## Tri en Vico\nEn la antaŭaj niveloj, la ludo «Tri en Vico» havis ĝenan trajton. Post ĉiu movo, oni devis respondi, ĉu oni gajnis aŭ ne.\nĈi tio igis la ludon ludebla, sed ankaŭ malrapidega. En ĉi tiu nivelo, ni lernis la komandon `{elif}`, kiu povas solvi ĉi tiun problemon.\nEstas amuze uzi la `{elif}` por kontroli ĉu ludanto gajnis, sed tio ankaŭ postulas sufiĉe da ekstraj linioj.\n\nEn la jena ekzempla kodo, ni aldonis la kondiĉojn por gajnado (3 signoj en vico horizontala, vertikala aŭ diagonala).\nIli troviĝas en linioj 46 ĝis 69. Notu, ke ĉiufoje kiam la kondiĉo estas vera (alivorte, se ludanto gajnis), la variablo `ludo` estas agordita al `'finita'`.\nTio signifas, ke la iteracio `{while}` kaj la ludo finiĝas.\n"
                example_code: "```\nsigno = 'x'\nneokupataj = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nludo = 'nefinita'\nkvadrato1 = '.'\nkvadrato2 = '.'\nkvadrato3 = '.'\nkvadrato4 = '.'\nkvadrato5 = '.'\nkvadrato6 = '.'\nkvadrato7 = '.'\nkvadrato8 = '.'\nkvadrato9 = '.'\n{print} 'TRI EN VICO!'\n{print} kvadrato1 kvadrato2 kvadrato3\n{print} kvadrato4 kvadrato5 kvadrato6\n{print} kvadrato7 kvadrato8 kvadrato9\n{print} ' '\n{while} ludo != 'finita':\n    elekto = {ask} 'Ludanto ' sign ' metos signon sur kiun kvadraton?'\n    {if} elekto {in} neokupataj:\n        {remove} elekto {from} neokupataj\n        {if} elekto == 1:\n            kvadrato1 = signo\n        {if} elekto == 2:\n            kvadrato2 = signo\n        {if} elekto == 3:\n            kvadrato3 = signo\n        {if} elekto == 4:\n            kvadrato4 = signo\n        {if} elekto == 5:\n            kvadrato5 = signo\n        {if} elekto == 6:\n            kvadrato6 = signo\n        {if} elekto == 7:\n            kvadrato7 = signo\n        {if} elekto == 8:\n            kvadrato8 = signo\n        {if} elekto == 9:\n            kvadrato9 = signo\n    {else}:\n        {print} 'Tiu kvadrato estas jam okupata'\n    {print} kvadrato1 kvadrato2 kvadrato3\n    {print} kvadrato4 kvadrato5 kvadrato6\n    {print} kvadrato7 kvadrato8 kvadrato9\n    {print} ' '\n    {if} kvadrato1 == kvadrato2 {and} kvadrato2 == kvadrato3 {and} kvadrato1 != '.':\n        {print} 'Ludanto ' sign ' gajnis!'\n        ludo = 'finita'\n    {elif} kvadrato4 == kvadrato5 {and} kvadrato5 == kvadrato6 {and} kvadrato4 != '.':\n        {print} 'Ludanto ' sign ' gajnis!'\n        ludo = 'finita'\n    {elif} kvadrato7 == kvadrato8 {and} kvadrato8 == kvadrato9 {and} kvadrato7 != '.':\n        {print} 'Ludanto ' sign ' gajnis!'\n        ludo = 'finita'\n    {elif} kvadrato1 == kvadrato4 {and} kvadrato4 == kvadrato7 {and} kvadrato1 != '.':\n        {print} 'Ludanto ' sign ' gajnis!'\n        ludo = 'finita'\n    {elif} kvadrato2 == kvadrato5 {and} kvadrato5 == kvadrato8 {and} kvadrato2 != '.':\n        {print} 'Ludanto ' sign ' gajnis!'\n        ludo = 'finita'\n    {elif} kvadrato3 == kvadrato6 {and} kvadrato6 == spot_9 {and} kvadrato3 != '.':\n        {print} 'Ludanto ' sign ' gajnis!'\n        ludo = 'finita'\n    {elif} kvadrato1 == kvadrato5 {and} kvadrato5 == spot_9 {and} kvadrato1 != '.':\n        {print} 'Ludanto ' sign ' gajnis!'\n        ludo = 'finita'\n    {elif} kvadrato3 == kvadrato5 {and} kvadrato5 == kvadrato7 {and} kvadrato3 != '.':\n        {print} 'Ludanto ' sign ' gajnis!'\n        ludo = 'finita'\n    {else}:\n        {if} signo == 'x':\n            signo = 'o'\n        {else}:\n            signo = 'x'\n```\n"
                start_code: '## via kodo ĉi tie'
        name: Tri en Vico
        description: Ludu «Tri en vico»!
        default_save_name: Trienvico
    default:
        name: Enkonduko
        description: Klarigo pri nivelo
        default_save_name: enkonduko
        levels:
            1:
                story_text: "## Bonvenon al Hedy!\nEn Nivelo 1 vi povas uzi la komandojn `{print}`, `{ask}` kaj `{echo}`.\nTajpu vian kodon en la programan kampon. Aŭ premu la verdan butonon en la ekzempla kodbloko, kaj la kodo tajpiĝos por vi!\nProvu mem la kodon per la verda butono «Ruli kodon» sub la programa kampo.\n\nVi povas presi tekston al la ekrano per la komando `{print}`.\n"
                example_code: "```\n{print} Saluton!\n{print} Bonvenon al Hedy!\n```\n"
                story_text_2: "Vi ankaŭ povas peti enigon per `{ask}` kaj ripeti ĝin per la komando `{echo}`.\n"
                story_text_3: "Ni komencu! Ĉu vi ne povas decidi kion krei? En la sekvaj langetoj, vi trovos ideojn pri kreindaj programoj.\n"
                example_code_2: "```\n{ask} Kio estas via nomo?\n{echo} saluton\n```\n"
                start_code: '{print} saluton mondo!'
            2:
                story_text: "## Variabloj\nEn Nivelo 2, ni lernas du novajn komandojn: `{is}` kaj `{sleep}`.\nVi povas nomi vorton per `{is}`. Tia nomo nomiĝas variablo. En ĉi tiu ekzemplo, ni faris variablon nomitan `nomo` kaj variablon nomitan `aĝo`. Vi povas uzi la vorton `nomo` ie ajn en via kodo, kaj ĝi estos anstataŭigita per Hedy, jene:\n\nTiel vi ne plu bezonas la komandon `{echo}`!\n"
                example_code: "```\nnomo {is} Hedy\naĝo {is} 15\n{print} nomo estas aĝo jarojn aĝa\n```\n"
                story_text_2: "`{print}` ankoraŭ funkcias same, sed la komando `{ask}` ŝanĝiĝis. Vi devas uzi variablon ankaŭ en la komando `{ask}`. Ĝi aspektas jene:\n"
                example_code_2: "```\nrespondo {is} {ask} Kio estas via nomo?\n{print} Saluton respondo\n```\n"
                story_text_3: "Alia nova komando en ĉi tiu nivelo estas `{sleep}`, kiu paŭzigas vian programon dum sekundo. Se vi tajpas nombron antaŭ la komando {sleep}, la programo paŭzas dum tiom da sekundoj.\n"
                example_code_3: "```\n{print} Mia plej ŝatata koloro estas...\n{sleep} 2\n{print} verda!\n```\n"
                start_code: '{print} saluton mondo!'
            3:
                story_text: "## Faru liston!\nEn Nivelo 3, oni povas fari liston. Oni povas lasi la komputilon elekti hazardaĵon el la listo. Oni faras tion per `{at} {random}`.\n"
                example_code: "```\nbestoj {is} hundo, kato, kanguruo\n{print} bestoj {at} {random}\n```\n"
                story_text_2: Oni ankaŭ povas aldoni erojn al la listo per `{add}` kaj forigi erojn per `{remove}`.
                example_code_2: "```\nbestoj {is} hundo, kato, kanguruo\n{add} pingveno {to_list} bestoj\n{remove} kato {from} bestoj\n{print} bestoj {at} {random}\n```\n"
                start_code: '{print} saluton mondo!'
            4:
                start_code: "{print} 'Saluton, mondo'"
                story_text: "## 'Citiloj'\nEn Nivelo 4, `{ask}` kaj `{print}` ŝanĝiĝis.\n\nOni devas meti presotan tekston inter citiloj.\n\nTio utilas, ĉar nun oni povas presi ĉiajn ajn vortojn. Kaj simile pri tiuj vortoj, kiujn oni konservas per `{is}`.\n\nPreskaŭ ĉiuj programlingvoj ankaŭ uzas citilojn por presado; tiel ni proksimiĝas al vera programado!\n"
                example_code: "```\n{print} 'Oni devas uzi citilojn ekde nun!'\nrespondo {is} {ask} 'Kion oni bezonas uzi ekde nun?'\n{print} 'Oni devas uzi ' respondo 'n'\n```\n"
                story_text_2: "## Aventuroj fariĝas pli kaj pli malfacilaj\nLa aventuroj nun fariĝas pli kaj pli malfacilaj en la sinsekvaj langetoj.\nDo estas plej bone komenci maldekstre pri la rakonto, kaj moviĝi dekstren, por pliigi la malfacilecon laŭgrade.\n"
            5:
                start_code: "nomo {is} {ask} 'Kio estas via nomo?'\n{if} nomo {is} Hedy {print} 'bone!' {else} {print} 'ba!'"
                story_text: "## Se... alie....\nEn Nivelo 5 estas io nova, la `{if}`! Per la `{if}`, oni povas elekti inter du malsamaj opcioj.\nLa jena kodo presos «bone», se vi tajpos «Hedy» kiel nomon, kaj «ba!», se vi tajpos ion alian.\n`{ask}` kaj `{print}` daŭre funkcias kiel en Nivelo 4.\n"
                example_code: "```\nnomo {is} {ask} 'kio estas via nomo?'\n{if} nomo {is} Hedy {print} 'bone' {else} {print} 'ba!'\n```\n"
                story_text_3: "## Listoj\nKiam oni volas kontroli, ĉu io estas en listo, oni nun povas uzi la komandon `{in}`.\nLa jena kodo presas «bela!», se oni elektas «verda» aŭ «flava», kaj «ba!» alie.\n"
                example_code_3: "```\nbelaj_koloroj {is} verda, flava\nkoloro {is} {ask} 'Kio estas via plej ŝatata koloro?'\n{if} koloro {in} belaj_koloroj {print} 'bela!'\n{else} {print} 'ba!'\n```\n"
                story_text_2: "Kelkfoje kodo kun `{if}` estas tro longa por unu linio.<br>Oni ankaŭ povas dividi la kodon inter du linioj, komencante la duan linion ĉe la `{else}` jene:\n"
                example_code_2: "```\nnomo {is} {ask} 'Kio estas via nomo?'\n{if} nomo {is} Hedy {print} 'bone'\n{else} {print} 'ba!'\n```\n"
            6:
                start_code: "{print} '5 multiplikite per 5 estas ' 5 * 5"
                story_text: "## 1 + 1\n En ĉi tiu nivelo, vi lernas ion novan: vi povas nun ankaŭ kalkuli.\n\n La pluso estas facila; vi skribas ĝin simile al matematiko: `5 + 5` ekzemple. La minuso ankaŭ funkcias bone, jen `5 - 5`.\n\n La multipliko estas iom malsamaj, ĉar ne ekzistas la multipliko-signo en via klavaro. Nu, serĉu; ĝi vere ne ekzistas!\n Tial oni multiplikas per la asterisko (ofte la klavo 8 kun la majuskliga klavo): `5 * 5`. Legu tion kiel «5 multiplikite per 5», por helpi la memoradon.\n"
                example_code: "```\n{print} '5 plus 5 estas ' 5 + 5\n{print} '5 minus 5 estas ' 5 - 5\n{print} '5 multiplikite per 5 estas ' 5 * 5\n```\n"
                story_text_2: "Ni ankaŭ faras ŝanĝon pri konservado de vorto en variablo! Oni nun povas uzi `=` anstataŭ `{is}` por konservi nomon aŭ nombron en variablo, jene:\n"
                example_code_2: "```\nnomo = Hedy\nrespondo = 20 + 4\n```\n"
            7:
                start_code: "{repeat} 3 {times} {print} 'Hedy estas amuza!'"
                story_text: "## Nivelo 7! Nivelo 7!\nNivelo 7 enkondukas la komandon `{repeat}`. `{repeat}` povas esti uzata por ruli unu linion da kodo plurfoje.\n"
                example_code: "```\n{repeat} 3 {times} {print} 'Hedy estas amuza!'\n```\n"
            8:
                start_code: "{repeat} 5 {times}\n    {print} 'Saluton ĉiuj'\n    {print} 'Jen linio represota 5 fojojn'"
                story_text: "## Deŝovado\n`{ask}` kaj `{print}` ankoraŭ funkcias kiel vi konas ilin. Sed `{if}` kaj `{repeat}` ŝanĝiĝis!\nVi nun povas ekzekuti grupojn de kodo kune, sed vi devos *deŝovi* la kodon.\nTio signifas meti kvar spacojn ĉe la komenco de la linio. Vi ankaŭ devos deŝovi kiam vi nur volas krei blokon de unu linio.\n"
                example_code: "```\n{repeat} 5 {times}\n    {print} 'Saluton ĉiuj'\n    {print} 'Jen ĉio ripetota 5 fojojn'\n```\n"
            9:
                start_code: "{repeat} 3 {times}\n    manĝaĵo = {ask} 'Kion vi volas manĝi?'\n    {if} manĝaĵo {is} pico\n        {print} 'Bonege!'\n    {else}\n        {print} 'Pico estas preferinda.'"
                story_text: "## All together now!\nIn this level you can not only use multiple lines with `{if}` and `{repeat}`, but you can also put them together!\nIn the example you see an `{if}` command within a `{repeat}` command. It is also allowed the other way around, and an `{if}` is also allowed in an `{if}` and a `{repeat}` in a `{repeat}`.\nGive it a try!\n"
                example_code: "```\n{repeat} 3 {times}\n    manĝaĵo = {ask} 'Kion vi volas manĝi?'\n    {if} manĝaĵo {is} pico\n        {print} 'bone!'\n    {else}\n        {print} 'vi preferu picon'\n```\n"
            10:
                start_code: "bestoj {is} hundo, kato, fiŝo\n{for} besto {in} bestoj\n  {print} 'Mi amas ' besto 'n'"
                story_text: "## For each item in my list...\nIn this level we learn a new code called `{for}`. With `{for}` you can make a list and use all elements.\n`{for}` creates a block, like `{repeat}` and `{if}` so all lines in the block need to start with spaces."
                example_code: "```\nbestoj {is} hundo, kato, fiŝo\n{for} besto {in} bestoj\n  {print} 'Mi amas ' besto 'n'\n```\n"
            11:
                start_code: "{for} nombro {in} {range} 1 {to} 5\n    {print} nombro"
                story_text: "## Loops!\n`{print}` works just the same but we add a new form of the `{for}`. You can now write `{for} counter {in} {range} 1 {to} 5` and use `counter` in your program.\nTry it out to see what happens! Remember to use indentations after the `{for}` and `{if}` statements (That means starting a sentence with four spaces)"
                example_code: "```\n{for} nombro {in} {range} 1 {to} 5\n    {print} nombro\n```\n"
            12:
                start_code: "{print} 'Decimalaj nombroj nun postulas punkton (ne komon)'\n{print} 2.5 + 2.5"
                story_text: "## Nombroj kaj tekstoj\n**Decimalaj frakcioj**\nĜis nun, Hedy ne permesis decimalajn frakciojn kiel «1.5», sed nun ĝi ja permesas tiujn. Notu, ke komputiloj uzas la punkton `.` (ne la komon `,`) por decimalaj frakcioj."
                example_code: "```\n{print} 'Du kaj duono plus du kaj duono estas…'\n{print} 2.5 + 2.5\n```\n"
                story_text_2: "**Ĉiu teksto devas esti inter citiloj**\nPor ĉi tiu nivelo, oni ankaŭ devas uzi citilojn por konservi tekston per `=`:\n"
                example_code_2: "```\nnomo = 'Hedy la Roboto'\n{print} 'Saluton ' nomo\n```\n"
                story_text_3: "**Ĉiuj eroj en listoj ankaŭ bezonas citilojn**\nListoj estas tekstoj; tial, ankaŭ ili bezonas citilojn. Atentu, ke ĉiu unuopa ero en listo havas citilojn.\nTio ebligas al vi konservi du vortojn kiel 1 eron en la listo, ekzemple «Fera Viro».\n"
                example_code_3: "```\nsuperherooj = 'Araneviro', 'Vespertviro', 'Fera Viro'\n{print} superherooj {at} {random}\n```\n"
                story_text_4: "**Ĉiu teksto post `{if}`-komparoj ankaŭ bezonas citilojn**\n"
                example_code_4: "```\nnomo = {ask} 'Kio estas via nomo?'\n{if} nomo = 'Hedy la Roboto'\n    {print} 'Saluton!'\n```\n"
                story_text_5: "**Nombroj ne bezonas citilojn**\nPor nombroj, vi ne uzas citilojn en la `=`:\n"
                example_code_5: "```\npoentaro = 25\n{print} 'Via poentaro estas ' poentaro\n```\n"
                story_text_6: "**Matematiko kun vortoj**\nEn ĉi tiu nivelo estas ankaŭ permesite uzi la signon + kun tekstoj. Ekzemple:"
                example_code_6: "```\na = 'Saluton '\nb = 'mondo!'\n{print} a + b\n```\n"
            13:
                start_code: "nomo = {ask} 'Kio estas via nomo?'\naĝo = {ask} 'Kio estas via aĝo?'\n{if} nomo {is} 'Hedy' {and} aĝo {is} 2\n    {print} 'Vi estas la vera Hedy!'"
                story_text: "## Kaj… aŭ…?\nNi nun lernos `{and}` kaj `{or}`! Se oni volas kontroli du kondiĉojn, oni ne devas uzi du `{if}`-ojn sed povas uzi `{and}` kaj `{or}`. Se oni uzas `{and}`, ambaŭ kondiĉoj, maldekstra kaj dekstra de la `{and}`, devas esti veraj. Oni ankaŭ povas uzi `{or}`. Tiam nur unu kondiĉo devas esti vera."
                example_code: "```\nnomo = {ask} 'kio estas via nomo?'\naĝo = {ask} 'kia estas via aĝo?'\n{if} nomo {is} 'Hedy' {and} aĝo {is} 2\n    {print} 'Vi estas la vera Hedy!'\n```\n"
            14:
                start_code: "aĝo = {ask} 'Kia estas via aĝo?'\n{if} aĝo < 13\n    {print} 'Vi estas malpli aĝa ol mi!'\n{else}\n    {print} 'Vi estas pli aĝa ol mi!'"
                story_text: "## Granda, pli granda, plej granda!\nNi lernos pli da novaj sintaksaĵoj. Vi eble jam konas ilin pro matematiko: la `<` kaj `>`.\nLa `<` kontrolas, ĉu la unua nombro estas pli malgranda ol la dua: ekzemple `aĝo < 12` kontrolas, ĉu `aĝo` estas pli malgranda ol `12`.\nSe vi volas kontroli, ĉu la unua nombro estas pli malgranda aŭ egala al la dua, vi povas uzi `<=`: ekzemple, `aĝo <= 11`.\nLa `>` kontrolas, ĉu la unua nombro estas pli granda ol la dua: ekzemple, `poentaro > 10` kontrolas, ĉu `poentaro` estas pli granda ol `10`.\nSe oni volas kontroli, ĉu la unua nombro estas pli granda aŭ egala al la dua, oni povas uzi `>=`: ekzemple, `poentaro >= 11`.\nOni uzas tiujn komparojn en `{if}` jene:\n"
                example_code: "```\naĝo = {ask} 'Kian aĝon vi havas?'\n{if} aĝo > 12\n    {print} 'Vi estas pli aĝa ol mi!'\n```\n"
                story_text_2: "From this level on, if you want to compare exactly, you can use two equal signs. This is what most programming languages do:\n"
                example_code_2: "```\nnomo = {ask} 'Kio estas via nomo?'\n{if} nomo == 'Hedy'\n    {print} 'Bonege!'\n```\n"
                story_text_3: "Oni ankaŭ povas kontroli, ĉu io *ne* egalas ion alian, uzante `!=` jene:\n"
                example_code_3: "```\nnomo = {ask} 'Kio estas via nomo?'\n{if} nomo != 'Hedy'\n    {print} 'vi ne estas Hedy'\n```\n"
            15:
                start_code: "respondo = 0\n{while} respondo != 25\n    respondo = {ask} 'Kio estas 5 multiplikite per 5?'\n{print} 'Jen ĝusta respondo'"
                story_text: "## More loops!\nWe are going to learn a new loop, the `{while}` loop! We continue the loop as long as the statement is true.\nSo don't forget to change the value in the loop.\n\nIn the example code, we continue until a correct answer has been given.\nIf the correct answer is never given, the loop never ends!"
                example_code: "```\nrespondo = 0\n{while} respondo != 25\n    respondo = {ask} 'Kio estas 5 multiplikite per 5?'\n{print} 'Jen la ĝusta respondo'\n```\n"
            16:
                start_code: "fruktoj = ['pomo', 'banano', 'ĉerizo']\n{print} fruktoj"
                story_text: "## Pli kaj pli simile al vera kodo!\nNi faros listojn laŭ la maniero de Python, kun rektaj krampoj ĉirkaŭ la listoj! Ni ankaŭ konservas la citilojn ĉirkaŭ ĉiu ero, kiel ni lernis en antaŭaj niveloj.\nVi povas ankaŭ uzi la rektajn krampojn por indiki lokon en la listoj."
                example_code: "```\namikoj = ['Amano', 'Benjameno', 'Cecilio']\nbonŝancaj_numeroj = [15, 18, 6]\n{for} i {in} {range} 1 {to} 3\n    {print} 'la bonŝanca numero de ' amikoj[i]\n    {print} 'estas ' bonŝancaj_numeroj[i]\n```\n"
            17:
                start_code: "{for} i {in} {range} 1 {to} 10:\n    {print} i\n{print} 'Jen mi venas!'"
                story_text: "## `{elif}`\nNun ni iom ŝanĝos la indentaĵon. Ĉiufoje kiam ni bezonas deŝovon, ni bezonas `:` ĉe la linio antaŭ la deŝovo.\n\nEn ĉi tiu nivelo vi povas ankaŭ uzi novan komandon: `{elif}`. `{elif}` estas mallongigo de {else} {if} kaj vi bezonas ĝin kiam vi volas fari 3 (aŭ pli!) opciojn.\nJen:"
                example_code: "```\nprices = ['1 million dollars', 'an apple pie', 'nothing']\nyour_price = prices[{random}]\n{print} 'You win ' your_price\n{if} your_price == '1 million dollars' :\n    {print} 'Yeah! You are rich!'\n{elif} your_price == 'an apple pie' :\n    {print} 'Lovely, an apple pie!'\n{else}:\n    {print} 'Better luck next time..'\n```\n"
            18:
                start_code: "nomo = 'Hedy'\n{print}('Mia nomo estas ', nomo)"
                story_text: "## La lasta nivelo!\nNi alvenis al vera Python-kodo! Tio signifas, ke ni devas uzi rondajn krampojn kun {print} kaj {range} de nun."
                example_code: "```\n{print}('mia nomo estas Hedy!')\n```\n"
                story_text_2: Se oni volas presi pli ol unu eron, oni devas apartigi ilin per komoj.
                example_code_2: "```\ntemperaturo = 25\n{print}('Nun estas ', temperature, 'gradoj ekstere')\n```\n"
                story_text_3: "##  Enigo\nLa fina ŝanĝo, kiun ni devos fari por havi Python-kodon, estas ŝanĝi `{ask}` al `{input}`."
                example_code_3: "```\n{print}('Mia nomo estas Hedy!')\nnomo = {input}('Kio estas via nomo?')\n{print}('Do via nomo estas ', nomo)\n```\n"
    next:
        levels:
            13:
                start_code: "{print} 'Al la sekva nivelo!'"
                story_text: "## What's next?\nWith the program below you can calulate {if} you've passed a subject at school (so, a grade of six or higher).\nYou can see this code is extremely inefficient, du to the very long code in line 5.\nAll the different grades from 1 to 5 had to be programmed seperately. Lucky for you, in the next level you'll learn how to do this without this extremely long code!\n"
                example_code: "```\nfirst_grade = {ask} 'What score did you get on your first test?'\nsecond_grade = {ask} 'What score did you get on your second test?'\nadded {is} first_grade + second_grade\nmean_grade {is} added / 2\n{if} mean_grade = 1 {or} mean_grade = 2 {or} mean_grade = 3 {or} mean_grade = 4 {or} mean_grade = 5\n    {print} 'Oh no! You have failed the subject...'\n{else}\n    {print} 'Great! You have passed the subject!'\n```\n"
            18:
                start_code: "{print} ('Bonege!!!')"
                story_text: "## Kio sekvas?\nGratulon! Vi atingis la lastan nivelon de Hedy! Sed ni laboradas por krei pli da niveloj kaj novaj aventuroj. Do bonvolu reveni poste por kontroli la plej novajn nivelojn!\n"
            1:
                story_text: "## What's next?\nCongratulations! You've reached the end of level 1. Hopefully you've already made some awesome codes, but Hedy has a lot more to discover. \n\nIn the first level you might've notice that the `{echo}` command can only save one bit of information at a time. \nFor example in the restaurant adventure, you could {echo} what the costumer wanted to eat, or what they wanted to drink, but not both in one sentence. \n"
                example_code: "```\n{print} Bonvenon al Restoracio Hedy\n{ask} Kion vi volas manĝi?\n{echo} Do vi volas manĝi \n{ask} Kion vi volas trinki?\n{echo} Do vi volas trinki \n```\n"
                story_text_2: "If the player types a hamburger and coke, you can't say `so you would like a hamburger and coke`, but you have to make two separate line. \nAlso, the `{echo}` command only echoes the word at the end of the sentence. So you can't say `your hamburger is coming right up!`.\n\nThat changes in level 2. In level 2 you'll learn to work with variables, that allow you to save multiple pieces of information and print them in any place you want.\nBesides, you'll learn how to work with the `{at} {random}` command, that you can use to make games. \nSo let's go to the next level!\n"
                start_code: "{print} Ek!"
            2:
                story_text: "## What's next?\nIn this level you've learned what a variable is and how you can use it to make your adventures more interactive.\nBut... that's not the only thing you can do with variables! You can also use variables to make lists.\nAnd you can even let Hedy pick a random word out of a list, which allows you to make real games!\nTake a quick look at the next level!\n"
                start_code: "{print} Al la sekva nivelo!"
            3:
                story_text: "## What's next?\nIn this level you've been practising with variables, but maybe you've come across this mistake.\n\nTry to run this code:\n```\nname {is} Sophie\n{print} My name is name\n```\nOf course you wanted to print `My name is Sophie` but Hedy prints `My Sophie is Sophie`.\nIn the next level this problem is fixed by using quotation marks.\n"
                start_code: "{print} Al la sekva nivelo!"
            4:
                story_text: "## What's next?\nIn the previous levels you've already learned to use `{at} {random}` which made your games different every time you ran the code.\nBut it's not really interactive, the player doesn't have any influence on what happens in the game.\n\nIn the next level you'll learn the `{if}` command, that allows you to give different responses in your program. This way you can program a secret password for your computer for example.\nSo let's take a peak!\n\n```\npassword {is} {ask} 'What is the correct password?'\n```\n"
                start_code: "{print} 'Al la sekva nivelo!'"
            5:
                story_text: "## Kio sekvos?\nNun vi atingis la finon de ĉi tiu nivelo kaj lernis `{ask}` kaj `{if}`. Ekzemple oni povas uzi `{ask}` por demandi al gastoj, kion ili ŝatus manĝi.\nTamen, oni ankoraŭ ne povas kalkuli la prezon de ĉies vespermanĝo.\n\nLa sekva nivelo ebligas uzi adicion, subtrahon kaj multiplikon en oniaj programoj. Tiel oni povas kalkuli la prezojn en sia restoracio, kaj oni ankaŭ povas aldoni sekretan kodon por doni rabaton al siaj amikoj kaj familio.\nAlia eblo en la sekva nivelo estas programi propran matematikan ludon, por ke via frato aŭ fratino praktiku siajn multiplikojn.\nEk al la sekva nivelo!\n"
                example_code: "## Free drinks!\n```\n{print} 'Welcome at McHedy'\norder {is} {ask} 'What would you like to eat?'\n{print} 'You would like ' order\n{if} order {is} hamburger price {is} 5\n{if} order {is} fries price {is} 2\ndrinks {is} {ask} 'What would you like to drink?'\n{print} 'You would like ' drinks\n{print} 'That will be ' price ' dollars for your ' order ' please'\n{print} 'The drinks are free in this level because Hedy cant calculate the price yet...'\n```\n"
                start_code: "{print} 'Al la sekva nivelo!'"
            6:
                story_text: "## What's next?\n Great job! You've reached the end of this level, which means you have practiced with `{if}` and `{else}`. You have probably noticed that your codes are getting longer and longer.\n For example {if} you want to program 'Happy Birthday'.\n\nThat's a lot of code for mainly the same words over and over again. Luckily in the next level has a solution with the `{repeat}` command, that allows you to repeat a line of code multiple times.\n"
                example_code: "```\n{print} 'feliĉan naskiĝtagon al vi'\n{print} 'feliĉan naskiĝtagon al vi'\n{print} 'feliĉan naskiĝtagon kara Hedy'\n{print} 'feliĉan naskiĝtagon al vi'\n```\n"
                start_code: "{print} 'Al la sekva nivelo!'"
            7:
                story_text: "## Kio sekvos?\nNun vi lernis kiel ripeti unu linion da kodo. Tio utilas sed ne ĉiam sufiĉas. Kelkfoje oni volas ripeti plurajn liniojn samtempe.\nLa sekva nivelo permesos al vi grupigi kelkajn liniojn da kodo kaj ripeti tiun grupon da linioj samtempe!\n"
                example_code: "```\n{repeat} 5 {times} {print} 'En la sekva nivelo oni povos ripeti plurajn liniojn da kodo samtempe!'\n```\n"
                start_code: "{print} 'Al la sekva nivelo!'"
            8:
                story_text: "## What's next?\nGreat job! You've reached the end of another level! In this level you've learned to use multiple lines of code in an {if} or {repeat} command. But you can't yet combine the two...\nGood news! In the next level you will be allowed to put an {if} inside an {if}, or inside a {repeat} command.\n"
                example_code: "```\nanswer = {ask} 'Would you like to go to the next level?'\n{if} answer {is} yes\n    {print} 'Great! You can use the {repeat} commando in the {if} command!'\n    {print} 'Hooray!'\n    {print} 'Hooray!'\n    {print} 'Hooray!'\n{else}\n    {print} 'Okay, you can stay here for a little longer!'\n```\n"
                start_code: "{print} 'Al la sekva nivelo!'"
            9:
                story_text: "## What's next?\nYou're doing great! In this level we still face a small problem. You have learned to repeat lines, but what if you'd want to slightly change the line.\nFor example if you want to sing the song '{if} you're happy and you know it'. It would look like this:\n\nIf you'd also want the next verse 'stomp your feet', and the next one, and the next one, you'd have to change the code completely.\nIn the next level you'll learn the `{for}` command, which allows you to make a list of actions and repeat the code with another action each time!\nPlease take a look!\n"
                example_code: "```\n{repeat} 2 {times}\n    {print} '{if} youre happy and you know it clap your hands'\n{print} '{if} youre happy and you know it and you really want to show it'\n{print} '{if} youre happy and you know it clap your hands'\n```\n"
                start_code: "{print} 'Al la sekva nivelo!'"
            10:
                story_text: "## What's next?\nYou have reached the end of this level, you're doing great! You are about to go to the next level. In the higher levels, Hedy is focussing more and more on teaching you the programming language Python.\nIn Python there is no `{repeat}` command, but there is a command that works like {repeat}. Are you curious to find out how to say `{repeat}` in Python language? Quickly go on to find out!\n"
                start_code: "{print} 'Al la sekva nivelo!'"
            11:
                story_text: "## What's next?\nMaybe you have tried using decimal numbers in your restaurant adventure. If you did, you probably noticed that Hedy didn't understand them yet and always rounded off.\nFrom the next level on you can use decimal numbers.\n\nAnother cool feauture in the next level is that you can use mulitiple words in a variable.\nFor intance, you could already do this...\n"
                example_code: "```\nnomo = {ask} 'Kiu estas via plej ŝatata programo?'\n{print} 'Mi amas spekti' nomo\n```\nSed vi ne povis uzi plurajn vortojn en variablo kiel la ĉi-suba ekzemplo. La ĉi-suba programo ankoraŭ ne funkcias en ĉi tiu nivelo!\n```\nprogramo = Spongabobo Kvadratpantalonulo\n{print} programo 'estas mia plej ŝatata programo!'\n```\nIru al la sekva nivelo por funkciigi ĉi tiun kodon!\n"
                start_code: "{print} 'Al la sekva nivelo!'"
            12:
                story_text: "## What's next?\nIn the previous levels you learned how to put two `{if}`commands inside each other. This works fine, but it does give you very long and unhandy codes like this one:\n\nIn this system you have to give both the correct username and the correct password.\nIn the next level you will learn the `{and}` command that will make this code a ot shorter and more understandable!\nCheck it out!\n"
                example_code: "```\nsalutnomo {is} {ask} 'Kio estas via salutnomo?'\npasvorto {is} {ask} 'Kio estas via pasvorto?'\n{if} salutnomo {is} 'Hedy'\n    {if} pasvorto {is} 'sekreto'\n        {print} 'Bonvenon Hedy!'\n    {else}\n        {print} 'Aliro rifuzata!'\n{else}\n    {print} 'Aliro rifuzata!'\n```\n"
                start_code: "{print} 'Al la sekva nivelo!'"
            14:
                story_text: "## What's next?\nIn this game below a code has been made to make sure the player can play on as long as he/she wants...\nBut the code is ineffective and way too long. Also, what {if} the player wants to play 101 games instead of 100?\nYou can't play to infinity?\nIn the next level you will learn a command that makes all of this a lot easier!\n"
                example_code: "```\ngame {is} 'on'\n{for} i {in} {range} 1 {to} 100\n    {if} game {is} 'on'\n        respondo = {ask} 'Do you want to continue?'\n        {if} respondo {is} 'ne'\n            game {is} 'over'\n        {if} respondo {is} 'jes'\n            {print} 'Ok we will continue'\n```\n"
                start_code: "{print} 'Al la sekva nivelo!'"
            15:
                story_text: "## What's next?\nIn the next level we will grow a bit more towards real Python code. thon code. You will also learn how to match two lists together.\nThis way you can program a code in which the correct animal is matched to the right sound.\nBecause the two codes below... Are obviously nonsense!\n"
                example_code: "```\nbestoj = 'koko', 'ĉevalo', 'bovo'\nsonoj = 'kokerik', 'hen', 'muĝ'\n{for} besto {in} bestoj\n    {print} 'La ' besto ' blekas: ' sonoj {at} {random}\n```\nVi ankaŭ povus provi funkciigi ĝin tiel, sed…\n```\nbestoj = 'koko', 'ĉevalo', 'bovo'\nsonoj = 'kokerik', 'hen', 'muĝ'\n{for} besto {in} bestoj\n    {for} sono {in} sonoj\n        {print} 'La ' besto ' blekas: ' sono\n```\n"
                start_code: "{print} 'Al la sekva nivelo!'"
            16:
                story_text: "## Kio sekvos?\nEn la sekva nivelo, vi lernos novan komandon. Vi eble rimarkis en la antaŭaj niveloj, ke `{if}` kaj `{else}` kelkfoje ne sufiĉas.\nEkzemple en la jena kodo:\n"
                example_code: "```\n{print} 'Kion manĝi ĉi-nokte?'\nopcioj = ['pico', 'brokolo', 'fazeoloj']\nelekto = opcioj {at} {random}\n{if} elekto = 'pico'\n    {print} 'Bonguste! Pico!'\n{else}\n    {print} 'Fi…'\n```\n"
                story_text_2: In this code it would be great to have 2x an `{else}` so you could have one option for the broccoli and one for the green beans. The next level comes with the new command `{elif}` that makes this possible! So check out the next level now!
                start_code: "{print} 'Al la sekva nivelo!'"
            17:
                story_text: "## Kio sekvas?\nEn la sekva nivelo, vi lernos la veran Python-manieron uzi `{print}`.\n"
                start_code: "{print} 'Al la sekva nivelo!'"
        name: Kio sekvos?
        description: Kio sekvos?
        default_save_name: Sekvas
    parrot:
        name: Papago
        description: Kreu vian propran Interretan dorlotpapagon, kiu kopios vin!
        default_save_name: Papago
        levels:
            1:
                story_text: "## Papago\nKreu vian propran Interretan dorlotpapagon, kiu kopios vin!\n"
                example_code: "```\n{print} Mi estas Hedy la papago\n{ask} kio estas via nomo?\n{echo}\n{echo}\n```\n"
                start_code: '{print} Mi estas Hedy la papago'
            2:
                story_text: "## Papago\nKreu vian propran Interretan dorlotpapagon, kiu kopios vin!\n"
                example_code: "```\n{print} Mi estas Hedy la papago\nnomo {is} {ask} kio estas via nomo?\n{print} nomo\n{sleep}\n{print} grak\n{sleep}\n{print} nomo\n```\n"
                start_code: '{print} Mi estas Hedy la papago!'
            3:
                story_text: "## Papago\nInstruu al via papago novan vorton per `{add}`.\n"
                example_code: "```\nvortoj {is} grak, Hedy\n{print} Trejnu vian papagon!\nnova_vorto {is} {ask} Kiun vorton instrui?\n{add} nova_vorto {to_list} vortoj\n{print} \U0001F9D2 Diru nova_vorto , Hedy!\n{print} \U0001F99C vortoj {at} {random}\n```\n"
                start_code: '# via kodo ĉi tie'
            5:
                story_text: "## Papago\nRekompencu vian papagon, se ĝi diras la ĝustan vorton!\n"
                example_code: "```\nvortoj {is} grak, Hedy\n{print} 'Trejnu vian papagon!'\nnova_vorto {is} {ask} 'Kiun vorton instrui?'\n{add} nova_vorto {to_list} vortoj\ndirita_vorto {is} vorto {at} {random}\n{print} '\U0001F9D2 Diru «' nova_vorto '», Hedy!'\n{print} '\U0001F99C ' dirita_vorto\n{if} dirita_vorto {is} nova_vorto {print} '\U0001F9D2 Bonege, Hedy! \U0001F36A'\n{else} {print} '\U0001F9D2 Ne, Hedy! Diru «' new_word '»'\n```\n"
                start_code: '# via kodo ĉi tie'
    dice:
        name: Ĵetkuboj
        description: Fari viajn proprajn ĵetkubojn
        default_save_name: Ĵetkuboj
        levels:
            3:
                story_text: "## Dice\nIn this level we can choose from a list. With that we can let the computer choose one side of the die.\nTake a look at the games you have in your closet at home.\nAre there games with a (special) die? You can also copy it with this code.\nFor example, the dice of the game Earthworms with the numbers 1 to 5 and an earthworm on it.\n\n![Die of earthworms with 1 to 5 and an earthworm on it](https://cdn.jsdelivr.net/gh/felienne/hedy@24f19e9ac16c981517e7243120bc714912407eb5/coursedata/img/dobbelsteen.jpeg)\n"
                example_code: "```\nelektoj {is} 1, 2, 3, 4, 5, lumbriko\n{print} elektoj {at} {random}\n```\n"
                start_code: '{print} Kion indikos la ĵetkubo ĉi foje?'
            4:
                story_text: "## Dice\nIn this level we can make sentences with the die value in the sentence, with quotes of course.\nThis time the sample code is not quite complete. Can you finish the code?\n"
                example_code: "```\nelektoj {is} 1, 2, 3, 4, 5, lumbriko\n{print} _ la rezulto de via ĵeto estas _\n{print} _ _ _ <- jen vi programu la elektadon\n```\n"
                start_code: "{print} 'Kion indikos la ĵetkubo ĉi-foje?'"
            5:
                story_text: "## Dice\nYou can also make a die again in this level using the `{if}`.\nComplete the sample code so that the code says \"You can stop throwing\" once you have thrown an earthworm.\n\nBut maybe you want to recreate a die from a completely different game. That's fine too! Then make up your own reaction. Eg 'yes' for 6 and 'pity' for something {else}.\n"
                example_code: "```\nchoices {is} 1, 2, 3, 4, 5, earthworm\nthrow {is} _\n{print} 'you have' _ 'thrown'\n{if} _ {is} earthworm {print} 'You can stop throwing.' _ {print} 'You have to hear it again!'\n```\n"
                start_code: "{print} 'Kion indikos la ĵetkubo ĉi-foje?'"
            6:
                story_text: "## Dice\nYou can also make an Earthworm die again in this, but now you can also calculate how many points have been rolled.\nYou may know that the worm counts 5 points for Earthworms. Now after a roll you can immediately calculate how many points you have thrown.\nThis is the code to calculate points for one die:\n"
                example_code: "```\nchoices = 1, 2, 3, 4, 5, earthworm\npoints = 0\nthrow = choices {at} {random}\n{print} 'you threw' throw\n{if} throw {is} earthworm points = points + 5 {else} points = points + throw\n{print} 'those are' points ' point'\n```\nCan you make the code so that you get the total score for 8 dice? To do that, you have to cut and paste some lines of the code.\n"
                example_code_2: "## Looking forward\n\nDid you manage to calculate the score for 8 dice? That required a lot of cutting and pasting, right? We are going to make that easier in level 7!\n"
                start_code: "{print} 'Kion indikos la ĵetkubo ĉi-foje?'"
            7:
                story_text: "## Dice\nYou can also make a die again in level 5. With the `{repeat}` code you can easily roll a whole hand of dice.\nTry to finish the sample code! The dashes should contain multiple commands and characters.\n\nBut maybe you want to make a completely different die. Of course you can!\n"
                example_code: "```\nelektoj = 1, 2, 3, 4, 5, lumbriko\n{repeat} _ _ {print} _ _ _\n```\n"
                start_code: "{print} 'Kion indikos la ĵetkubo ĉi-foje?'"
            10:
                story_text: "## Ĵetkuboj\nĈu la ĵetado de la ĵetkuboj daŭras tro longe? En ĉi tiu nivelo, vi povas lasi Hedy ĵeti ĉiujn ĵetkubojn samtempe!\n"
                example_code: "```\nludantoj = Anno, Johano, Jiŝajo\nelektoj = 1, 2, 3, 4, 5, 6\n{for} ludanto {in} ludantoj\n    {print} 'La rezulto de la ĵeto de ' ludanto ' estas ' elektoj {at} {random}\n    {sleep}\n```\n"
                start_code: '# via kodo ĉi tie'
            15:
                story_text: "## Ĵetkuboj\nEn ĉi tiu ludo, vi ĵetadas ĵetkubon, provante ricevi seson per malmultaj provoj laŭeble.\n"
                example_code: "```\nopcioj = 1, 2, 3, 4, 5, 6\n{print} 'Provu ricevi seson per malmultaj provoj laŭeble!'\nrezulto = 0\nprovoj = 0\n{while} rezulto != 6\n    rezulto = opcioj {at} {random}\n    {print} 'Via ĵeto montras ' rezulto\n    provoj = provoj + 1\n{print} 'Jes! Vi ricevis seson per ' provoj ' provoj.'\n```\n"
                start_code: '# via kodo ĉi tie'
    fortune:
        name: Aŭguristo
        description: Igu Hedy aŭguri la estontecon
        default_save_name: Aŭguristo
        levels:
            1:
                story_text: "## Fortune Teller\nHave you ever been to a carnival and had your future predicted by a fortune teller? Or have you ever played with a magic eight ball?\nThen you probably know that they can't really predict your future, but it's still fun to play!\n\nIn the upcoming levels you can learn how to create your own fortune telling machine!\nIn level 1 you can start off easy by letting Hedy introduce herself as a fortune teller and let her {echo} the players' answers.\nLike this:\n"
                example_code: "```\n{print} Saluton, mi estas Hedy la aŭguristo!\n{ask} Kiu vi estas?\n{print} Mi rigardu mian kristalan globon\n{print} Mi vidas... mi vidas...\n{echo} Via nomo estas\n```\n"
                story_text_2: "## Challenge\nHedy now only tells you your name. Can you expand the code so that Hedy can predict more things about you?\nObviously, Hedy isn't a very good fortune teller yet, as she can only repeat the answers that were given by the players!\nTake a look in level 2 to improve your fortune teller.\n"
                start_code: '# via kodo ĉi tie'
            3:
                story_text: "## Fortune Teller\nIn the previous levels you've created your first fortune telling machine, but Hedy couldn't really predict anything, only {echo}.\nIn this level you can use a variable and the `{at} {random}` command to really let Hedy choose an answer for you. Check out this code for instance:\n"
                example_code: "\nEn ĉi tiu ekzemplo, la ludanto povas demandi Hedy ĉu-demandon, kaj Hedy elektos hazardan respondon por vi.\n```\n{print} Mi estas Hedy la aŭguristo!\ndemando {is} {ask} Kion vi volas ekscii?\n{print} Jen tio, kion vi volas ekscii: demando\nrespondoj {is} jes, ne, eble\n{print} Laŭ mia kristala globo…\n{sleep} 2\n{print} respondoj {at} {random}\n```\n"
                story_text_2: "## Defioj\nNun, Hedy povas respondi nur «jes», «ne» aŭ «eble». Ĉu vi povas doni al Hedy pliajn eblajn respondojn, kiel «certe» aŭ «demandu denove»? <!--{ask}-->\n"
                start_code: '# via kodo ĉi tie'
            4:
                story_text: "## Aŭguristo\nĈi tiu nivelo ne havas novajn funkciojn, sed permesas al vi ekzerci vin al uzado de la citiloj.\nVi povas refari vian kodon de Nivelo 3; nepre aldonu la citilojn en la ĝustaj lokoj!\n\nAtentu, ke en Nivelo 3 oni ne povis uzi la vorton «demando» kiel kaj la nomo de la variablo kaj ordinara presebla vorto.\nLa citiloj en Nivelo 4 ebligas tion!\n\nAnkaŭ atentu, ke nun, pro la devigo de citiloj, Hedy konfuziĝas, kiam oni uzas la apostrofon por mallongigoj kiel «l' espero» aŭ «dank' al».\nNepre forigu tiajn apostrofojn kaj ŝanĝu la literumadon al «lespero» aŭ «dankal».\n"
                example_code: "```\n{print} 'Mi estas Hedy la aŭguristo!'\ndemando {is} {ask} 'Kion vi volas ekscii?'\n{print} 'Jen via demando: ' demando\nrespondoj {is} jes, ne, eble\n{print} 'Laŭ mia kristala globo…'\n{sleep} 2\n{print} respondoj {at} {random}\n```\n"
                start_code: '# via kodo ĉi tie'
            5:
                story_text: "## Fortune Teller\nIn this level you'll learn to (secretly) tip the odds in your favor, when using the fortune teller!\nBy using `{if}` and `{else}` you can make sure that you will always get a good fotune, while other people might not.\nCheck out this example to find out how.\n"
                example_code: "```\n{print} 'Mi estas Hedy la aŭguristo!'\n{print} 'I can predict if youll win the lottery tomorrow!'\nhomo {is} {ask} 'Kio vi estas?'\n{if} homo {is} Hedy {print} 'You will definitely win!\U0001F929' {else} {print} 'Bad luck! Someone {else} will win!\U0001F62D'\n```\n"
                story_text_2: "## Hack the program\nReplace Hedy with your own name in the last line, and Hedy will always predict that you will win the lottery and others won't!\nOf course this might raise some suspicion with the other players... To avoid that, you can make sure that Hedy does give different answers every time you run the code.\nBut of course, still gives you a positive answer and the other players a negative one.\n"
                example_code_2: "```\n{print} 'Im Hedy the fortune teller!'\n{print} 'I can predict {if} you will win the lottery tomorrow!'\nperson {is} {ask} 'Who are you?'\ngoodanswer {is} Hurray! You win!, You will definitely win!, We have a winner!\nbadanswer {is} Bad luck! Try again!, Another person will win, You lose!\n{if} person {is} Hedy {print} goodanswer {at} {random} {else} {print} badanswer {at} {random}\n```\n"
                story_text_3: "## Challenges\nThis concept can be used to make may different programs, just be creative! For example you could create a machine that predicts that your favorite sports team will beat all the competitors!\nOr you could make  Snow White's magic mirror on the wall, to tell everyone you are the fairest of them all!\nLet your imagination do the work!\n"
                start_code: '# via kodo ĉi tie'
            6:
                story_text: "## Fortune Teller\nIn this level you can use math in your predictions as a fortune teller. This allows you to make up (silly) formulas to calculate the future.\nFor example you could calculate how rich you'll get or how many kids you will have when you grow up.\n"
                example_code: "```\n{print} 'I am Hedy the fortune teller!'\n{print} 'I can predict how many kids youll get when you grow up!'\nage = {ask} 'How old are you?'\nsiblings = {ask} 'How many siblings do you have?'\nlength = {ask} 'How tall are you in centimetres?'\nkids = length / age\nkids = kids - siblings\n{print} 'You will get ...'\n{sleep}\n{print} kids ' kids!'\n```\n\n## Example Silly Fortune Teller\nIf the previous example wasn't silly enough for you, take a look at this one!\n\n```\n{print} 'Im Hedy the silly fortune teller!'\n{print} 'I will predict how smart you are!'\nfootball = {ask} 'On a scale 1-10 how much do you love football?'\nbananas = {ask} 'How many bananas did you eat this week?'\nhygiene = {ask} 'How many times did you wash your hands today?'\nresult = bananas + hygiene\nresult = result * football\n{print} 'You are ' result ' percent smart.'\n```\n"
                start_code: '# via kodo ĉi tie'
            7:
                story_text: "## Aŭguristo\nEn ĉi tiu nivelo, oni povas uzi la komandon `{repeat}` por igi vian komputilon aŭguri plurfoje.\n"
                example_code: "```\n{print} 'Mi estas Hedy la aŭguristo!'\n{print} 'Vi povas demandi tri fojojn!'\n{repeat} 3 {times} demando = {ask} 'Kion vi volas ekscii?'\nrespondo = jes, ne, eble\n{repeat} 3 {times} {print} 'Laŭ mia kristala globo… ' respondo {at} {random}\n```\n"
                story_text_2: "## Challenge\nAs you can see, the questions aren't printed in this example. That's because the variable `question` was changed 3 times.\nEvery time the player fills in the new answer, Hedy overwrites the previous one, so the first answer the player gave is forgotten.\nThis means you can't print all the questions this way.\n\nBy using 3 different variables instead of 1 (for example `question_1` , `question_2` and `question_3`), you could solve the problem and print the questions.\nThis does mean that you can only use `{repeat}` for the answers, and you will have to ask and print all the questions separately.\nCan you do it?\n\nIn the upcoming levels the layout of {repeat} command will change, which enables you to repeat multiple lines at once.\n"
                start_code: '# via kodo ĉi tie'
            8:
                story_text: "## Fortune Teller\nIn the previous levels you've learned how to use repeat to make the fortune teller answer 3 questions in a row, but we had a problem with printing the questions.\nNow that problem is solved, because of the new way of using the repeat command.\nIn the next example you can have your fortune teller {ask} 3 questions and also print them!\n"
                example_code: "```\n{print} 'I am Hedy the fortune teller!'\n{print} 'You can {ask} me 3 questions.'\nanswers = yes, no, maybe\n{repeat} 3 {times}\n   question = {ask} 'What do you want to know?'\n   {print} question\n   {sleep}\n   {print} 'My crystal ball says...' answers {at} {random}\n```\n"
                start_code: '# via kodo ĉi tie'
            10:
                story_text: "## Aŭguristo\nEn ĉi tiu nivelo, vi lernos kiel programi la ludon MASH (domego, apartamento, barako, domo). En ĉi tiu ludo vi povas aŭguri por ĉiuj ludantoj samtempe, kiel aspektos iliaj estontecoj.\n"
                example_code: "```\nhouses = mansion, apartment, shack, house\nloves = nobody, a royal, their neighbour, their true love\npets = hundo, kato, elefanto\nnames = Jenna, Ryan, Jim\n{for} name {in} names\n    {print} name ' lives in a ' houses {at} {random}\n    {print} name ' will marry ' loves {at} {random}\n    {print} name ' will get a ' pets {at} {random} ' as their pet.'\n    {sleep}\n```\n"
                story_text_2: We can also make a Harry Potter themed fortune teller.
                example_code_2: "```\nhouses = Gryffindor, Slytherin, Hufflepuff, Ravenclaw\nsubjects = potions, defence against the dark arts, charms, transfiguration\nfears = Voldemort, spiders, failing your OWL test\nnames = Harry, Ron, Hermione\n{for} name in names\n    {print} name ' is placed in ' houses {at} {random}\n    {print} name ' is great at ' subjects {at} {random}\n    {print} name 's greatest fear is ' fears {at} {random}\n```\n"
                start_code: '# via kodo ĉi tie'
            12:
                story_text: "## Fortune Teller\nIn this level you can make your fortunes multiple words. Like in this example below:\n"
                example_code: "```\nfortunes = 'you will be rich', 'you will fall in love', 'you will slip on a banana peel'\n{print} 'I will take a look in my crystall ball for your future.'\n{print} 'I see... I see...'\n{sleep}\n{print} fortunes {at} {random}\n```\n"
                start_code: '# via kodo ĉi tie'
    piggybank:
        name: Ŝparujo
        description: Kalkulu vian poŝmonon!
        default_save_name: Ŝparujo
        levels:
            12:
                story_text: "## Piggy Bank\nIn this adventure you learn how to make a digital piggy bank, to calculate how much money you have and how long you need to save up to buy what you want!\n"
                example_code: "```\n{print} 'The digital piggy bank'\nwish = {ask} 'What would you like to buy?'\nprice = {ask} 'How much does that cost?'\nsaved = {ask} 'How much money have you saved already?'\nallowance = {ask} 'How much pocket money do you get per week?'\nto_save = price - saved\nweeks = to_save / allowance\n{print} 'You can buy a ' wish ' in ' weeks ' weeks.'\n```\n"
                start_code: '# via kodo ĉi tie'
            14:
                story_text: "## Piggybank\nIn this level you can let Hedy tell you {if} you have saved up enough money!\n"
                example_code: "```\nmoney = {ask} 'How much money have you saved?'\nwish = {ask} 'How much money do you need?'\nallowance = {ask} 'How much pocket money do you get each week?'\nto_save = wish - money\nweeks = to_save / allowance\n{if} wish > money\n    {print} 'You need to save up some more!'\n    {print} 'Youll need ' weeks ' more weeks.'\n{else}\n    {print} 'Great! You have enough'\n    {print} 'Lets go shopping!'\n```\n"
                start_code: '# via kodo ĉi tie'
    quizmaster:
        name: Kvizmajstro
        description: Faru vian propran kvizon!
        default_save_name: Kvizmajstro
        levels:
            14:
                story_text: "## Make your own quiz\nIn this adventure you can make your own quiz! Fill in the blanks, add more questions and enjoy your own quiz!\nYou can make a quiz about anything you like: your hobby, your favorite animal, your favorite book or anything at all!\n"
                example_code: "```\n{print} 'Make your own quiz'\npoints_a = 0\npoints_b = 0\n{print} 'Question'\n{print} 'Answer option A'\n{print} 'Answer option B'\nanswer = {ask} 'Which answer?'\n{if} answer == 'A'\n    points_a = points_a + 1\n{if} answer == 'B'\n    points_b = points_b + 1\n{print} 'End of the quiz!'\n{print} 'Lets see the results!'\n{if} points_a > points_b\n    {print} 'You belong to the A club'\n{if} points_b > points_a\n    {print} 'You belong to the B club'\n```\n"
                start_code: '# via kodo ĉi tie'
    secret:
        name: Superspiono
        description: Faru vian propran spionkodon
        default_save_name: Superspiono
        levels:
            12:
                story_text: "## Faru sekretan kodon kiel superspiono\nEn ĉi tiu aventuro, vi povas krei vian propran superspionkodon. Kodu mesaĝon, kiun nur la ĝusta agento povas deĉifri.\nSe la malamiko provos solvi la kodon, ili ricevos falsajn informojn por malŝpari sian tempon.\n"
                example_code: "```\nnomo {is} {ask} 'Kio estas via nomo?'\n{if} nomo {is} 'Agento007'\n    a {is} 'Iru al la flughaveno '\n{else}\n    a {is} 'Iru al la stacidomo '\npasvorto {is} {ask} 'Kio estas la pasvorto?'\n{if} pasvorto {is} 'SEKRETO'\n    b {is} 'morgaŭ je la 2a horo'\nelse\n    b {is} 'hodiaŭ je la 10a horo'\n{print} a + b\n```\n"
                start_code: '## via kodo ĉi tie'
            13:
                story_text: "## Superspiono\nLa kodo, kiun vi faris en la antaŭa nivelo, estas simpligebla en ĉi tiu nivelo per la komando `{and}`.\n"
                example_code: "```\nnomo {is} {ask} 'Kio estas via nomo?'\npasvorto {is} {ask} 'Kio estas via pasvorto?'\n{if} nomo {is} 'Agento007' {and} {password} {is} 'SEKRETO'\n    {print} 'Iru al la flughaveno je la 2a horo'\n{else}\n    {print} 'Iru al la stacidomo je la 10a horo'\n ```\n"
                start_code: '## via kodo ĉi tie'
    blackjack:
        name: Nigra fanto
        description: Provu alproksimiĝi al 21 laŭeble
        default_save_name: Nigra fanto
        levels:
            17:
                story_text: "## Kreu ludon de Nigra fanto\nNigra fanto estas simpla kartludo, dum kiu oni provas alproksimiĝi laŭeble al 21 poentoj. Vi ricevas du kartojn. Ĉiu karto valoras sian numeran valoron, kaj la vizaĝkartoj (fanto, damo kaj reĝo) valoras 10 poentojn.\nLa aso valoras aŭ 1 aŭ 11 poentojn (vi povas elekti). La kazinisto, via kontraŭulo, ankaŭ ricevas du kartojn.\nSe vi volas, vi povas akiri alian karton, kaj ĝiaj poentoj estos aldonitaj al via totalo. La kazinisto ankaŭ povas preni alian karton.\nSed atentu ne akiri pli ol 21 poentojn, ĉar se vi tion faros, vi perdos!\nLa ludanto, kiu plej alproksimiĝos al 21, ne superante 21, gajnos!\n\nAmuziĝu!\n"
                example_code: "```\n{print} 'NIGRA FANTO'\nkartoj = [2, 3, 4, 5, 6, 7, 8, 9, 10, 'Fanto', 'Damo', 'Reĝo', 'Aso']\npoentoj = 0\nkazinistaj_poentoj = 0\nkarto_1 = kartoj[{random}]\nkarto_2 = kartoj[{random}]\nkarto_3 = kartoj [{random}]\nkazinista_karto_1 = kartoj[{random}]\nkazinista_karto_2 = kartoj[{random}]\nkazinista_karto_3 = kartoj[{random}]\n# Poentoj de la unua karto\n{if} karto_1 == 'Fanto' {or} karto_1 == 'Damo' {or} karto_1 == 'Reĝo':\n    poentoj = poentoj + 10\n{elif} karto_1 == 'Aso':\n    poentoj = poentoj + 11\n{else}:\n    poentoj = poentoj + karto_1\n# Poentoj de la dua karto\n{if} karto_2 == 'Fanto' {or} karto_2 == 'Damo' {or} karto_2 == 'Reĝo':\n    poentoj = poentoj + 10\n{elif} card_2 == 'Aso':\n    poentoj = poentoj + 11\n{else}:\n    poentoj = poentoj + karto_2\n# Poentoj de la unua karto de la kazinisto\n{if} kazinista_karto_1 == 'Fanto' {or} kazinista_karto_1 == 'Damo' {or} kazinista_karto_1 == 'Reĝo':\n    kazinistaj_poentoj = kazinistaj_poentoj + 10\n{elif} kazinista_karto_1 == 'Aso':\n    kazinistaj_poentoj = kazinistaj_poentoj + 11\n{else}:\n    kazinistaj_poentoj = kazinistaj_poentoj + kazinista_karto_1\n# Poentoj de la dua karto de la kazinisto\n{if} kazinista_karto_2 == 'Fanto' {or} kazinista_karto_2 == 'Damo' {or} kazinista_karto_2 == 'Reĝo':\n    kazinistaj_poentoj = kazinistaj_poentoj + 10\n{elif} kazinista_karto_2 == 'Aso':\n    kazinistaj_poentoj = kazinistaj_poentoj + 11\n{else}:\n    kazinistaj_poentoj = kazinistaj_poentoj + kazinista_karto_2\n# Du asoj\n{if} karto_1 == 'Aso' {and} karto_2 == 'Aso':\n    poentoj = 12\n{if} kazinista_karto_1 == 'Aso' {and} kazinista_karto_2 == 'Aso':\n    kazinistaj_poentoj = 12\n# Montri poentojn\n{print} 'Jen viaj kartoj: ' karto_1 ' kaj ' karto_2 ' (' poentoj ' poentoj)'\n{print} 'Jen la kartoj de la kazinisto: ' kazinista_karto_1 ' kaj ' kazinista_karto_2 ' (' kazinistaj_poentoj ' poentoj)'\n# Kromkarto de la ludanto\nkromkarto = {ask} 'Ĉu vi deziras kroman karton?'\n{if} kromkarto == 'jes':\n    {if} karto_3 == 'Fanto' {or} karto_3 == 'Damo' {or} karto_3 == 'Reĝo':\n        poentoj = poentoj + 10\n    {elif} karto_3 == 'Aso':\n        {if} poentoj > 11:\n            poentoj = poentoj + 11\n        {else}:\n            poentoj = poentoj + 1\n    {else}:\n        poentoj = poentoj + karto_3\n    print 'Vi akiris kroman karton: ' karto_3 ' (' poentoj ' poentoj)'\n{else}:\n    print 'Neniu kroma karto'\n# Gajninto\n{if} poentoj > 21 {or} kazinistaj_poentoj > points {or} kazinistaj_poentoj == 21:\n    {print} 'Vi malgajnas!'\n{elif} kazinistaj_poentoj < 17:\n    {print} 'La kazinisto prenas kroman karton. Ĝi estas... ' kazinista_karto_3\n    {if} kazinista_karto_3 == 'Fanto' {or} kazinista_karto_3 == 'Damo' {or} kazinista_karto_3 == 'Reĝo':\n        kazinistaj_poentoj = kazinistaj_poentoj + 10\n    {elif} kazinista_karto_3 == 'Aso':\n        {if} kazinistaj_poentoj < 11:\n            kazinistaj_poentoj = kazinistaj_poentoj + 11\n        {else}:\n            kazinistaj_poentoj = kazinistaj_poentoj + 1\n    {else}:\n        kazinistaj_poentoj = kazinistaj_poentoj + kazinista_karto_3\n    {print} 'La kazinisto havas ' kazinistaj_poentoj ' poentojn nun'\n    {if} kazinistaj_poentoj < 21 {and} kazinistaj_poentoj > poentoj:\n        {print} 'Vi malgajnas!'\n    {else}:\n        {print} 'Vi gajnas!'\n{elif} poentoj > kazinistaj_poentoj {and} poentoj < 21:\n    {print} 'Vi gajnas!'\n```\n"
                start_code: '# via kodo ĉi tie'
