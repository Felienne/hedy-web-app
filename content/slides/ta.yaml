levels:
    0:
        1:
            header: எடிக்கு வருக!
            text: எடி ஒரு நிரலாக்க மொழி.
        6:
            code: '{print} எர்டிக்கு வருக!'
            header: எடியில் நிரலாக்க
            text: குறியீடு சொற்கள் இளஞ்சிவப்பு நிறத்தில் காண்பிக்கப்படும்.
        2:
            text: "நிரலாக்கமானது கணினியின் மொழியைப் பயன்படுத்தி கணினிக்கு வழிமுறைகளை வழங்குகிறது.\n\n அத்தகைய மொழி \"நிரலாக்க மொழி\" என்று அழைக்கப்படுகிறது."
            header: நிரலாக்க
        3:
            header: நிரலாக்க மொழி
            text: "சில நிரலாக்க மொழிகளை நீங்கள் ஏற்கனவே அறிந்திருக்கலாமா?\n சில எடுத்துக்காட்டுகள்:\n * கீறல்\n * பைதான்\n * உஉகுமொ"
        4:
            header: நிரலாக்க
            text: "நீங்கள் நிரல் செய்ய முடிந்தால், நீங்கள் பல அருமையான விசயங்களைச் செய்யலாம்:\n * ஊடாடும் கதைகளை உருவாக்குங்கள்\n * கணினி வரைபடங்களை உருவாக்கி, காகிதத்தில் அல்லது துணி மீது வரையவும்\n * உங்கள் தொலைபேசியில் பயன்படுத்த உங்கள் சொந்த பயன்பாடுகளை உருவாக்குங்கள்"
        5:
            code: '{print} எர்டிக்கு வருக!'
            header: எடியில் நிரலாக்க
            text: எடியில் `{print}` போன்ற சிறப்புக் குறியீடுகளைப் பயன்படுத்துகிறோம்.
        7:
            header: எடியில் நிரலாக்க
            text: குறியீட்டின் அடியில் ரன் குறியீடு பொத்தானைக் கொண்டு குறியீட்டைத் தொடங்குகிறோம்.
            code: '{print} எர்டிக்கு வருக!'
        8:
            header: எடியில் நிரலாக்க
            text: வெளியீடு வலது புறத்தில் தோன்றும்.
            code: '{print} எர்டிக்கு வருக!'
        9:
            header: எடியில் நிரலாக்க
            text: வெளியீடு ஒரு வரைபடமாகவும் இருக்கலாம்.
            code: "{forward} 100\n {turn} {left}"
    1:
        5:
            code: "{print} வணக்கம்!\n {கேளுங்கள் your உங்கள் பெயர் என்ன?\n {ask} வணக்கம்"
            header: '{echo}'
            text: "முந்தைய எடுத்துக்காட்டில் நீங்கள் காண முடியும். நீங்கள் `{கேளுங்கள்` கட்டளையைப் பயன்படுத்தினால், நீங்கள் ஒரு கேள்வியைக் கேட்கலாம்.\n இருப்பினும், பதில் வெளியீட்டுத் திரையில் காண்பிக்கப்படாது.\n\n காண்பிப்பதற்கான பதிலை நீங்கள் விரும்பினால், இந்த நிலையின் இறுதி கட்டளையைப் பயன்படுத்தலாம்: `{ask}`.\n `{echo}` ஒரு `{echo}` என்ற பதிலை மீண்டும் செய்யப் பயன்படுகிறது."
        13:
            header: நிரலாக்க வேடிக்கை தொடங்கட்டும்!
            text: நிலை 1 இல் சாகசங்களை அனுபவிக்கவும்!
        2:
            header: '{print}'
            text: "நிலை 1 இல் நீங்கள் பயன்படுத்தக்கூடிய முதல் குறியீடு `{print}` ஆகும்.\n\n `{print}` திரையில் உரையைக் காட்டப் பயன்படுகிறது."
            code: '{அச்சிடு the திரையில் உரையைக் காட்டு'
        8:
            header: நிரலாக்க!
            editor: /எடி#print_command
            text: எடுத்துக்காட்டுகளை நகலெடுக்க மஞ்சள் அம்பு பொத்தான்கள் பயன்படுத்தப்படலாம்.
        7:
            header: நிரலாக்க!
            text: சாகசங்கள் தாவல்களில் காட்டப்பட்டுள்ளன.
            editor: /எடி/1
        12:
            header: பிழைத்திருத்தம்
            text: ஒரு குறியீட்டை பிழைத்தது என்பது குறியீட்டில் உள்ள தவறுகளை அகற்றுவதாகும். இந்த குறியீட்டை ஒன்றாக பிழைத்திருத்துவோம். பிழைத்திருத்தியைத் தொடங்க லேடிபக் பொத்தானைக் சொடுக்கு செய்க.
            debug: உண்மை
            code: "நான் டி.சே.எடி\n {print} நீங்கள் எந்த பாடலைக் கேட்க விரும்புகிறீர்கள்?\n {ask} எனக்கு அந்த பாடலும் பிடிக்கும்!\n {print} அடுத்து ... {echo}"
        4:
            text: "நிலை 1 இல் நீங்கள் பயன்படுத்தக்கூடிய இரண்டாவது குறியீடு `{ask}`.\n\n பதிலளிக்கக்கூடிய ஒரு கேள்வியைக் கேட்க `{ask}` பயன்படுத்தப்படுகிறது."
            header: '{ask}'
            code: "{அச்சிடு your உங்கள் சொந்த ராக் கத்தரிக்கோல் காகிதத்திற்கு வருக!\n {print} நீங்கள் எதை தேர்வு செய்வீர்கள்?"
        6:
            header: நிரலாக்க!
            editor: /எடி/1
            text: "`{print}` உடன், `{ask}` மற்றும் `{echo}` நீங்கள் ஏற்கனவே ஒரு சிறிய கதையை உருவாக்கலாம்.\n கிளி, கதை மற்றும் பாறை, காகித கத்தரிக்கோல் சாகசங்களை முயற்சிக்க இது ஒரு நல்ல நேரம்."
        10:
            code: '{forward} 50'
            header: 'ஆமைடன் வரைதல்: {forward}'
            text: '`{forward}` ஆமை முன்னோக்கி நகர்த்த பயன்படுகிறது.'
        11:
            header: 'ஆமைடன் வரைதல்: {turn}'
            text: '`{turn}` ஆமை இடது அல்லது வலதுபுறமாக மாற்ற பயன்படுகிறது.'
            code: "{forward} 50\n {turn} {left}"
        1:
            header: நிலை 1 க்கு வருக!
            text: "எடியில் கதைகளை உருவாக்குவதன் மூலம் நிலை 1 ஐத் தொடங்குவோம்!\n\n ஊடாடும் கதைகளை உருவாக்க எங்களுக்கு மூன்று உரை குறியீடுகள் தேவை."
        3:
            header: '{print} கட்டளை'
            text: "அச்சு கட்டளைக்குப் பிறகு நீங்கள் எதை வேண்டுமானாலும் மாற்றலாம்.\n\n அல்லது `{print} with உடன் தொடங்கும் குறியீட்டின் மற்றொரு வரியைச் சேர்ப்பதன் மூலம் பல வரிகளை அச்சிடலாம்."
            code: "{print} எர்டிக்கு வருக!\n {print} இப்போது நிரலாக்கத்தைத் தொடங்குங்கள்!"
        9:
            header: ஆமைடன் வரைதல்
            text: இப்போது நாம் உரை குறியீடுகளில் பார்த்திருக்கிறோம், இப்போது அடுத்ததாக வரைவதைப் பார்ப்போம்.
    3:
        7:
            header: பிழைத்திருத்தம்
            text: இந்த குறியீட்டை பிழைத்திருத்துவோம்!
            debug: உண்மை
            editor: "மியூசிக்_சென்ரெச் {is} ராக், பாப், மெட்டல், இண்டி, சாச்\n தேர்ந்தெடுக்கப்பட்ட_சென்ரே இசை {is} {random}\n {print} தேர்ந்தெடுக்கப்பட்ட வகையைக் கேட்போம்\n நல்லது {ask} உங்களுக்கு அந்த வகை பிடிக்குமா?\n } தேர்ந்தெடுக்கப்பட்ட_சென்ரே} தேர்ந்தெடுக்கப்பட்ட_சென்ரே {அகற்று\n second_choice {remove} music_genres\n {from} அல்லது நீங்கள் விரும்புகிறீர்களா ... second_choice {at} {print}\n {} second_choice {at} music_genres ஐ அகற்று\n {random} எனக்கு மியூசிக்_சென்ரே {remove} சிறந்தது!"
        2:
            code: விலங்குகள் {is} நாய்கள், பூனைகள், கங்காருக்கள்
            header: ஒரு பட்டியலை உருவாக்குதல்
            text: "நீங்கள் `{is}` உடன் ஒரு பட்டியலை உருவாக்குகிறீர்கள்.\n\n உங்கள் பட்டியலில் உள்ள உருப்படிகளை கமாவுடன் பிரிக்கவும்."
        3:
            header: சீரற்ற முறையில்
            text: "நீங்கள் `` `` {at} `கட்டளையுடன் பட்டியலைப் பயன்படுத்தலாம்.\n கணினி தோராயமாக பட்டியலின் ஒரு உருப்படியைத் தேர்ந்தெடுக்கும்.\n இந்த குறியீட்டை நீங்கள் இயக்கும் ஒவ்வொரு முறையும் வெளியீடு வேறுபடும்."
            code: "விலங்குகள் {is} நாய்கள், பூனைகள், கங்காருக்கள்\n {print} விலங்குகள் {at} {random}"
        4:
            text: நீங்கள் ஒரு வாக்கியத்திலும் `{` `{at}` கட்டளையைப் பயன்படுத்தலாம்.
            header: ஒரு வாக்கியத்தில் சீரற்ற முறையில்
            code: "விலங்குகள் {is} நாய்கள், பூனைகள், கங்காருக்கள்\n {print} எனக்கு பிடித்த விலங்கு விலங்குகள் {at {{at}"
        1:
            header: நிலை 3 க்கு வருக
            text: இந்த மட்டத்தில் நீங்கள் ஒரு பட்டியலை உருவாக்குவது, உங்கள் பட்டியலிலிருந்து உருப்படிகளைச் சேர்த்து அகற்றுவது மற்றும் அந்த பட்டியலிலிருந்து ஒரு சீரற்ற உருப்படியைத் தேர்ந்தெடுப்பது எப்படி என்பதை நீங்கள் கற்றுக் கொள்ளுங்கள்.
        6:
            header: இருந்து அகற்று
            text: "`{add}` `{to}` கட்டளைக்கு நேர்மாறானது `{remove}` `{கட்டளையிலிருந்து.\n இந்த கட்டளை ஒரு பட்டியலிலிருந்து ஒரு உருப்படியை நீக்குகிறது."
            code: "விலங்குகள் {is} நாய், பூனை, கங்காரு\n விரும்பாதது {is {is} உங்களுக்கு என்ன விலங்கு பிடிக்காது?\n } அனி}}}} விலங்குகளிலிருந்து {belike {\n {ask} நான் விலங்குகளை {{remove} இல் தேர்வு செய்கிறேன்"
        8:
            header: வேலைக்கு வருவோம்!
            text: நிலை 3 இல் சாகசங்களை அனுபவிக்கவும்!
        5:
            header: சேர்க்கவும்
            text: "`{add}` `{ask}` கட்டளையுடன் ஒரு பட்டியலில் உருப்படிகளைச் சேர்க்கலாம்.\n\n பட்டியலில் எதைச் சேர்க்க வேண்டும் என்பதை நீங்கள் தேர்வு செய்யலாம் அல்லது `{add}` கட்டளையுடன் இணைந்து `{to}` `{to}` கட்டளையைப் பயன்படுத்தலாம்.\n இந்த வழியில் நீங்கள் பட்டியலில் என்ன சேர்க்க வேண்டும் என்பதை வீரர் தீர்மானிக்க அனுமதிக்கலாம்."
            code: "விலங்குகள் {is} நாய், பூனை, கங்காரு\n {is {{is} உங்களுக்கு பிடித்த விலங்கு எது?\n {சேர்க்க {ask} விலங்குகள்\n {add} நான் விலங்குகளை {{to_list} இல் தேர்வு செய்கிறேன்"
    4:
        1:
            header: நிலை 4 க்கு வருக
            text: இந்த மட்டத்தில் மேற்கோள் மதிப்பெண்களை எவ்வாறு பயன்படுத்துவது என்பதை நீங்கள் கற்றுக்கொள்வீர்கள்.
            code: "{print} 'மேற்கோள்களுடன் அச்சிடுக!'"
        2:
            header: சிக்கல்
            text: 'முந்தைய நிலைகளில், நீங்கள் இந்த சிக்கலைக் கண்டிருக்கலாம்:'
            code: "பெயர் {is} சோஃபி\n {print} எனது பெயர் பெயர்"
            debug: உண்மை
        4:
            header: அச்சுடன் மேற்கோள் குறிகள்
            text: ஒவ்வொரு முறையும் நீங்கள் `{print}` கட்டளையைப் பயன்படுத்தும்போது, நீங்கள் தோன்ற விரும்பும் உரையை திரையில் மேற்கோள் மதிப்பெண்களில் வைக்க வேண்டும்.
            code: "{print} 'மேற்கோள்களுடன் அச்சிடுக!'"
        6:
            code: "பெயர் {is} ஆரி\n {print} 'அலோ' பெயர்"
            header: மேற்கோள் மதிப்பெண்கள் மற்றும் மாறிகள்
            text: "மாறி பெயர்கள் திரையில் அச்சிடப்படுவதை நீங்கள் விரும்பவில்லை.\n இதனால்தான் இது போன்ற மேற்கோள் மதிப்பெண்களிலிருந்து மாறிகள் வெளியேற வேண்டும்:"
        8:
            debug: உண்மை
            code: "{print} 'இது வேலை செய்யாது!'"
            header: மேற்கோள் மதிப்பெண்கள் மற்றும் சுருக்கங்கள்
            text: "கவனமாக இருங்கள்! இப்போது நீங்கள் மேற்கோள் மதிப்பெண்களைப் பயன்படுத்துகிறீர்கள், சுருக்கங்களில் அப்போச்ட்ரோப்களைப் பயன்படுத்த முடியாது.\n\n தயவுசெய்து \"நீங்கள்\" அல்லது \"நான்\" போன்ற சுருக்கத்தை கீழே உள்ள திரையில் அச்சிட்டு என்ன நடக்கிறது என்று பாருங்கள் ...."
        10:
            debug: உண்மை
            text: இந்த குறியீட்டை பிழைத்திருத்துவோம்!
            header: பிழைத்திருத்தம்
            code: "{clear}\n {print} கடற்கரைக்குச் செல்ல என்ன ஒரு நல்ல நாள்!\n {ask} 'நீங்கள் ஒரு சாண்ட்காச்டைக் கட்ட விரும்புகிறீர்களா அல்லது கடலில் நீந்த விரும்புகிறீர்களா?'\n {print} 'நீங்கள் செயல்பட விரும்புகிறீர்கள்'\n {print} 'நான் அதைச் செய்ய விரும்புகிறேன்'\n {print} 'இந்த அழகான கடற்பரப்புகளைப் பாருங்கள்!'\n வண்ணங்கள் {is 'ஆரஞ்சு, வெள்ளி, வெள்ளை, பழுப்பு'\n {is} 'நான் வண்ணங்களை விரும்புகிறேன் {at {{print} ஒன்று!'\n தேர்வு {at} {random} நீங்கள் எதை விரும்புகிறீர்கள்?"
        5:
            code: பெயர் {{{is} 'பெயர் தயவுசெய்து?'
            header: கேட்பதன் மூலம் மேற்கோள் குறிகள்
            text: இது `{ask}` கட்டளைக்கும் செல்கிறது.
        9:
            header: தெளிவான
            text: "இந்த மட்டத்தில் நீங்கள் {clear} கட்டளையையும் கற்றுக்கொள்வீர்கள்.\n இந்த கட்டளையின் மூலம் உங்கள் வெளியீட்டுத் திரையில் இருந்து எல்லா உரையையும் துடைக்கலாம்.\n\n நீங்கள் எப்போதும் ஒரு தூக்க கட்டளையையும் பயன்படுத்துகிறீர்கள் என்பதில் கவனமாக இருங்கள். நீங்கள் அவ்வாறு செய்யாவிட்டால் கணினி எல்லா உரையையும் படிப்பதற்கு முன்பு துடைக்கும்!"
            code: "{print} '3'\n {clear}\n {print} '2'\n {clear}\n {print} '1'\n {clear}\n {print} 'ஆச்சரியம்!'"
        3:
            header: மேற்கோள் மதிப்பெண்களுடன் அதை சரிசெய்தல்
            text: "இந்த மட்டத்தில் மேற்கோள் மதிப்பெண்களைப் பயன்படுத்தி இந்த சிக்கலை சரிசெய்வோம்.\n\n இது எங்கள் குறியீட்டை 'உண்மையான' பைதான் குறியீட்டைப் போலவே தோற்றமளிக்கிறது."
        7:
            header: மேற்கோள் மதிப்பெண்கள் மற்றும் மாறிகள்
            text: "ஒரு வாக்கியத்தின் நடுவில் மாறி பெயர்கள் பயன்படுத்தப்படும்போது, நீங்கள் மேற்கோள் குறிகளிலிருந்து மாறிகளை விட்டு வெளியேற வேண்டும்.\n இருப்பினும், மீதமுள்ள வாக்கியத்திற்கு மேற்கோள் மதிப்பெண்கள் தேவை. இது போல் தெரிகிறது:"
            code: "பெயர் {is} ஆரி\n {print} 'அலோ' பெயர் ', நீங்கள் எப்படி இருக்கிறீர்கள்?'"
        11:
            header: ஆயத்தம், அமைக்கவும், போ!
            text: நிலை 4 இல் சாகசங்களை அனுபவிக்கவும்!
    5:
        5:
            header: நீண்ட கோடுகள்
            text: "உங்களிடம் `{if}` மற்றும் ஒரு `{else}` கட்டளை இரண்டையும் கொண்டிருக்கும்போது உங்கள் வரிகள் மிக நீண்ட நேரம் பெற முடியும் என்பதை நீங்கள் கவனித்திருக்கலாம்.\n\n நீங்கள் கட்டளைகளை பிரித்து அவற்றை 2 வரிகளில் வைக்கலாம்:"
            code: "{if} பெயர் {is} hedy {print} 'நல்லது'\n {else} {print} 'boo!'"
        3:
            text: "`{if}` கட்டளையைப் பயன்படுத்தும் போது, `{print}` கட்டளையைப் பயன்படுத்த மறக்காதீர்கள்.\n இந்த குறியீடு வேலை செய்யாது!"
            code: "{if} பெயர் {is} hedy 'நல்லது'"
            debug: உண்மை
            header: அச்சிட மறக்காதீர்கள்
        4:
            header: வேறு
            text: "`{if}` கட்டளையைப் பயன்படுத்தும் போது, நீங்கள் ஒரு `{else}` கட்டளையையும் சேர்க்கலாம்.\n பதில் எடி என்றால், கணினி 'நன்றாக' அச்சிடும்.\n ஆனால் பதில் வேறு ஒன்று என்றால் கணினி 'பூ' அச்சிடும்"
            code: "{if} பெயர் {is} hedy {print} 'nice' {else} {print} 'boo!'"
        6:
            text: "நீங்கள் `{if}` மற்றும் `{else}` கட்டளைகளுடன் பயிற்சி செய்திருந்தால், நீங்கள் `{in}` கட்டளையையும் முயற்சி செய்யலாம்.\n\n `{in}` ஒரு உருப்படி ஒரு பட்டியலில் இருக்கிறதா என்று கணினியை சரிபார்க்க அனுமதிக்கலாம், எடுத்துக்காட்டாக:\n\n எடி வழக்கு உணர்திறன் என்பதை நினைவில் கொள்க. இதன் பொருள் என்னவென்றால், \"பச்சை\" என்பதற்கு பதிலாக \"பச்சை\" என்று நீங்கள் பதிலளித்தால், எடி \"மெஅ்\" ஐ அச்சிடுவார்."
            code: "greet_colors {is} பச்சை, மஞ்சள்\n பிடித்த_சோலர் {is} {ask} 'உங்களுக்கு பிடித்த நிறம் என்ன?'\n {if} beand_color {in} greet_colors {print} 'அழகான!'\n {else} {print} 'meh'"
            header: மற்றொரு புதிய கட்டளை
        7:
            header: பிழைத்திருத்தம்
            text: இந்த குறியீட்டை பிழைத்திருத்துவோம்!
            debug: உண்மை
            code: "{print} எடியேர் பாதுகாப்புக்கு வருக!\n போர்டிங்_பாச் {ask} {ask} 'உங்களிடம் போர்டிங் பாச் இருக்கிறதா?'\n {is} bording_pass ஆம் {print} பெரியது!\n {is} தயவுசெய்து, உங்கள் போர்டிங் மொழி ஆயத்தம் செய்யுங்கள்.\n பாச்போர்ட் {என்பது உங்கள் பாச்போர்ட்டை தயவுசெய்து பார்க்க முடியுமா? '\n {if} பாச்போர்ட் {is} ஆம் 'நன்றி'\n {else} 'பாச்போர்ட் இல்லாமல் நீங்கள் பறக்க முடியாது'\n அறிவிக்கவும் {} {else} உங்களிடம் அறிவிக்க ஏதாவது இருக்கிறதா?\n {if} அறிவிப்பு {is} ஆம்\n item_to_declare {if} {is} 'நீங்கள் என்ன அறிவிக்க விரும்புகிறீர்கள்'\n {is} சரி\n {ask} நன்றி. தயவுசெய்து கேட் A22 க்குச் செல்லுங்கள். '"
        8:
            header: போகலாம்!
            text: நிலை 5 இல் சாகசங்களை அனுபவிக்கவும்!
        2:
            header: என்றால்
            code: "பெயர் {is} {ask} 'உங்கள் பெயர் என்ன?'\n {if} பெயர் {is} hedy {print} 'நல்லது'"
            text: "`{if}` கட்டளை இரண்டு விருப்பங்களுக்கு இடையில் தேர்வு செய்ய உங்களை அனுமதிக்கிறது.\n இந்த எடுத்துக்காட்டில், கொடுக்கப்பட்ட பதில் எடி என்றால் கணினி 'நன்றாக' அச்சிடும்.\n பதில் எடி இல்லையென்றால், கணினி எதுவும் செய்யாது."
        1:
            header: நிலை 5 க்கு வருக
            text: 'இந்த மட்டத்தில் நீங்கள் 3 புதிய கட்டளைகளைப் பயன்படுத்த கற்றுக்கொள்வீர்கள்: `{if}` என்றால், `{else}` மற்றும் {in}.'
    7:
        3:
            header: அச்சு கட்டளையை மறந்துவிடாதீர்கள்
            text: மீண்டும் கட்டளையைப் பயன்படுத்தும் போது, `{print}` கட்டளையை மறந்துவிடாதீர்கள்.
            code: "{repeat} 5 {times} 'உதவி!'"
            debug: உண்மை
        5:
            code: "{print} நீங்கள் ஒரு பாலைவன தீவில் சிக்கித் தவித்தீர்கள்.\n {repeat} 3 'உதவி!'\n மீட்கப்பட்ட = {ask} யாராவது மீட்புக்கு வந்தார்களா?\n }} மீட்கப்பட்டால் ஆம் {if}\n {is} அதிர்ச்டம்!\n {print} {print} 3 {repeat} 'உதவி!'\n மீட்கப்பட்டது = 'இப்போது என்ன?'\n {times} ஆம்\n {if} 'அவசரம்!\n {else} 'அது ஒரு அவமானம் ... ஓ ... ஒரு தங்குமிடம் கட்டவும், கொஞ்சம் உணவைக் கண்டுபிடிக்கவும் நேரம்.'"
            header: பிழைத்திருத்தம்
            text: இந்த குறியீட்டை பிழைத்திருத்துவோம்!
            debug: உண்மை
        2:
            text: "நீங்கள் ஒரு குறியீட்டை மீண்டும் செய்ய விரும்பினால், நீங்கள் `{repeat}` 3 `{times}` குறியீட்டைப் பயன்படுத்தலாம்.\n நீங்கள் அதிக முறை வரியை மீண்டும் செய்ய விரும்பினால், எண்ணை மாற்றவும்.\n\n எடுத்துக்காட்டாக: உங்கள் கதாபாத்திரம் 5 முறை உதவிக்காக கூச்சலிடும் ஒரு கதையை நீங்கள் நிரலாக்கினால், அது இப்படி இருக்கும்:"
            header: 3 முறை மீண்டும் செய்யவும்
            code: "{print} 'இளவரசர் உதவிக்கு அழைப்பு விடுத்தார்'\n {repeat} 5 {times} {print} 'உதவி!'\n {print} 'யாரும் எனக்கு ஏன் உதவவில்லை?'"
        1:
            header: நிலை 7 க்கு வருக
            text: இந்த மட்டத்தில் நீங்கள் விரும்பும் பல மடங்கு குறியீட்டை எவ்வாறு மீண்டும் செய்வது என்பதை நீங்கள் கற்றுக் கொள்வீர்கள்.
        4:
            header: கேட்கும் கட்டளையை மீண்டும் செய்யவும்
            text: நீங்கள் `{ask}`, `{if}` அல்லது `{else}` பல முறை கட்டளையிடலாம்.
            code: "{repeat} 2 {times} பதில் = {ask} 'நீங்கள் பல முறை கேள்வியைக் கேட்கலாம் என்று உங்களுக்குத் தெரியுமா?'\n {if} பதில் {is} ஆம் {repeat} 2 {times} {print} 'அது ஏற்கனவே தெரியும்!'\n {else} {repeat} 3 {times} {print} 'நீங்கள் புதிதாக ஒன்றைக் கற்றுக்கொண்டீர்கள்!'"
        6:
            header: ரெடி செட் கோ!
            text: நிலை 7 இல் சாகசங்களை அனுபவிக்கவும்!
    8:
        2:
            debug: உண்மை
            header: '{repeat} கட்டளைகளை மீண்டும் செய்யவும்'
            text: "முந்தைய நிலைகளில், `{repeat}` கட்டளை இப்படி இருந்தது:\n\n நீங்கள் ஒரு வரியை மட்டுமே மீண்டும் செய்ய முடியும்."
            code: "{repeat} 5 {times} {print} 'உதவி!'"
        6:
            header: இப்போது மற்றும் வேறு
            text: "இவை `{if}` மற்றும் `{else}` இப்போது கட்டளைகள்.\n ஒவ்வொரு வரியும் `{if}` மற்றும் `{else}` கட்டளைகள் உள்தள்ளலுடன் தொடங்குகின்றன."
            code: "பெயர் = {ask} 'உங்கள் பெயர் என்ன?'\n {if} பெயர் {is} hedy\n {print} 'வரவேற்பு எடி'\n {else}\n {print} 'வரவேற்பு புரோகிராமர்!'"
        8:
            header: அறிக்கைகள் இருந்தால் அறிக்கைகள் இருந்தால்
            text: "மீண்டும் மீண்டும் கட்டளைக்குள் ஒரு கட்டளையை வைக்க முயற்சிக்கிறீர்கள், அல்லது கட்டளைக்குள் இன்னொரு இடத்திற்குள் நீங்கள் நினைத்திருக்கலாம்.\n இப்போதைக்கு, இது இன்னும் சாத்தியமில்லை. உயர் மட்டங்களில், இது அனுமதிக்கப்படும், ஆனால் இப்போது `{` `{if}` மற்றும் {else} `கட்டளைகளை முதலில் முறையான உள்தள்ளலுடன் பயிற்சி செய்வதில் கவனம் செலுத்துவோம்."
        5:
            debug: உண்மை
            header: முன் மற்றும் வேறு
            text: "`{if}` மற்றும் `{else}` கட்டளைகளுக்கும் இதுவே செல்கிறது.\n இவை இதற்கு முன் கட்டளைகள்:"
            code: "{if} பெயர் {is} hedy {print} 'நல்லது'\n {else} {print} 'boo!'"
        9:
            debug: உண்மை
            text: இந்த குறியீட்டை பிழைத்திருத்துவோம்!
            header: பிழைத்திருத்தம்
            code: "{ask} 'hedywheels பச் டிக்கெட் இயந்திரம்'\n மண்டலம்_1 = பேரூர் ஆல், நூலகம், வளாகம், சந்தை இடம்\n மண்டலம்_2 = நீச்சல் குளம், ச்கேட் பார்க், மால், விமான நிலையம்\n இலக்கு = 'நீங்கள் எங்கு செல்ல விரும்புகிறீர்கள்?'\n {print} இலக்கு {} மண்டலம் 1 இல்\n {in} இலக்கு 'மண்டலம் 1 இல் உள்ளது'\n விலை = 3 யூரோக்கள்\n {print} இலக்கு {if} மண்டலம்_2\n {is} இலக்கு 'மண்டலம் 2 இல் உள்ளது'\n விலை = 6\n டிக்கெட்_ டைப்ச் = {print} 'ஒற்றை பயன்பாட்டு டிக்கெட்டுக்கு 1 ஐ அழுத்தவும்.\n ஒரு சுற்று பயண டிக்கெட்டுக்கு 2 ஐ அழுத்தவும்: '\n {if} டிக்கெட்_ வகை = 1\n {if} 'நீங்கள் ஒரு பயன்பாட்டு டிக்கெட்டைத் தேர்ந்தெடுத்தீர்கள்'\n {print}\n {else} நீங்கள் ஒரு சுற்று பயண டிக்கெட்டைத் தேர்ந்தெடுத்தீர்கள் '\n விலை * 2\n {print} 'அது' விலை 'யூரோக்களாக இருக்கும்'"
        3:
            header: '{repeat} கட்டளைகள்'
            text: "இந்த மட்டத்தில் நீங்கள் பல வரிகளை மீண்டும் மீண்டும் செய்யலாம். இதைச் செய்ய நீங்கள் எந்த வரிகள் ஒன்றிணைந்து மீண்டும் மீண்டும் செய்யப்பட வேண்டும் என்று கணினியில் சொல்ல வேண்டும்.\n உள்தள்ளலைப் பயன்படுத்தி இதைச் செய்கிறீர்கள்.\n\n நீங்கள் மீண்டும் செய்ய விரும்பும் ஒவ்வொரு வரியின் தொடக்கத்திலும் 4 இடைவெளிகளை (அல்லது ஒரு தாவல்) பயன்படுத்தவும்:"
            code: "{repeat} 5 {times}\n {print} 'அனைவருக்கும் வணக்கம்'\n {print} 'இது 5 முறை அச்சிடப்படும்'"
        4:
            header: '{repeat} கட்டளைகள்'
            code: "{repeat} 3 {times}\n {print} 'அலோ!'\n {print} 'நாங்கள் மீண்டும் மீண்டும் முடித்துவிட்டோம்!'"
            text: "நீங்கள் விரும்பினால், உள்தள்ளல் இல்லாமல் `{repeat}` கட்டளைக்குப் பிறகு தொடரலாம்.\n உள்தள்ளலுடன் தொடங்காத கோடுகள் மீண்டும் செய்யப்படாது."
        10:
            header: சாகசங்களைப் பார்ப்போம்!
            text: நிலை 8 இல் சாகசங்களை அனுபவிக்கவும்!
        7:
            header: உள்தள்ளலை நிறுத்துகிறது
            text: '`{repeat}` கட்டளையைப் போலவே, நீங்கள் உள்தள்ளலைப் பயன்படுத்துவதை நிறுத்தலாம், மேலும் கோடுகள் எப்போதும் காண்பிக்கப்படும். அறிக்கை உண்மையாக இருந்தால் மட்டுமல்ல.'
            code: "பெயர் = {ask} 'உங்கள் பெயர் என்ன?'\n {if} பெயர் {is} hedy\n {print} 'வரவேற்பு எடி'\n {else}\n {print} 'வரவேற்பு புரோகிராமர்!'\n {print} '3..2..1 .. நிரலாக்கத்தைத் தொடங்குங்கள்!'"
        1:
            header: நிலை 8 க்கு வருக
            text: இந்த மட்டத்தில் நீங்கள் `{repeat}`, `{if}` மற்றும் `{else}` கட்டளைகள் பல வரிக் குறியீட்டிற்கு வேலை செய்ய உள்தள்ளலைப் பயன்படுத்த கற்றுக்கொள்வீர்கள்.
    9:
        4:
            text: '`{if}` க்குப் பிறகு நீங்கள் பல வரிகளைப் பயன்படுத்தலாம்'
            header: '`{if}` க்குப் பிறகு பல கோடுகள்'
            code: "தொடரவும் = {ask} 'நீங்கள் தொடர விரும்புகிறீர்களா?'\n {if} cantion = ஆம்\n நிச்சயமாக = {ask} 'நீங்கள் உறுதியாக இருக்கிறீர்களா?'\n {if} நிச்சயமாக {is} ஆம்\n {print} 'நாங்கள் தொடருவோம்'\n {else}\n {print} 'உங்களுக்கு நிச்சயமாகத் தெரியவில்லை'\n {else}\n {print} 'நீங்கள் தொடர விரும்பவில்லை'"
        8:
            header: பிழைத்திருத்தம்
            debug: உண்மை
            text: இந்த குறியீட்டை பிழைத்திருத்துவோம்!
            code: "{print} 'உங்கள் பாராசூட் சம்ப் சாகசமான எடிசம்ப்சுக்கு வருக!'\n மக்கள் = {ask} 'இன்று நீங்கள் எத்தனை பேருடன் குதிக்கிறீர்கள்?\n {print} 'பாதுகாப்பு காரணங்களுக்காக உங்கள் அனைவருக்கும் சில கேள்விகளைக் கேட்போம்.'\n Extral_instructions_people = a, b\n {repeat} 3 {times}\n பெயர் = {ask} 'உங்கள் பெயர் என்ன?'\n JUMBED_BER = 'நீங்கள் எப்போதாவது ஒரு பாராசூட் சம்ப் செய்திருக்கிறீர்களா,' பெயர் '?'\n {if} jamped_fore இல்லை\n {print} 'கவலைகள் இல்லை, அறை 13 இல் கூடுதல் பாதுகாப்பு வழிமுறையைப் பெறுவீர்கள்'\n {add} பெயர் {to} extral_instructions_people\n {else}\n {print} 'வேடிக்கை!'\n {print} 'அனைவரையும் பாதுகாப்பு கேள்விகளை நிரப்பியதற்கு நன்றி. உங்கள் தாவலை அனுபவிக்கவும்! '"
        9:
            header: போகலாம்!
            text: நிலை 9 இல் சாகசங்களை அனுபவிக்கவும்!
        7:
            header: உள்தள்ளலை நினைவில் கொள்ளுங்கள்
            text: இந்த குறியீட்டின் நான்காவது மற்றும் ஆறாவது வரி 8 இடைவெளிகளுடன் தொடங்குகிறது என்பதை நினைவில் கொள்ளுங்கள்.
            code: "{repeat} 3 {times}\n உணவு = {ask} 'உங்களுக்கு என்ன வேண்டும்?'\n {if} உணவு {is} பீச்சா\n {print} 'நல்லது!'\n {else}\n {print} 'பீச்சா சிறந்தது'"
        6:
            code: "{repeat} 3 {times}\n உணவு = {ask} 'உங்களுக்கு என்ன வேண்டும்?'\n {if} உணவு {is} பீச்சா\n {print} 'நல்லது!'\n {else}\n {print} 'பீச்சா சிறந்தது'"
            header: ஒரு `{` {மீண்டும் {if} `என்றால் {if என்றால்
            text: "இப்போது நீங்கள் இந்த கட்டளைக்குப் பிறகு பல வரிகளைப் பயன்படுத்தலாம், அவற்றை ஒருவருக்கொருவர் வைக்கலாம்.\n அதைப் பாருங்கள்:"
        3:
            text: எந்த வரிகளை மீண்டும் செய்ய வேண்டும், எந்த வரிகளை ஒரு முறை மட்டுமே இயக்க வேண்டும் என்று கணினிக்குச் சொல்ல உள்தள்ளல் மிகவும் முக்கியமானது.
            header: உள்தள்ளல் விசயங்கள்!
            code: "{repeat} 3 {times}\n {print} 'இந்த வரி மீண்டும் செய்யப்படும் ...'\n {print} 'இதுவும் கூட ...'\n {print} 'ஆனால் இது இல்லை!'"
        1:
            header: நிலை 9 க்கு வருக
            text: "இந்த மட்டத்தில் நீங்கள் `{if}` அல்லது `{repeat}` கட்டளைக்குப் பிறகு பல குறியீடுகளைப் பயன்படுத்தலாம்.\n\n நீங்கள் ஒரு `{மீண்டும் மீண்டும்` கட்டளையை மற்றொரு `{repeat}` கட்டளைக்குள் வைக்கலாம்."
        2:
            header: '`{repeat}` க்குப் பிறகு பல கோடுகள்'
            text: இந்த மட்டத்தில் `{repeat}` மற்றும் `{if என்றால் இணைக்க உங்களுக்கு இசைவு உண்டு.
            code: "{repeat} 3 {times}\n உணவு = {ask} 'உங்களுக்கு என்ன வேண்டும்?'\n {if} உணவு {is} பீச்சா\n {print} 'நல்லது!'\n {else}\n {print} 'பீச்சா சிறந்தது'"
        5:
            header: உள்தள்ளல் விசயங்கள்
            text: மீண்டும், உள்தள்ளல் இன்னும் மிக முக்கியமானது மற்றும் குறியீட்டில் ஒரு பெரிய வித்தியாசத்தை ஏற்படுத்தும்.
            code: "தொடரவும் = {ask} 'நீங்கள் தொடர விரும்புகிறீர்களா?'\n {if} cantion = ஆம்\n நிச்சயமாக = {ask} 'நீங்கள் உறுதியாக இருக்கிறீர்களா?'\n {if} நிச்சயமாக {is} ஆம்\n {print} 'நாங்கள் தொடருவோம்'\n {else}\n {print} 'உங்களுக்கு நிச்சயமாகத் தெரியவில்லை'"
    10:
        3:
            header: கட்டளை
            text: '`{for}` கட்டளையின் மற்றொரு உதாரணத்தை இங்கே காணலாம்:'
            code: "நாட்கள் = திங்கள், செவ்வாய், அறிவன், வியாழன், வெள்ளி, காரி, ஞாயிறு\n பெயர்கள் = அம்மா, அப்பா, எம்மா, சோஃபி\n }} நாள் {} நாட்களில்\n {for} பெயர்கள் {in} {{print} '' நாளில் உணவுகள் செய்கின்றன"
        4:
            header: பிழைத்திருத்தம்
            debug: உண்மை
            text: இந்த குறியீட்டை பிழைத்திருத்துவோம்
            code: "{print} 'பெண்கள் மற்றும் தாய்மார்களே!'\n {print} 'ஒரு இரவு மற்றும் ஒரு இரவு சர்க்கச் எடியில் மட்டுமே!'\n ACTS = ஒரு நியதியில் இருந்து சுடவும், இறுக்கமாக நடந்து செல்லவும், ஒரு சூட்கேசில் அவர்களைக் கட்டிக்கொள்ளவும்,\n மக்கள் = ஐரிச் நம்பமுடியாத அக்மெட் தி அமேசிங் பிரான்சிச் அருமையானது\n } for} மக்களுக்கு} in} செயல்கள்\n தேர்ந்தெடுக்கப்பட்ட_பர்சன் {for} மக்கள் {in}\n தேர்ந்தெடுக்கப்பட்ட_பர்சன் 'வில்' செயல்\n } மக்களிடமிருந்து} தேர்ந்தெடுக்கப்பட்ட_பர்சன் {சேர்\n {is} 'இன்று இரவு எங்கள் நிகழ்ச்சியைப் பாருங்கள்!'\n {random} 'டிக்கெட்டுகள் கவுண்டரில் மட்டுமே கிடைக்கின்றன"
        5:
            header: நிரலுக்கு நேரம்!
            text: நிலை 10 இல் சாகசங்களை அனுபவிக்கவும்!
        1:
            header: நிலை 10 க்கு வருக
            text: 'இந்த மட்டத்தில் நீங்கள் ஒரு புதிய கட்டளையைக் கற்றுக்கொள்வீர்கள்: `{for}`.'
        2:
            header: கட்டளை
            text: நீங்கள் ஒரு பட்டியலை உருவாக்கி, அந்த பட்டியலில் உள்ள அனைத்து உருப்படிகளையும் பயன்படுத்தலாம். `{for {` மீண்டும் மீண்டும் ஒரு தொகுதியை உருவாக்குகிறது, அப்படியானால் தொகுதியில் உள்ள அனைத்து வரிகளும் உள்தள்ளலுடன் (4 இடைவெளிகள்) தொடங்க வேண்டும்.
            code: "விலங்குகள் = நாய், பூனை, குமிழி\n }} விலங்குகளில்} விலங்குகளில்\n {for} 'நான் நேசிக்கிறேன்' விலங்கு"
    11:
        3:
            header: மாறி i
            code: "எண் = 10\n {for} i {in} {range} 1 {to} 10 வரை\n {print} i * எண்"
            text: "முந்தைய ச்லைடில் மாறி 'கவுண்டர்' என்று பெயரிடப்பட்டது, ஏனெனில் அது கணக்கிடப்படுகிறது.\n நீங்கள் விரும்பும் மாறிக்கு எந்த பெயரையும் நீங்கள் நிச்சயமாகப் பயன்படுத்தலாம்.\n பைதான் போன்ற நிரலாக்க மொழிகளில் பயன்படுத்தப்படும் இந்த சூழ்நிலையில் மாறிகளுக்கான நிலையான பெயர் 'நான்'.\n இது போல் தெரிகிறது:"
        2:
            header: கட்டளை
            text: 'கட்டளைக்கு புதியது இதுதான்:'
            code: "}} {for} {in} 1 {range} 10 வரை\n {to} கவுண்டர்\n {print} 'தயாராக இல்லையா. இங்கே நான் வருகிறேன்! '"
        4:
            header: பிழைத்திருத்தம்
            text: இந்த குறியீட்டை பிழைத்திருத்துவோம்!
            code: "காரணி {{{is} 'உங்களுக்கு எந்த பெருக்கல் அட்டவணை தேவை?'\n }} {} {{ask} 1 {repeat} 10 {for}\n {in} இது காரணிக்கான பெருக்கங்களின் அட்டவணை\n {range} எண் 'ஃச்' காரணி '=' i * காரணி"
            debug: உண்மை
        1:
            text: "இந்த மட்டத்தில்,} `கட்டளைக்கு` {இன் புதிய வடிவத்தை சேர்க்கிறோம். முந்தைய நிலைகளில், நாங்கள் ஒரு பட்டியலுடன் பயன்படுத்தினோம், ஆனால் எண்களுடன் பயன்படுத்தலாம்.\n\n இந்த வழியில் நமக்கு இனி `{for}` கட்டளை தேவையில்லை."
            header: நிலை 11 க்கு வருக
        5:
            header: நிரலாக்கத்தைத் தொடங்குவோம்!
            text: நிலை 11 இல் சாகசங்களை அனுபவிக்கவும்!
    12:
        5:
            text: "இந்த நிரலில் நீங்கள் ஒரு செயல்பாட்டின் உதாரணத்தைக் காண்கிறீர்கள்.\n மீதமுள்ள பாடலை நீங்கள் நிரப்பினால் என்ன ஆகும் என்று பார்ப்போம்!"
            code: "{define} ட்விங்கிள்\n {print} 'ட்விங்கிள்'\n {print} '...'\n\n {call} ட்விங்கிள்\n {print} 'உலகத்திற்கு மேலே இவ்வளவு உயர்ந்தது'\n {print} 'வானத்தில் ஒரு வைரத்தைப் போல'\n {call} ட்விங்கிள்"
            header: ட்விங்கிள் ட்விங்கிள் லிட்டில் ச்டார்!
        2:
            header: மேற்கோள் மதிப்பெண்கள்
            text: "மேற்கோள் மதிப்பெண்களின் பயன்பாட்டில் இந்த நிலை சில மாற்றங்களைச் செய்கிறது.\n இனிமேல், ** அனைத்து நூல்களும் ** மேற்கோள் மதிப்பெண்களில் இருக்க வேண்டும். {if} கட்டளைகளுக்குப் பிறகு மாறிகள், பட்டியல்களில் உள்ள உருப்படிகள் மற்றும் உரையின் மதிப்புகள் இதில் அடங்கும்."
            code: "பெயர் = 'ரோபோ எடி'\n {print} 'அலோ' பெயர்"
        1:
            text: "இந்த மட்டத்திலிருந்து நீங்கள் தசம எண்களைப் பயன்படுத்த அனுமதிக்கப்படுகிறீர்கள், மேலும் மேற்கோள் மதிப்பெண்களில் சில மாற்றங்கள் உள்ளன.\n இந்த மட்டத்திலிருந்து செயல்பாடுகளையும் நீங்கள் பயன்படுத்தலாம்!"
            header: நிலை 12 க்கு வருக
        6:
            header: செயல்பாடுகள்
            text: எடுத்துக்காட்டில் நீங்கள் காணக்கூடியது போல, ஒரு செயல்பாடு என்பது எந்த நேரத்திலும் அழைக்கப்படும் குறியீட்டின் தொகுதி. செயல்பாட்டை அமைக்க `{define}` மற்றும் அதைப் பயன்படுத்த `{call}` பயன்படுத்துகிறீர்கள்.
        7:
            header: பிழைத்திருத்தம்
            debug: உண்மை
            text: இந்த குறியீட்டை பிழைத்திருத்துவோம்!
            code: "{call} புதிய_மம்பர்\n {print} 'ஆய் புதிய உறுப்பினர்!'\n பயனர்பெயர் = {ask} 'உங்கள் பயனர்பெயர் என்ன?'\n கடவுச்சொல் = 'உங்கள் கடவுச்சொல் என்ன?'\n {print} 'எங்கள் கிளப்புக்கு வருக!'\n\n பயனர்பெயர் = {ask} 'தயவுசெய்து உங்கள் பயனர்பெயரை உள்ளிடவும். நீங்கள் ஒரு புதிய உறுப்பினரா? புதிய உறுப்பினரைத் தட்டச்சு செய்க '\n {if} பயனர்பெயர் = புதிய உறுப்பினர்\n {call} புதிய உறுப்பினர்\n {else}\n கடவுச்சொல் = {ask} 'தயவுசெய்து கடவுச்சொல்லை உள்ளிடவும்'"
        3:
            header: தசம எண்கள்
            text: "இந்த மட்டத்திலிருந்து நீங்கள் தசம எண்களைப் பயன்படுத்த அனுமதிக்கப்படுகிறீர்கள். இது உங்கள் உணவகம் போன்ற திட்டங்களை இன்னும் சிறப்பாகச் செய்யலாம்!\n\n எண்களுக்கு மேற்கோள் குறிகள் தேவையில்லை."
            code: "{print} 'தசம எண்கள் இப்போது ஒரு புள்ளியைப் பயன்படுத்த வேண்டும்'\n {print} 2.5 + 2.5"
        4:
            header: செயல்பாடுகள்!
            text: "இந்த மட்டத்தில் செயல்பாடுகளை எவ்வாறு பயன்படுத்துவது என்பதை நீங்கள் கற்றுக் கொள்வீர்கள். ஒரு செயல்பாடு என்பது நீங்கள் பல முறை எளிதாகப் பயன்படுத்தக்கூடிய குறியீட்டின் தொகுதி. செயல்பாடுகளைப் பயன்படுத்துவது மீண்டும் மீண்டும் பயன்படுத்தக்கூடிய குறியீட்டின் துண்டுகளை ஒழுங்கமைக்க உதவுகிறது. ஒரு செயல்பாட்டை உருவாக்க, வரையறுக்கவும், செயல்பாட்டிற்கு ஒரு பெயரைக் கொடுங்கள். பின்னர் நீங்கள் விரும்பும் அனைத்து வரிகளையும் ஒரு உள்தள்ளப்பட்ட தொகுதியில் வரையறுக்கப்பட்ட வரியின் கீழ் வைக்கவும். உங்கள் குறியீட்டில் ஒரு வெற்று வரியை அழகாகவும் சுத்தமாகவும் பார்க்க விடுங்கள். பெரிய வேலை! நீங்கள் ஒரு செயல்பாட்டை உருவாக்கியுள்ளீர்கள்!\n\n இப்போது, அந்த குறியீட்டின் தொகுதி நமக்குத் தேவைப்படும்போதெல்லாம், அதை அழைக்க செயல்பாட்டின் பெயருடன் அழைப்பைப் பயன்படுத்துகிறோம்! அந்த குறியீட்டின் தொகுதியை நாங்கள் மீண்டும் தட்டச்சு செய்ய வேண்டியதில்லை."
        8:
            text: நிலை 12 இல் சாகசங்களை அனுபவிக்கவும்!
            header: அதை முயற்சிக்க தயாரா?
    13:
        4:
            header: வாதங்களுடன் செயல்பாடுகள்
            text: செயல்பாடுகளை எவ்வாறு பயன்படுத்துவது என்பதை இப்போது நீங்கள் கற்றுக் கொண்டீர்கள், ** உரையாடல் ** உடன் ஒரு செயல்பாட்டை எவ்வாறு பயன்படுத்துவது என்பதை நீங்கள் கற்றுக் கொள்வீர்கள். ஒரு உரையாடல் என்பது ஒரு செயல்பாட்டிற்குள் பயன்படுத்தப்படும் ஒரு மாறி. இது செயல்பாட்டிற்கு வெளியே பயன்படுத்தப்படவில்லை.
        7:
            code: "{} பாடலுடன்} tice ஐ வரையறுக்கவும்\n {define} 'என் போனி' இடத்திற்கு மேல் உள்ளது\n\n {with} பாடல் {'கடல்'\n {print} பாடல் {} 'கடல்'\n {call} பாடல் {'கடல்'"
            header: இன்னும் இன்னும் கேள்விகள்!
            text: "இப்போது நாங்கள் இன்னும் அதிகமான கேள்வியை செயல்பாட்டுடன் இணைத்துள்ளோம். இந்த குறியீட்டைத் தட்டச்சு செய்து என்ன நடக்கிறது என்று பாருங்கள்.\n\n மாறிகள் மற்றும் வாதங்கள் ஒரே பெயரைக் கொண்டுள்ளன என்பதைக் கவனியுங்கள். இது அனுமதிக்கப்படுகிறது.\n இது உங்களை குழப்புமா? வெவ்வேறு பெயர்களைப் பயன்படுத்துங்கள், அதுவும் அனுமதிக்கப்படுகிறது.\n `` `\n பெயர், இடத்துடன் பாடலை வரையறுக்கவும்\n 'எனது' பெயர் '' இடம்\n\n பெயர் 'யார்?'\n இடம் 'அவர்கள் எங்கே?'\n பெயருடன் பாடல், இடம்\n `` `"
        5:
            header: எடுத்துக்காட்டு
            text: "இந்த எடுத்துக்காட்டில், செயல்பாட்டில் 'இடம்' என்ற உரையாடல் எவ்வாறு பயன்படுத்தப்படுகிறது என்பதை நீங்கள் காண்கிறீர்கள்.\n குறியீட்டை இயக்கி, 'கடல்' மற்றும் 'கடல்' ஆகியவற்றை வேறு ஏதாவது மாற்றவும், என்ன நடக்கிறது என்று பாருங்கள்."
            code: "{} பாடலுடன்} tice ஐ வரையறுக்கவும்\n {define} 'என் போனி' இடத்திற்கு மேல் உள்ளது\n\n {with} பாடல் {'கடல்'\n {print} பாடல் {} 'கடல்'\n {call} பாடல் {'கடல்'"
        6:
            header: மாறியுடன் எடுத்துக்காட்டு
            text: "நீங்கள் ஒரு கேள்வியுடன் செயல்பாடுகளையும் இணைக்கலாம்.\n\n இந்த மாற்றங்களைச் செய்தால் என்ன ஆகும்:\n `` `\n இடத்துடன் பாடல் வரையறுக்கவும்\n 'மை போனி இச்' இடம் அச்சிடுக\n\n பதில் 'என் போனி எங்கே?'\n பதிலுடன் பாடல் அழைக்கவும்\n `` `"
            code: "{} பாடலுடன்} tice ஐ வரையறுக்கவும்\n {define} 'என் போனி' இடத்திற்கு மேல் உள்ளது\n\n {with} பாடல் {'கடல்'\n {print} பாடல் {} 'கடல்'\n {call} பாடல் {'கடல்'"
        2:
            header: மற்றும் கட்டளை
            text: "`{and}` கட்டளை எப்போதும் {if} கட்டளையுடன் இணைந்து பயன்படுத்தப்படுகிறது.\n இந்த வழியில் 2 அறிக்கைகள் உண்மையா என்பதை நீங்கள் சரிபார்க்கலாம். உதாரணமாக:"
            code: "பெயர் = {ask} 'உங்கள் பெயர் என்ன?'\n அகவை = {ask} 'உங்கள் அகவை என்ன?'\n {if} பெயர் {is} 'hedy' {and} அகவை {is} 2\n {print} 'நீங்கள் உண்மையான எடி!'"
        8:
            header: பிழைத்திருத்தம்
            text: இந்த குறியீட்டை பிழைத்திருத்துவோம்!
            code: "{} மகிழ்ச்சியை} பெயருடன் வரையறுக்கவும்\n {define} '\n {with} g\n {print} a\n {define} b\n {print} 'கட்சி,' பெயர்\n {play} சோகம்\n {print} '\n {play} e\n {play} d\n {play} c\n {play} 'நீங்கள் நன்றாக இருப்பீர்கள் என்று நம்புகிறேன்,' பெயர்\n\n பெயர் = {play} 'உங்கள்' பெயர் 'என்ன?'\n மனநிலை = {print} 'நீங்கள் மகிழ்ச்சியாக இருக்கிறீர்களா அல்லது சோகமா?'\n {ask} மனநிலை = மகிழ்ச்சி\n {ask} மகிழ்ச்சி {நபருடன்\n {if} மனநிலை = சோகம்\n {call} சோகத்தை {with} பெயர்"
            debug: உண்மை
        1:
            header: நிலை 13 க்கு வருக
            text: "நாம் இப்போது `{and}` மற்றும் `{or}` ஆகியவற்றைக் கற்றுக்கொள்ளப் போகிறோம்! நீங்கள் இரண்டு அறிக்கைகளை சரிபார்க்க விரும்பினால், நீங்கள் இரண்டு IFS ஐப் பயன்படுத்த வேண்டியதில்லை, ஆனால் பயன்படுத்தலாம் மற்றும் அல்லது.\n இனிமேல் நீங்கள் உங்கள் செயல்பாடுகளிலும் வாதங்களைப் பயன்படுத்தலாம்."
        3:
            header: அல்லது கட்டளை
            text: "`{or}` `{and}` கட்டளையைப் போலவே செயல்படுகிறது, ஆனால் இரண்டு அறிக்கைகளில் 1 மட்டுமே உண்மையாக இருக்க வேண்டும்.\n\n `{and} க்கு க்கு` {or} `மாற்றும்போது என்ன நடக்கும் என்று பார்ப்போம்."
            code: "பெயர் = {ask} 'உங்கள் பெயர் என்ன?'\n {if} பெயர் {is} 'hedy' {or} பெயர் {is} 'hedy'\n {print} 'வரவேற்கிறோம் !!'"
        9:
            header: போகலாம்!
            text: நிலை 13 இல் சாகசங்களை அனுபவிக்கவும்!
    14:
        3:
            header: குறியிடுகள்
            code: "பதில் = {ask} 'நீங்கள் மேலும் அறிய விரும்புகிறீர்களா?'\n } என்றால்} பதில் == 'ஆம்'\n {if} 'அடுத்த சாகசத்திற்குச் செல்லுங்கள்!'\n } என்றால்} பதில்! = 'ஆம்'\n {print} 'அது ஒரு அவமானம்!'"
            text: "நீங்கள் பயன்படுத்தலாம்:\n\n == சமமானது.\n\n ! = இல்லை\n\n ==} `அறிக்கைகளில்` {if இல் பயன்படுத்தப்படுகிறது."
        7:
            text: நிலை 14 இல் சாகசங்களை அனுபவிக்கவும்!
            header: வேலைக்கு வருவோம்!
        2:
            header: குறியிடுகள்
            text: "இவை நீங்கள் பயன்படுத்தக்கூடிய புதிய சின்னங்கள்:\n\n > விட பெரியது ...\n\n > = என்பது பெரியது அல்லது அதே போன்றது ...\n\n <அதாவது விட சிறியது ...\n\n <= பொருள் விட சிறியது அல்லது சமம் ...\n\n நீங்கள் அவற்றை இப்படி பயன்படுத்தலாம்:"
            code: "அகவை = {ask} 'உங்களுக்கு எவ்வளவு வயது?'\n {if} அகவை <13\n {print} 'நீங்கள் என்னை விட இளையவர்!'\n {else}\n {print} 'நீங்கள் என்னை விட வயதானவர்!'"
        4:
            header: திரும்ப மதிப்பு
            text: முந்தைய நிலைகளில் நீங்கள் செயல்பாடுகளை உருவாக்கவும் அவற்றுடன் வாதங்களைப் பயன்படுத்தவும் கற்றுக்கொண்டீர்கள். ஒரு செயல்பாட்டின் மற்றொரு சிறந்த பயன்பாடு உங்களுக்காக ஏதாவது கணக்கிட அனுமதிப்பது. நீங்கள் செயல்பாட்டிற்கு ஒரு கணக்கீட்டைக் கொடுக்கலாம், மேலும் இது கணக்கீட்டின் பதிலை உங்களுக்கு வழங்கும். இந்த பதில் ** வருவாய் மதிப்பு ** என்று அழைக்கப்படுகிறது.
        1:
            header: நிலை 14 க்கு வருக
            text: இந்த மட்டத்தில் நீங்கள்> போன்ற உங்கள் நிரல்களை மேம்படுத்த உதவும் சில புதிய சின்னங்களைக் கற்றுக்கொள்வீர்கள். ஒரு செயல்பாட்டின் வருவாய் மதிப்புகளுடன் வேலை செய்ய நீங்கள் கற்றுக்கொள்வீர்கள்.
        5:
            header: திரும்ப மதிப்பு
            text: எடுத்துக்காட்டாக, இந்த குறியீட்டில் Calculate_new_price செயல்பாடு எந்தவொரு பொருளின் புதிய விலையையும் கணக்கிடும். இது புதிய விலையை வருவாய் மதிப்பாக வழங்கும்.
            code: "{define} calculate_new_price {} அளவு, சதவீதத்துடன்\n விழுக்காடு = விழுக்காடு / 100\n தள்ளுபடி_எமவுண்ட் = தொகை * விழுக்காடு\n {with} தொகை - தள்ளுபடி_மவுண்ட்\n\n old_price = {return} 'விலைக் குறியில் எவ்வளவு?'\n தள்ளுபடி = {ask} 'தள்ளுபடி என்ன சதவீதம்?'\n\n புதிய_பிரை = {ask} calculate_new_price {} old_price, தள்ளுபடி\n {call} 'புதிய விலை' புதிய_பிரை 'டாலர்'"
        6:
            header: பிழைத்திருத்தம்
            text: இந்த குறியீட்டை பிழைத்திருத்துவோம்!
            code: "பொருள் = 'வாங்கப்படவில்லை'\n {print} 'நான் இந்த உருப்படியை வாங்க விரும்புகிறேன்'\n விலை == {ask} 'விலை என்ன?'\n {if} விலை குறைவாகவோ அல்லது 10 ஐ விடவோ இல்லை\n {print} 'இது ஒரு பெரிய விசயம்!'\n பொருள் = 'வாங்கப்பட்டது'\n } என்றால்} விலை 10 {if} குறைவாக அல்லது 20 ஐ விட குறைவாக இருந்தால்\n {and} 'சரி'\n பொருள் = 'வாங்கப்பட்டது'\n } என்றால்} விலை 20 {print} 50 க்கும் குறைவாக இருந்தால்\n {if} 'அது கொஞ்சம் அதிகம்!'\n } என்றால்} விலை 50 ஐ விட அதிகமாகவோ அல்லது சமமாகவோ இருந்தால்\n {and} 'வழி இல்லை!'\n } if} பொருள் =! வாங்கப்பட்டது\n {print} 'அவமானம் .. நான் அதை வாங்க மாட்டேன்'\n {if}\n {print} 'நான் அதை வாங்குவேன்! நன்றி! '"
            debug: உண்மை
    15:
        3:
            text: இந்த குறியீட்டை பிழைத்திருத்துவோம்!
            debug: உண்மை
            header: பிழைத்திருத்தம்
            code: "எண்கள் = 1, 2\n\n {for} i {in} {range} 3 {add} 50 வரை\n {} ஃச் {to} எண்களைச் சேர்க்கவும்\n i = + 1\n\n சீரற்ற_நம்பர் = எண்கள் {to}\n யூகங்கள் = 10\n\n {random} உய்த்துணர்தல் = 0\n பதில் = 'எனது எண்ணை யூகிக்கவும்:'\n {while} பதில்> = சீரற்ற_நம்பர்\n {print} 'கீழ்'\n யூகங்கள் = யூகங்கள் -1\n {if} பதில்> சீரற்ற_நம்பர்\n {if} 'உயர்ந்தது!'\n யூகங்கள் = யூகங்கள்\n {print} பதில் = சீரற்ற_நம்பர்\n {else} 'சரியானது'\n யூகங்கள் = 10"
        2:
            header: '{while}'
            code: "பதில் = 0\n } போது} பதில்! = 25\n பதில் = {while} '5 முறை 5 என்ன?'\n {ask} 'சரியான பதில் வழங்கப்பட்டுள்ளது'"
            text: "நாங்கள் ஒரு புதிய வளையத்தைக் கற்றுக்கொள்ளப் போகிறோம், அந்த நேரத்தில் லூப்! அறிக்கை உண்மையாக இருக்கும் வரை வளையம் தொடர்கிறது. எனவே வளையத்தில் உள்ள மதிப்பை மாற்ற மறக்காதீர்கள்.\n\n எடுத்துக்காட்டு குறியீட்டில், சரியான பதில் வழங்கப்படும் வரை நாங்கள் தொடர்கிறோம். சரியான பதில் ஒருபோதும் வழங்கப்படாவிட்டால், லூப் ஒருபோதும் முடிவடையாது!"
        4:
            text: நிலை 15 இல் சாகசங்களை அனுபவிக்கவும்!
            header: அதை முயற்சிப்போம்!
        1:
            header: நிலை 15 க்கு வருக
            text: இந்த மட்டத்தில் நீங்கள் `{while}` லூப் பற்றி அறிந்து கொள்வீர்கள்.
    16:
        3:
            header: பிழைத்திருத்தம்
            text: இந்த குறியீட்டை பிழைத்திருத்துவோம்!
            code: "{print} 'நட்பு சோதனை'\n {subjects} = ['பாடல்', 'திரைப்படம்', 'உணவு', 'பானம்']\n பதில்கள்_ பிளேயர்_1 = []\n பதில்கள்_ பிளேயர்_2 = []\n மதிப்பெண் = 100\n\n {for} i {in} {range} 1 {to} 4\n பதில் = {ask} 'உங்களுக்கு பிடித்த' பாடங்கள் என்ன [நான்]\n {add} பதில் {to} பதில்கள்_ பிளேயர்_1\n\n {print} 'பிளேயர் 2, உங்கள் முறை!'\n {for} i {in} {range} 0 {to} 4\n பதில்_ பிளேயர்_2 = {ask} 'பிளேயர் 1 எச் பிடித்த' பாடங்கள் என்ன\n } பதில்கள்_ பிளேயர்_2 {} பதில்கள்_ பிளேயர்_2 இல் சேர்க்கவும்\n {add} பதில்கள்_ பிளேயர்_2 [2] == பதில்கள்_ பிளேயர்_1 [1]\n {in} 'சரியானது!'\n {print}\n {print} 'தவறு!'\n ச்கோர் = மதிப்பெண் - 25\n\n {else} 'பிளேயர் 2, நீங்கள்' மதிப்பெண் '%' மதிப்பெண் பெற்றுள்ளீர்கள்\n\n {if} மதிப்பெண் = 100\n {print} 'நீங்கள் ஒரு அற்புதமான நண்பர்'\n {if} மதிப்பெண் <100 {print} மதிப்பெண்> = 50\n {if} 'நீங்கள் சிறப்பாகச் செய்ய முடியும்'\n {or} மதிப்பெண் <50\n {print} 'இந்த நபரை கூட உங்களுக்குத் தெரியுமா?!'"
            debug: உண்மை
        2:
            header: சதுர அடைப்புக்குறிப்புகள்
            text: பட்டியல்களைச் சுற்றி சதுர அடைப்புக்குறிகளுடன், பைதான் வழியில் பட்டியல்களை உருவாக்கப் போகிறோம்! முந்தைய மட்டங்களில் நாங்கள் கற்றுக்கொண்டது போல ஒவ்வொரு உருப்படியையும் சுற்றி மேற்கோள் குறிகளை நாங்கள் வைத்திருக்கிறோம். ஒரு பட்டியலில் ஒரு இடத்தை சுட்டிக்காட்ட நாங்கள் சதுர அடைப்புக்குறிகளைப் பயன்படுத்துகிறோம். அட் சீரற்ற கட்டளையை இனி பயன்படுத்த முடியாது.
            code: "நண்பர்கள் = ['அகமது', 'பென்', 'கேடன்']\n {print} நண்பர்கள் [1] 'பட்டியலில் முதல் நண்பர்.'\n {print} நண்பர்கள் [2] 'பட்டியலில் இரண்டாவது நண்பர்.'\n {print} நண்பர்கள் [3] 'பட்டியலில் மூன்றாவது நண்பர்.'\n #இப்போது நாம் மாறி I ஐப் பயன்படுத்தி 2 பட்டியல்களுடன் பொருந்துவோம்\n லக்கி_நம்பர்கள் = [15, 18, 6]\n {for} i {in} {range} 1 {to} 3\n {print} நண்பர்கள் [i] இன் அதிர்ச்ட எண் 'அதிர்ச்டம்_நம்பர்கள் [i]"
        4:
            text: நிலை 16 இல் சாகசங்களை அனுபவிக்கவும்!
            header: அதை முயற்சிப்போம்!
        1:
            header: நிலை 16 க்கு வருக
            text: இந்த மட்டத்தில் நீங்கள் [சதுர அடைப்புக்குறிகள்] மற்றும் அவற்றை எவ்வாறு பயன்படுத்துவது என்பதைப் பற்றி அறிந்து கொள்வீர்கள்.
    18:
        2:
            header: பைதான் வழி
            editor: /எடி/18
            text: "நாங்கள் உண்மையான பைதான் குறியீட்டிற்கு வந்தோம்! அதாவது, இப்போது இருந்து அச்சு மற்றும் வரம்பைக் கொண்ட அடைப்புக்குறிகளைப் பயன்படுத்த வேண்டும்.\n\n மேலும், நீங்கள் ஒன்றுக்கு மேற்பட்ட உருப்படிகளை அச்சிட விரும்பினால், அவற்றை காற்புள்ளிகளால் பிரிக்க வேண்டும்.\n\n பைதான் குறியீட்டைப் பெறுவதற்கு நாம் செய்ய வேண்டிய இறுதி மாற்றம் கேட்கும் உள்ளீட்டில் மாறுகிறது.\n\n எல்லா எடுத்துக்காட்டுகளுக்கும் 'அச்சு' தாவலைக் சொடுக்கு செய்க."
        1:
            header: நிலை 18 க்கு வருக
            text: வாழ்த்துக்கள்! நீங்கள் எடியின் கடைசி நிலையை அடைந்துவிட்டீர்கள்! நீங்கள் இங்கு உருவாக்கிய குறியீட்டை மறுதொடக்கம் அல்லது பிச்சார்ம் போன்ற உண்மையான பைதான் சூழல்களுக்கு நகலெடுக்கலாம், மேலும் நீங்கள் தொடர்ந்து கற்றுக் கொள்ளலாம்! இருப்பினும் பைதான் ஆங்கில கட்டளைகளை மட்டுமே படிக்க முடியும் என்பதை நினைவில் கொள்க, எனவே நீங்கள் பிற மொழிகளைப் பயன்படுத்தினால், நீங்கள் இப்போது ஆங்கிலத்திற்கு மாற வேண்டும்.
        3:
            header: கடைசி சாகசங்கள்!
            text: நிலை 18 இல் கடைசி சாகசங்களை அனுபவிக்கவும்!
    2:
        6:
            code: "இடைநிறுத்தம் {is} 10\n {print} எனக்கு பிடித்த நிறம் ...\n {sleep} இடைநிறுத்தம்\n {print} பச்சை!"
            header: தூக்கம் 5
            text: "இடைநிறுத்தம் நீண்டதாக இருக்க விரும்பினால் `{sleep}` கட்டளைக்குப் பிறகு நீங்கள் ஒரு எண்ணைச் சேர்க்கலாம்.\n\n நீங்கள் விரும்பினால், தூக்க கட்டளையின் காலத்தை தீர்மானிக்க எண்ணுக்கு பதிலாக ஒரு மாறியைப் பயன்படுத்தலாம்."
        2:
            header: மாறிகள்
            text: ஒரு மாறியை உருவாக்க அல்லது 'அமைக்க' நாம் `{is}` கட்டளை பயன்படுத்துகிறோம்
            code: "பெயர் {is} எடி\n அகவை {is} 15\n {print} பெயர் அகவை அகவை"
        3:
            header: ஊடாடும்
            text: "கேள்விகளைக் கேட்பதன் மூலம் நாம் ஒரு மாறியை அமைக்கலாம்.\n\n கேள்விக்கான பதில் மாறியில் சேமிக்கப்படுகிறது.\n\n இந்த வழியில் நமக்கு `{echo}` கட்டளை தேவையில்லை."
            code: "பெயர் {is} {கேளுங்கள் your உங்கள் பெயர் என்ன?\n {ask} அலோ பெயர்"
        8:
            header: நிரலாக்க வேடிக்கை தொடங்கட்டும்!
            text: நிலை 2 இல் சாகசங்களை அனுபவிக்கவும்!
        5:
            text: குறியீட்டை சிறிது நேரம் இடைநிறுத்த `{sleep}` கட்டளையையும் பயன்படுத்தலாம்.
            code: "{print} எனக்கு பிடித்த நிறம் ...\n {sleep} 2\n {print} பச்சை!"
            header: தூங்கு
        7:
            header: பிழைத்திருத்தம்
            debug: உண்மை
            text: ஒரு குறியீட்டை பிழைத்தது என்பது குறியீட்டில் உள்ள தவறுகளை அகற்றுவதாகும். இந்த குறியீட்டை ஒன்றாக பிழைத்திருத்துவோம். பிழைத்திருத்தியைத் தொடங்க லேடிபக் பொத்தானைக் சொடுக்கு செய்க.
            code: "{அச்சிடு the டோனட் கடைக்கு வருக!\n நிரப்புதல் {print} நீங்கள் எந்த வகையான நிரப்புதலை விரும்புகிறீர்கள்?\n {அச்சு you நீங்கள் தேர்ந்தெடுத்துள்ளீர்கள் ... நிரப்புதல்! யூம்!\n முதலிடம் {is} நீங்கள் எந்த வகையான டாப்பிங்கை விரும்புகிறீர்கள்?\n முதலிடம் சுவையாக இருக்கிறது!\n {print} நான் உங்கள் டோனட்டைப் பெறுவேன். {ask}\n {print} இங்கே நீங்கள் செல்லுங்கள்! முதலிடம் ஒரு நிரப்புதல் டோனட்!\n {sleep} ஒரு நல்ல நாள்!"
        4:
            header: பல மாறிகள்
            code: "பெயர் {is} {கேளுங்கள் your உங்கள் பெயர் என்ன?\n {ask} அலோ பெயர்\n அகவை {print} {is} உங்களுக்கு எவ்வளவு வயது?\n {ask} பெயர் அகவை அகவை."
            text: இப்போது நாம் மாறிகளைப் பயன்படுத்துகிறோம், ஒரு `{echo}` கட்டளைக்கு பதிலாக பல மாறிகள் பயன்படுத்தலாம்.
        1:
            header: நிலை 2 க்கு வருக
            text: "இந்த மட்டத்தில் நீங்கள் மாறிகள் பயன்படுத்த கற்றுக்கொள்வீர்கள்.\n\n ஒரு மாறி என்பது தகவல்களைச் சேமிக்கப் பயன்படும் சொல்.\n\n எடுத்துக்காட்டாக: ஒரு பெயர், அகவை அல்லது பிடித்த விளையாட்டு குழு."
    17:
        3:
            header: எலிஃப்
            text: 'இந்த மட்டத்தில் நீங்கள் ஒரு புதிய கட்டளையையும் பயன்படுத்தலாம்: எலிஃப். நீங்கள் 3 (அல்லது அதற்கு மேற்பட்ட!) விருப்பங்களை உருவாக்க விரும்பும் போது உங்களுக்கு இது தேவைப்படும் எலிஃப் வேறு குறுகியது. பாருங்கள்!'
            code: "விலைகள் = ['1 மில்லியன் டாலர்கள்', 'ஒரு ஆப்பிள் பை', 'ஒன்றுமில்லை']\n your_price = விலைகள் [{random}]\n {print} 'நீங்கள் வெல்வீர்கள்' உங்கள்_பிரை\n {if} your_price == '1 மில்லியன் டாலர்கள்':\n {print} 'ஆம்! நீங்கள் பணக்காரர்! '\n {elif} your_price == 'ஒரு ஆப்பிள் பை':\n {print} 'லவ்லி, ஒரு ஆப்பிள் பை!'\n {else}:\n {print} 'அடுத்த முறை சிறந்த அதிர்ச்டம் ..'"
        2:
            header: பெருங்குடல்
            code: "விலைகள் = ['1 மில்லியன் டாலர்கள்', 'ஒரு ஆப்பிள் பை', 'ஒன்றுமில்லை']\n your_price = விலைகள் [{random}]\n {print} 'நீங்கள் வெல்வீர்கள்' உங்கள்_பிரை\n {if} your_price == '1 மில்லியன் டாலர்கள்':\n {print} 'ஆம்! நீங்கள் பணக்காரர்! '\n {else}:\n {print} 'அடுத்த முறை சிறந்த அதிர்ச்டம் ..'"
            text: 'இப்போது நாம் உள்தள்ளலை கொஞ்சம் மாற்றப் போகிறோம். ஒவ்வொரு முறையும் நமக்கு ஒரு உள்தள்ளல் தேவைப்படும்போது, நமக்குத் தேவை: உள்தள்ளலுக்கு முன் வரிசையில்.'
        1:
            header: நிலை 17 க்கு வருக
            text: இந்த மட்டத்தில் நீங்கள் ஒரு பெருங்குடலை எவ்வாறு பயன்படுத்துவது என்பதைக் கற்றுக்கொள்வீர்கள், மேலும் நீங்கள் ELIF கட்டளையைக் கற்றுக்கொள்வீர்கள்.
        4:
            header: பிழைத்திருத்தம்
            text: இந்த குறியீட்டை பிழைத்திருத்துவோம்!
            code: "{define} ask_direction\n திசை = {ask} 'நீங்கள் எங்கு செல்ல விரும்புகிறீர்கள்?'\n {if} திசை = 'பின்னோக்கி'\n {turn} 180\n {else} திசை == 'சரி'\n {turn} 90\n {else} திசை == 'இடது'\n {turn} 270\n {forward} 100\n\n தொடரவும் = 'ஆம்'\n\n {} தொடரும்போது == 'ஆம்'\n {while} ask_direction\n {print}\n தொடரவும் = 'இன்னும் சிலவற்றை வரைய விரும்புகிறீர்களா?'\n {sleep}"
            debug: உண்மை
        5:
            header: அதை முயற்சிப்போம்!
            text: நிலை 17 இல் சாகசங்களை அனுபவிக்கவும்!
    6:
        6:
            text: சுருக்கமாக, நீங்கள் கணிதத்தை செய்ய +, -, * மற்றும் / பயன்படுத்தலாம்.
            header: சுருக்கம்
            code: "{print} '5 பிளச் 5' 5 + 5 ஆகும்\n {print} '5 மைனச் 5' 5 - 5 ஆகும்\n {print} '5 முறை 5' 5 * 5\n {print} '5 5 ஆல் வகுக்கப்படுகிறது' 5/5"
        3:
            header: கழித்தல்
            text: நீங்கள் கழிக்க விரும்பினால், நீங்கள் மைனச் அடையாளத்தைப் பயன்படுத்தலாம்.
            code: "{print} '5 மைனச் 5' 5 - 5 ஆகும்"
        4:
            header: பெருக்கல்
            text: நீங்கள் பெருக்கங்களைச் செய்ய விரும்பினால், நீங்கள் நட்சத்திரத்தைப் பயன்படுத்தலாம்.
            code: "{print} '5 முறை 5' 5 * 5"
        5:
            code: "{print} '5 5 ஆல் வகுக்கப்படுகிறது' 5/5"
            header: பிரிவு
            text: நீங்கள் பிரிவுக்கு ச்லாசைப் பயன்படுத்தலாம்.
        1:
            header: நிலை 6 க்கு வருக
            text: இந்த மட்டத்தில் நாங்கள் எங்கள் குறியீடுகளுக்கு கணிதத்தை சேர்க்கிறோம்.
        7:
            code: "பெயர் = எடி\n பதில் = 20 + 4"
            header: = அடையாளம்
            text: "இனிமேல் நீங்கள் `{is}` கட்டளைக்கு பதிலாக = சின்னத்தையும் பயன்படுத்தலாம்.\n இது எண்களுக்கும் சொற்களுக்கும் செல்கிறது, மேலும் இது `{if}` அல்லது `{else}` கட்டளைகளுக்குப் பின் செல்கிறது."
        2:
            header: கூட்டல்
            text: கூடுதலாக நீங்கள் கணக்கிட விரும்பினால், பிளச் அடையாளத்தைப் பயன்படுத்தவும்.
            code: "{print} '5 பிளச் 5' 5 + 5 ஆகும்"
        8:
            header: மாறிகள் கொண்ட கணக்கீடுகள்
            text: 'எண்களுடன் நீங்கள் கணக்கீடுகளைப் பயன்படுத்தலாம், ஆனால் இது போன்ற கணக்கீடுகளைச் செய்ய மாறிகள் பயன்படுத்தலாம்:'
            code: "எண்_1 = {ask} 'முதல் எண்ணை நிரப்பவும்:'\n எண்_2 = {ask} 'இரண்டாவது எண்ணை நிரப்பவும்:'\n சரியான_அன்வெர் = எண்_1 * எண்_2\n {print} number_1 'times' number_2 'என்பது' சரியானது_அன்வெர்"
        9:
            header: பிழைத்திருத்தம்
            text: இந்த குறியீட்டை பிழைத்திருத்துவோம்!
            code: "{print} 'இது வாட்டர் பார்க் டிக்கெட் இயந்திரம்'\n {print} 'விலை பட்டியல்: 12 $ 3 க்கு கீழ் உள்ள குழந்தைகள், பெரியவர்கள் $ 5'\n {print} 'திங்கள் 25% தள்ளுபடி'\n தொகை_ஆஃப்_சில்ட்ரன்ச் = 'எத்தனை குழந்தைகள் டிக்கெட்டுகளை நீங்கள் விரும்புகிறீர்கள்?'\n தொகை_ஆஃப்_அடால்ட்ச் = 'எத்தனை வயதுவந்த டிக்கெட்டுகளை நீங்கள் விரும்புகிறீர்கள்?'\n day_of_the_week = {ask} 'இது என்ன நாள்?'\n {clear}\n குழந்தை_பிரை = குழந்தைகளின் அளவு * 3\n adult_price = தொகை_ஆஃப்_அடால்ட்ச் + 5\n மொத்த_பிரை = அகவை வந்தோர்_பிரை * குழந்தை_பிரை\n {if} நாள் {is} திங்கள்\n மொத்த_பிரை = மொத்த_பிரை * 0.25\n {print} 'அது மொத்தம்_பிரசையாக இருக்கும்'"
            debug: உண்மை
        10:
            header: வேலைக்கு வருவோம்!
            text: நிலை 6 இல் சாகசங்களை அனுபவிக்கவும்!
