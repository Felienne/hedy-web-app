levels:
    0:
        1:
            header: 欢迎来到海蒂！
            text: Hedy是一种编程语言。
        2:
            header: 编程
            text: |-
                编程是使用计算机的语言向计算机发出指令。

                这样的语言被称为 "编程语言"。
        3:
            header: 编程语言
            text: |-
                也许你已经知道了一些编程语言？
                例如:
                * Scratch
                * Python
                * HTML
        4:
            header: 编程
            text: |-
                如果你会编程，你可以做很多很酷的事情：
                * 创作互动故事
                * 用计算机绘图，并将其画在纸上或织物上
                * 开发你自己的应用程序也就是APP，并在你的手机上使用这个应用程序
        5:
            header: Hedy编程
            text: |-
                <iframe class="embedded-hedy" src="/adventure/story/1/raw">在Hedy中，我们使用特殊代码，如`{print}`。
                <iframe class="embedded-hedy" src="/adventure/story/1/raw"></iframe>
        6:
            header: Hedy编程
            text: |-
                代码词将显示为粉红色。
                <iframe class="embedded-hedy" src="/adventure/story/1/raw"></iframe>
        7:
            header: Hedy编程
            text: |-
                我们使用代码下方的“运行代码”按钮开始运行代码。
                <iframe class="embedded-hedy" src="/adventure/story/1/raw"></iframe>
        8:
            header: Hedy编程
            text: |-
                输出的内容显示在右侧。
                <iframe class="embedded-hedy" src="/adventure/story/1/raw"></iframe>
        9:
            header: Hedy编程
            text: |-
                输出也可以是一个图形。
                <iframe class="embedded-hedy" src="/adventure/turtle/1/raw"></iframe>
    1:
        1:
            header: 欢迎来到第1级!
            text: |-
                我们将从第1级开始，用Hedy创作故事!

                我们需要三个文本代码来创作互动故事。
        2:
            header: '{打印}'
            text: |-
                在第1级中，你可以使用的第一个代码是`{print}`。

                `{print}`用于在屏幕上显示文本。
            editor: <iframe class="fragment" src="/adventure/print_command/1/raw"></iframe>
        3:
            header: '{打印} 命令'
            text: |-
                你可以随意地修改 `{打印}` 命令后面的文字。

                你也可以再添加一行 `{打印}` 命令，来打印多行文字。
            editor: <iframe class="fragment" src="/adventure/print_command/1/raw"></iframe>
        4:
            header: '{ask}'
            text: |-
                在第1级中，你可以使用的最后一个文本代码是`{echo}`。

                `{echo}`用于重复`{ask}`的答案。
            editor: <iframe class="fragment" src="/adventure/parrot/1/raw"></iframe>
        5:
            header: '{echo}'
            text: |-
                使用`{print}`、`{ask}`和`{echo}`，你已经可以创作一个小故事。
                这是尝试冒险活动鹦鹉、石头剪刀布和故事的的好时机。
            editor: <iframe class="fragment" src="/adventure/ask_command/1/raw"></iframe>
        6:
            header: 编程!
            text: 探险活动显示在标签页中。
        7:
            header: 编程!
            text: |-
                可以用标记黄色箭头的按钮复制例子。
                <iframe class="fragment" src="/hedy/1"></iframe>
            editor: <iframe class="fragment" src="/hedy/1"></iframe>
        8:
            header: 标志程序！
            text: 现在我们已经看到了文本代码，接下来我们将看到图形代码。
        9:
            header: 和海龟一起绘图
            text: '`{forward}` 用于让海龟向前移动。'
        10:
            header: '和海龟一起绘图: {forward}'
            text: '`{turn}` 用于让海龟向左转或向右转。'
            editor: <iframe class="fragment" src="/adventure/turtle/1/raw"></iframe>
        11:
            header: '和海龟一起绘图: {turn}'
            text: '`{turn}` is used to make the turtle turn left or right.'
            editor: <iframe class="fragment" src="/adventure/turtle/1/raw"></iframe>
    2:
        1:
            header: 欢迎来到第 2 级
            text: |-
                In this level you will learn to use variables.

                A variable is a word that can be used to store informatie.

                For example: a name, age or favorite sports team.
        2:
            header: 变量
            text: To make or 'set' a variable we use the `{is}` command
            editor: <iframe class="fragment" src="/adventure/is_command/2/raw"></iframe>
        3:
            header: 交互的
            text: |-
                We can also set a variable by asking questions.

                The answer to the question is stored in the variable.

                This way we don't need the `{echo}`  command.
            editor: <iframe class="fragment" src="/adventure/ask_command/2/raw"></iframe>
        4:
            header: 多个变量
            text: Now that we use variables, we can use multiple variables instead of just one `{echo}`command.
            editor: <iframe class="fragment" src="/adventure/ask_command/2/raw"></iframe>
        5:
            header: 停顿
            text: You can also use the `{sleep}` command to pause the code for a while.
            editor: <iframe class="fragment" src="/adventure/sleep_command/2/raw"></iframe>
        6:
            header: 停顿 5 次
            text: |-
                You can add a number after the `{sleep}` command if you want the pause to be longer.

                If you want, you could even use a variable instead of a number to decide the duration of the sleep command.
            editor: <iframe class="fragment" src="/adventure/sleep_command/2/raw"></iframe>
        7:
            header: 开始欢乐编程吧！
            text: Enjoy the adventures in level 3!
    3:
        1:
            header: 欢迎来到第 3 级
            text: In this level you'll learn how to make a list, add and remove items form your lists and pick a random item off that list.
        2:
            header: 构建列表
            text: |-
                You make a list with `{is}`.

                Seperate the items on your list with a comma.
            editor: <iframe class="fragment" src="/adventure/random_command/3/raw"></iframe>
        3:
            header: 随机
            text: |-
                You can use the list with the `{at}` `{random}` command.
                The computer will randomly pick one item of the list.
                Every time you run this code the output will differ.
            editor: <iframe class="fragment" src="/adventure/dice/3/raw"></iframe>
        4:
            header: 随意造句
            text: You can use the `{at}` `{random}` command in a sentence as well.
            editor: <iframe class="fragment" src="/adventure/random_command/3/raw"></iframe>
        5:
            header: 添加到
            text: |-
                You can add items to a list with the `{add}` `{to}` command.

                You can choose what to add to the list or you can use the `{add}` `{to}` command in combination with the `{ask}` command.
                This way you can let the player decide what to add to the list.
            editor: <iframe class="fragment" src="/adventure/add_remove_command/3/raw"></iframe>
        6:
            header: 从......中去除
            text: |-
                The opposite of the `{add}` `{to}` command is the  `{remove}` `{from}` command.
                This command removes an item from a list.
            editor: <iframe class="fragment" src="/adventure/add_remove_command/3/raw"></iframe>
        9:
            header: 让我们开始吧！
            text: Enjoy the adventures in level 3!
    4:
        1:
            header: 欢迎来到第 4 级
            text: In this level you will learn how to use quotation marks.
            editor: <iframe class="fragment" src="/adventure/quotation_marks/4/raw"></iframe>
        2:
            header: 问题
            text: 'In the previous levels, you might have come across this problem:'
            editor: <iframe class="fragment" src="/adventure/default/4/raw"></iframe>
        3:
            header: 用引号修复
            text: |-
                In this level we will fix this problem by using quotation marks.

                This also makes our code look more like 'real' Python code.
        4:
            header: 带引号的 print
            text: Each time you use the `{print}` command you need to put the text that you want to appear on the screen in quotation marks.
            editor: <iframe class="fragment" src="/adventure/quotation_marks/4/raw"></iframe>
        5:
            header: 带引号的ask
            text: This also goes for the `{ask}` command.
            editor: <iframe class="fragment" src="/adventure/quotation_marks/4/raw"></iframe>
        6:
            header: 引号和变量
            text: |-
                You do not want variable names to be printed on the screen.
                This is why variables should be left out of the quotation marks, like this:
            editor: <iframe class="fragment" src="/adventure/quotation_marks/4/raw"></iframe>
        7:
            header: 引号和变量
            text: |-
                When variable names are used in the middle of a sentence, you have to leave the variables out of the quotation marks.
                The rest of the sentence however, does need quotation marks. That looks like this:
            editor: <iframe class="fragment" src="/adventure/quotation_marks/4/raw"></iframe>
        8:
            header: 引号和缩写
            text: |-
                Be careful! Now that you are using quotation marks, you can't use apostrophes in contractions.

                Please try to print a contraction like "you're" or "I'm" in the screen below and see what happens....
            editor: <iframe class="fragment" src="/adventure/rock/4/raw"></iframe>
        9:
            header: 预备，准备，清除！
            text: Enjoy the adventures in level 4!
            editor: <iframe class="fragment" src="/adventure/clear_command/4/raw"></iframe>
        10:
            header: 预备，准备，开始！
            text: Enjoy the adventures in level 4!
    5:
        1:
            header: 欢迎来到第 5 级
            text: 'In this level you will learn to use 3 new commands: `{if}`, `{else}` and `{in}`.'
        2:
            header: if
            text: |-
                The `{if}` command allows you to choose between two options.
                In this example the computer will print 'nice' if the given answer is Hedy.
                If the answer is not Hedy, the computer will do nothing.
            editor: <iframe class="fragment" src="/adventure/if_command/5/raw"></iframe>
        3:
            header: 不要忘记 print
            text: When using the `{if}` command, don't forget to use the `{print}` command.
            editor: <iframe class="fragment" src="/adventure/if_command/5/raw"></iframe>
        4:
            header: else
            text: |-
                When using an `{if}` command, you can also add an `{else}` command.
                If the answer is Hedy, the computer will print 'nice'.
                But if the answer is something else the computer will print 'boo'
            editor: <iframe class="fragment" src="/adventure/if_command/5/raw"></iframe>
        5:
            header: 排长龙
            text: |-
                You might have noticed that your lines can get very long when you have both an `{if}` and an `{else}` command.

                You can choose to seperate commands and put them on 2 lines, like this:
            editor: <iframe class="fragment" src="/adventure/if_command/5/raw"></iframe>
        6:
            header: 另一个新命令
            text: |-
                If you have practised with the `{if}` and `{else}` commands, you can also try the `{in}` command.

                With `{in}` you can let the computer check if an item is in a list, for example:

                Please note that Hedy is case sensitive. This means that if you answer "Green" instead of "green", Hedy will print "meh".
            editor: <iframe class="fragment" src="/adventure/in_command/5/raw"></iframe>
        7:
            header: 我们开始吧！
            text: Enjoy the adventures in level 5!
    6:
        1:
            header: 欢迎来到第 6 级
            text: In this level we are adding maths to our codes.
        2:
            header: 加法
            text: If you want to calculate an addition, simply use the plus sign.
            editor: <iframe class="fragment" src="/adventure/maths/6/raw"></iframe>
        3:
            header: 减法
            text: If you want to subtract, you can use the minus sign.
            editor: <iframe class="fragment" src="/adventure/maths/6/raw"></iframe>
        4:
            header: 乘法
            text: If you want to do multiplications, you can use the asterisk.
            editor: <iframe class="fragment" src="/adventure/maths/6/raw"></iframe>
        5:
            header: 除法
            text: You can use the slash for division.
            editor: <iframe class="fragment" src="/adventure/maths/6/raw"></iframe>
        6:
            header: 小结
            text: In summary, you can use +, -, * and / to do maths.
            editor: <iframe class="fragment" src="/adventure/maths/6/raw"></iframe>
        7:
            header: The = symbol
            text: |-
                From now on you can also use the = symbol instead of the `{is}` command.
                This goes for both numbers and words, and it also goes after the `{if}` or `{else}` commands.
            editor: <iframe class="fragment" src="/adventure/is_command/6/raw"></iframe>
        8:
            header: 带变量的计算
            text: 'You can use calculations with numbers, but you can also use variables to do calculations, like this:'
            editor: <iframe class="fragment" src="/adventure/calculator/6/raw"></iframe>
        9:
            header: 让我们开始工作吧！
            text: Enjoy the adventures in level 6!
    7:
        1:
            header: 欢迎来到第 7 级
            text: In this level you will learn how to repeat a line of code as many times a you'd like.
        2:
            header: 重复3次
            text: |-
                If you want to repeat a line of code, you can use the `{repeat}` 3 `{times}` code.
                If you want to repeat the line more times, simply change the number.

                For example: If you are programming a story where your character shouts for help for 5 times, it could look like this:
            editor: <iframe class="fragment" src="/adventure/story/7/raw"></iframe>
        3:
            header: 不要忘记 print 命令
            text: When using the repeat command, do not forget the `{print}` command.
            editor: <iframe class="fragment" src="/adventure/print/7/raw"></iframe>
        4:
            header: 重复 ask 命令
            text: You can also repeat an `{ask}`, `{if}` or `{else}` command multiple times.
            editor: <iframe class="fragment" src="/adventure/repeat_command_2/7/raw"></iframe>
        5:
            header: 预备，准备，开始！
            text: Enjoy the adventures in level 7!
    8:
        1:
            header: 欢迎来到第 8 级
            text: In this level you will learn to use indentation to make the `{repeat}`, `{if}` and `{else}` commands work for multiple lines of code.
        2:
            header: '{repeat} 指令之前'
            text: |-
                In the previous levels, the `{repeat}` command looked like this:

                You could only repeat one line of code.
            editor: <iframe class="fragment" src="/adventure/story/7/raw"></iframe>
        3:
            header: 现在 {repeat} 指令
            text: |-
                In this level you can repeat multiple lines of code. To do this you must tell the computer which lines belong together and should be repeated.
                You do this by using indentation.

                Use 4 spaces (or one tab) at the beginning of each line that you want to repeat, like this:
            editor: <iframe class="fragment" src="/adventure/repeat_command/8/raw"></iframe>
        4:
            header: 现在 {repeat} 指令
            text: |-
                If you want to, you can continue after the `{repeat}` command without indentation.
                The lines that do not start with indentation will not be repeated.
            editor: <iframe class="fragment" src="/adventure/repeat_command_2/8/raw"></iframe>
        5:
            header: if 和 else 之前
            text: |-
                The same goes for the `{if}` and `{else}` commands.
                These were the commands before:
            editor: <iframe class="fragment" src="/adventure/if_command/5/raw"></iframe>
        6:
            header: if 和 else 现在
            text: |-
                These are the `{if}` and `{else}` commands now.
                Each line after the `{if}` and `{else}` commands start with indentation.
            editor: <iframe class="fragment" src="/adventure/if_command/8/raw"></iframe>
        7:
            header: 停止缩进
            text: Just like with the `{repeat}` command, you can stop using indentation and the lines will always be shown. Not just if the statement is true.
            editor: <iframe class="fragment" src="/adventure/if_command/8/raw"></iframe>
        8:
            header: if 语句内的 if 语句
            text: |-
                You might have thought of trying to put an if command inside a repeat command, or inside another if command.
                For now, this is not possible yet. In the higher levels, it will be allowed, but for now let's focus on practising the `{if}` `{else}` and `{repeat}` commands with proper indentation first.
        9:
            header: 让我们来看看探险吧！
            text: Enjoy the adventures in level 8!
    9:
        1:
            header: 欢迎来到第 9 级
            text: |-
                In this level you can use multiple lines of code after an `{if}` or after a `{repeat}` command.

                You can even put a `{repeat}` command within another `{repeat}`  command.
        2:
            header: '`{repeat}` 之后多行代码'
            text: You are allowed to use multiple lines after `{repeat}`.
            editor: <iframe class="fragment" src="/adventure/repeat_command/9/raw"></iframe>
        3:
            header: 缩进很重要！
            text: Indentation is very important to tell the computer which lines should be repeated and which lines should only be ran once.
            editor: <iframe class="fragment" src="/adventure/repeat_command_2/8/raw"></iframe>
        4:
            header: '`{if}` 之后多行代码'
            text: You can also use multiple lines after `{if}`
            editor: <iframe class="fragment" src="/adventure/if_command/9/raw"></iframe>
        5:
            header: 缩进很重要
            text: Again, indentation is still very important and can make a big difference in the code.
            editor: <iframe class="fragment" src="/adventure/if_command/9/raw"></iframe>
        6:
            header: '`{repeat}` 内的 `{if}`'
            text: |-
                Now that you can use multiple lines of code after these command, you can also put them within each other.
                Check it out:
            editor: <iframe class="fragment" src="/adventure/repeat_command/9/raw"></iframe>
        7:
            header: 注意缩进
            text: Mind that the fourth and sixth line of this code starts with 8 spaces of indentation.
            editor: <iframe class="fragment" src="/adventure/repeat_command/9/raw"></iframe>
        8:
            header: 我们开始吧！
            text: Enjoy the adventures in level 9!
    10:
        1:
            header: 欢迎来到第 10 级
            text: 'In this level you will learn a new command: `{for}`.'
        2:
            header: for 命令
            text: With for you can make a list and use all items on that list. `{for}` creates a block, like repeat and if so all lines in the block need to start with indentation (4 spaces).
            editor: <iframe class="fragment" src="/adventure/for_command/10/raw"></iframe>
        3:
            header: for 命令
            text: 'Here you see another example of the `{for}` command:'
            editor: <iframe class="fragment" src="/adventure/dishes/10/raw"></iframe>
        4:
            header: 是时候编程了！
            text: Enjoy the adventures in level 10!
    11:
        1:
            header: 欢迎来到第 11 级
            text: |-
                In this level, we add a new form of the `{for}` command. In earlier levels, we used for with a list, but we can also use for with numbers.

                This way we don't need the `{repeat}` command anymore.
        2:
            header: for 命令
            text: 'This is what the new for command looks like:'
            editor: <iframe class="fragment" src="/adventure/for_command/11/raw"></iframe>
        3:
            header: 变量 i
            text: |-
                In the previous slide the variable was named 'counter', because it was counting down.
                You can of course use any name for the variable you want.
                The standard name  for variables in this situation that is used in programming languages like Python is 'i'.
                That looks like this:
            editor: <iframe class="fragment" src="/adventure/calculator/11/raw"></iframe>
        4:
            header: 开始编程吧！
            text: Enjoy the adventures in level 11!
    12:
        1:
            header: 欢迎来到第 12 级
            text: From this level on you are allowed to use decimal numbers and there are some changes to the quotation marks.
        2:
            header: 引号
            text: |-
                This level makes some changes to the usage of quotation marks.
                From now on, **all texts** need to be in quotation marks. This includes values of variables, items on lists and text after {if} commands.
            editor: <iframe class="fragment" src="/adventure/quotation_marks/12/raw"></iframe>
        3:
            header: 小数
            text: |-
                From this level on you are also allowed to use decimal numbers. This can make programs like your restaurant even better!

                Numbers do not quotation marks.
            editor: <iframe class="fragment" src="/adventure/maths/12/raw"></iframe>
        4:
            header: 准备好尝试了吗？
            text: Enjoy the adventures in level 12!
    13:
        1:
            header: 欢迎来到第 13 级
            text: We are now going to learn `{and}` and `{or}`! If you want to check two statements, you don't have to use two ifs but can use and and or.
        2:
            header: and 指令
            text: |-
                The `{and}` command is always used in a combination with the {if} command.
                This way you can check if 2 statements are true. For example:
            editor: <iframe class="fragment" src="/adventure/and_or_command/13/raw"></iframe>
        3:
            header: or 指令
            text: |-
                The `{or}` works in the same way as the `{and}` command, but only 1 of the two statements has to be true.

                Let's see what happens when you change the `{and}` for `{or}`.
            editor: <iframe class="fragment" src="/adventure/and_or_command/13/raw"></iframe>
        4:
            header: 我们开始！
            text: Enjoy the adventures in level 13!
    14:
        1:
            header: 欢迎来到第 14 级
            text: In this level you'll learn some new symbols that can help you improve your programs, like >.
        2:
            header: 符号
            text: |-
                These are the new symbols you can use:

                  The >  means bigger than...

                  The >= means bigger than or the same as...

                  The <  means smaller than...

                  The <= means smaller than or the same as...

                You can use them like this:
            editor: <iframe class="fragment" src="/adventure/is_command/14/raw"></iframe>
        3:
            header: 符号
            text: |-
                You can also use:

                == is the same as.

                != is not

                == is used in `{if}` statements.
            editor: <iframe class="fragment" src="/adventure/default/14/raw"></iframe>
        4:
            header: 开始工作吧！
            text: Enjoy the adventures in level 14!
    15:
        1:
            header: 欢迎来到第 15 级
            text: In this level you will learn about the `{while}` loop.
        2:
            header: '{while}'
            text: |-
                We are going to learn a new loop, the while loop! The loop continues as long as the statement is true. So don't forget to change the value in the loop.

                In the example code, we continue until a correct answer has been given. If the correct answer is never given, the loop will never end!
            editor: <iframe class="fragment" src="/adventure/while_command/15/raw"></iframe>
        3:
            header: 来尝试一下！
            text: Enjoy the adventures in level 15!
    16:
        1:
            header: 欢迎来到第 16 级
            text: In this level you will learn about the [square brackets] and how to use them.
        2:
            header: 方括号
            text: We are going to make lists the Python way, with square brackets around the lists! We also keep the quotation marks around each item like we have learned in previous levels. We use square brackets to point out a place in a list. The at random command can not be used anymore.
            editor: <iframe class="fragment" src="/adventure/random_command/16/raw"></iframe>
        3:
            header: 来尝试一下！
            text: Enjoy the adventures in level 16!
    17:
        1:
            header: 欢迎来到第 17 级
            text: in this level you will learn how to use a colon and you will learn the elif command.
        2:
            header: 冒号
            text: 'Now we are going to change indentation a little bit. Every time that we need an indentation, we need : at the line before the indentation.'
            editor: <iframe class="fragment" src="/adventure/print_command/17/raw"></iframe>
        3:
            header: 否则如果/Elif
            text: 'In this level you can also use a new command: elif. elif is short for else if and you need it when you want to make 3 (or more!) options. Check it out!'
            editor: <iframe class="fragment" src="/adventure/elif_command/17/raw"></iframe>
        4:
            header: 来尝试一下！
            text: Enjoy the adventures in level 17!
    18:
        1:
            header: 欢迎来到第 18 级
            text: Congratulations! You have reached the last level of Hedy! The code you have created here can be copied to real Python environments like replit or PyCharm, and you can continue learning there! Note however that Python can only read English commands, so if you have been using other languages,
                you will need to switch to English now.
        2:
            header: Python 方式
            text: |-
                We arrived at real Python code! That means we need to use parentheses with print and range from now on.

                Also, if you want to print more than one item, you need to separate them by commas.

                The final change we will need to make to get Python code is changing ask into input.

                Click on the 'print' tab for all the examples.
            editor: <iframe class="fragment" src="/hedy/18"></iframe>
        3:
            header: 最后的探险！
            text: Enjoy the very last adventures in level 18!
