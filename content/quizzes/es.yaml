levels:
    1:
        1:
            question_text: "¿Cómo se llama este lenguaje de programación?"
            mp_choice_options:
            -   option: "Hedy"
                feedback: "¡Buen trabajo!"
            -   option: "Heddy"
                feedback: "este no!"
            -   option: "Haydie"
                feedback: "Este no!"
            -   option: "Heidi"
                feedback: "¡Este no!"
            correct_answer: "A"
            hint: "Es nombrado en honor de Hedy Lamarr."
            question_score: '10'
        2:
            question_text: "¿Qué debe introducirse en los huecos para que aparezca el texto \"Hello!\"?"
            mp_choice_options:
            -   option: |
                    `{echo}`
                feedback: "`{echo}` repite una respuesta dada."
            -   option: |
                    `{print}`
                feedback: "Correcto !"
            -   option: |
                    `hola`
                feedback: "Hello no es un comando."
            -   option: |
                    `{ask}`
                feedback: "Con `{ask}`, puedes preguntar una pregunta."
            correct_answer: "B"
            hint: "_ ¡Hola mundo!"
            question_score: '10'
            code: |
                _ ¡Hola!
        3:
            question_text: "¿Cómo preguntas cuál el color favorito de alguien?"
            mp_choice_options:
            -   option: |
                    ```
                    {print} ¿Cuál es tu color favorito?
                    ```
                feedback: "`{print}` imprime texto, pero no pregunta preguntas."
            -   option: |
                    ```
                    {ask} {print} ¿Cuál es tu color favorito?
                    ```
                feedback: "Solo necesitas un comando, no dos."
            -   option: |
                    ```
                    {ask} ¿Cuál es tu color favorito?
                    ```
                feedback: "¡Genial!"
            -   option: |
                    ```
                    {echo} ¿Cuál es tu color favorito?
                    ```
                feedback: "`{echo}` te repite tu respuesta."
            correct_answer: "C"
            hint: "Puedes preguntar algo con el comando `{ask}`"
            question_score: '10'
        4:
            question_text: "¿Qué está mal en este código?"
            code: |-
                ¡Hola, soy Hedy!
                {ask} ¿Quién eres?
                {echo} Hola...
            mp_choice_options:
            -   option: "`{print}` faltante en la línea 1."
                feedback: "¡Correcto!"
            -   option: "El comando de la línea 2 está mal escrito."
                feedback: "El comando está bien escrito."
            -   option: "`{echo}` no es un comando."
                feedback: "`{echo}` es un comando, hay otro error."
            -   option: "¡Nada! ¡Este código está perfecto!"
                feedback: "Incorrecto, ¡presta atención!"
            correct_answer: "A"
            hint: "La línea 1 no parece correcta"
            question_score: '10'
        5:
            question_text: "¿Qué comando falta en la línea 2?"
            code: |-
                {ask} ¿Cuál es tu mascota favorita?
                _ Así que tu mascota favorita es...
            mp_choice_options:
            -   option: |
                    `{print}`
                feedback: "No, quieres que el programa te repita la respuesta."
            -   option: |
                    `Hedy`
                feedback: "Hedy no es un comando."
            -   option: |
                    `{ask}`
                feedback: "Con `{ask}` puedes preguntar una pregunta."
            -   option: |
                    `{echo}`
                feedback: "Exacto !"
            correct_answer: "D"
            hint: "Quieres ver la respuesta al final de la línea 2..."
            question_score: '10'
        6:
            question_text: "Que pasa de malo con este código ?"
            code: |-
                {print} Hola soy Hedy!
                {print} ¿Cuál es tu equipo de fútbol favorito?
                {echo} Tu respaldas...
                {print} Cool! Yo también!
            mp_choice_options:
            -   option: "In line 1 `{print}` should be replaced with `{ask}`."
                feedback: "`{print}` el la línea 1 está correcto."
            -   option: "In line 2, `{print}` should be replaced with `{ask}`."
                feedback: "Genial! Pusiste atención !"
            -   option: "La línea 3 tiene que empezar con `{print}` en vez de `{echo}`."
                feedback: "`{echo}` es correcto."
            -   option: "En la línea 4, `{print}` está mal escrito."
                feedback: "Hay un error de la de ortografía en otro lugar..."
            correct_answer: "B"
            hint: "Verifica la forma en que se escriben los comandos."
            question_score: '10'
        7:
            question_text: "Que pasa de malo con este código ?"
            code: |-
                {print} ¡Bienvenido al restaurante Hedy's!
                {ask} ¿Qué te gustaría comer?
                {echo} Así que quieres pedir …
                {print} ¡Ya viene! ¡Que aproveche!
            mp_choice_options:
            -   option: "In line 1 `{print}` needs to be replaced with `{ask}`"
                feedback: "Estás seguro/a que hay algo incorrecto ?"
            -   option: "In line 1 `{print}` needs to be replaced with `{echo}`"
                feedback: "Estás seguro/a que hay algo incorrecto ?"
            -   option: "In line 3 `{echo}` needs to be replaced with `{print}`"
                feedback: "¿Estás seguro de que algo va mal?"
            -   option: "¡Nada! ¡El código está perfecto!"
                feedback: "Correcto !"
            correct_answer: "D"
            hint: "Chequea el código línea por línea"
            question_score: '10'
        8:
            question_text: "Como usas el comando `{echo}`?"
            mp_choice_options:
            -   option: "Puedes usarlo para `{ask}` una pregunta."
                feedback: "Para eso es `{ask}` !"
            -   option: "Puedes usarlo exactamente de la misma manera que `{print}`."
                feedback: "Para eso es `{print}` !"
            -   option: "Puedes utilizarlo para repetir una respuesta."
                feedback: "Buen trabajo !"
            -   option: "Puedes utilizarlo para hacer que el texto desaparezca."
                feedback: "Eso no es correcto..."
            correct_answer: "C"
            hint: "`{echo}` de usa después de un comando para `{ask}`."
            question_score: '10'
        9:
            question_text: "Que para de malo con este código ?"
            code: |-
                {print} ¡Hola!
                {print} ¿Qué tal?
                {echo} Así que estás...
            mp_choice_options:
            -   option: "`{print}` in line 1 should be `{ask}`"
                feedback: "No, `{print}` es correcto. ¿Dónde se hace la pregunta?"
            -   option: "`{print}` in line 2 should be `{ask}`"
                feedback: "¡Super!"
            -   option: "`{echo}` in line 3 should be `{ask}`"
                feedback: "No, `{echo}` es correcto. Donde se está preguntando la pregunta ?"
            -   option: "Nada. ¡El código está perfecto!"
                feedback: "Busca con más cuidado por el error..."
            correct_answer: "B"
            hint: "`{ask}` te deja preguntar una pregunta"
            question_score: '10'
        10:
            question_text: "¿Qué resultado habrá en tu pantalla de salida después de ejecutar este código?"
            code: |
                {ask} Are you ready to go to level 2?
                {echo}
                {echo}
            mp_choice_options:
            -   option: |
                    Are you ready to go to level 2?
                feedback: "There are two echo commands"
            -   option: |
                    Yes!
                    Yes!
                feedback: "Great job!"
            -   option: |
                    Yes!
                feedback: "There are two echo commands"
            -   option: |
                    Are you ready to go to level 2?
                    Yes!
                feedback: "There are two echo commands"
            correct_answer: "B"
            hint: "Let's go!"
            question_score: '10'
    2:
        1:
            question_text: "Cuál declaración es verdadera?"
            mp_choice_options:
            -   option: "Puedes usar el comando `{print}`para hacer preguntas."
                feedback: "Para eso sirve preguntar"
            -   option: "Puedes usar el comando `{ask}` para mostrar las respuestas."
                feedback: "Eso no es verdad"
            -   option: "Con el comando `{print}` puedes hacer que el texto aparezca"
                feedback: "Bueno"
            -   option: "Con el comando {sleep}, puedes eliminar texto de tu pantalla."
                feedback: "Así es como no funciona `{sleep}`."
            correct_answer: "C"
            hint: "`{print}` todavía funciona de la misma manera que en el nivel 1"
            question_score: '10'
        2:
            question_text: "¿Qué código es correcto?"
            mp_choice_options:
            -   option: |
                    ```
                    nombre {is} {ask} ¿Cómo te llamas?
                    ```
                feedback: "¡Super!"
            -   option: |
                    ```
                    {ask} {is} nombre Cómo te llamas
                    ```
                feedback: "Las palabras son correcta, la orden no esta correcta !"
            -   option: |
                    ```
                    {ask} ¿Cómo te llamas?
                    ```
                feedback: "Esto funciona en el primer nivel, pero en el nivel 2 y arriba sirve diferente."
            -   option: |
                    ```
                    {ask} ¿Cómo te llamas? {is} nombre
                    ```
                feedback: "Las palabras son correctas, ¡el orden no!"
            correct_answer: "A"
            hint: "`{ask}` no funciona como en el nivel 1."
            question_score: '10'
        3:
            question_text: "Que aparece en tu pantalla de producción cuando usas este código ?"
            code: |-
                nombre {is} Marleen
                {print} nombre va al mercado y compra una manzana
            mp_choice_options:
            -   option: "nombre va al mercado y compra una manzana."
                feedback: "La palabra nombre es reemplazada con Marleen"
            -   option: "Marleen va al mercado."
                feedback: "¡La segunda parte de la frase no se ha omitido!"
            -   option: "Marleen va al mercado y compra una manzana."
                feedback: "Right on!"
            -   option: "Marleen va al mercado y Marleen compra una manzana."
                feedback: "No se le sustituye por el nombre"
            correct_answer: "C"
            hint: "The palabra nombre es reemplazada com Marleen."
            question_score: '10'
        4:
            question_text: "¿Qué verás en la pantalla de salida cuando ejecutes este código?"
            code: |-
                nombre {is} Hedy
                {print} Hola mi nombre es nombre !
            mp_choice_options:
            -   option: "Hi my name is name"
                feedback: "El nombre de la variable se reemplaza por Hedy"
            -   option: "Hi my name is Hedy"
                feedback: "El nombre de la variable se reemplaza por Hedy"
            -   option: "Hi my Hedy is name"
                feedback: "El nombre de la variable se reemplaza por Hedy"
            -   option: "Hi my Hedy is Hedy"
                feedback: "Correcto, este error se va arreglar en el tercer nivel!"
            correct_answer: "D"
            hint: "'nombre' se está reemplazando con 'Hedy' en los dos lugares"
            question_score: '10'
        5:
            question_text: "Que pasa cuando uses el comando `{sleep}`"
            mp_choice_options:
            -   option: "Ralentiza tu ordenador"
                feedback: "Afortunadamente no !"
            -   option: "Se cierra Hedy"
                feedback: "¡afortunadamente no!"
            -   option: "Tu programa se pausa durante un segundo y después continúa"
                feedback: "Eso es correcto !"
            -   option: "Lo pones al final para que Hedy sepa que tu programa ha acabado"
                feedback: "No, sería inútil al final de tu código"
            correct_answer: "C"
            hint: "La computadora espera por un segundo en el comando de suspensión"
            question_score: '10'
        6:
            question_text: "Que deberia estar en las líneas ?"
            code: |-
                {print} Y el premio para el mejor lenguaje de programación es para...
                _
                {print} ¡Hedy!
            mp_choice_options:
            -   option: |
                    `{sleep}`
                feedback: "Perfecto !"
            -   option: |
                    `{echo}`
                feedback: "No hay nada para repetir aquí"
            -   option: |
                    `{print}`
                feedback: "No hay texto para `{print}` allí."
            -   option: |
                    `{ask}`
                feedback: "No hay ninguna pregunta para preguntar"
            correct_answer: "A"
            hint: "Pausa para un efecto dramático..."
            question_score: '10'
        7:
            question_text: "¿Qué comando se debería usar en la línea 2?"
            code: |-
                {print} ¡Explotaré en 3 segundos!
                _
                {print} ¡BOOM!
            mp_choice_options:
            -   option: |
                    ```
                    {print} 3
                    ```
                feedback: "No necesitas `{print}`"
            -   option: |
                    ```
                    {sleep} 3
                    ```
                feedback: "¡Perfecto!"
            -   option: |
                    ```
                    {sleep}
                    ```
                feedback: "De esta manera la bomba explotará en 1 segundo"
            -   option: |
                    ```
                    {sleep} {sleep} {sleep}
                    ```
                feedback: "Póntelo más fácil usando el número 3"
            correct_answer: "B"
            hint: "Quieres que el ordenador espere durante 3 segundos"
            question_score: '10'
        8:
            question_text: "¿Cómo corregirías la primera línea de código?"
            code: |-
                {ask} {is} ¿Cuántos años tienes?
                {print} edad
            mp_choice_options:
            -   option: |
                    ```
                    edad {ask} {is} ¿Cuántos años tienes?
                    ```
                feedback: "Ese es el orden incorrecto"
            -   option: |
                    ```
                    {ask} {is} edad ¿Cuántos años tienes?
                    ```
                feedback: "Ese es el orden incorrecto"
            -   option: |
                    ```
                    edad {is} {ask} ¿Cuántos años tienes?
                    ```
                feedback: "¡Lo conseguiste!"
            -   option: |
                    ```
                    edad {is} ¿Cuántos años tienes?
                    ```
                feedback: "Where is the `{ask}` command?"
            correct_answer: "C"
            hint: "El nombre de la variable debe ir primero"
            question_score: '10'
        9:
            question_text: "¿Qué está fallando en este código?"
            code: |-
                perros {is} animal
                {print} Amo los animal
            mp_choice_options:
            -   option: "La línea 1 debería decir: perros `{is}` animales"
                feedback: "El nombre de la variable es animal"
            -   option: "La línea 1 debería decir: animal `{is}` perros"
                feedback: "Great!"
            -   option: "La línea 2 debería decir: `{print}` Amo los animales"
                feedback: "El nombre de la variable es animal"
            -   option: "La línea 2 debería decir: `{sleep}` Amo los animales"
                feedback: "Dormir no se usa para `{print}` texto"
            correct_answer: "B"
            hint: "Quieres `{print}` 'Amo los perros'"
            question_score: '10'
        10:
            question_text: "¿Qué comando se debería usar en la línea 1?"
            code: |-
                sabor {is} _
                {print} Tu helado favorito es...
                {sleep}
                {print} sabor
            mp_choice_options:
            -   option: |
                    ```
                    {sleep} 3
                    ```
                feedback: "¡Quieres saber el sabor favorito!"
            -   option: |
                    ```
                    {print} fresas
                    ```
                feedback: "No quieres un comando `{print}`en mitad de una línea..."
            -   option: |
                    ```
                    fresas, chocolate, vainilla
                    ```
                feedback: "Así se hace una lista. Ahora no queremos eso."
            -   option: |
                    ```
                    {ask} ¿Qué sabor de helado te gusta?
                    ```
                feedback: "¡Eso es correcto!"
            correct_answer: "D"
            hint: "Quieres `{ask}` una pregunta"
            question_score: '10'
    3:
        1:
            question_text: "¿Qué comando(s) usas para dejar que Hedy elija algo arbitrariamente?"
            mp_choice_options:
            -   option: |
                    `{print}`
                feedback: "`{print}` se usa para imprimir texto"
            -   option: |
                    `{ask}`
                feedback: "`{ask}` se usa para hacer una pregunta"
            -   option: |
                    `{is}`
                feedback: "`{is}` se usa para hacer una lista"
            -   option: |
                    `{at}` `{random}`
                feedback: "¡Correcto!"
            correct_answer: "D"
            hint: "Arbitrariamente significa sin planificar o de manera aleatoria."
            question_score: '10'
        2:
            question_text: "¿Qué falla en este código?"
            code: |-
                animales {is} perro gato vaca
                {print} animales {at} {random}
            mp_choice_options:
            -   option: "Necesitas comas en la línea 1: perro, gato, vaca."
                feedback: "¡Buen trabajo!"
            -   option: "La línea 1 tiene que empezar con `{print}`."
                feedback: "No, no necesitas `{print}`"
            -   option: "La línea 2 tiene que decir 'animal' en vez de 'animales'"
                feedback: "animales es correcto."
            -   option: "`{at} {random}` está mal escrito"
                feedback: "`{at} {random}` está bien escrito"
            correct_answer: "A"
            hint: "Hay algo mal en la línea 1"
            question_score: '10'
        3:
            question_text: "How do you fix the mistake in line 2 of this code?"
            code: |-
                opciones {is} piedra, papel, tijeras
                {print} piedra, papel, tijeras {at} {random}
            mp_choice_options:
            -   option: |
                    ```
                    {at} {random} {print} options
                    ```
                feedback: "Ya casi está. El orden de las palabras todavía no está bien."
            -   option: |
                    ```
                    {print} piedra {at} {random}
                    ```
                feedback: "no siempre quieres que Hedy {print} piedra, a veces quieres tijeras o papel."
            -   option: |
                    ```
                    {print} options {at} {random}
                    ```
                feedback: "¡Muy bien!"
            -   option: "¡Nada, el código es correcto!"
                feedback: "Busca cuidadosamente el error"
            correct_answer: "C"
            hint: "La variable (la lista) se llama opciones."
            question_score: '10'
        4:
            question_text: "¿Qué debería cambiar en la línea 2 para mostrar un precio aleatorio?"
            code: |-
                precios {is} 1 dólar, 100 dólares, 1 millón de dólares
                {print} precio {at} {random}
            mp_choice_options:
            -   option: |
                    ```
                    {print} precio
                    ```
                feedback: "No quieres `{print}` la palabra precio, pero sí quieres `{print}` un precio de la lista `{at} {random}`"
            -   option: |
                    ```
                    {print} precios {at} {random}
                    ```
                feedback: "¡Genial! Has prestado atención."
            -   option: |
                    ```
                    {print} {at} {random} precio
                    ```
                feedback: "`{at} {random}` se pone detrás de la variable."
            -   option: "Nada, tu código está bien."
                feedback: "¡Busca cuidadosamente el error que has pasado por alto!"
            correct_answer: "B"
            hint: "El nombre de la variable es precios"
            question_score: '10'
        5:
            question_text: "¿Qué falla en este código?"
            code: |-
                pregunta {is} {ask} ¿Qué quieres saber?
                {print} pregunta
                respuestas {is} sí, no, quizás
                {print} respuestas {at} {random}
            mp_choice_options:
            -   option: "La línea 1 tiene que decir `{print}` en vez de `{ask}`"
                feedback: "No, no está mal."
            -   option: "La línea 2 tiene que decir `{ask}` en vez de `{print}`"
                feedback: "No, no está mal."
            -   option: "La línea 2 tiene que decir respuestas `{at} {random}` `{is}` sí, no, quizás"
                feedback: "No, no está mal."
            -   option: "Nada, el código está perfecto"
                feedback: "¡Eso es!"
            correct_answer: "D"
            hint: "¿Tiene algún error este código?"
            question_score: '10'
        6:
            question_text: "¿Qué falla en este código?"
            code: |-
                pregunta {is} {ask} ¿Qué quieres saber?
                respuestas sí, no, quizás
                {print} respuestas {at} {random}
            mp_choice_options:
            -   option: "La línea 2 tiene que decir pregunta en vez de respuestas"
                feedback: "No, eso no es correcto"
            -   option: "La línea 2 necesita el comando `{is}`"
                feedback: "Correcto"
            -   option: "La línea 3 tiene que decir respuesta en vez de respuestas"
                feedback: "No, la variable se llama respuestas"
            -   option: "¡Nada! ¡Este código está genial!"
                feedback: "En realidad, la línea 2 tiene un fallo."
            correct_answer: "B"
            hint: "Hay algo mal en la línea 2."
            question_score: '10'
        7:
            question_text: "¿Qué hace el comando `{add}`?"
            code: |-
                books {is} Harry Potter, The Hobbit, Green Eggs and Ham
                your_book {is} {ask} What is your favorite book?
                {add} your_book {to} books
                {print} books {at} {random}
            mp_choice_options:
            -   option: "El comando `{add}` elimina un libro al azar de la lista"
                feedback: "El comando eliminar elimina, el comando añadir añade"
            -   option: "El comando `{add}` añade un libro al azar a una lista"
                feedback: "No es así. ¡Añade tu respuesta a la lista!"
            -   option: "El comando `{add}` añade tu libro favorito a la lista"
                feedback: "¡Correcto!"
            -   option: "El comando `{add}` imprime tu libro favorito."
                feedback: "No, añade tu libro favorito a la lista"
            correct_answer: "C"
            hint: "El comando `{add}` añade un libro, ¿pero cuál?"
            question_score: '10'
        8:
            question_text: "¿Cuál es el resultado de este código?"
            code: |-
                patatas_fritas {is} sal marina, pimentón, crema agria
                {remove} sal marina {from} patatas_fritas
                {remove} pimentón {from} patatas_fritas
                {print} patatas_fritas {at} {random}
            mp_choice_options:
            -   option: "No se puede decir, porque Hedy `{print}` uno de los 3 sabores `{at} {random}`"
                feedback: "Echa un vistazo a los comandos `{remove}`"
            -   option: "sea salt"
                feedback: "la sal marina se ha eliminado de la lista"
            -   option: "pimentón"
                feedback: "Pimentón se ha eliminado de la lista"
            -   option: "crema agria"
                feedback: "¡Cierto!"
            correct_answer: "D"
            hint: "Hay 3 sabores, pero 2 se han eliminado. ¿Cuál queda?"
            question_score: '10'
        9:
            question_text: "¿Qué le pasa a este código?"
            code: |-
                colores {is} azul, morado, verde
                color_elegido {is} {ask} ¿Qué color de pelo no te gustaría tener?
                {remove} color_elegido {from} colores
                {print} Me teñiría el pelo de color {at} {random}
            mp_choice_options:
            -   option: "La línea 3 debería decir: `{remove}` azul `{from}` colores"
                feedback: "¡Tal vez quieras el pelo azul!"
            -   option: "La línea 3 debe tener un comando `{add}` en vez de un comando `{remove}`"
                feedback: "Quieres eliminar el color elegido así que `{remove}` es correcto."
            -   option: "En la línea 4 la variable se debería llamar colores en vez de color"
                feedback: "¡Gran trabajo!"
            -   option: "Nada, ¡el código es correcto!"
                feedback: "¡Encuentra el fallo!"
            correct_answer: "C"
            hint: "Mira la línea 3"
            question_score: '10'
        10:
            question_text: "¿Qué debería ser en el _?"
            code: |-
                senderistas {is} papá, mamá, Sam, Petra
                camino_ayer {is} {ask} ¿Quién paseó a los perros ayer?
                {print} camino_ayer no tendría que pasear a los perros otra vez hoy
                _?_
                {print} senderistas {at} {random} , ¡es tu turno de pasear a los perros!
            mp_choice_options:
            -   option: |
                    ```
                    {remove} caminado_ayer {from} senderistas
                    ```
                feedback: "¡Super!"
            -   option: |
                    ```
                    {remove} caminado ayer {to} senderistas
                    ```
                feedback: "`{remove} {from}` or `{add} {to}`, not `{remove} {to}`"
            -   option: |
                    ```
                    {remove} senderistas {from} ayer
                    ```
                feedback: "ayer no es una variable"
            -   option: |
                    ```
                    {add} caminado_ayer {to} senderistas
                    ```
                feedback: "Esto aumenta la probabilidad de que la persona que andó ayer tenga que hacerlo otra vez. Eso es malo."
            correct_answer: "A"
            hint: "Se debería borrar de la lista a la persona que paseó al perro ayer."
            question_score: '10'

    4:
        1:
            question_text: "¿Cuál de estos códigos es correcto?"
            mp_choice_options:
            -   option: "```\n{print} '¡Tengo muchas ganas de hacer este cuestionario!'\n```\n"
                feedback: "Eso es cierto"
            -   option: "```\n{print} ¡Tengo muchas ganas de hacer este cuestionario!\n```\n"
                feedback: "¡`{ask}` también necesita comillas!"
            -   option: "```\n{print} '¡Tengo muchas ganas de hacer este cuestionario!'\n```\n"
                feedback: "`{at} {random}` todavía funciona"
            -   option: "```\n{print} '¡Tengo muchas ganas de hacer este cuestionario!\n```\n"
                feedback: "No, pero otros 2 comandos sí."
            correct_answer: "A"
            hint: "En el nivel 4 necesitas comillas para 2 comandos."
            question_score: '10'
        2:
            question_text: "¿Qué código utiliza las comillas adecuadas?"
            mp_choice_options:
            -   option: |
                    ```
                    {print} `hello`
                    ```
                feedback: "Esta comilla está torcida, necesitas una recta."
            -   option: |
                    ```
                    {print} 'hola'
                    ```
                feedback: "Correcto"
            -   option: |
                    ```
                    {print} hola
                    ```
                feedback: "¡Aquí no hay comillas!."
            -   option: |
                    ```
                    {print} ,hola,
                    ```
                feedback: "Esto es una coma, necesitas comillas."
            correct_answer: "B"
            hint: "Elige las comillas correctas."
            question_score: '10'
        3:
            question_text: "¿Dónde se utilizan correctamente las comillas?"
            mp_choice_options:
            -   option: |
                    ```
                    {print} Hi Im Hedy
                    ```
                feedback: "¡Añade comillas, por favor!"
            -   option: |
                    ```
                    {print} 'Hi Im Hedy
                    ```
                feedback: "Debe haber una comilla tanto antes como después de las palabras que quieras imprimir."
            -   option: |
                    ```
                    '{print} Hi Im Hedy'
                    ```
                feedback: "La primera comilla estar detrás de la palabra {print}"
            -   option: |
                    ```
                    {print} 'Hi Im Hedy'
                    ```
                feedback: "¡Perfecto!"
            correct_answer: "D"
            hint: "Debe haber una comilla tanto antes como después de las palabras que quieras imprimir."
            question_score: '10'
        4:
            question_text: "¿Qué sentencia es verdadera?"
            mp_choice_options:
            -   option: "Necesitas comillas alrededor de la palabra `{print}`, tal que así: `'{print}'`."
                feedback: "Las comillas no deben ir alrededor del propio comando."
            -   option: "Necesitas comillas alrededor de las palabras que quieras imprimir."
                feedback: "¡Super!"
            -   option: "No necesitas comillas cuando uses el comando `{ask}`"
                feedback: "Tanto `{print}` como `{ask}` necesitan comillas"
            -   option: "Tú mismo puedes elegir si usar comillas o no."
                feedback: "Por desgracia, Hedy es más estricto que eso."
            correct_answer: "B"
            hint: "Desde el nivel 4 en adelante necesitas usar comillas."
            question_score: '10'
        5:
            question_text: "¿Qué hay que cambiar para que el juego funcione?"
            code: |-
                opciones {is} piedra, papel, tijeras
                {print} 'opciones {at} {random}'
            mp_choice_options:
            -   option: |
                    ```
                    '{print} options {at} {random}'
                    ```
                feedback: "Nunca pongas las comillas delante del comando {print}."
            -   option: |
                    ```
                    {print} 'options' {at} {random}
                    ```
                feedback: "opciones es una variable. Literalmente no quieres imprimir 'opciones {at} {random}'."
            -   option: |
                    ```
                    {print} options {at} {random}
                    ```
                feedback: "Eso es cierto"
            -   option: "Nada, ¡el juego ya funciona!"
                feedback: "Presta atención. Hay un error."
            correct_answer: "C"
            hint: "No quieres que Hedy imprima literalmente 'opciones {at} {random}', quieres que imprima 'piedra' o 'papel' o 'tijeras'."
            question_score: '10'
        6:
            question_text: "¿Cuál sería una buena línea siguiente en este código?"
            code: |-
                precios {is} 1 dólar, 100 dólares, 1 millón dólares
            mp_choice_options:
            -   option: |
                    ```
                    {print} 'Ganaste...' precios {at} {random}
                    ```
                feedback: "¡Genial! ¡Lo conseguiste!"
            -   option: |
                    ```
                    {print} Ganaste... 'precios {at} {random}'
                    ```
                feedback: "Hedy literalmente imprimirá 'precios {at} {random}'"
            -   option: |
                    ```
                    {print} Ganaste... precios {at} {random}
                    ```
                feedback: "¡Necesitas algunas comillas!"
            -   option: |
                    ```
                    {print} 'Ganaste... precios {at} {random}'
                    ```
                feedback: "Hedy literalmente imprimirá 'precios {at} {random}''"
            correct_answer: "A"
            hint: "Piénsalo bien: ¿Qué es una variable y debería estar fuera de las comillas?¿Y cuáles son las palabras que deberían estar dentro?"
            question_score: '10'
        7:
            question_text: "¿Qué le pasa a este código?"
            code: |-
                pregunta {is} {ask} ¿Qué quieres saber?
                respuestas {is} sí, no, quizás
                {print} respuestas {at} {random}
            mp_choice_options:
            -   option: "Faltan las comillas en la línea 1"
                feedback: "¡Correcto!"
            -   option: "Faltan las comillas en la línea 2"
                feedback: "Una variable no necesita comillas"
            -   option: "Faltan las comillas en la línea 3"
                feedback: "No quieres que Hedy literalmente imprima 'respuestas {at} {random}' ¡así que no se necesitan comillas aquí!"
            -   option: "Nada, ¡tu código está bien como está!"
                feedback: "Presta atención. Look carefully. ¡Te has saltado un error!"
            correct_answer: "A"
            hint: "Comprueba en cada línea sí necesitan comillas o no."
            question_score: '10'
        8:
            question_text: "¿Qué sería una buena siguiente línea para este código?"
            code: |-
                {print} '¡Bienvenido al espectáculo del dinero!'
                {print} 'Delante tuya hay 3 puertas'
                puerta {is} {ask} '¿Qué puerta eliges?'
            mp_choice_options:
            -   option: |
                    ```
                    {print} Así que eliges la puerta puerta
                    ```
                feedback: "Necesitamos comillas"
            -   option: |
                    ```
                    {print} 'Así que eliges la ' puerta puerta
                    ```
                feedback: "Si el jugador elige puerta 3, Hedy dirá 'Así que eliges 3 3"
            -   option: |
                    ```
                    {print} 'Así que eliges la puerta ' puerta
                    ```
                feedback: "¡Super!"
            -   option: |
                    ```
                    {print} 'Así que eliges la puerta puerta'
                    ```
                feedback: "Hedy literalmente imprimirá 'Así que eliges la puerta puerta"
            correct_answer: "C"
            hint: "La segunda palabra puerta se debe reemplazar con el número, la primera aun debe seguir siendo la palabra puerta..."
            question_score: '10'
        9:
            question_text: "¿Qué no aparecerá nunca en tu pantalla de salida?"
            code: |-
                clubs {is} Real Madrid, Bayern Munich, Manchester United, Ajax
                {print} clubs {at} {random} ' va a ganar la Liga de Campeones'
            mp_choice_options:
            -   option: "Ajax va a ganar la Liga de Campeones"
                feedback: "Hedy puede `{print}` eso"
            -   option: "Real Madrid va a ganar la Liga de Campeones"
                feedback: "Hedy puede `{print}` eso"
            -   option: "Bayer Munich va a ganar la Liga de Campeones"
                feedback: "Hedy puede `{print}` eso"
            -   option: "FC Barcelona va a ganar la Liga de Campeones"
                feedback: "Cierto. No está en la lista"
            correct_answer: "D"
            hint: "¿Cuáles son las opciones de Hedy para elegir al azar?"
            question_score: '10'
        10:
            question_text: "¿Qué sentencia es verdadera?"
            code: |-
                gente {is} mamá, papá, Emma, Sofía
                {print} La vajilla será lavada por...
                {print} gente {at} {random}
            mp_choice_options:
            -   option: "Faltan las comillas en la línea 1"
                feedback: "Una lista no necesita comillas"
            -   option: "Faltan las comillas en la línea 2"
                feedback: "Correcto"
            -   option: "Faltan las comillas en ambas líneas 2 y 3"
                feedback: "La línea 3 no necesita comillas porque literalmente no se imprime"
            -   option: "Nada, este código no tiene fallos"
                feedback: "¡Te dejaste una!"
            correct_answer: "B"
            hint: "Una línea necesita comillas, porque quieres que se imprima literalmente."
            question_score: '10'
    5:
        1:
            question_text: "¿Qué comando debe rellenarse en el _?"
            mp_choice_options:
            -   option: "`{print}`\n"
                feedback: "`{print}` is still the same"
            -   option: "`{if}`\n"
                feedback: "`{ask}` is still the same"
            -   option: "`{sleep}`\n"
                feedback: "`No these commands remain the same"
            -   option: "`{else}`\n"
                feedback: "Correct!"
            correct_answer: "D"
            hint: "We have only learned a new command in level 5."
            question_score: '10'
            code: "numero {is} {ask} '¿Cuál es tu número de la suerte?'\n{if} numero {is} 5 {print} '¡También el mío!'\n_?_ {print} '¡Mi número de la suerte es 5!'"
        2:
            question_text: "¿Qué aparece en tu pantalla de salida cuando escribes Hedy en el nombre?"
            code: |-
                nombre {is} {ask} '¿Cómo te llamas?'
                {if} nombre {is} Hedy {print} 'divertido' {else} {print} 'menos divertido'
            mp_choice_options:
            -   option: "divertido"
                feedback: "¡Eso es cierto!"
            -   option: "menos divertido"
                feedback: "Si el nombre es Hedy, dirá 'menos divertido''"
            -   option: "Hedy"
                feedback: "No, no imprime el nombre"
            -   option: "Error"
                feedback: "¡Afortunadamente no!"
            correct_answer: "A"
            hint: "`{if}` name `{is}` Hedy `{print}` ...?"
            question_score: '10'
        3:
            question_text: "¿Cuál es la contraseña correcta?"
            code: |-
                contraseña {is} {ask} '¿Cuál es la contraseña?'
                {if} contraseña {is} SECRETA {print} '¡Correcto!'
                {else} {print} '¡ALERTA! ¡INTRUSO!'
            mp_choice_options:
            -   option: "¡Correcto!"
                feedback: "Esto se imprime cuando escribes la contraseña correcta"
            -   option: "SECRET"
                feedback: "¡Eso es cierto!'"
            -   option: "password"
                feedback: "La contraseña no es contraseña..."
            -   option: "ALARM INTRUDER"
                feedback: "¡Esto se imprime cuando escribes la contraseña incorrecta!"
            correct_answer: "B"
            hint: "`{if}` contraseña `{is}` ... `{print}` '¡Correcto!'!'"
            question_score: '10'
        4:
            question_text: "¿Qué imprimirá Hedy cuando escribas la contraseña incorrecta?"
            code: |-
                contraseña {is} {ask} '¿Cuál es la contraseña?'
                {if} contraseña {is} SECRETA {print} '¡Correcto!'
                {else} {print} '¡ALERTA! ¡INTRUSO!'
            mp_choice_options:
            -   option: "Correcto"
                feedback: "Eso se imprime si se da la respuesta correcta, no la incorrecta..."
            -   option: "SECRET"
                feedback: "Esa no es la respuesta correcta"
            -   option: "¡Incorrecto!"
                feedback: "No, esto no es lo que Hedy imprimirá"
            -   option: "ALARM! INTRUDER!"
                feedback: "¡Gran trabajo!"
            correct_answer: "D"
            hint: "¡Tu ordenador dará la alarma a los intrusos!"
            question_score: '10'
        5:
            question_text: "¿Por qué Hedy dirá '¡ALERTA! INTRUSO' cuando escribas 'secreta'?"
            code: |-
                contraseña {is} {ask} '¿Cuál es la contraseña?'
                {if} contraseña {is} SECRETA {print} '¡Correcto!'
                {else} {print} '¡ALERTA! ¡INTRUSO!'
            mp_choice_options:
            -   option: "Poruqe tiene que ser en mayúsculas, así SECRETA"
                feedback: "¡Cierto!"
            -   option: "Porque la contraseña es alarma"
                feedback: "No, esta no es la contraseña."
            -   option: "Porque está mal escrito."
                feedback: "Así no se escribe secreta"
            -   option: "Porque Because Hedy cometió un fallo"
                feedback: "No, Hedy is right"
            correct_answer: "A"
            hint: "La ortografía de la palabra tiene que ser exactamente la misma."
            question_score: '10'
        6:
            question_text: "¿Qué palabra debe ir en el lugar del signo de interrogación en la última línea?"
            code: |-
                {print} 'Im Hedy the football fortune teller!'
                {print} 'I will predict what place your team will end up!'
                club is {ask} 'Which club is your favorite?'
                {if} club {is} ajax {print} 'Ajax is going to win of course!'
                _?_ {print} 'Sorry, your club is gonna be in last place...'
            mp_choice_options:
            -   option: |
                    ```
                    {if}
                    ```
                feedback: "`{if}` ya está en la línea anterior"
            -   option: |
                    ```
                    {at} {random}
                    ```
                feedback: "No, necesitas `{else}`."
            -   option: |
                    ```
                    {else}
                    ```
                feedback: "Great!"
            -   option: |
                    ```
                    {print}
                    ```
                feedback: "`{print}` ya está ahí, ¡necesitas una palabra antes de eso!"
            correct_answer: "C"
            hint: "`{if}` va junto con...?"
            question_score: '10'
        7:
            question_text: "¿Qué palabra debe ir en el lugar del signo de interrogación?"
            code: |-
                {print} 'I can predict if you will be a millionair or not!'
                name {is} {ask} 'Whats your name?'
                {if} name {is} Hedy {print} 'You will be a millionair!'
                {else} _?_ 'Unfortunately... No big money for you.'
            mp_choice_options:
            -   option: |
                    `{if}`
                feedback: "`{if}` está en la línea anterior."
            -   option: |
                    `{at}` `{random}`
                feedback: "No, no necesitas `{at} {random}`."
            -   option: |
                    `{else}`
                feedback: "Ya hay un comando `{else}`"
            -   option: |
                    `{print}`
                feedback: "¡Increible!"
            correct_answer: "D"
            hint: "Tras `{else}` le sigue un comando `{print}`"
            question_score: '10'
        8:
            question_text: "¿Qué palabra debe ir en el lugar del signo de interrogación?"
            code: |-
                animal {is} {ask} 'What is your favorite animal?'
                {if} _?_ {is} penguin {print} 'Thats my favorite animal too!'
                {else} {print} 'Cool! I like penguins.'
            mp_choice_options:
            -   option: |
                    ```
                    animal favorito
                    ```
                feedback: "Ese no es el nombre de la variable."
            -   option: |
                    ```
                    animal
                    ```
                feedback: "¡Gran trabajo!"
            -   option: |
                    `{if}`
                feedback: "`{if}` ya está ahí"
            -   option: |
                    `{print}`
                feedback: "No, no es eso."
            correct_answer: "B"
            hint: "¿Cuál es el nombre de la variable?"
            question_score: '10'
        9:
            question_text: "¿Qué puerta debes elegir para escapar?"
            code: |-
                {print} 'Escape from the haunted house!'
                {print} 'There are 3 doors in front of you'
                door {is} {ask} 'Which door do you choose?'
                monsters {is} vampire, werewolf, giant spider
                {if} door {is} 2 {print} 'Yay, you can escape!'
                {else} {print} 'You are being devoured by a... ' monsters {at} {random}
            mp_choice_options:
            -   option: "1"
                feedback: "¡Mala elección! Se te han comido"
            -   option: "2"
                feedback: "¡Super! Escapaste!"
            -   option: "3"
                feedback: "¡Mala elección! Se te han comido."
            -   option: "Es una trampa, ¡siempre se te comerán!"
                feedback: "¡Afortunadamente no!"
            correct_answer: "B"
            hint: "Una de las puertas te mantendrá a salvo.."
            question_score: '10'
        10:
            question_text: "¿Qué monstruo se encuentra detrás de la puerta 1?"
            code: |-
                {print} 'Escape from the haunted house!'
                {print} 'There are 3 doors in front of you'
                door {is} {ask} 'Which door do you choose?'
                monsters {is} vampire, werewolf, giant spider
                {if} door {is} 2 {print} 'Yay, you can escape!'
                {else} {print} 'You are being devoured by a... ' monsters {at} {random}
            mp_choice_options:
            -   option: "Hedy elige un monstruo aleatorio cada vez."
                feedback: "¡Increible!"
            -   option: "vampiro"
                feedback: "No siempre..."
            -   option: "hombre lobo"
                feedback: "No siempre..."
            -   option: "araña gigante"
                feedback: "No siempre..."
            correct_answer: "A"
            hint: "Cuidado con las 3 últimas palabras... monstruos `{at} {random}`..."
            question_score: '10'
    6:
        1:
            question_text: "¿Cuál es el resultado de Hedy cuando ejecutes este código?"
            code: "{print} 2*10"
            mp_choice_options:
            -   option: "20"
                feedback: "¡Correcto!"
            -   option: "12"
                feedback: "No, el signo más se usa en sumas"
            -   option: "2*10"
                feedback: "No, Hedy calculará la respuesta"
            -   option: "210"
                feedback: "Cuidado, es un cálculo."
            correct_answer: "A"
            hint: "El `*` se usa como signo de multiplicación"
            question_score: '10'
        2:
            question_text: "¿Qué signo usas para una suma?"
            mp_choice_options:
            -   option: "`-`"
                feedback: "Ese no"
            -   option: "plus"
                feedback: "Ese no"
            -   option: "`*`"
                feedback: "Ese no"
            -   option: "`+`"
                feedback: "¡Correcto!"
            correct_answer: "D"
            hint: "It's the plus sign."
            question_score: '10'
        3:
            question_text: "¿Cuál es el resultado de Hedy cuando ejecutes este código?"
            code: "{print} '3*10'"
            mp_choice_options:
            -   option: "30"
                feedback: "This would be the right answer if there were no quotation marks."
            -   option: "13"
                feedback: "Inténtalo de nuevo.."
            -   option: "3*10"
                feedback: "¡Correcto! Hay comillas, así que Hedy las mostrará literalmente."
            -   option: "Nada, Hedy mostrará un mensaje de error."
                feedback: "No, Hedy lo imprimirá literalmente."
            correct_answer: "C"
            hint: "¡¡Cuidado con las comillas!!"
            question_score: '10'
        4:
            question_text: "Kim tiene 10 años. ¿Qué imprimirá Hedy para ella?"
            code: |-
                nombre = {ask} '¿Cuántas letras tiene tu nombre?'
                edad = {ask} '¿Qué edad tienes?'
                numero_suerte = nombre*edad
                {print} 'Tu número de la suerte es...' numero_suerte
            mp_choice_options:
            -   option: "30"
                feedback: "Recuerda, Hedy también imprimirá 'Tu número de la suerte es...'"
            -   option: "10"
                feedback: "Por favor inténtalo de nuevo."
            -   option: "Tu número de la suerte es... 30"
                feedback: "¡Eso es!"
            -   option: "Tu número de la suerte es... 10"
                feedback: "Su número de la suerte es el nombre multiplicado por la edad..."
            correct_answer: "C"
            hint: "Kim has 3 letters, she is 10 years old so: letters times age = 3*10 = 30."
            question_score: '10'
        5:
            question_text: "If 5 people eat at this restaurant, how much do they have to pay in total?"
            code: |-
                {print} 'Welcome to Hedys!'
                people = {ask} 'How many people are eating with us tonight?'
                price = people * 10
                {print} 'That will be ' price 'dollar please'
            mp_choice_options:
            -   option: "5 dólares"
                feedback: "Unfortunately, it's not that cheap."
            -   option: "10 dólares"
                feedback: "No, it's 10 dollars each."
            -   option: "15 dólares"
                feedback: "The * means multiplication."
            -   option: "50 dólares"
                feedback: "Great!"
            correct_answer: "D"
            hint: "`price` `is` `people` `times` 10"
            question_score: '10'
        6:
            question_text: "How much does a hamburger cost is this virtual restaurant?"
            code: |-
                {print} 'Welcome at Hedys diner'
                food = {ask} 'What would you like to eat?'
                price = 0
                {if} food {is} hamburger price = 15
                {if} food {is} fries price = 6
            mp_choice_options:
            -   option: "15 dólares"
                feedback: "¡Super!"
            -   option: "6 dólares"
                feedback: "The fries are 6 dollars"
            -   option: "0 dólares"
                feedback: "The hamburger isn't free!"
            -   option: "21 dólares"
                feedback: "That's the price for a hamburger and fries!"
            correct_answer: "A"
            hint: "Mind the fourth line."
            question_score: '10'
        7:
            question_text: "Why does line 7 say 'price is price + 3' instead of 'price is 3'?"
            code: |-
                {print} 'Welcome at Hedys diner'
                food = {ask} 'What would you like to eat?'
                price = 0
                {if} food {is} hamburger price = price + 15
                {if} food {is} fries price = price + 6
                drinks is {ask} 'What would you like to drink?'
                {if} drinks {is} coke price = price + 3
                {if} drinks {is} water price = price + 1
                {print} price ' dollars please'
            mp_choice_options:
            -   option: "It could have been `price = 3` just as well."
                feedback: "No, that's not true. Hedy needs to add 3 dollars to the total."
            -   option: "Because Hedy doesn't understand `price = 3`."
                feedback: "Hedy would understand, but it wouldn't be right."
            -   option: "Because Hedy would otherwise forget about the previous order. The price would be 3 dollars in total."
                feedback: "¡Eso es!"
            -   option: "Because the price is 0 dollars to begin with."
                feedback: "Eso es verdad, pero no es la razón"
            correct_answer: "C"
            hint: "The price shouldn't be 3, but 3 dollars more than it already was"
            question_score: '10'
        8:
            question_text: "Why is this code incorrect?"
            code: |-
                correct answer = 3*12
                answer = {ask} 'What is 3 times 12?'
                {if} answer {is} correct answer {print} 'Good job!'
                {else} {print} 'No... It was ' correct answer
            mp_choice_options:
            -   option: "No debería haber comillas en la línea 2"
                feedback: "¡No, debería haber!"
            -   option: "The variable is called correct answer, but a variable's name can only be 1 word. So it should be correct_answer"
                feedback: "¡Correcto!"
            -   option: "The `{if}` and `{else}` commands should be in the same line."
                feedback: "No, that's not true."
            -   option: "The variable in line 2 can't be called answer, because it is too similar to the variable correct answer."
                feedback: "Variable names can be similar, but they can't be 2 words..."
            correct_answer: "B"
            hint: "Inspect what the variables are called."
            question_score: '10'
        9:
            question_text: "Imagine you love football a 10, you've eaten 2 bananas and have washed your hands 3 times today. How smart does the silly fortune teller think you are?"
            code: |-
                {print} 'Im Hedy the silly fortune teller'
                {print} 'I will predict how smart you are!'
                football = {ask} 'On a scale of 0 to 10 how much do you love football?'
                bananas = {ask} 'How many bananas have you eaten this week?'
                hygiene = {ask} 'How many times did you wash your hands today??'
                result = bananas + hygiene
                result = result * football
                {print} 'You are ' result 'percent smart.'
            mp_choice_options:
            -   option: "10%"
                feedback: "(2 bananas + 3 hygiene) * 10 football = 5*10 =?"
            -   option: "32%"
                feedback: "(2 bananas + 3 hygiene) * 10 football = 5*10 =?"
            -   option: "50%"
                feedback: "Super! You are 100 percent smart!"
            -   option: "100%"
                feedback: "(2 bananas + 3 hygiene) * 10 football = 5*10 =?"
            correct_answer: "C"
            hint: "(2 bananas + 3 hygiene) * 10 football = 5*10 =?"
            question_score: '10'
        10:
            question_text: "Which statement is true?"
            code: |-
                name _?_ Hedy
                {print} name 'is walking trough the forrest'
            mp_choice_options:
            -   option: "You can only fill in the word is on the `_?_`"
                feedback: "You are allowed to use the `=` sign as well"
            -   option: "You can fill in either the word is or the `=` sign on the `_?_`"
                feedback: "Amazing!"
            -   option: "You have to fill in =is= on the `_?_`"
                feedback: "No, one `=` sign is enough"
            -   option: "You can only use the `=` sign when working with numbers, not with words."
                feedback: "You can also use `=` with words."
            correct_answer: "B"
            hint: "`{is}` and `=` are both allowed"
            question_score: '10'
    7:
        1:
            question_text: "How many lines can you repeat at once with the repeat command at this level?"
            mp_choice_options:
            -   option: "0"
                feedback: "No you can repeat a line."
            -   option: "1"
                feedback: "Correct, one line at a time"
            -   option: "2"
                feedback: "In this level only one line at a time"
            -   option: "infinite"
                feedback: "In this level you can only repeat one line at a time"
            correct_answer: "B"
            hint: "You can only repeat 1 line at a time"
            question_score: '10'
        2:
            question_text: "Which code is right?"
            mp_choice_options:
            -   option: |
                    ```
                    {print} 100 {times} 'hello'
                    ```
                feedback: "`{repeat}` 100 `{times}` `{print}` 'hello'"
            -   option: |
                    ```
                    {print} {repeat} 100 {times} 'hello'
                    ```
                feedback: "{repeat} 100 {times} {print} 'hello'"
            -   option: |
                    ```
                    {repeat} 'hello' 100 {times}
                    ```
                feedback: "{repeat} 100 {times} {print} 'hello'"
            -   option: |
                    ```
                    {repeat} 100 {times} {print} 'hello'
                    ```
                feedback: "¡Eso es!"
            correct_answer: "D"
            hint: "First the repeat command, then the `{print}` command"
            question_score: '10'
        3:
            question_text: "Is this code right or wrong?"
            code: "{repeat} 100 {times} 'Hello!'"
            mp_choice_options:
            -   option: "Right"
                feedback: "No, falta una palabra"
            -   option: "Wrong, the word `{repeat}` is missing"
                feedback: "The word `{repeat}` is there, another word is missing"
            -   option: "Wrong, the word `{times}` is missing"
                feedback: "The word `{times}` is there, another word is missing."
            -   option: "Wrong, the word `{print}` is missing"
                feedback: "Correcto"
            correct_answer: "D"
            hint: "It should be: `{repeat}` 100 `{times}` `{print}` 'Hello'"
            question_score: '10'
        4:
            question_text: "Which word is wrong in the code?"
            code: |-
                {print} 'I'm blue'
                {repeat} 7 {times} {print} 'da ba dee, da ba da'
            mp_choice_options:
            -   option: |
                    ```
                    I'm
                    ```
                feedback: "¡Eso es!"
            -   option: |
                    `{print}`
                feedback: "`{print}` is spelled correctly"
            -   option: |
                    `{repeat}`
                feedback: "`{repeat}` is spelled correctly"
            -   option: |
                    `{times}`
                feedback: "`{times}` is spelled correctly"
            correct_answer: "A"
            hint: "I'm is wrong, you can't use apostrophes"
            question_score: '10'
        5:
            question_text: "Is this code right or wrong?"
            code: |-
                {repeat} 100 {times} {print} 'Hedy is awesome!'
            mp_choice_options:
            -   option: "Correcto"
                feedback: "¡Eso es!"
            -   option: "Incorrecto"
                feedback: "That's not it"
            correct_answer: "A"
            hint: "¡El código es correcto!"
            question_score: '10'
        6:
            question_text: "What will be the output from this code?"
            code: |-
                {print} 'The wheels on the bus go'
                {repeat} 3 {times} {print} ' round and round'
            mp_choice_options:
            -   option: "the wheels on the bus go\nround and round"
                feedback: "Only the second line is repeated 3 times"
            -   option: "the wheels on the bus go\nthe wheels on the bus go\nthe wheels on the bus go\nround and round"
                feedback: "Only the second line is repeated 3 times"
            -   option: "the wheels on the bus go\nround and round\nthe wheels on the bus go\nround and round\nthe wheels on the bus go\nround and round"
                feedback: "Only the second line is repeated 3 times"
            -   option: "the wheels on the bus go\nround and round\nround and round\nround and round"
                feedback: "All though the town! Perfect!"
            correct_answer: "D"
            hint: "Only 'round and round' is repeated 3 times."
            question_score: '10'
        7:
            question_text: "What will be the output from this code?"
            code: |-
                {repeat} 2 {times} {print} 'We will'
                {print} 'ROCK YOU!'
            mp_choice_options:
            -   option: "We will We will\nROCK YOU!"
                feedback: "'We will' won't appear twice in the same line"
            -   option: "We will\nWe will\nROCK YOU!"
                feedback: "Great!"
            -   option: "We will\nROCK YOU!\nWe will\nROCK YOU!"
                feedback: "ROCK YOU! won't be repeated"
            -   option: "We will\nROCK YOU!"
                feedback: "Mind the repeat command"
            correct_answer: "B"
            hint: "Mind the `{repeat}` command."
            question_score: '10'
        8:
            question_text: "Welke Hedy code hoort bij dit resultaat"
            code: "Here comes the sun\nDo do do do\nHere comes the sun\nAnd I say\nIts alright"
            mp_choice_options:
            -   option: |
                    ```
                    {print} 'Here comes the sun'
                    {print} 'Do do do do'
                    {print} 'Here comes the sun'
                    {print} 'And I say'
                    {print} 'Its alright'
                    ```
                feedback: "Perfect, je kan het `{repeat}` commando hier niet gebruiken."
            -   option: |
                    ```
                    {repeat} 2 {times} {print} 'Here comes the sun'
                    {print} 'And I say'
                    {print} 'Its alright'"
                feedback: "Waar is de 'Do do do do' gebleven?"
            -   option: |
                    ```
                    {repeat} 2 {times} {print} 'Here comes the sun'
                    {print} 'Do do do do'
                    {print} 'And I say'
                    {print} 'Its alright'
                    ```
                feedback: "Dit is niet de juiste volgorde.."
            -   option: |
                    ```
                    {repeat} 2 {times} {print} 'Here comes the sun'
                    {repeat} 2 {times} {print} 'Do do'
                    {print} 'And I say'
                    {print} 'Its alright'"
                    ```
                feedback: "Dit is niet de juiste volgorde.."
            hint: "`{repeat}` kan alleen worden gebruikt als je dezelfde regel meerdere keren achter elkaar wil uitvoeren."
            correct_answer: "A"
            question_score: '10'
        9:
            question_text: "Welke Hedy code hoort bij dit resultaat ?"
            code: |-
                Batman was flying through Gotham.
                When suddenly he heard someone screaming...
                Help !
                Help !
                Help !
                Please help me !"
            mp_choice_options:
            -   option: |
                    ```
                    {print} 'Batman was flying through Gotham. '
                    {print} 'When suddenly he heard someone screaming...'
                    {print} 'Help !'
                    {repeat} 3 {times} {print} 'Please help me !'
                    ```
                feedback: "Je herhaalt de verkeerde regel"
            -   option: |
                    ```
                    {print} 'Batman was flying through Gotham.'
                    {print} 'When suddenly he heard someone screaming...'
                    {repeat} 3 {times} 'Help !'
                    {print} 'Please help me !'
                    ```
                feedback: "Het commando `{print}` mist op regel 3"
            -   option: |
                    ```
                    {print} Batman was flying through Gotham.
                    {print} When suddenly he heard someone screaming...
                    {repeat} 3 {times} {print} Help !
                    {print} Please help me !
                    ```
                feedback: "Je vergeet de aanhalingstekens"
            -   option: |
                    ```
                    {print} 'Batman was flying through Gotham.'
                    {print} 'When suddenly he heard someone screaming...'
                    {repeat} 3 {times} {print} 'Help !'
                    {print} 'Please help me !'
                    ```
                feedback: "Perfect"
            question_score: '10'
            hint: "'Help !' wordt 3x herhaald."
            correct_answer: "D"
        10:
            question_text: "What Hedy code belongs to this output?"
            code: |-
                if youre happy and you know it clap your hands
                if youre happy and you know it clap your hands
                if youre happy and you know it and you really want to show it
                if youre happy and you know it clap your hands
            mp_choice_options:
            -   option: |
                    ```
                    {repeat} 2 {times} 'if youre happy and you know it clap your hands'
                    {print} 'if youre happy and you know it and you really want to show it'
                    {print} 'if youre happy and you know it clap your hands'
                    ```
                feedback: "Almost! the first line needs an extra word"
            -   option: |
                    ```
                    {repeat} 2 {times} {print} 'if youre happy and you know it clap your hands'
                    {print} 'if youre happy and you know it and you really want to show it'
                    {print} 'if youre happy and you know it clap your hands'
                    ```
                feedback: "Great!"
            -   option: |
                    ```
                    {repeat} 3 {times} {print} 'if youre happy and you know it clap your hands'
                    {print} 'if youre happy and you know it and you really want to show it'
                    ```
                feedback: "This is not in the right order."
            -   option: |
                    ```
                    {repeat} 4 {times} 'if youre happy and you know it'
                    {repeat} 2 times 'clap your hands'
                    {print} 'and you really want to show it'
                    {print} 'clap your hands'
                    ```
                feedback: "This is not in the right order."
            correct_answer: "B"
            hint: "Mind the order of the sentences."
            question_score: '10'
    8:
        1:
            question_text: "Which output will be produced by this code?"
            code: |-
                {repeat} 2 {times}
                    {print} 'Hello'
                    {print} 'Im Hedy!'
            mp_choice_options:
            -   option: "Hello\nIm Hedy!"
                feedback: "Everything is printed twice."
            -   option: "Hello\nHello\nIm Hedy"
                feedback: "The second line is repeated twice as well."
            -   option: "Hello\nIm Hedy!\nHello\nIm Hedy!"
                feedback: "¡Super!"
            -   option: "Hello\nHello\nIm Hedy!\nIm Hedy!"
                feedback: "Everything is printed twice"
            correct_answer: "C"
            hint: "Both lines are repeated twice."
            question_score: '10'
        2:
            question_text: "¿Qué le pasa a este código?"
            code: |-
                {repeat} 5 {times}
                {print} 'Hedy is cool!'
            mp_choice_options:
            -   option: "This should be only one line, not 2."
                feedback: "No it should be 2 lines."
            -   option: "This `{print}` command has to go"
                feedback: "No, you need it."
            -   option: "There is a spelling mistake in the `{repeat}` command."
                feedback: "Nee, repeat is de goede spelling"
            -   option: "The second line need to start with 4 spaces as indentation."
                feedback: "¡Correcto!"
            correct_answer: "D"
            hint: "Something is missing in the second line?"
            question_score: '10'
        3:
            question_text: "What output will be produced when you run this program?"
            code: |-
                {repeat} 3 {times}
                    {print} 'Baby shark tututudutudu'
                {print} 'Baby shark'
            mp_choice_options:
            -   option: "Baby shark tututudutudu\nBaby shark"
                feedback: "¡Cuidado con el comando `{repeat}`!"
            -   option: "Baby shark tututudutudu\nBaby shark\nBaby shark tututudutudu\nBaby shark\nBaby shark tututudutudu\nBaby shark"
                feedback: "The last line has no indentation, so it's not repeated."
            -   option: "Baby shark tututudutudu\nBaby shark tututudutudu\nBaby shark tututudutudu\nBaby shark"
                feedback: "¡Muy bien!"
            -   option: "Baby shark tututudutudu\nBaby shark\nBaby shark\nBaby shark"
                feedback: "What is being repeated and what isn't."
            correct_answer: "C"
            hint: "What is being repeated and what is not?."
            question_score: '10'
        4:
            question_text: "Which output is correct?"
            code: |-
                {print} 'The children went:'
                {repeat} 2 {times}
                    {print} 'Yay!'
                    {print} 'Were going on holiday!'
            mp_choice_options:
            -   option: "The children went:\nYay!\nWere going on holiday!"
                feedback: "Mind the `{repeat}` command !"
            -   option: "The children went:\nYay!\nWere going on holiday!\nYay!\nWere going on holiday!"
                feedback: "¡Correcto!"
            -   option: "The children went:\nYay!\nYay!\nWere going on holiday!\nWere going on holiday!"
                feedback: "This order is incorrect."
            -   option: "The children went:\nYay!\nYay!\nWere going on holiday!"
                feedback: "The last line is repeated too."
            correct_answer: "B"
            hint: "The block under the `{repeat}` command is repeated twice."
            question_score: '10'
        5:
            question_text: "¿Qué le pasa a este código?"
            code: |-
                end = {ask} 'Do you want a happy or a sad ending?'
                {if} end {is} happy {print} 'They lived happily ever after'
                {else} {print} 'The world exploded. The end.'
            mp_choice_options:
            -   option: "The `{print}` commands on the last two lines should start on new lines en start with 4 spaces."
                feedback: "¡Eso es!"
            -   option: "`{else}` is not a command!"
                feedback: "It is!"
            -   option: "Lines that start with `{if}` should start with 4 spaces"
                feedback: "That's not true"
            -   option: "`{ask}` is no longer a command"
                feedback: "That's not true"
            correct_answer: "A"
            hint: "Something is wrong with indentation"
            question_score: '10'
        6:
            question_text: "What will be the output of this code when we enter pancakes?"
            code: |-
                {print} 'Welcome to restaurant Hedy'
                {repeat} 2 {times}
                    food {is} {ask} 'What do you want to eat?'
                    {print} food
            mp_choice_options:
            -   option: |
                    Welcome to restaurant Hedy
                    Pancakes
                feedback: "There is no repetition in this answer."
            -   option: |
                    Welcome to restaurant Hedy
                    Welcome to restaurant Hedy
                    Pancakes
                    Pancakes
                feedback: "This answer also repeats the welcome message"
            -   option: |
                    Welcome to restaurant Hedy
                    What do you want to eat?
                    What do you want to eat?
                    Pancakes
                    Pancakes
                feedback: "Almost! But look at the question, it is not repeated."
            -   option: |
                    Welcome to restaurant Hedy
                    Pancakes
                    Pancakes
                feedback: "Well done!"
            correct_answer: "D"
            hint: "The first sentence and question will not be repeated"
            question_score: '10'
        7:
            question_text: "¿Qué le pasa a este código?"
            code: |-
                eten = {ask} 'What would you like to eat?'
                {if} food {is} fries
                sauce = {ask} 'What sauce would you like?'
                    {print} 'One fries with ' sauce
                {if} food {is} pizza
                    topping = {ask} 'What topping would you like?'
                    {print} 'One pizza with ' topping
                {print} 'That you for your order'
            mp_choice_options:
            -   option: "Nothing this code is correct!"
                feedback: "Something is wrong!."
            -   option: "You're not allowed to use an `{if}` command after an `{ask}` command."
                feedback: "You are!."
            -   option: "You don't have to use indentation twice. Only in the first `{if}` command."
                feedback: "You always have to use indentation."
            -   option: "The indentation is wrong in the first `{if}` command."
                feedback: "Eso es."
            correct_answer: "D"
            hint: "Take a careful look at the indentation."
            question_score: '10'
        8:
            question_text: "In which of the codes is the indentation done right?"
            mp_choice_options:
            -   option: |
                    ```
                    {if} answer is right
                       {print} You are...
                          sleep
                              {print} right!
                          {else}
                              {print} You are wrong!
                    ```
                feedback: "You are wrong!"
            -   option: |
                    ```
                    {if} answer is right
                    {print} You are...
                    sleep
                    {print} right!
                    {else}
                    {print} You are wrong!
                    ```
                feedback: "You are wrong!"
            -   option: |
                    ```
                    {if} answer is right
                        {print} You are...
                        sleep
                        {print} right!
                    {else}
                        {print} You are wrong!
                    ```
                feedback: "You are... right!"
            -   option: |
                    ```
                    {if} answer is right
                        {print} You are...
                        sleep
                    {print} right!
                    {else}
                        {print} You are wrong!
                    ```
                feedback: "You are wrong!"
            correct_answer: "C"
            hint: "What should happen if the person is right? And what else?"
            question_score: '10'
        9:
            question_text: "What line(s) in this code should start with 4 spaces?"
            code: |-
                1 music = {ask} 'What is your favorite music genre?'
                2 {if} music is rock
                3 {print} '🤘'
                4 {else}
                5 {print} '👎'
            mp_choice_options:
            -   option: "Line 2 and 4"
                feedback: "The lines after the `{if}` and `{else}` command should start with 4 spaces"
            -   option: "Only line 3"
                feedback: "Not only 3..."
            -   option: "Line 3, 4 and 5"
                feedback: "Line 4 shouldn't"
            -   option: "Line 3 and 5"
                feedback: "¡Gran trabajo!"
            correct_answer: "D"
            hint: "The lines after an `{if}` or `{else}` command should start with 4 spaces."
            question_score: '10'
        10:
            question_text: "Which statement is true?"
            code: |-
                1 level = {ask} 'What level are you on?"
                2 {if} level {is} 8
                3 {print} Great job!
            mp_choice_options:
            -   option: "All lines should start with 4 spaces"
                feedback: "That's not true"
            -   option: "Line 2 and 3 should start with 4 spaces"
                feedback: "That's not true"
            -   option: "Line 2 should start with 4 spaces"
                feedback: "That's not true"
            -   option: "Line 3 should start with 4 spaces"
                feedback: "You are correct!"
            correct_answer: "D"
            hint: "Only one line starts with 4 spaces, but which one...?"
            question_score: '10'
    9:
        1:
            question_text: "¿Qué le pasa a este código?"
            code: |-
                {repeat} 3 {times}
                   eten = {ask} 'What would you like to eat?'
                   {if} food {is} fries
                       sauce = {ask} 'What sauce would you like?'
                       {print} 'One fries with ' sauce
                   {if} food {is} pizza
                       topping = {ask} 'What topping would you like?'
                       {print} 'One pizza with ' topping
                {print} 'That you for your order'
            mp_choice_options:
            -   option: "Nothing this code is correct!"
                feedback: "¡Eso es!"
            -   option: "You're not allowed to use an `{if}` command after an `{ask}` command."
                feedback: "You are!."
            -   option: "You don't have to use indentation twice."
                feedback: "You always have to use indentation."
            -   option: "The indentation is wrong in the last `{if}` command."
                feedback: "It not, though."
            correct_answer: "A"
            hint: "all the indentation is done correctly."
            question_score: '10'
        2:
            question_text: "What will be printed after entering the correct password?"
            code: |-
                password = {ask} 'What is the password?'
                correct_password = Hedy
                {if} password {is} correct_password
                    {repeat} 2 {times}
                        {print} 'Good job!'
                        {print} 'You can use the computer!'
                {else}
                    {print} 'The computer will explode in 5... 4... 3... 2... 1...'
            mp_choice_options:
            -   option: "Good job!\nGood job!"
                feedback: "That's not it!"
            -   option: "The computer will explode in 5... 4... 3... 2... 1..."
                feedback: "That's not it!"
            -   option: "Good job !\nGood job!\nYou can use the computer!"
                feedback: "That's not it!"
            -   option: "Good job!\nYou can use the computer!\nGood job!\nYou can use the computer!"
                feedback: "¡Correcto!"
            correct_answer: "D"
            hint: "Everything under the `{repeat}` command is repeated twice."
            question_score: '10'
        3:
            question_text: "Which case should you choose to win a million dollars?"
            code: |-
                {print} 'Choose the right case and win!'
                case = {ask} 'Which case will you pick? 1 or 2?'
                {if} case {is} 1
                     action = {ask} 'Open it or sell it?'
                         {if} action {is} sell
                             {print} 'You sell your case for 10 dollars'
                         {if} action {is} open
                             {print} 'You open the case and win an apple pie'
                {if} case {is} 2
                     action = {ask} 'Open it or sell it?'
                         {if} action {is} sell
                             {print} 'You sell the case for 500 dollars'
                         {if} action {is} open
                             {print} 'You open the case and win a million dollars!'
            mp_choice_options:
            -   option: "case 1, sell"
                feedback: "You don't win a million!"
            -   option: "case 1, open"
                feedback: "You don't win a million"
            -   option: "case 2, sell"
                feedback: "You don't win a million"
            -   option: "case 2, open"
                feedback: "¡Gran trabajo! ¡Ganaste!"
            correct_answer: "D"
            hint: "Follow the right path"
            question_score: '10'
        4:
            question_text: "Which statement is true?"
            code: |-
                name = {ask} 'What is your name?'
                size = {ask} 'What is your shoe size?'
                {if} size {is} 38
                    {if} name {is} Cinderella
                        {print} 'I was looking for you!'
                    {else}
                        {print} 'You are not the one!'
                {else}
                    {print} 'Ill keep looking'
            mp_choice_options:
            -   option: "Sleeping Beauty with shoe size 38 gets the output 'Ill keep looking'"
                feedback: "No, she gets 'You are not the one!'"
            -   option: "Cinderella with shoe size 40 gets the output: 'I was looking for you!'"
                feedback: "No, she gets 'Ill keep looking'"
            -   option: "Sleeping Beauty with shoe size 40 gets the output 'Ill keep looking'"
                feedback: "¡Eso es!"
            -   option: "Cinderella with shoe size 40 gets the output 'I was looking for you!'"
                feedback: "No she gets 'Ill keep looking'"
            correct_answer: "C"
            hint: "No matter what your name is, if you have shoe size 40 you will get the message 'Ill keep looking'."
            question_score: '10'
        5:
            question_text: "Which code produced this output?"
            mp_choice_options:
            -   option: |
                    ```
                    desert = {ask} 'What is your favorite type of desert?'
                    {if} desert {is} icecream
                        {repeat} 3 {times}
                        {print} 'Icecream is the best!'
                    ```
                feedback: "Don't forget the indentation after `{repeat}` commands."
            -   option: |
                    ```
                    desert = {ask} 'What is your favorite type of desert?'
                    {if} desert {is} icecream
                    {repeat} 3 {times}
                        {print} 'Icecream is the best!'
                    ```
                feedback: "Use indentation after an `{if}` command"
            -   option: |
                    ```
                    desert = {ask} 'What is your favorite type of desert?'
                    {if} desert {is} icecream
                        {repeat} 3 {times}
                            {print} 'Icecream is the best!'
                    ```
                feedback: "Perfect"
            -   option: |
                    ```
                    {repeat} 3 {times}
                        desert = {ask} 'What is your favorite type of desert?'
                        {if} desert {is} icecream
                            {repeat} 3 {times}
                            {print} 'Icecream is the best!'
                    ```
                feedback: "There are 2 `{repeat}` commands in this code."
            correct_answer: "C"
            hint: "Watch the indentation"
            question_score: '10'
            output: "Icecream is the best!\nIcecream is the best!\nIcecream is the best!"
        6:
            question_text: "After which command(s) should you use indentation (starting the next line with 4 spaces)?"
            mp_choice_options:
            -   option: "`{if}`"
                feedback: "Don't forget the others"
            -   option: "`{if}` `{repeat}`"
                feedback: "Don't forget `{else}`!"
            -   option: "`{if}` `{else}` `{repeat}`"
                feedback: "Keep it up!"
            -   option: "`{if}` `{else}` `{repeat}` `{print}`"
                feedback: "Not with print"
            correct_answer: "C"
            hint: "Indentation happens on the line below some commands"
            question_score: '10'
        7:
            question_text: "In this code from a pizza restaurant. \nYoull get a 5 dollar discount if you order a medium pizza with coke.\n What should you do to debug this code?"
            code: |-
                {if} food {is} pizza
                {if} size {is} medium
                {if} drink {is} coke
                price = price - 2
            mp_choice_options:
            -   option: |
                    ```
                    {if} food {is} pizza
                        {if} size {is} medium
                            {if} drink {is} coke
                                price = price - 2
                    ```
                feedback: "Amazing!"
            -   option: |
                    ```
                    {if} food {is} pizza
                        {if} size {is} medium
                    {if} drink {is} coke
                        price = price - 2
                    ```
                feedback: "Try again!"
            -   option: |
                    ```
                    {if} food {is} pizza
                    {if} size {is} medium
                    {if} drink {is} coke
                            price = price - 2
                    ```
                feedback: "Try again"
            -   option: |
                    ```
                    {if} food {is} pizza
                        {if} size {is} medium
                            {if} drink {is} coke
                            price = price - 2
                    ```
                feedback: "Try again"
            correct_answer: "A"
            hint: "After each `{if}` command, the line below should indent"
            question_score: '10'
        8:
            question_text: "What is wrong is this code?"
            code: |-
                age = {ask} 'Happy Birthday! How old are you?'
                singing = {ask} 'Would you like us to sing?'
                    if singing {is} yes
                        {repeat} years {times}
                        {print} 'Hip Hip Hooray'
            mp_choice_options:
            -   option: "You can't put two questions in a row"
                feedback: "Yes you can."
            -   option: "The variable called 'age' is later on used as 'years'"
                feedback: "Keen eye! Good job!"
            -   option: "You're not allowed to start with 8 spaces, like line 4 and 5 do"
                feedback: "You actually must start like that."
            -   option: "A code must always start with a `{print}` command in the first line"
                feedback: "That's not true."
            correct_answer: "B"
            hint: "The indentation is done right this time"
            question_score: '10'
        9:
            question_text: "How many `{if}` commands can be placed inside another `{if}` command?"
            mp_choice_options:
            -   option: "None, that is not allowed"
                feedback: "You are allowed to"
            -   option: "Only 1"
                feedback: "You could use more if you like"
            -   option: "3"
                feedback: "You could use more if you like"
            -   option: "Infinite, as long as you keep using indentation correctly"
                feedback: "That is true"
            correct_answer: "D"
            hint: "You can put an `{if}` command inside an `{if}` command."
            question_score: '10'
        10:
            question_text: "Which statement is true?"
            code: |-
                1 {repeat} 2 {times}
                2 {if} nivel {is} 9
                3 {print} ¡Gran trabajo!
            mp_choice_options:
            -   option: "All lines should start with 4 spaces"
                feedback: "Only line 2 and 3 start with spaces"
            -   option: "Line 2 and 3 should start with 4 spaces"
                feedback: "Line 3 should start with 8"
            -   option: "Line 2 and 3 should start with 8 spaces"
                feedback: "Line 2 should start with 4"
            -   option: "line 2 should atart with 4 spaces and line 3 with 8"
                feedback: "You are correct!"
            correct_answer: "D"
            hint: "The first line doens't start with any spaces"
            question_score: '10'
    11:
        1:
            question_text: "What word should be at the place of the question mark?"
            code: |-
                {for} i {in} _?_ 1 {to} 10
                    {print} i
            mp_choice_options:
            -   option: |
                    ```
                    counter
                    ```
                feedback: "No"
            -   option: |
                    ```
                    {range}
                    ```
                feedback: "Correct"
            -   option: |
                    ```
                    {if}
                    ```
                feedback: "No"
            -   option: |
                    ```
                    {for}
                    ```
                feedback: "No"
            correct_answer: "B"
            hint: "What did you learn in this level?"
            question_score: '10'
        2:
            question_text: "What will be the output from this code?"
            code: |-
                {for} i {in} {range} 1 {to} 3
                    {print} i
            mp_choice_options:
            -   option: "1\n2\n3"
                feedback: "Correct!"
            -   option: "1 2 3"
                feedback: "That's not it"
            -   option: "1, 2, 3"
                feedback: "That's not it"
            -   option: "123"
                feedback: "That's not it"
            correct_answer: "A"
            hint: "How do the numbers appear in the screen?"
            question_score: '10'
        3:
            question_text: "Which code was used to get this output?"
            output: |-
                1
                2
                3
                4
                5
                Once I caught a fish alive!
            mp_choice_options:
            -   option: |
                    ```
                    {for} i {in} {range} 1 {to} 5
                        {print} i
                    {print} 'Once I caught a fish alive!'
                    ```
                feedback: "Perfect"
            -   option: |
                    ```
                    {for} i {in} {range} 1 {to} 5
                    {print} i
                    {print} 'Once I caught a fish alive!'
                    ```
                feedback: "This code won't work. You need an indent after {for}."
            -   option: |
                    ```
                    {for} i {in} {range} 1 {to} 5
                        {print} i
                        {print} 'Once I caught a fish alive!'
                    ```
                feedback: "Now Hedy will count '1 Once I caught a fish alive!, 2 Once I caught a fish alive! etc."
            -   option: |
                    ```
                    {for} i {in} {range} 1 {to} 5
                        {print} 'i'
                    {print} 'Once I caught a fish alive!'
                    ```
                feedback: "i is a variable and shouldn't have quotation marks"
            correct_answer: "A"
            hint: "First all the numbers, then the sentence"
            question_score: '10'
        4:
            question_text: "Which code was used to get this output?"
            output: |-
                10
                9
                8
                7
                6
                5
                4
                3
                2
                1
                0
            mp_choice_options:
            -   option: |
                    ```
                    {for} i {in} {range} 0 {to} 10
                        {print} i
                    ```
                feedback: "Now Hedy prints the numbers from 0 to 10 instead of 10 to 0."
            -   option: |
                    ```
                    {for} i {in} {range} 0 to 10
                        {print} - i
                    ```
                feedback: "Hedy would print negative numbers in this case."
            -   option: |
                    ```
                    {for} i {in} {range} 10 to 0
                        {print} 10 9 8 7 6 5 4 3 2 1 0
                    ```
                feedback: "Unfortunately this does not exist."
            -   option: |
                    ```
                    {for} i {in} {range} 0 {to} 10
                        {print} 10 - i
                    ```
                feedback: "That's right!"
            correct_answer: "D"
            hint: "It has to be a calculation..."
            question_score: '10'
        5:
            question_text: "What's wrong with this code?"
            code: |-
                {for} i {in} {range} 1 {to} 10
                {print} i
            mp_choice_options:
            -   option: "The i in the last line need quotation marks"
                feedback: "No it doesn't."
            -   option: "You can't use `{range}` 1 `{to}` 5 only `{range}` 1 `{to}` 10"
                feedback: "You could use 1 to 5 just as well!"
            -   option: "Line 1 needs to start with an indention."
                feedback: "Not line 1..."
            -   option: "Line 2 needs to start with an indention"
                feedback: "Perfect!"
            correct_answer: "D"
            hint: "There is something wrong with the indention"
            question_score: '10'
        6:
            question_text: "How many times does the word Hello appear on your screen when you run the code?"
            code: |-
                {for} i {in} {range} 0 {to} 2
                    {print} 'Hello'
            mp_choice_options:
            -   option: "1 time"
                feedback: "No"
            -   option: "2 times"
                feedback: "No"
            -   option: "3 times"
                feedback: "¡Eso es!"
            -   option: "Never"
                feedback: "No"
            correct_answer: "C"
            hint: "0 also counts. So 0,1,2 that's 3 times."
            question_score: '10'
        7:
            question_text: "What should be on the place of the question mark?"
            code: |-
                {print} 'Welcome to Hedys diner'
                people is {ask} 'How many people will be eating here tonight?'
                _?_
                    food is {ask} 'What would you like to order?'
                    {print} food
            mp_choice_options:
            -   option: |
                    ```
                    {for} i {in} {range} 0 {to} 3
                    ```
                feedback: "There's not always 3 people"
            -   option: |
                    ```
                    {for} i {in} {range} 1 {to} guests
                    ```
                feedback: "The variable is not named guests"
            -   option: |
                    ```
                    {for} i {in} {range} 1 {to} people
                    ```
                feedback: "Great!"
            -   option: |
                    ```
                    {for} i {in} {range} 0 {to} people
                    ```
                feedback: "That's one order too many!"
            correct_answer: "C"
            hint: "Use the variable 'people'"
            question_score: '10'
        8:
            question_text: "What will be the output from this code?"
            code: |-
                {for} i {in} {range} 23 {to} 25
                    {print} 'hi'
            mp_choice_options:
            -   option: "23\n24\n25"
                feedback: "The numbers don't appear. It doesn't say `{print}` i."
            -   option: "23 hi 24 hi 25 hi"
                feedback: "The numbers don't appear. It doesn't say `{print}` i"
            -   option: "hi\nhi\nhi"
                feedback: "Correcto"
            -   option: "The word 'hi' will appear 25 times in a row."
                feedback: "No it will only appear 3 times."
            correct_answer: "C"
            hint: "It doesn't say `{print}` i"
            question_score: '10'
        9:
            question_text: "How many times does Hedy chant Hip Hip Hooray?"
            code: |-
                age = {ask} 'How old are you?'
                {for} i {in} {range} 1 {to} age
                    {print} 'Hip Hip Hoorray!'
            mp_choice_options:
            -   option: "1 vez"
                feedback: "Inténtalo de nuevo"
            -   option: "2 veces"
                feedback: "Inténtalo de nuevo"
            -   option: "Nunca"
                feedback: "Inténtalo de nuevo"
            -   option: "That depends on how old you are"
                feedback: "¡Eso es!"
            correct_answer: "D"
            hint: "`{for}` i `{in}` `{range}` 1 `{to}` age"
            question_score: '10'
        10:
            question_text: "Which code belongs to this output?"
            output: |-
                Baby shark tututudutudu
                Baby shark tututudutudu
                Baby shark tututudutudu
                Baby shark
            mp_choice_options:
            -   option: |
                    ```
                    {for} i {in} {range} 1 {to} 3
                        {print} Baby shark tututudutudu
                        {print} Baby shark
                    ```
                feedback: "Mind the indention"
            -   option: |
                    ```
                    {for} i {in} {range} 1 {to} 3
                        {print} Baby shark tututudutudu
                    {print} Baby shark
                    ```
                feedback: "¡Eso es!"
            -   option: |
                    ```
                    {for} i {in} {range} 0 {to} 3
                        {print} Baby shark tututudutudu
                    {print} Baby shark
                    ```
                feedback: "`{range}` 0 `{to}` 3 is 4 times."
            -   option: |
                    ```
                    {for} i {in} {range} 0 {to} 3
                        {print} Baby shark tututudutudu
                        {print} Baby shark
                    ```
                feedback: "`{range}` 0 `{to}` 3 is 4 times."
            correct_answer: "B"
            hint: "Mind the indention"
            question_score: '10'
    10:
        1:
            question_text: "What do we need to fill in on the `_?_` if we want to print each compliment?"
            code: |-
                compliments = perfect, great job, amazing
                _?_
                    {print} compliment
            mp_choice_options:
            -   option: |
                    ```
                    {for} each compliment
                    ```
                feedback: "That's not it"
            -   option: |
                    ```
                    {for} compliment {in} compliments
                    ```
                feedback: "You deserve all those compliments!"
            -   option: |
                    ```
                    {if} compliment {in} compliments
                    ```
                feedback: "That's not it"
            -   option: |
                    ```
                    {for} compliments {in} compliment
                    ```
                feedback: "Almost there!"
            correct_answer: "B"
            hint: "`{for}` each compliment in the lists of compliments..."
            question_score: '10'
        2:
            question_text: "Which output is correct?"
            code: |-
                meals = pizza, pasta, pancakes
                {for} meal {in} meals
                    {print} 'I love ' meal
            mp_choice_options:
            -   option: "I love pizza"
                feedback: "Line 2 says `{for}` each meal in the list of meals. So each meal is printed."
            -   option: "I love pasta"
                feedback: "Line 2 says `{for}` each meal in the list of meals. So each meal is printed."
            -   option: "I love pancakes"
                feedback: "Line 2 says `{for}` each meal in the list of meals. So each meal is printed."
            -   option: |-
                    I love pizza
                    I love pasta
                    I love pancakes
                feedback: "Great!"
            correct_answer: "D"
            hint: "Line 2 says for each meal in the list of meals. So each meal is printed."
            question_score: '10'
        3:
            question_text: "Which output is correct?"
            code: |-
                animals = dogs, cats, hamsters, chickens
                {for} animal {in} animals
                    {print} animal ' are lovely pets'
            mp_choice_options:
            -   option: "dogs are lovely pets"
                feedback: "Line 2 says {for} each animal in the list of animals. So each animal is {print}ed."
            -   option: "dogs, cats, hamsters, chickens are lovely pets"
                feedback: "Each animal gets their own line in the output."
            -   option: |-
                    dogs are lovely pets
                    cats are lovely pets
                    hamsters are lovely pets
                    chickens are lovely pets
                feedback: "Great!"
            -   option: "You don't know yet. Because it chooses one of the animals {at} {random}."
                feedback: "Line 2 says {for} each animal in the list of animals. So each animal is {print}ed."
            correct_answer: "C"
            hint: "Line 2 says {for} each animal in the list of animals. So each animal is printed"
            question_score: '10'
        4:
            question_text: "¿Qué le pasa a este código?"
            code: |-
                groceries = apples, bread, milk
                {for} item {in} groceries
                    {print} 'We need ' groceries
            mp_choice_options:
            -   option: "Line 2 needs to start with 4 spaces as indentation"
                feedback: "No it doesn't. Only line 3 needs indentation, which it has."
            -   option: "Line 3 does not need to start with 4 spaces as indentation"
                feedback: "Line 2 is a `{for}`command so line 3 does need to start with an indent."
            -   option: "Line 3 should say item instead of groceries"
                feedback: "Good job!"
            -   option: "Line 2 should say groceries instead of item"
                feedback: "No it does not."
            correct_answer: "C"
            hint: "Line 2 says `{for}` each item in the list of groceries"
            question_score: '10'
        5:
            question_text: "What word should be on the _?_ with these digital dice?"
            code: |-
                {print} 'Welcome to the digital dice!'
                players = Ann, John, Jesse
                choices = 1, 2, 3, 4, 5, 6
                {for} player {in} players
                    {print} player ' throws ' _?_ {at} {random}
            mp_choice_options:
            -   option: "players"
                feedback: "It would say 'Ann throws Jesse', instead of 'Ann throws 6'."
            -   option: "choices"
                feedback: "¡Eso es!"
            -   option: "choice"
                feedback: "You are very close. But you need Hedy to pick from the list called 'choices' not 'choice'..."
            -   option: "dice"
                feedback: "Look at the names of the variables."
            correct_answer: "B"
            hint: "Hedy needs to pick a number `{at} {random}`"
            question_score: '10'
        6:
            question_text: "Which of the answers below is a possible outcome when you run the code?"
            code: |-
                choices = rock, paper, scissors
                players = Kelly, Meredith
                {for} player {in} players
                    {print} player ' chooses ' choices {at} {random}
            mp_choice_options:
            -   option: |-
                    Kelly chooses rock
                feedback: "Meredith wants to play too!"
            -   option: |-
                    Meredith chooses scissors
                    Kelly chooses rock
                feedback: "So close! But Kelly is first in the list, so she goes first"
            -   option: |-
                    Meredith chooses paper
                feedback: "Kelly wants to play too!"
            -   option: |-
                    Kelly chooses paper
                    Meredith chooses scissors
                feedback: "Amazing!"
            correct_answer: "D"
            hint: "Each player will pick an option. The player that's first on the list will go first."
            question_score: '10'
        7:
            question_text: "What line should be on the _?_ in this code that decides what these people will have for dinner?"
            code: |-
                names = Ron, Leslie, April, Andy
                food = pasta, fries, salad
                _?_
                    {print} name ' has to eat ' food {at} {random} ' for dinner'
            mp_choice_options:
            -   option: |
                    ```
                    {for} name {in} names
                    ```
                feedback: "You are on fire!"
            -   option: |
                    ```
                    {for} names {in} name
                    ```
                feedback: "No it should be for each name in the list nameS, so the other way around"
            -   option: |
                    ```
                    {for} food {in} food
                    ```
                feedback: "Each name should be told what they will have for dinner."
            -   option: |
                    ```
                    {for} name {in} food
                    ```
                feedback: "Each name should be told what they will have for dinner."
            correct_answer: "A"
            hint: "Each name should be told what they will have for dinner."
            question_score: '10'
        8:
            question_text: "What should be on the _?_ in this code that decides which color shirt you get?"
            code: |-
                names = Donna, Tommy, Ben
                colors = blue, red, purple
                {for} name {in} names
                    {print} _?_
            mp_choice_options:
            -   option: |
                    ```
                    'name gets a color shirt'
                    ```
                feedback: "That's not it!"
            -   option: |
                    ```
                    name 'gets a ' colors {at} {random} ' shirt'
                    ```
                feedback: "Great job! This was a hard one!"
            -   option: |
                    ```
                    names 'gets a ' color {at} {random} ' shirt'
                    ```
                feedback: "You want each name printed. So the first word should not be names but..."
            -   option: |
                    ```
                    'people gets a colors shirt'
                    ```
                feedback: "There is no variable named people.."
            correct_answer: "B"
            hint: "Mind the quotation marks and the names of the variables"
            question_score: '10'
        9:
            question_text: "What is the first question Hedy will `{ask}` you when you run the program?"
            code: |-
                courses = appetizer, main course, dessert
                names = Timon, Onno
                {for} name in names
                    {for} course {in} courses
                        food = {ask} name ', what would you like to eat as your ' course '?'
                        {print} name ' orders ' food ' as their ' course
            mp_choice_options:
            -   option: "Timon, what would you like to eat as your appetizer?"
                feedback: "Perfect!"
            -   option: "Onno, what would you like to eat as your appetizer?"
                feedback: "Timon is first on the list!"
            -   option: "Timon, what would you like to eat as your dessert?"
                feedback: "Appetizers are first in the list"
            -   option: "You don't know that. Hedy will choose `{at} {random}`."
                feedback: "There is no `{at} {random}` in this code..."
            correct_answer: "A"
            hint: "The first options from both lists are chosen."
            question_score: '10'
        10:
            question_text: "What is true about this code?"
            code: |-
                prices = 1 million dollars, car, sandwich
                names = Bob, Patrick, Sandy, Larry
                {for} price {in} prices
                    {print} 'The ' price 'is won by ' names {at} {random}
            mp_choice_options:
            -   option: "Everybody will always win a price."
                feedback: "That is not true, you could end up without a price."
            -   option: "All the prices always go to one single person."
                feedback: "That is not true. All the prices are given away, but to random people"
            -   option: "Larry will never win a price"
                feedback: "That is not true. Larry has the same odds as the others"
            -   option: "Someone might win with two prices"
                feedback: "You get it!"
            correct_answer: "D"
            hint: "Try to imagine the output of this code."
            question_score: '10'
    12:
        1:
            mp_choice_options:
            -   feedback: Don't forget the first line of code!
                option: "5\n"
            -   option: "3.5 + 1.5\n"
                feedback: This is not the one!
            -   option: "thee and a half plus one and a half is...\nfive\n"
                feedback: Take a close look at the second line...
            -   option: "three and a half plus one and a half is...\n5\n"
                feedback: ¡Gran trabajo!
            question_text: Which output is correct?
            code: "print 'three and a half plus one and a half is...'\nprint 3.5 + 1.5"
            correct_answer: D
            hint: Both lines are printed!
            question_score: '10'
        2:
            question_score: '10'
            question_text: Which of these codes is correct?
            mp_choice_options:
            -   option: "```\nflavors is vanilla, strawberry, chocolate\nprint 'I would like a ' flavors at random ' cake.'\n```"
                feedback: All the different values of flavors should be in quotation marks.
            -   option: "```\n'flavors = vanilla, strawberry, chocolate'\nprint 'I would like a ' flavors at random ' cake.'\n```"
                feedback: All the different values of flavors should be in quotation marks.
            -   option: "```\nflavors = 'vanilla', 'strawberry', 'chocolate'\nprint 'I would like a ' flavors at random ' cake.'\n```"
                feedback: Alright!
            -   option: "\n```\nflavors = 'vanilla, strawberry, chocolate'\nprint 'I would like a ' flavors at random ' cake.'\n```\n"
                feedback: All the different values of flavors should be in quotation marks.
            correct_answer: C
            hint: The second line is the same in each code, pay attention to the first line
        3:
            question_score: '10'
            question_text: ¿Qué le pasa a este código?
            code: "favorite_animal = ask 'What is your favorite animal?'\nprint 'I like ' favoriteanimal ' too!'"
            mp_choice_options:
            -   option: "The name of the variable is different in line 1 than in line 2.\n"
                feedback: ¡Correcto!
            -   option: "The quotation marks aren't used correctly in line 2\n"
                feedback: That's not true
            -   option: "You can't use the = sign when using an ask command\n"
                feedback: That's not true
            -   option: "Nothing is wrong.\n"
                feedback: That's not true
            correct_answer: A
            hint: The quotation marks are used correctly
        5:
            correct_answer: B
            question_text: What output does Agent007 get when they put in the correct password?
            code: "name is ask 'What is your name?'\nif name is 'Agent007'\n    a is 'Go to the airport '\nelse\n    a is 'Go to the train station '\npassword is ask 'What is the password?'\nif password is 'TOPSECRET'\n    b is 'tomorrow at 02.00'\nelse\n    b is 'today at 10.00'\nprint a + b"
            mp_choice_options:
            -   option: Go to the train station today at 10.00
                feedback: The agent won't be catching any bad guys here
            -   option: Go to the airport tomorrow at 02.00
                feedback: You've cracked the code!
            -   option: Go to the train station tomorrow at 02.00
                feedback: The agent won't be catching any bad guys here
            -   option: Go to the airport tomorrow at 10.00
                feedback: The agent won't be catching any bad guys here
            hint: The correct password is TOPSECRET
            question_score: '10'
        6:
            question_score: '10'
            question_text: Which line should be filled in at the ???
            code: "print 'Welcome to McHedy!'\norder = ask 'Would you like a hamburger or fries?'\nif order = 'hamburger'\n  price = 12\nif order = 'fries'\n  price = 4\ndrinks = ask 'Would you like a drink with that for 2 dollars?'\nif drinks = 'yes'\n  ???\nprint 'That will be ' price ' dollar please'\n"
            mp_choice_options:
            -   option: "```\nprice = 14\n```\n"
                feedback: What if you only order fries and a drink?
            -   option: "```\nprice = '14'\n```"
                feedback: What if you only order fries and a drink?
            -   option: "```\nprice = price + 2\n```"
                feedback: Excellent!
            -   option: "```\nprice = + 2\n```"
                feedback: Almost there!
            correct_answer: C
            hint: What if you only order fries and a drink?
        7:
            question_score: '10'
            question_text: Which output does a vegan get?
            code: "menu = 'cookies', 'cheese', 'grapes'\nprint \"It's my birthday! I`ve brought some snacks!\"\ndiet = ask 'Do you have any dietary restrictions?'\nif diet = 'gluten free'\n    remove 'cookies' from menu\nif diet = 'vegan'\n    remove 'cheese' from menu\nprint 'For you I have brought: '\nfor snack in menu\n    print snack"
            mp_choice_options:
            -   option: "It's my birthday! I've brought some snacks!\nFor you I have brought:\ncookies\ngrapes"
                feedback: Terrific!
            -   option: "It's my birthday! I've brought some snacks!\nFor you I have brought:\ngrapes"
                feedback: There's more options than just one
            -   option: "It's my birthday! I've brought some snacks!\nFor you I have brought:\ncheese\ngrapes"
                feedback: A vegan person can't have cheese
            -   option: "It's my birthday! I've brought some snacks!\nFor you I have brought:\ngrapes\ncookies"
                feedback: Almost there, but look at the order of snacks in the list
            correct_answer: A
            hint: What item is removed from the list when you answer 'vegan'?
        8:
            question_score: '10'
            question_text: Which code was used to create this output?
            code: '3.5'
            mp_choice_options:
            -   option: "```\nprint '7 / 2'\n```"
                feedback: No
            -   option: "```\nprint 7 / 2\n```"
                feedback: That is right!
            -   option: "```\nprint 7 : 2\n```"
                feedback: No
            -   option: "```\nprint 7 * 2\n```"
                feedback: No
            correct_answer: B
            hint: 7 devided by 2 is 3.5
        4:
            question_text: In which lines are quotation marks needed to get the code to work?
            code: "print Welcome to the online shoe shop\ncategory = ask What kind of shoes are you looking for?\nif category = high heels\n  print High heels are 50% off now!"
            mp_choice_options:
            -   option: "Line 1 and 2\n"
                feedback: No
            -   option: "Line 1, 2 and 3\n"
                feedback: No
            -   option: "Line 1, 2 and 4\n"
                feedback: No
            -   option: "All of the lines\n"
                feedback: Perfect!
            correct_answer: D
            hint: Does line 3 need quotation marks too?
            question_score: '10'
        9:
            question_text: Which code should be filled in in line 1 at the ???
            code: "???\nprint 'You won ' prices at random '!'"
            mp_choice_options:
            -   option: "```\nprices = 'one' 'million' 'dollars', 'nothing'\n```"
                feedback: You won nothing
            -   option: "```\nprices = 'one million dollars, nothing'\n```"
                feedback: You won nothing
            -   option: "```\nprices = 'one million dollars', 'nothing'\n```"
                feedback: Winner!
            -   option: "```\n'prices' = 'one million dollars', 'nothing'\n```"
                feedback: You one nothing
            correct_answer: C
            hint: The items on the list should be in quotation marks
            question_score: '10'
        10:
            question_text: Which line of code should be filled in at the ??? to complete the song ?
            code: "actions = 'clap your hands', 'stomp your feet', 'shout Hurray!'\n???\n    for i in range 0 to 1\n        print 'if youre happy and you know it'\n        print action\n    print 'if youre happy and you know it and you really want to show it'\n    print 'if youre happy and you know it'\n    print action"
            mp_choice_options:
            -   option: for i in range 1 to 3
                feedback: This is a hard one! All the actions on the list must be in the song.
            -   option: for action in actions
                feedback: You are amazing!
            -   option: repeat 3 times
                feedback: This is a hard one! All the actions on the list must be in the song.
            -   option: print actions at random
                feedback: This is a hard one! All the actions on the list must be in the song.
            correct_answer: B
            hint: This is a hard one! All the actions on the list must be in the song.
            question_score: '10'
    13:
        4:
            question_score: '10'
            question_text: Which line of code should follow this line in rock-paper-scissors game?
            code: if computer_choice is 'rock' and your_choice is 'paper'
            mp_choice_options:
            -   option: print 'you win'
                feedback: You win!
            -   option: print 'you lose'
                feedback: You lose!
            -   option: print 'tie'
                feedback: It's only a tie if both choices are the same
            -   option: print 'try again'
                feedback: Try again!
            correct_answer: A
            hint: Paper beats rock
        5:
            correct_answer: C
            question_text: Which statement is true about this code?
            code: "if name = 'Cinderella' and shoe_size = '38'\n    print 'You are my one true love!'"
            mp_choice_options:
            -   option: Every person with shoe size 38 is this prince's one true love
                feedback: The prince is a little more picky than that!
            -   option: Every person named Cinderella is this prince's one true love
                feedback: The prince is a little more picky than that!
            -   option: Every person that is named Cinderella and has shoe size 38 is this prince's one true love
                feedback: Fantastic!
            -   option: Every person that's not named Cinderella and does not have shoe size 38 is this prince's one true love
                feedback: The prince is a little more picky than that!
            hint: Both statements have to be true
            question_score: '10'
        7:
            mp_choice_options:
            -   option: The grey cat is called Abby
                feedback: This is true!
            -   feedback: This is true
                option: Milo the orange cat eats 4 scoops of cat nibbles
            -   option: The black hamster needs to be fed a piece of carrot
                feedback: ¡Gran trabajo!
            -   option: The yellow bird was fed this morning
                feedback: This is true
            question_text: Which statement is false?
            code: "print 'Thank you for helping me take care of my pets'\nprint 'Here is a program to help feed them'\nanimal is ask 'What kind of animal are they?'\ncolor is ask 'What colour are they?'\nif animal is 'cat' and color = 'grey'\n    print 'That is Abby. She eats 3 scoops of cat nibbles'\nif animal is 'cat' and color = 'orange'\n    print 'That is Milo. He eats 4 scoops of cat nibbles'\nif animal is 'bird' or color is 'black'\n    print 'I fed them this moring! They do not need more food today'\nif animal is 'hamster' and color is 'brown'\n    print 'You can feed them a piece of carrot'"
            correct_answer: C
            hint: Read the last 4 lines carefully
            question_score: '10'
        8:
            question_text: What output do you get if you order popcorn but no drink?
            mp_choice_options:
            -   feedback: You have paid too much!
                option: "Welcome to the movie theater\nThat will be 8 dollars please\nEnjoy the movie"
            -   option: "Welcome to the movie theater\nThat will be 5 dollars please\nEnjoy the movie"
                feedback: Amazing!
            -   option: "Welcome to the movie theater\nThat will be 3 dollars please\nEnjoy the movie"
                feedback: That's not enough money!
            -   option: "Welcome to the movie theater\nOk\nEnjoy the movie"
                feedback: You have to pay for your popcorn!
            code: "print 'Welcome to the movie theater'\npopcorn = ask 'Would you like some popcorn?'\ndrink = ask 'Would you like a drink?'\nif popcorn = 'yes' and drink = 'yes'\n    print 'That will be 8 dollars please'\nif popcorn = 'no' and drink = 'yes'\n   print 'That will be 3 dollars please'\nif popcorn = 'yes' and drink = 'no'\n    print 'That will be 5 dollars please'\nif popcorn = 'no' and drink = 'no'\n    print 'Ok'\nprint 'Enjoy the movie'"
            correct_answer: B
            hint: popcorn = yes and drink = no
            question_score: '10'
        9:
            question_score: '10'
            question_text: ¿Qué le pasa a este código?
            code: "1  chocolate = ask 'Would you like chocolate sauce on your ice cream?'\n2  sprinkles = ask 'Would you like sprinkles on your ice cream?'\n3  if chocolate and sprinkles = 'yes'\n4      print 'Ice cream with chocolate sauce and sprinkles, coming up!'\n5  if chocolate = 'yes' and sprinkles = 'no'\n6      print 'Ice cream with chocolate sauce, coming up!'\n7  if chocolate = 'no' and sprinkles = 'yes'\n8      print 'Ice cream with sprinkles, coming up'\n9  if chocolate = 'no' and sprinkles = 'no'\n10     print 'Just plain icecream, coming up!'"
            mp_choice_options:
            -   option: "Line 3 should be:\n```\n{if} chocolate = 'yes' {and} sprinkles = 'yes'\n```\n"
                feedback: ¡Correcto!
            -   option: "Line 3 should be:\n```\n{if} chocolate = 'no' {and} sprinkles = 'no'\n```\n"
                feedback: This is not what I ordered!
            -   option: "Line 5 should be:\n```\n{if} chocolate = 'yes' {and} sprinkles = 'yes'\n```\n"
                feedback: This is not what I ordered!
            -   option: "Line 7 should be:\n```\n{if} chocolate = 'yes' {and} sprinkles = 'no'\n```\n"
                feedback: This is not what I ordered!
            correct_answer: A
            hint: There is a mistake in line 3
        10:
            mp_choice_options:
            -   option: and
                feedback: There are no items that are both the list of snacks and the list of drinks
            -   option: or
                feedback: ¡Gran trabajo!
            -   option: in
                feedback: No
            -   feedback: No
                option: if
            question_text: Which command needs to be in line 8 at the place of the ??? ?
            code: "print 'Welcome to the product finder of this supermarkt'\nitem is ask 'What product are you looking for?'\nbakery = 'bread', 'buns', 'muffins'\ndrinks = 'soda', 'water', 'lemonade'\nsnacks = 'chips', 'nuts', 'dips'\nfrozen = 'fries', 'icecream', 'pizza'\nfruit = 'bananas', 'apples', 'oranges'\nif item in snacks ??? item in drinks\n    print 'This item is in aile 3'\nif item in bakery or item in bakery\n    print 'This item in in the back of the store'\nif item in fruit\n    print 'The fruit is sold near the register'"
            correct_answer: B
            hint: The item is either in the list of snacks, or in the list of drinks
            question_score: '10'
        1:
            question_text: Which code should be filled in at the ??? ?
            code: "name = ask 'What is your name?'\nsong = ask 'Whould you like to hear a song?'\nbirthday = ask 'Is today your birthday?'\n???\n  print 'Happy Birthday to you!'\n  print 'Happy Birthday to you!'\n  print 'Happy Birthday. dear ' name\n  print 'Happy Birthday to you!'"
            mp_choice_options:
            -   option: "```\nif birthday and song = 'yes'\n```"
                feedback: Almost there
            -   option: "```\nif birthday = 'yes' and name = 'Hedy'\n```"
                feedback: Hedy only sings for you if you like to hear a song
            -   option: "```\nif song = 'yes' and birthday = 'yes'\n```"
                feedback: Super!
            -   option: "```\nif song = 'yes' or birthday = 'yes'\n```"
                feedback: Hedy only sings if both answers are yes
            correct_answer: C
            hint: Hedy sings if you want to hear a song and it's you birthday
            question_score: '10'
        2:
            question_text: Which command is missing in the code at the place of the ??? ?
            code: "menu = 'cheese', 'sausage rolls', 'cookies'\ndiet = ask 'Do you have any dietary restrictions?'\nif diet = 'vegan' ??? diet = 'halal'\n    remove 'sausage rolls' from menu"
            mp_choice_options:
            -   option: and
                feedback: You don't have to be vegan and muslim
            -   option: or
                feedback: Great thinking!
            -   option: ' + '
                feedback: No
            -   option: print
                feedback: No
            correct_answer: B
            hint: Neither vegans nor muslims can eat sausage rolls.
            question_score: '10'
        3:
            question_text: Which output is given to a member without a discount code?
            code: "member = ask 'Do you have a membership card?'\ndiscount = ask 'Do you have a discount code?'\nif member = 'yes' or discount = 'yes'\n    print 'You get a free apple pie!'\nelse\n    print 'That will be 5 dollars please'"
            mp_choice_options:
            -   option: You get a free pie!
                feedback: ¡Gran trabajo!
            -   option: That will be 5 dollars please
                feedback: That is not true
            -   option: This code won't work, so there is no output
                feedback: There is nothing wrong with the code
            -   option: There is no way of knowing
                feedback: There is! Read the question carefully
            correct_answer: A
            hint: Mind the command 'or' in line 3
            question_score: '10'
        6:
            question_text: Which statement about this code is true?
            code: "print 'Let me guess which family member you are!'\nglasses = ask 'Do you wear glasses?'\nfemale = ask 'Are you female?'\nif glasses = 'yes' and female = 'yes'\n    print 'You must be Sophie!'\nif glasses = 'no' and female = 'yes'\n   print 'You must be Marleen!'\nif glasses = 'yes' and female = 'no'\n    print 'You must be Wouter!'\nif glasses = 'no' and female = 'no'\n    print 'You must be Michael!'"
            mp_choice_options:
            -   option: Michael is a boy with glasses
                feedback: Inténtalo de nuevo
            -   option: Marleen is a girl with glasses
                feedback: Inténtalo de nuevo
            -   option: Wouter is a boy without glasses
                feedback: Inténtalo de nuevo
            -   option: Sofía es una chica que lleva gafas
                feedback: ¡Gran trabajo!
            correct_answer: D
            hint: Take a good look! Or do you need glasses?
            question_score: '10'
    14:
        1:
            mp_choice_options:
            -   option: '`=>`'
                feedback: This is not a symbol.
            -   option: '`==`'
                feedback: We are not comparing anything, just asking.
            -   option: '`!=`'
                feedback: We are not comparing anything, just asking
            -   option: '`=`'
                feedback: ¡Muy bien!
            question_text: Which symbol should be used on the blank?
            code: "name _ {ask} 'Who are you?'\n{if} name == 'Hedy'\n    {print} 'Me too!'\n"
            hint: We are not comparing anything, we are just asking a name.
            question_score: '10'
            correct_answer: D
        2:
            mp_choice_options:
            -   option: '{if} name = Hedy'
                feedback: No
            -   option: '{if} age = 24'
                feedback: No
            -   option: answer = {ask} 'What is your answer'
                feedback: Yes!
            -   option: answer == {ask} 'How are you doing?'
                feedback: No
            question_text: Which of these codes has used the correct = or == symbol?
            correct_answer: C
            hint: When you are comparing two answers you should use ==
            question_score: '10'
        4:
            correct_answer: B
            code: "price = 10\nmoney = {ask} How much money do you have?\nbuy = {ask} 'Would you like to buy this teddy bear?'\n{if} money >= price and buy == 'yes'\n    {print} 'You can buy the bear!'\n{else}\n    {print} 'You cannot buy this bear!'\n"
            mp_choice_options:
            -   option: In line 1 == should be used instead of =
                feedback: No that's not it
            -   option: Line 2 misses quotation marks
                feedback: Tienes razón
            -   option: In line 4 = should have been used instead of ==
                feedback: No that's not it
            -   option: In line 4 <= should have been used instead of >=
                feedback: No that's not it
            question_text: ¿Qué le pasa a este código?
            hint: The symbols are right
            question_score: '10'
        6:
            question_score: '10'
            question_text: How many times do you have to say you are annoyed before this annoying game stops?
            mp_choice_options:
            -   option: 10 times
                feedback: It stops after 2 times
            -   option: 0 times
                feedback: It stops after 2 times
            -   option: 1 time
                feedback: It stops after 2 times
            -   option: 2 times
                feedback: That is correct
            code: "lives = 2\n{repeat} 10 times\n    {if} lives != 0\n        answer = {ask} 'Are you annoyed yet?'\n    {if} answer == 'yes'\n        lives = lives - 1\n"
            correct_answer: D
            hint: "!= means 'is not'"
        9:
            mp_choice_options:
            -   option: 1 or more
                feedback: No
            -   option: 2 or more
                feedback: No
            -   feedback: Casi
                option: 8 or more
            -   feedback: ¡Genial!
                option: 9 or more
            code: "chocolate = {ask} 'How many pieces of chocolate have you eaten?'\n  {if} chocolate <= 2\n      {print} 'That is a healthy amount'\n  {if} chocolate > 2 and chocolate =< 8\n      {print} 'That is a bit much'\n  {if} chocolate > 8\n      {print} 'You will get a stomach ache!'\n"
            question_text: How many pieces of chocolate will give you a stomach ache according to this fitbit?
            question_score: '10'
            correct_answer: D
            hint: '> 8 means more than 8'
        10:
            question_score: '10'
            question_text: What should be filled in in the blanks?
            code: "{print} '¡Quién consiga más puntos gana!'\n{if} puntos_jugador_1 < puntos_jugador_2\n    {print} _\n"
            mp_choice_options:
            -   option: "'player 1 wins'"
                feedback: Look at who has the highest score!
            -   option: "'player 2 wins'"
                feedback: ¡Sí!
            -   option: "'player 2 loses'"
                feedback: Look at who has the highest score!
            -   option: "'Es un empate'"
                feedback: No it's not, one player has a higher score
            correct_answer: B
            hint: You win the game by having the most points
        3:
            question_text: Which symbols should be filled in on the two blanks?
            code: "guests = {ask} 'How many people are at the party?'\n{if} guests _ 130\n    {print} 'You can come in!'\n{if} guests _ 130\n    {print} 'Im sorry, the club is full. '\n    {print} 'You have to wait for a guest to leave'\n"
            mp_choice_options:
            -   option: '`>` and `<`'
                feedback: That's not it
            -   option: '`=` and `>=`'
                feedback: That's not it
            -   option: '`<` and `>=`'
                feedback: Tienes razón
            -   option: ' `+` and `==`'
            feedback: No es eso
            correct_answer: C
            hint: There are 130 people allowed in the club
            question_score: '10'
        5:
            question_text: 'Which symbol should be filled in on the blanks if the movie is suitable for kids for the age of 12 and up? '
            code: "age = {ask} 'How old are you?'\nticket = {ask} 'Do you have a ticket?'\n{if} age _ and ticket == 'yes'\n    {print} 'You can enter the movie theater.'\n{else}\n    {print} 'You are not allowed to come in!'\n"
            mp_choice_options:
            -   option: '`> 12`'
                feedback: 12 year olds are allowed too
            -   option: '`>= 12`'
                feedback: ¡Genial!
            -   option: '`< 12`'
                feedback: These kids are too young!
            -   option: '`<= 12`'
                feedback: These kids are too young
            correct_answer: B
            hint: '> means greater than'
            question_score: '10'
        7:
            question_text: What should be filled in on the three blanks?
            code: "{print} 'Guess which number'\nnumbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\nnumber = numbers {at} {random}\ngame = 'on'\n{for} i {in} {range} 1 {to} 10\n    {if} game == 'on'\n        guess = {ask} 'Which number do you think it is?'\n        {if} guess < number\n            {print} _\n        {if} guess > number\n            {print} _\n        {if} guess == number\n            {print} _\n            game = 'over'\n"
            mp_choice_options:
            -   option: "`'Lower'` and `'Higher'` and `'You win!'`"
                feedback: That's not quite right.
            -   option: "`'Higher'` and `'Lower'` and `'You win!'`"
                feedback: You win!
            -   option: "`'You win!'` and `'Lower!'` and `'Higher'`"
                feedback: That's not quite right.
            -   option: "`'Lower!'` and `'You win!'` and `'Higher!'`"
                feedback: That's not quite right.
            hint: The last one should say you win.
            correct_answer: B
            question_score: '10'
        8:
            mp_choice_options:
            -   option: "You must be taller than 120 cm to go on the roller coaster"
                feedback: "> means greater than"
            -   option: "You must be taller than 119 cm to go on the roller coaster"
                feedback: "If you are 120 cm you won't get in"
            -   option: "You must be shorter or equal to 120 cm to go on the roller coaster"
                feedback: "True!"
            -   option: "There are no length restrictions to go on the roller coaster"
                feedback: "There are."
            correct_answer: "C"
            hint: "Focus on which length values are allowed"
            question_score: "10"
            question_text: Which statement is true about this roller coaster?
            code: "length = {ask} 'Please fill in your length in cm'\n{if} length > 120\n    {print} 'Sorry, you cannot go on this roller coaster.'\n{else}\n    {print} 'Enjoy the ride'\n"
    15:
        1:
            question_text: 'Which symbol should be used on the blank? Tip: You must keep guessing until you get it right.'
            code: "answer = 0\nwhile answer _ 'Amsterdam'\n    answer = ask 'What is the capital city of the Netherlands?'\nprint 'You have given the correct answer'\n"
            mp_choice_options:
            -   option: '`=!`'
                feedback: Eso no es correcto.
            -   option: '`==`'
                feedback: You don't have to keep guessing if you've given the right answer.
            -   option: '`!=`'
                feedback: Correcto
            -   option: '`=`'
                feedback: No es eso
            correct_answer: C
            hint: Keep guessing until you say Amsterdam
            question_score: '10'
        2:
            question_text: Which of these codes has used the correct symbol(s)?
            mp_choice_options:
            -   option: "```\n{while} nombre = Hedy\n```\n"
                feedback: No
            -   option: "```\n{while} edad = 24\n```\n"
                feedback: No
            -   option: "```\n{while} time > 0\n```\n"
                feedback: ¡Sí!
            -   option: "```\n{while} answer == yes'\n```\n"
                feedback: Falta una comilla
            correct_answer: C
            hint: When you are comparing two answers you should use ==
            question_score: '10'
        3:
            question_text: Which command should be filled in on the two blanks?
            code: "_ age >= 18\n  print 'you are not allowed in this bar'\n"
            mp_choice_options:
            -   option: '`{in}`'
                feedback: No es eso
            -   option: '`{while}`'
                feedback: Tienes razón
            -   feedback: No es eso
                option: '`{for}`'
            -   option: '`{range}`'
            question_score: '10'
            feedback: No es eso
            correct_answer: B
            hint: You are not allowed in the bar as long as you are 17 or younger
        4:
            question_text: ¿Qué le pasa a este código?
            code: "opciones = 1, 2, 3, 4, 5, 6\nprint '¡Lanza un 6 lo antes posible!'\nlanzamientos = 0\nintentos = 0\nwhile lanzamientos == 6\n    lanzamientos = opciones at random\n    print 'Lanzaste ' thrown\n    intentos = intentos + 1\nprint '¡Sí! Has lanzado 6 en ' intentos ' intentos.'\n"
            mp_choice_options:
            -   option: En la línea 1 debe utilizarse == en vez de =
                feedback: No es eso
            -   option: Faltan comillas en la línea 2
                feedback: Eso no está bien
            -   option: En la línea 5 se debería haber usado if en vez de while
                feedback: No es eso
            -   option: En la línea 5 se debería haber usado != en vez de ==
                feedback: Tienes razón
            hint: Hay algo mal en la línea 5
            question_score: '10'
            correct_answer: D
        5:
            question_text: ¿Qué hay que poner en el espacio en blanco para hacer que este programa funcione correctamente?
            code: "humedad = 10\nwhile humedad != 0\n    print 'Tu pelo sigue mojado, ¡secador activado!'\n    sleep 1\n    clear\n    humedad _\n\nprint '¡Todo seco!'\n"
            mp_choice_options:
            -   option: = humedad
                feedback: Eso no cambiará nada
            -   option: = humedad = 1
                feedback: No puedes tener dos veces = en una línea
            -   option: = humedad - 1
                feedback: ¡Tienes razón!
            -   option: = humedad + 1
                feedback: El programa debe contar hacia abajo
            correct_answer: C
            hint: la humedad debería ser menor cada vez
            question_score: '10'
        6:
            question_text: ¿qué le pasa a este código?
            code: "vidas = 100\n    {while} vidas != 0\n    respuesta = {ask} '¿Ya estás enfadado?'\n{if} respuesta == 'sí'\n    vidas = vidas - 1\n"
            mp_choice_options:
            -   option: while debe ser if
                feedback: No, eso no es correcto
            -   option: if debe ser while
                feedback: No, eso no es correcto
            -   option: La línea 3 debe empezar con más sangría
                feedback: No, eso no es correcto
            -   option: La línea 2 debe empezar con menos sangría
                feedback: Eso es correcto
            correct_answer: D
            hint: Presta atención a la sangría
            question_score: '10'
        7:
            question_text: ¿Cómo se debe cambiar este programa para que funcione?
            code: "{print} 'Adivina el número'\nnúmeros = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\nnúmero = números {at} {random}\njuego = 'encendido'\n{if} juego == 'encendido'\n    respuesta = {ask} 'Which número do you think it is?'\n    {if} respuesta < número\n        {print} _\n    {if} respuesta > número\n        {print} _\n    {if} respuesta == número\n        {print} _\n        juego = 'acabado'\n"
            mp_choice_options:
            -   option: '... cambia el primer {if} por un {while}'
                feedback: ¡Perfecto!
            -   option: '... cambia el segundo {if} por un {while}'
                feedback: Eso no es del todo correcto.
            -   option: '... cambia el tercer {if} por un {while}'
                feedback: Eso no es del todo correcto.
            -   option: '... cambia el cuarto {if} por un {while}'
                feedback: Eso no es del todo correcto.
            correct_answer: A
            hint: El último debe decir que ganaste.
            question_score: '10'
        8:
            question_text: ¿Qué sentencia es cierta sobre este sistema de baño automático?
            code: "while baño == 'ocupado'\n    luces = 'encendido'\n    pulverizar_ambientados = 'sí'\n    sleep 60\nelse\n    luces = 'apagado'\n"
            mp_choice_options:
            -   option: Las luces y el ambientador se apagarán tras 1 minuto
                feedback: ¡Falso!
            -   option: El ambientador pulveriza una vez por minuto y las luces se mantienen encendidas todo el tiempo mientras estás en el baño
                feedback: Gran trabajo
            -   option: El ambientador se pulveriza una vez has abandonado el baño.
                feedback: Sólo pulveriza cuando estás dentro.
            -   option: Las luces siempre estarán encendidas.
                feedback: Eso no estaría bien.
            correct_answer: B
            hint: El bloque después del comando while sigue ocurriendo mientras el baño está ocupado.
            question_score: '10'
        9:
            code: "chocolate = {ask} '¿Cuántas calorías has comido hoy?'\n  {while} calorias <= 1000\n      {print} 'Puedes comer más'\n  {while} calorias > 1000 and calorias =< 2000\n      {print} 'Está bien'\n  {while} calorias > 2000\n      {print} 'Ya has comido suficiente hoy'\n"
            mp_choice_options:
            -   option: Nada. 1600 no está programado en la aplicación.
                feedback: No
            -   option: puedes comer algo más
                feedback: No
            -   option: Está bien
                feedback: ¡Sí!
            -   option: Ya has comido suficiente por hoy
                feedback: No
            correct_answer: C
            hint: 1600 se encuentra entre 1000 y 2000
            question_score: '10'
            question_text: ¿Qué dirá la aplicación de dieta si hoy te has comido 1600 calorías?
        10:
            mp_choice_options:
            -   option: name_player_1
                feedback: ¡Tienes razón!
            -   feedback: ¡No, están perdiendo!
                option: name_player_2
            -   option: puntos_jugador_1
                feedback: Debes rellenar un nombre, no un número
            -   option: points_player_2
                feedback: Debes rellenar un nombre, no un número
            question_text: '¿Qué debería rellenarse en los espacios en blanco? Consejo: el jugador con más puntos está a la cabeza.'
            code: "nombre_jugador_1 = {ask} 'Nombre jugador 1:'\nnombre_jugador_2 = {ask} 'Nombre jugador 2:'\n{while} puntos_jugador_1 > puntos_jugador_2\n    {print} _ ' esté en cabeza ahora mismo!'\n"
            correct_answer: A
            hint: Ganas el juego por tener más puntos. Tu nombe debe aparecer en la pantalla
            question_score: '10'
