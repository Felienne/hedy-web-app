levels:
    1:
        1:
            question_text: Como é chamada esta linguagem de programação ?
            mp_choice_options:
            -   option: Hedy
                feedback: Bom trabalho!
            -   option: Heddy
                feedback: Não é bem essa!
            -   option: Haydie
                feedback: Não é esta!
            -   option: Heidi
                feedback: Não é esta!
            hint: Ela é nomeada em homenagem a Hedy Lamarr.
            question_score: '10'
            correct_answer: A
        2:
            question_text: O que deve ser colocado na lacuna para que o texto Olá! apareça na tela?
            code: _ Olá!
            mp_choice_options:
            -   option: |-
                    ```
                    {echo}
                    ```
                feedback: '`{echo}` repete uma resposta que foi dada antes.'
            -   option: |-
                    ```
                    {print}
                     ```
                feedback: Correto!
            -   option: |-
                    ```
                    olá
                    ```
                feedback: Olá não é um comando.
            -   option: |-
                    ```
                    {ask}
                    ```
                feedback: Com `{ask}`, você pode fazer uma pergunta.
            hint: _ Olá mundo!
            correct_answer: B
            question_score: '10'
        3:
            question_text: Como você pergunta qual a cor favorita de uma pessoa ?
            mp_choice_options:
            -   option: |-
                    ```
                    {print} Qual a sua cor favorita?
                    ```
                feedback: '`{print}` mostra texto, mas não faz perguntas.'
            -   option: |-
                    ```
                    {ask} {print} Qual a sua cor favorita?
                    ```
                feedback: Você precisa apenas de um comando, não de dois.
            -   option: |-
                    ```
                    {ask} Qual a sua cor favorita?
                    ```
                feedback: Legal!
            -   option: |-
                    ```
                    {echo} Qual a sua cor favorita?
                    ```
                feedback: '`{echo}` repete sua resposta para você.'
            hint: Você pode perguntar algo com o comando `{ask}`
            correct_answer: C
            question_score: '10'
        4:
            question_text: O que está errado neste código?
            code: |-
                Oi, eu sou Hedy!
                {ask} Quem é você?
                {echo} Oi...
            mp_choice_options:
            -   option: O `{print}` na linha 1 está faltando.
                feedback: Correto!
            -   option: O comando na linha 2 está escrito errado.
                feedback: O comando está escrito corretamente.
            -   option: '`{echo}` não é um comando.'
                feedback: '`{echo}` é um comando, há um outro erro.'
            -   option: Nada! Este é um código perfeito!
                feedback: Errado, olhe com atenção!
            hint: A linha 1 não parece correta
            question_score: '10'
            correct_answer: A
        5:
            question_text: Qual comando está faltando na linha 2?
            code: |-
                {ask} Qual é o seu bichinho de estimação favorito?
                _ Então o seu bichinho de estimação favorito é...
            mp_choice_options:
            -   option: |-
                    ```
                    {print}
                    ```
                feedback: Não, você gostaria que a resposta fosse repetida para você.
            -   option: |-
                    ```
                    Hedy
                    ```
                feedback: Hedy não é um comando.
            -   option: |-
                    ```
                    {ask}
                    ```
                feedback: Com `{ask}` você pode fazer uma pergunta.
            -   option: |-
                    ```
                    {echo}
                    ```
                feedback: Isso!
            hint: Você quer ver a resposta no final da linha 2...
            correct_answer: D
            question_score: '10'
        6:
            question_text: O que está errado com este código?
            code: |-
                {print} Oi, sou a Hedy!
                {print} Para que time de futebol você torce?
                {echo} Você torce para...
                {print} Legal! Eu também!
            mp_choice_options:
            -   option: Na linha 1, `{print}` deve ser substituído por `{ask}`.
                feedback: '`{print}` na linha 1 está correto.'
            -   option: Na linha 2, `{print}` deve ser substituído por `{ask}`.
                feedback: Excelente! Você prestou atenção!
            -   option: A linha 3 deve começar com `{print}` em vez de `{echo}`.
                feedback: '`{echo}` está correto.'
            -   option: Na linha 4, `{print}` está escrito errado.
                feedback: Não, há um erro em outro lugar
            hint: Verifique os comandos `{print}`.
            correct_answer: B
            question_score: '10'
        7:
            question_text: O que há de errado com este código?
            code: |-
                {print} Bem-vindo ao restaurante da Hedy!
                {ask} O que você gostaria de comer?
                {echo} Então você quer pedir...
                {print} Em breve! Aproveite!
            mp_choice_options:
            -   option: Na linha 1, `{print}` precisa ser substituído por `{ask}`
                feedback: Tem certeza de que algo está errado?
            -   option: Na linha 1, `{print}` precisa ser substituído por `{echo}`
                feedback: Tem certeza de que algo está errado?
            -   option: Na linha 1, `{echo}` precisa ser substituído por `{print}`
                feedback: Tem certeza de que algo está errado?
            -   option: Nada! Este é um código perfeito!
                feedback: Correto!
            hint: Verifique o código linha por linha
            question_score: '10'
            correct_answer: D
        8:
            question_text: Como se usa o comando `{echo}`?
            mp_choice_options:
            -   option: Você pode usá-lo para fazer uma pergunta com `{ask}`.
                feedback: É para isso que serve `{ask}`!
            -   option: Você pode usá-lo exatamente da mesma forma que o comando `{print}`.
                feedback: É para isso que serve `{print}`!
            -   option: Você pode usá-lo para repetir uma resposta.
                feedback: Bom trabalho!
            -   option: Você pode usá-lo para fazer o texto desaparecer.
                feedback: Isso não está certo...
            hint: '`{echo}` é usado após um comando `{ask}`.'
            correct_answer: C
            question_score: '10'
        9:
            question_text: O que há de errado com este código?
            code: |-
                {print} Olá!
                {print} Como você está?
                {echo} Então você está fazendo...
            mp_choice_options:
            -   option: '`{print}` na linha 1 deve ser `{ask}`'
                feedback: Não, `{print}` está certo. Onde a pergunta está sendo feita?
            -   option: '`{print}` na linha 2 deve ser `{ask}`'
                feedback: Muito bom!
            -   option: '`{echo}` na linha 3 deve ser `{ask}`'
                feedback: Não, `{echo}` está certo. Onde a pergunta está sendo feita?
            -   option: Nada. Este é um código perfeito!
                feedback: Olhe atentamente para o erro...
            hint: '`{ask}` permite que você faça uma pergunta'
            correct_answer: B
            question_score: '10'
        10:
            question_text: O que vai aparecer na sua tela de saída depois de executar este código?
            code: |-
                {ask} Você está pronto(a) para ir ao nível 2?
                {echo}
                {echo}
            mp_choice_options:
            -   option: Você está pronto(a) para ir ao nível 2?
                feedback: Há dois comandos `{echo}`
            -   option: |-
                    Sim!
                    Sim!
                feedback: Bom trabalho!
            -   option: Sim!
                feedback: Há dois comandos `{echo}`
            -   option: |-
                    Você está pronto(a) para ir ao nível 2?
                    Sim!
                feedback: Há dois comandos `{echo}`
            hint: Vamos lá!
            correct_answer: B
            question_score: '10'
    2:
        1:
            question_text: Qual das afirmações é verdadeira?
            mp_choice_options:
            -   option: Você pode usar o comando `{print}` para fazer perguntas.
                feedback: É para isso que serve o `{ask}`
            -   option: Você pode usar o comando `{ask}` para repetir respostas.
                feedback: Não é verdade
            -   option: Com o comando `{print}` você pode fazer o texto aparecer na tela
                feedback: Boa
            -   option: Com o comando `{sleep}`, você pode remover texto da tela.
                feedback: Não é assim que o `{sleep}` funciona.
            hint: '`{print}` ainda funciona da mesma forma que no nível 1'
            correct_answer: C
            question_score: '10'
        2:
            question_text: Qual código está correto?
            mp_choice_options:
            -   option: |-
                    ```
                    nome {is} {ask} Qual é o seu nome?
                    ```
                feedback: Super!
            -   option: |-
                    ```
                    {ask} {is} nome Qual é o seu nome
                    ```
                feedback: As palavras estão corretas, a ordem não!
            -   option: |-
                    ```
                    {ask} Qual é o seu nome?
                    ```
                feedback: Funcionou assim no nível 1, mas a partir do nível 2 funciona de forma diferente.
            -   option: |-
                    ```
                    {ask} Qual é o seu nome? {is} nome
                    ```
                feedback: As palavras estão certas, a ordem não!
            hint: '`{ask}` não funciona da mesma forma que no nível 1'
            question_score: '10'
            correct_answer: A
        3:
            question_text: O que aparece na tela de saída ao executar este código?
            code: |-
                nome {is} Marlene
                {print} nome vai ao supermercado e compra uma maçã.
            mp_choice_options:
            -   option: nome vai ao supermercado e compra uma maçã.
                feedback: A palavra nome é substituída por Marlene
            -   option: Marlene vai ao supermercado.
                feedback: A segunda parte da frase não é deixada de fora!
            -   option: Marlene vai ao supermercado e compra uma maçã.
                feedback: Na mosca!
            -   option: Marlene vai ao supermercado e Marlene compra uma maçã.
                feedback: O nome dela não é repetido na segunda parte
            hint: A palavra nome é substituída por Marlene
            question_score: '10'
            correct_answer: C
        4:
            question_text: O que você verá na tela de saída quando executar este código?
            code: |-
                nome {is} Hedy
                {print} Oi, meu nome é nome
            mp_choice_options:
            -   option: Oi, meu nome é nome
                feedback: A variável nome é substituída por Hedy
            -   option: Oi, meu nome é Hedy
                feedback: A variável nome é substituída por Hedy
            -   option: Oi, meu Hedy é nome
                feedback: A variável nome é substituída por Hedy
            -   option: Oi, meu Hedy é Hedy
                feedback: Correto, esse problema será resolvido no nível 4!
            hint: '''nome'' está sendo substituído por ''Hedy'' nos dois lugares'
            question_score: '10'
            correct_answer: D
        5:
            question_text: O que acontece quando você usa o comando `{sleep}`?
            mp_choice_options:
            -   option: Ele deixa seu computador mais lento
                feedback: felizmente não!
            -   option: Ele fecha a Hedy
                feedback: felizmente não!
            -   option: O programa pausa por um segundo e então continua
                feedback: Isso mesmo!
            -   option: Você o coloca no final para que Hedy saiba que seu programa terminou
                feedback: Não, ele seria inútil no fim do seu código
            hint: O computador espera um segundo no comando `{sleep}`
            correct_answer: C
            question_score: '10'
        6:
            question_text: O que deve estar na linha?
            code: |-
                {print} E o prêmio de melhor linguagem de programação vai para...
                _?_
                {print} Hedy!
            mp_choice_options:
            -   option: |-
                    ```
                    {sleep}
                    ```
                feedback: Perfeito!
            -   option: |-
                    ```
                    {echo}
                    ```
                feedback: Não há nada para repetir aqui
            -   option: |-
                    ```
                    {print}
                    ```
                feedback: Não há texto para ser impresso pelo comando `{print}`
            -   option: |-
                    ```
                    {ask}
                    ```
                feedback: Não há nenhuma pergunta a ser feita
            hint: Pausa para efeito dramático...
            correct_answer: A
            question_score: '10'
        7:
            question_text: Qual comando deve ser usado na linha 2?
            code: |-
                {print} Vou explodir em 3 segundos!
                _?_
                {print} BOOM!
            mp_choice_options:
            -   option: |-
                    ```
                    {print} 3
                    ```
                feedback: Você não precisa imprimir usando `{print}`
            -   option: |-
                    ```
                    {sleep} 3
                    ```
                feedback: Perfeito!
            -   option: |-
                    ```
                    {sleep}
                    ```
                feedback: Desta forma a bomba explodirá em 1 segundo
            -   option: |-
                    ```
                    {sleep} {sleep} {sleep}
                    ```
                feedback: Torne as coisas mais fáceis para você usando o número 3
            hint: Você quer que o computador espere 3 segundos
            correct_answer: B
            question_score: '10'
        8:
            question_text: Como você corrigiria a primeira linha do código?
            code: |-
                {ask} {is} Quantos anos você tem?
                {print} age
            mp_choice_options:
            -   option: |-
                    ```
                    idade {ask} {is} Quantos anos você tem?
                    ```
                feedback: A ordem está errada
            -   option: |-
                    ```
                    {ask} {is} idade Quantos anos você tem?
                    ```
                feedback: A ordem está errada
            -   option: |-
                    ```
                    idade {is} {ask} Quantos anos você tem?
                    ```
                feedback: Você conseguiu!
            -   option: |-
                    ```
                    idade {is} Quantos anos você tem?
                    ```
                feedback: Cadê o comando `{ask}`?
            hint: O nome da variável deve vir primeiro
            correct_answer: C
            question_score: '10'
        9:
            question_text: O que está errado neste código?
            code: |-
                cachorros {is} animal
                {print} Eu amo animal
            mp_choice_options:
            -   option: 'Linha 1 deveria ser: cachorros `{is}` animais'
                feedback: O nome da variável é animal
            -   option: 'Linha 1 deveria ser: animal `{is}` cachorros'
                feedback: Ótimo!
            -   option: 'Linha 2 deveria ser: `{print}` Eu amo animais'
                feedback: O nome da variável é animal
            -   option: 'Linha 2 deveria ser: `{sleep}` Eu amo animais'
                feedback: durma (sleep) não é usado para imprimir texto
            hint: Você quer imprimir 'Eu amo cachorros'
            correct_answer: B
            question_score: '10'
        10:
            question_text: Qual comando deve ser usado na linha 1?
            code: |-
                sabor {is} _?_
                {print} Seu sorvete favorito é...
                {sleep}
                {print} sabor
            mp_choice_options:
            -   option: |-
                    ```
                    {sleep} 3
                    ```
                feedback: Você quer saber o sabor favorito!
            -   option: |-
                    ```
                    {print} morango
                    ```
                feedback: Você não quer o comando `{print}` no meio da linha...
            -   option: |-
                    ```
                    morango, chocolate, baunilha
                    ```
                feedback: Assim você está fazendo uma lista. Você não quer isso agora.
            -   option: |-
                    ```
                    {ask} De que sabor de sorvete você gosta?
                    ```
                feedback: Correto!
            hint: Você quer perguntar uma questão
            correct_answer: D
            question_score: '10'
    3:
        1:
            question_text: Que comando você usa para deixar Hedy escolher algo arbitrariamente?
            mp_choice_options:
            -   option: |-
                    ```
                    {print}
                    ```
                feedback: '`{print}` é usado para imprimir texto'
            -   option: |-
                    ```
                    {ask}
                    ```
                feedback: '`{ask}` é usado para fazer uma pergunta'
            -   option: |-
                    ```
                    {is}
                    ```
                feedback: '`{is}` é usado para fazer uma lista'
            -   option: |-
                    ```
                    {at} {random}
                    ```
                feedback: Correto!
            hint: Arbitrariamente significa sem um plano ou aleatoriamente.
            question_score: '10'
            correct_answer: D
        2:
            question_text: O que há de errado com esse código?
            code: |-
                animais {is} cachorro gato vaca
                {print} animais {at} {random}
            mp_choice_options:
            -   option: 'Você precisa de vírgulas na linha 1: cachorro, gato, vaca.'
                feedback: Bom trabalho!
            -   option: A linha 1 precisa começar com `{print}`.
                feedback: Não, você não precisa de `{print}`
            -   option: Linha 2 precisa usar 'animal' ao invés de 'animais'',
                feedback: animais está correto.
            -   option: '`{at} {random}` está escrito incorretamente'
                feedback: '`{at} {random}` é a grafia correta'
            hint: Há algo errado na linha 1
            correct_answer: A
            question_score: '10'
        3:
            question_text: Como se conserta o erro na linha 2?
            code: |-
                opções {is} pedra, papel, tesoura
                {print} pedra, papel, tesoura {at} {random}
            mp_choice_options:
            -   option: |-
                    ```
                    {at} {random} {print} opções
                    ```
                feedback: Você está quase lá. A ordem das palavras ainda não está certa.
            -   option: |-
                    ```
                    {print} pedra {at} {random}
                    ```
                feedback: Você não quer que Hedy sempre {print} pedra, às vezes você quer tesoura e papel.
            -   option: |-
                    ```
                    {print} opções {at} {random}
                    ```
                feedback: Muito bem!
            -   option: Nada, o código está correto!
                feedback: Procure com atenção o erro
            hint: A variável (a lista) é chamada de opções.
            correct_answer: C
            question_score: '10'
        4:
            question_text: O que deve mudar na linha 2 para imprimir um preço aleatório?
            code: |-
                preços {is} 1 dólar, 100 dólares, 1 milhão de dólares
                {print} preço {at} {random}
            mp_choice_options:
            -   option: |-
                    ```
                    {print} preço
                    ```
                feedback: Você não quer usar `{print}` para imprimir a palavra preço, mas você quer usar `{print}` para imprimir um preço da lista aleatoriamente (`{at} {random}`)
            -   option: |-
                    ```
                    {print} preços {at} {random}
                    ```
                feedback: Ótimo! Você realmente prestou atenção.
            -   option: |-
                    ```
                    {print} {at} {random} preço
                    ```
                feedback: '`{at} {random}` foi colocado atrás da variável.'
            -   option: Nada, este código está certo.
                feedback: Procure com atenção o erro que você deixou passar!
            hint: O nome da variável é preços
            correct_answer: B
            question_score: '10'
        5:
            question_text: O que há de errado neste código?
            code: |-
                questão {is} {ask} O que você quer saber?
                {print} questão
                respostas {is} sim, não, talvez
                {print} respostas {at} {random}
            mp_choice_options:
            -   option: Linha 1 precisa usar `{print}` ao invés de `{ask}`
                feedback: Não, isso não está errado.
            -   option: Linha 2 precisa usar `{ask}` ao invés de `{print}`
                feedback: Não, isso não está errado.
            -   option: Linha 2 precisa usar respostas `{at} {random}` `{is}` sim, não, talvez
                feedback: Não, isso não está errado.
            -   option: Nada, esse código é perfeito
                feedback: Isso mesmo!
            hint: Esse código tem algum erro mesmo?
            correct_answer: D
            question_score: '10'
        9:
            code: |-
                colors {is} blue, purple, green
                chosen_color {is} {ask} Which haircolor wouldn't your like to have?
                {remove} chosen_color {from} colors
                {print} I will dye my hair color {at} {random}
            hint: Look at line 3
            mp_choice_options:
            -   feedback: Maybe you want blue hair though!
                option: 'Line 3 should say: `{remove}` blue `{from}` colors'
            -   option: Line 3 should have an `{add}` command instead of a `{remove}` command
                feedback: You want to remove the chosen color so `{remove}` is right.
            -   feedback: Great job!
                option: In line 4 the variable should be called colors instead of color
            -   option: Nothing, this is a correct code!
                feedback: Find the mistake!
            question_text: What's wrong with this code?
            question_score: '10'
            correct_answer: C
        10:
            question_text: What should be on the _?_?
            code: |-
                walkers {is} dad, mom, Sam, Petra
                walked_yesterday {is} {ask} Who walked the dogs yesterday?
                {print} walked_yesterday shouldn't have to walk the dogs again today
                _?_
                {print} walkers {at} {random} , it's your turn to walk the dogs!
            mp_choice_options:
            -   option: |-
                    ```
                    {remove} walked_yesterday {from} walkers
                    ```
                feedback: Super!
            -   option: |-
                    ```
                    {remove} walked yesterday {to} walkers
                    ```
                feedback: '`{remove} {from}` or `{add} {to}`, not `{remove} {to}`'
            -   option: |-
                    ```
                    {remove} walkers {from} yesterday
                    ```
                feedback: yesterday is not a variable
            -   option: |-
                    ```
                    {add} walked_yesterday {to} walkers
                    ```
                feedback: This increased the change that the person who walked yesterday now has to do it again. That's mean.
            hint: The person who walked the dog yesterday should be removed from the list.
            correct_answer: A
            question_score: '10'
        6:
            mp_choice_options:
            -   option: Line 2 needs to say question instead of answers
                feedback: No that's not right
            -   feedback: Correct
                option: Line 2 needs the `{is}` command
            -   feedback: No the variable's called answers
                option: Line 3 needs to say answer instead of answers
            -   option: Nothing! This code is great!
                feedback: Actually, line 2 has a mistake.
            hint: There is something wrong with line 2.
            code: "question {is} {ask} What do you want to know?\nanswers yes, no, maybe\n{print} answers {at} {random}"
            correct_answer: B
            question_text: What's wrong with this code?
            question_score: '10'
        7:
            mp_choice_options:
            -   feedback: The remove command removes, the add command adds
                option: The `{add}` command removes a random book from the list
            -   feedback: It doesn't. It adds your answer to the list!
                option: The `{add}` command adds a random book to a list
            -   feedback: Correct!
                option: The `{add}` command adds your favorite book to the list
            -   option: The `{add}` command prints your favorite book.
                feedback: No, it adds your favorite book to the list
            question_score: '10'
            correct_answer: C
            hint: The `{add}` command adds a book, but which one?
            code: "books {is} Harry Potter, The Hobbit, Green Eggs and Ham\nyour_book {is} {ask} What is your favorite book?\n{add} your_book {to} books\n{print} books {at} {random}"
            question_text: What does the `{add}` command do?
        8:
            mp_choice_options:
            -   option: You can't tell, because Hedy will `{print}` one of the 3 flavors `{at} {random}`
                feedback: Take a look at the `{remove}` commands
            -   feedback: sea salt is removed from the list
                option: sea salt
            -   feedback: Paprika is removed from the list
                option: paprika
            -   option: sour cream
                feedback: That's right!
            code: "crisps {is} sea salt, paprika, sour cream\n{remove} sea salt {from} crisps\n{remove} paprika {from} crisps\n{print} crisps {at} {random}"
            hint: There are 3 flavors, bit 2 are removed. Which one remains?
            correct_answer: D
            question_score: '10'
            question_text: What is the output of this code?
    4:
        1:
            question_text: Which of these is true?
            mp_choice_options:
            -   option: '`{print}` and `{ask}` now need quotation marks'
                feedback: That's right
            -   option: Only `{print}` needs quotation marks
                feedback: '`{ask}` needs quotation marks too!'
            -   option: '`{at} {random}` doesn''t work anymore in level 4'
                feedback: '`{at} {random}` still works'
            -   option: '`{at} {random}` now needs quotation marks'
                feedback: No, but 2 other commands do.
            hint: In level 4 you need quotation marks for 2 commands.
            correct_answer: A
            question_score: '10'
        2:
            mp_choice_options:
            -   option: |-
                    ```
                    {print} `hello`
                    ```
                feedback: This quotation mark is skewed, you need a straight one.
            -   option: |-
                    ```
                    {print} 'hello'
                    ```
                feedback: Correct
            -   option: |-
                    ```
                    {print} hello
                    ```
                feedback: There are no quotation marks here!.
            -   option: |-
                    ```
                    {print} ,hello,
                    ```
                feedback: This is a comma, you need quotation marks.
            correct_answer: B
            question_score: '10'
            question_text: Which code uses the proper quotation marks?
            hint: Pick the right quotation marks.
        3:
            mp_choice_options:
            -   option: |-
                    ```
                    {print} Hi Im Hedy
                    ```
                feedback: Add quotation marks please!
            -   option: |-
                    ```
                    {print} 'Hi Im Hedy
                    ```
                feedback: Both before and after the words you want to print should be a quotation mark.
            -   option: |-
                    ```
                    '{print} Hi Im Hedy'
                    ```
                feedback: The first quotation mark should be behind the word {print}
            -   option: |-
                    ```
                    {print} 'Hi Im Hedy'
                    ```
                feedback: Perfect!
            question_score: '10'
            correct_answer: D
            question_text: Where are the quotation marks used correctly?
            hint: Both before and after the words you want to print should be a quotation mark.
        5:
            mp_choice_options:
            -   option: |-
                    ```
                    '{print} options {at} {random}'
                    ```
                feedback: Never put the quotation mark in front of the {print} command.
            -   option: |-
                    ```
                    {print} 'options' {at} {random}
                    ```
                feedback: options is a variable. You don't literally want to print 'options {at} {random}'.
            -   option: |-
                    ```
                    {print} options {at} {random}
                    ```
                feedback: That's right
            -   option: Nothing, the game already works!
                feedback: Look carefully. There is an error.
            correct_answer: C
            question_text: What has to be changed in order for the game to work?
            question_score: '10'
            code: "options {is} rock, paper, scissors\n{print} 'options {at} {random}'"
            hint: You don't want Hedy to literally print 'options {at} {random}', you want it to print 'rock' or 'paper' or 'scissors'.
        6:
            hint: 'Think carefully: what is a variable and should be outside of the quotation marks? And what are normal words that should be inside?.'
            question_text: What would be a good next line in this code?
            question_score: '10'
            mp_choice_options:
            -   feedback: Great! You get it!
                option: "```\n{print} 'You win...' prices {at} {random}\n```"
            -   option: "```\n{print} You win... 'prices {at} {random}'\n```"
                feedback: Hedy will literally print 'prices {at} {random}'
            -   option: "```\n{print} You win... prices {at} {random}\n```"
                feedback: You need some quotation marks!
            -   option: "```\n{print} 'You win... prices {at} {random}'\n```"
                feedback: Hedy will literally print 'prices {at} {random}''
            correct_answer: A
            code: prices {is} 1 dollar, 100 dollars, 1 million dollars
        9:
            mp_choice_options:
            -   option: Ajax is going to win the champions league
                feedback: Hedy could `{print}` that
            -   option: Real Madrid is going to win the champions league
                feedback: Hedy could `{print}` that
            -   option: Bayer Munchen is going to win the champions league
                feedback: Hedy could `{print}` that
            -   option: FC Barcelona is going to win the champions league
                feedback: That's right. It's not in the list
            code: "clubs {is} Real Madrid, Bayern Munchen, Manchester United, Ajax\n{print} clubs {at} {random} ' is going the win the champions league'"
            question_text: What will never appear in your output screen?
            hint: What are Hedy's options to randomly pick from?
            question_score: '10'
            correct_answer: D
        4:
            mp_choice_options:
            -   feedback: The quotation marks shouldn't be around the command itself.
                option: "You need quotation marks around the word `{print}`, like this: `'{print}'`."
            -   option: You need quotation marks around the words you want to print.
                feedback: Super!
            -   option: You do not need quotation marks when using the `{ask}` command
                feedback: Both `{print}` and `{ask}` require quotation marks
            -   option: You can choose yourself whether to use quotation marks or not.
                feedback: Unfortunately, Hedy is stricter than that.
            correct_answer: B
            hint: From level 4 on you need to use quotation marks.
            question_text: Which statement is true?
            question_score: '10'
        7:
            mp_choice_options:
            -   option: Quotation marks are missing in line 1
                feedback: Correct!
            -   feedback: A variable doesn't need quotes
                option: Quotation marks are missing in line 2
            -   feedback: You don't want Hedy to literally print 'answers {at} {random}' so no quotation marks needed here!
                option: Quotation marks are missing in line 3
            -   option: Nothing, this code is good as is!
                feedback: Look carefully. You missed a mistake!
            hint: Check each line on whether they'd need quotation marks or not.
            question_text: What's wrong with this code?
            question_score: '10'
            code: "question {is} {ask} What do you want to know?\nanswers {is} yes, no, maybe\n{print} answers {at} {random}"
            correct_answer: A
        10:
            mp_choice_options:
            -   feedback: A list doesn't need quotation marks
                option: Quotation marks are missing in line 1
            -   feedback: Correct
                option: Quotation marks are missing in line 2
            -   option: Quotation marks are missing in both line 2 and 3
                feedback: Line 3 doesn't need quotation marks because it's not printed literally
            -   feedback: You missed one!
                option: Nothing, this code has no mistakes
            question_text: Which statement is true?
            correct_answer: B
            code: "people {is} mom, dad, Emma, Sophie\n{print} The dishes are done by...\n{print} people {at} {random}"
            question_score: '10'
            hint: One line needs quotation marks, because you want it to be printed literally.
        8:
            mp_choice_options:
            -   option: "```\n{print} So you pick door door\n```"
                feedback: We need quotation marks
            -   feedback: If the player chooses door 3, Hedy will say 'So you pick 3 3
                option: "```\n{print} 'So you pick ' door door\n```"
            -   feedback: Super!
                option: "```\n{print} 'So you pick door ' door\n```"
            -   option: "```\n{print} 'So you pick door door'\n```"
                feedback: Hedy will literally print 'So you pick door door
            question_text: What would be a good next line for this code?
            hint: The second word door should be replaced with the number, the first should still be the word door...
            correct_answer: C
            question_score: '10'
            code: "{print} 'Welcome at the money show!'\n{print} 'In front of you are 3 doors'\ndoor {is} {ask} 'Which door do you choose?'"
    5:
        1:
            question_text: What is true?
            code: |-
                number {is} {ask} 'What is your lucky number?'
                {if} number {is} 5 {print} 'Mine too!'
                _?_ {print} 'My lucky number is 5!'
            mp_choice_options:
            -   option: In level 5 `{print}` works differently than in level 4
                feedback: '`{print}` is still the same'
            -   option: In level 5 `{ask}` works differently than in level 4
                feedback: '`{ask}` is still the same'
            -   option: In level 5 `{ask}` and `{print}` work differently than in level 4
                feedback: '`No these commands remain the same'
            -   option: In level 5 `{ask}` and `{print}` work the same as in level 4
                feedback: Correct!
            hint: We have only learned a new command in level 5.
            correct_answer: D
            question_score: '10'
        3:
            hint: '`{if}` password `{is}` ... `{print}` ''Correct!''!'''
            code: "password {is} {ask} 'What is the password?'\n{if} password {is} SECRET {print} 'Correct!'\n{else} {print} 'ALARM! INTRUDER!'"
            mp_choice_options:
            -   option: Correct!
                feedback: This is printed when you type in the correct password
            -   feedback: That's right!'
                option: SECRET
            -   option: password
                feedback: The password isn't password...
            -   feedback: This is printed when you type in the incorrect password!
                option: ALARM INTRUDER
            question_text: What is the right password?
            question_score: '10'
            correct_answer: B
        6:
            question_text: Which word should be on the place of the question mark in the last line?
            code: |-
                {print} 'Im Hedy the football fortune teller!'
                {print} 'I will predict what place your team will end up!'
                club is {ask} 'Which club is your favorite?'
                {if} club {is} ajax {print} 'Ajax is going to win of course!'
                _?_ {print} 'Sorry, your club is gonna be in last place...'
            mp_choice_options:
            -   option: "```\n{if}\n```"
                feedback: '`{if}` is already in the line above'
            -   option: "```\n{at} {random}\n```"
                feedback: No, you need `{else}`.
            -   feedback: Great!
                option: "```\n{else}\n```"
            -   feedback: '`{print}` is already there, we need a word before it!'
                option: "```\n{print}\n```"
            hint: '`{if}` goes together with...?'
            correct_answer: C
            question_score: '10'
        7:
            question_text: Which word should be in the place of the question mark?
            code: |-
                {print} 'I can predict if you will be a millionair or not!'
                name {is} {ask} 'Whats your name?'
                {if} name {is} Hedy {print} 'You will be a millionair!'
                {else} _?_ 'Unfortunately... No big money for you.'
            mp_choice_options:
            -   option: |-
                    ```
                    {if}
                    ```
                feedback: '`{if}` is in the line above.'
            -   option: |-
                    ```
                    {at} {random}
                    ```
                feedback: No, you don't need `{at} {random}`.
            -   option: |-
                    ```
                    {else}
                    ```
                feedback: There already is an `{else}` command
            -   option: |-
                    ```
                    {print}
                    ```
                feedback: Awesome!
            hint: After `{else}` a `{print}` command follows
            correct_answer: D
            question_score: '10'
        8:
            question_text: Which word should be on the place of the question mark?
            code: |-
                animal {is} {ask} 'What is your favorite animal?'
                {if} _?_ {is} penguin {print} 'Thats my favorite animal too!'
                {else} {print} 'Cool! I like penguins.'
            mp_choice_options:
            -   option: |-
                    ```
                    favorite animal
                    ```
                feedback: That's not the variable name.
            -   option: |-
                    ```
                    animal
                    ```
                feedback: Great job!
            -   option: |-
                    ```
                    {if}
                    ```
                feedback: '`{if}` is already there'
            -   option: |-
                    ```
                    {print}
                    ```
                feedback: No, that's not it.
            hint: What the variable name?
            correct_answer: B
            question_score: '10'
        2:
            mp_choice_options:
            -   option: fun
                feedback: That's right!
            -   feedback: If the name is Hedy, it will say 'fun''
                option: less fun
            -   feedback: No, it doesn't print the name
                option: Hedy
            -   option: Error
                feedback: Fortunately not!
            question_text: What appears in your output screen when you type in the name Hedy?
            hint: '`{if}` name `{is}` Hedy `{print}` ...?'
            correct_answer: A
            code: "name {is} {ask} 'What is your name?'\n{if} name {is} Hedy {print} 'fun' {else} {print} 'less fun'"
            question_score: '10'
        4:
            mp_choice_options:
            -   feedback: That's printed if the correct answer is given, not the wrong one...
                option: Correct
            -   feedback: That's not the right answer
                option: SECRET
            -   option: Wrong!
                feedback: No, this is not what Hedy will print
            -   option: ALARM! INTRUDER!
                feedback: Great job!
            hint: Your computer will sound the alarm for intruders!
            code: "password {is} {ask} 'What is the password?'\n{if} password {is} SECRET {print} 'Correct!'\n{else} {print} 'ALARM! INTRUDER!'"
            correct_answer: D
            question_score: '10'
            question_text: What does Hedy print when you type in the wrong password?
        5:
            hint: The spelling of the word has to be exactly the same.
            mp_choice_options:
            -   feedback: Indeed!
                option: Because it needs to be in capitals, so SECRET
            -   feedback: No, this is not the password.
                option: Because the password is alarm
            -   feedback: That's not how you spell secret
                option: Because it's spelled wrong.
            -   option: Because Hedy makes a mistake
                feedback: No, Hedy is right
            correct_answer: A
            question_score: '10'
            code: "password {is} {ask} 'What is the password?'\n{if} password {is} SECRET {print} 'Correct!'\n{else} {print} 'ALARM! INTRUDER!'"
            question_text: Why will Hedy say 'ALARM! INTRUDER' when you type in 'secret'?
        10:
            question_text: Which monster is standing behind door 1?
            mp_choice_options:
            -   feedback: Awesome!
                option: Hedy picks a random monster each time.
            -   option: vampire
                feedback: Not always...
            -   feedback: Not always...
                option: werewolf
            -   feedback: Not always...
                option: giant spider
            hint: Mind the last 3 words... monsters `{at} {random}`...
            question_score: '10'
            correct_answer: A
            code: "{print} 'Escape from the haunted house!'\n{print} 'There are 3 doors in front of you'\ndoor {is} {ask} 'Which door do you choose?'\nmonsters {is} vampire, werewolf, giant spider\n{if} door {is} 2 {print} 'Yay, you can escape!'\n{else} {print} 'You are being devoured by a... ' monsters {at} {random}"
        9:
            mp_choice_options:
            -   feedback: Bad choice! You're being eaten
                option: '1'
            -   feedback: Super! You escaped!
                option: '2'
            -   feedback: Bad choice! You're being eaten.
                option: '3'
            -   option: It's a trap, you will always be eaten!
                feedback: Luckily not!
            question_text: Which door should you choose to escape??
            question_score: '10'
            correct_answer: B
            hint: One of the doors will keep you safe..
            code: "{print} 'Escape from the haunted house!'\n{print} 'There are 3 doors in front of you'\ndoor {is} {ask} 'Which door do you choose?'\nmonsters {is} vampire, werewolf, giant spider\n{if} door {is} 2 {print} 'Yay, you can escape!'\n{else} {print} 'You are being devoured by a... ' monsters {at} {random}"
    6:
        2:
            question_text: Which sign do you use for an addition?
            question_score: '10'
            correct_answer: D
            mp_choice_options:
            -   feedback: That's not it
                option: '`-`'
            -   option: plus
                feedback: That's not it
            -   option: '`*`'
                feedback: That's not it
            -   option: '`+`'
                feedback: Correct!
            hint: It's the plus sign.
        6:
            question_text: How much does a hamburger cost is this virtual restaurant?
            mp_choice_options:
            -   feedback: Super!
                option: 15 dollars
            -   option: 6 dollars
                feedback: The fries are 6 dollars
            -   feedback: The hamburger isn't free!
                option: 0 dollars
            -   feedback: That's the price for a hamburger and fries!
                option: 21 dollars
            question_score: '10'
            hint: Mind the fourth line.
            correct_answer: A
            code: "{print} 'Welcome at Hedys diner'\nfood = {ask} 'What would you like to eat?'\nprice = 0\n{if} food {is} hamburger price = 15\n{if} food {is} fries price = 6"
        10:
            code: |-
                name _?_ Hedy
                {print} name 'is walking trough the forrest'
            mp_choice_options:
            -   option: You can only fill in the word is on the `_?_`
                feedback: You are allowed to use the `=` sign as well
            -   option: You can fill in either the word is or the `=` sign on the `_?_`
                feedback: Amazing!
            -   option: You have to fill in =is= on the `_?_`
                feedback: No, one `=` sign is enough
            -   option: You can only use the `=` sign when working with numbers, not with words.
                feedback: You can also use `=` with words.
            hint: '`{is}` and `=` are both allowed'
            correct_answer: B
            question_score: '10'
            question_text: Which statement is true?
        1:
            hint: The `*` is used as a multiplication sign
            code: '{print} 2*10'
            correct_answer: A
            mp_choice_options:
            -   feedback: Correct!
                option: '20'
            -   feedback: No, the plus sign is used in addition
                option: '12'
            -   feedback: No, Hedy will calculate the answer
                option: 2*10
            -   feedback: Mind it's a calculation.
                option: '210'
            question_score: '10'
            question_text: What's Hedy's output when you run this code?
        4:
            hint: 'Kim has 3 letters, she is 10 years old so: letters times age = 3*10 = 30.'
            mp_choice_options:
            -   feedback: Mind, Hedy also prints 'Your lucky number is...'
                option: '30'
            -   feedback: Please try again.
                option: '10'
            -   feedback: That's right!
                option: Your lucky number is... 30
            -   option: Your lucky number is... 10
                feedback: Her lucky number is name times age...
            question_text: Kim is 10 years old. What will Hedy print for her?
            code: "name = {ask} 'How many letters are in your name?'\nage = {ask} 'How old are you?'\nluckynumber = name*age\n{print} 'Your lucky number is...' luckynumber"
            correct_answer: C
            question_score: '10'
        5:
            question_text: If 5 people eat at this restaurant, how much do they have to pay in total?
            mp_choice_options:
            -   option: 5 dollars
                feedback: Unfortunately, it's not that cheap.
            -   option: 10 dollars
                feedback: No, it's 10 dollars each.
            -   feedback: The * means multiplication.
                option: 15 dollars
            -   option: 50 dollars
                feedback: Great!
            hint: '`price` `is` `people` `times` 10'
            correct_answer: D
            question_score: '10'
            code: "{print} 'Welcome to Hedys!'\npeople = {ask} 'How many people are eating with us tonight?'\nprice = people * 10\n{print} 'That will be ' price 'dollar please'"
        8:
            mp_choice_options:
            -   feedback: No, there should be!
                option: There shouldn't be quotation marks in line 2
            -   feedback: Correct!
                option: The variable is called correct answer, but a variable's name can only be 1 word. So it should be correct_answer
            -   option: The `{if}` and `{else}` commands should be in the same line.
                feedback: No, that's not true.
            -   feedback: Variable names can be similar, but they can't be 2 words...
                option: The variable in line 2 can't be called answer, because it is too similar to the variable correct answer.
            hint: Inspect what the variables are called.
            question_text: Why is this code incorrect?
            question_score: '10'
            code: "correct answer = 3*12\nanswer = {ask} 'What is 3 times 12?'\n{if} answer {is} correct answer {print} 'Good job!'\n{else} {print} 'No... It was ' correct answer"
            correct_answer: B
        7:
            mp_choice_options:
            -   option: It could have been `price = 3` just as well.
                feedback: No, that's not true. Hedy needs to add 3 dollars to the total.
            -   option: Because Hedy doesn't understand `price = 3`.
                feedback: Hedy would understand, but it wouldn't be right.
            -   option: Because Hedy would otherwise forget about the previous order. The price would be 3 dollars in total.
                feedback: That's right!
            -   option: Because the price is 0 dollars to begin with.
                feedback: That's true, but not the reason
            question_score: '10'
            question_text: Why does line 7 say 'price is price + 3' instead of 'price is 3'?
            correct_answer: C
            hint: The price shouldn't be 3, but 3 dollars more than it already was
            code: "{print} 'Welcome at Hedys diner'\nfood = {ask} 'What would you like to eat?'\nprice = 0\n{if} food {is} hamburger price = price + 15\n{if} food {is} fries price = price + 6\ndrinks is {ask} 'What would you like to drink?'\n{if} drinks {is} coke price = price + 3\n{if} drinks {is} water price = price + 1\n{print} price ' dollars please'"
        3:
            mp_choice_options:
            -   feedback: This would be the right answer if there were no quotation marks.
                option: '30'
            -   feedback: Try again..
                option: '13'
            -   option: 3*10
                feedback: Correct! There are quotation marks, so Hedy will print it literally.
            -   option: Nothing, Hedy will give an error message.
                feedback: No, Hedy will print it literally.
            hint: Mind the quotation marks!!
            correct_answer: C
            question_text: What's Hedy's output when you run this code?
            code: "{print} '3*10'"
            question_score: '10'
        9:
            correct_answer: C
            mp_choice_options:
            -   feedback: (2 bananas + 3 hygiene) * 10 football = 5*10 =?
                option: 10%
            -   feedback: (2 bananas + 3 hygiene) * 10 football = 5*10 =?
                option: 32%
            -   option: 50%
                feedback: Super! You are 100 percent smart!
            -   feedback: (2 bananas + 3 hygiene) * 10 football = 5*10 =?
                option: 100%
            question_score: '10'
            question_text: Imagine you love football a 10, you've eaten 2 bananas and have washed your hands 3 times today. How smart does the silly fortune teller think you are?
            hint: (2 bananas + 3 hygiene) * 10 football = 5*10 =?
            code: "{print} 'Im Hedy the silly fortune teller'\n{print} 'I will predict how smart you are!'\nfootball = {ask} 'On a scale of 0 to 10 how much do you love football?'\nbananas = {ask} 'How many bananas have you eaten this week?'\nhygiene = {ask} 'How many times did you wash your hands today??'\nresult = bananas + hygiene\nresult = result * football\n{print} 'You are ' result 'percent smart.'"
    7:
        1:
            mp_choice_options:
            -   option: '0'
                feedback: No you can repeat a line.
            -   option: '1'
                feedback: Correct, one line at a time
            -   option: '2'
                feedback: In this level only one line at a time
            -   option: infinite
                feedback: In this level you can only repeat one line at a time
            hint: You can only repeat 1 line at a time
            correct_answer: B
            question_score: '10'
            question_text: How many lines can you repeat at once with the repeat command at this level?
        2:
            hint: First the repeat command, then the `{print}` command
            mp_choice_options:
            -   feedback: "`{repeat}` 100 `{times}` `{print}` 'hello'"
                option: "```\n{print} 100 {times} 'hello'\n```"
            -   option: "```\n{print} {repeat} 100 {times} 'hello'\n```"
                feedback: "{repeat} 100 {times} {print} 'hello'"
            -   feedback: "{repeat} 100 {times} {print} 'hello'"
                option: "```\n{repeat} 'hello' 100 {times}\n```"
            -   option: "```\n{repeat} 100 {times} {print} 'hello'\n```"
                feedback: That's right!
            correct_answer: D
            question_score: '10'
            question_text: Which code is right?
        4:
            mp_choice_options:
            -   option: |-
                    ```
                    I'm
                    ```
                feedback: That's right!
            -   option: |-
                    ```
                    {print}
                    ```
                feedback: '`{print}` is spelled correctly'
            -   option: |-
                    ```
                    {repeat}
                    ```
                feedback: '`{repeat}` is spelled correctly'
            -   option: |-
                    ```
                    {times}
                    ```
                feedback: '`{times}` is spelled correctly'
            hint: I'm is wrong, you can't use apostrophes
            question_score: '10'
            code: "{print} 'I'm blue'\n{repeat} 7 {times} {print} 'da ba dee, da ba da'"
            correct_answer: A
            question_text: Which word is wrong in the code?
        6:
            mp_choice_options:
            -   option: |-
                    the wheels on the bus go
                    round and round
                feedback: Only the second line is repeated 3 times
            -   option: |-
                    the wheels on the bus go
                    the wheels on the bus go
                    the wheels on the bus go
                    round and round
                feedback: Only the second line is repeated 3 times
            -   option: |-
                    the wheels on the bus go
                    round and round
                    the wheels on the bus go
                    round and round
                    the wheels on the bus go
                    round and round
                feedback: Only the second line is repeated 3 times
            -   option: |-
                    the wheels on the bus go
                    round and round
                    round and round
                    round and round
                feedback: All though the town! Perfect!
            correct_answer: D
            question_score: '10'
            hint: Only 'round and round' is repeated 3 times.
            question_text: What will be the output from this code?
            code: "{print} 'The wheels on the bus go'\n{repeat} 3 {times} {print} ' round and round'"
        7:
            mp_choice_options:
            -   option: |-
                    We will We will
                    ROCK YOU!
                feedback: '''We will'' won''t appear twice in the same line'
            -   option: |-
                    We will
                    We will
                    ROCK YOU!
                feedback: Great!
            -   option: |-
                    We will
                    ROCK YOU!
                    We will
                    ROCK YOU!
                feedback: ROCK YOU! won't be repeated
            -   option: |-
                    We will
                    ROCK YOU!
                feedback: Mind the repeat command
            correct_answer: B
            question_score: '10'
            question_text: What will be the output from this code?
            hint: Mind the `{repeat}` command.
            code: "{repeat} 2 {times} {print} 'We will'\n{print} 'ROCK YOU!'"
        8:
            question_text: Welke Hedy code hoort bij dit resultaat
            mp_choice_options:
            -   option: |-
                    ```
                    {print} 'Here comes the sun'
                    {print} 'Do do do do'
                    {print} 'Here comes the sun'
                    {print} 'And I say'
                    {print} 'Its alright'
                    ```
                feedback: Perfect, je kan het `{repeat}` commando hier niet gebruiken.
            -   option: |-
                    ```
                    {repeat} 2 {times} {print} 'Here comes the sun'
                    {print} 'And I say'
                    {print} 'Its alright'"
                feedback: Waar is de 'Do do do do' gebleven?
            -   option: |-
                    ```
                    {repeat} 2 {times} {print} 'Here comes the sun'
                    {print} 'Do do do do'
                    {print} 'And I say'
                    {print} 'Its alright'
                    ```
                feedback: Dit is niet de juiste volgorde..
            -   option: |-
                    ```
                    {repeat} 2 {times} {print} 'Here comes the sun'
                    {repeat} 2 {times} {print} 'Do do'
                    {print} 'And I say'
                    {print} 'Its alright'"
                    ```
                feedback: Dit is niet de juiste volgorde..
            hint: '`{repeat}` kan alleen worden gebruikt als je dezelfde regel meerdere keren achter elkaar wil uitvoeren.'
            question_score: '10'
            correct_answer: A
            code: "Here comes the sun\nDo do do do\nHere comes the sun\nAnd I say\nIts alright"
        9:
            question_text: Welke Hedy code hoort bij dit resultaat ?
            code: |-
                Batman was flying through Gotham.
                When suddenly he heard someone screaming...
                Help !
                Help !
                Help !
                Please help me !"
            mp_choice_options:
            -   option: |-
                    ```
                    {print} 'Batman was flying through Gotham. '
                    {print} 'When suddenly he heard someone screaming...'
                    {print} 'Help !'
                    {repeat} 3 {times} {print} 'Please help me !'
                    ```
                feedback: Je herhaalt de verkeerde regel
            -   option: |-
                    ```
                    {print} 'Batman was flying through Gotham.'
                    {print} 'When suddenly he heard someone screaming...'
                    {repeat} 3 {times} 'Help !'
                    {print} 'Please help me !'
                    ```
                feedback: Het commando `{print}` mist op regel 3
            -   option: |-
                    ```
                    {print} Batman was flying through Gotham.
                    {print} When suddenly he heard someone screaming...
                    {repeat} 3 {times} {print} Help !
                    {print} Please help me !
                    ```
                feedback: Je vergeet de aanhalingstekens
            -   option: |-
                    ```
                    {print} 'Batman was flying through Gotham.'
                    {print} 'When suddenly he heard someone screaming...'
                    {repeat} 3 {times} {print} 'Help !'
                    {print} 'Please help me !'
                    ```
                feedback: Perfect
            hint: '''Help !'' wordt 3x herhaald.'
            correct_answer: D
            question_score: '10'
        10:
            question_text: What Hedy code belongs to this output?
            mp_choice_options:
            -   option: |-
                    ```
                    {repeat} 2 {times} 'if youre happy and you know it clap your hands'
                    {print} 'if youre happy and you know it and you really want to show it'
                    {print} 'if youre happy and you know it clap your hands'
                    ```
                feedback: Almost! the first line needs an extra word
            -   option: |-
                    ```
                    {repeat} 2 {times} {print} 'if youre happy and you know it clap your hands'
                    {print} 'if youre happy and you know it and you really want to show it'
                    {print} 'if youre happy and you know it clap your hands'
                    ```
                feedback: Great!
            -   option: |-
                    ```
                    {repeat} 3 {times} {print} 'if youre happy and you know it clap your hands'
                    {print} 'if youre happy and you know it and you really want to show it'
                    ```
                feedback: This is not in the right order.
            -   option: |-
                    ```
                    {repeat} 4 {times} 'if youre happy and you know it'
                    {repeat} 2 times 'clap your hands'
                    {print} 'and you really want to show it'
                    {print} 'clap your hands'
                    ```
                feedback: This is not in the right order.
            hint: Mind the order of the sentences.
            question_score: '10'
            correct_answer: B
            code: "if youre happy and you know it clap your hands\nif youre happy and you know it clap your hands\nif youre happy and you know it and you really want to show it\nif youre happy and you know it clap your hands"
        3:
            mp_choice_options:
            -   feedback: No, a word is missing
                option: Right
            -   feedback: The word `{repeat}` is there, another word is missing
                option: Wrong, the word `{repeat}` is missing
            -   option: Wrong, the word `{times}` is missing
                feedback: The word `{times}` is there, another word is missing.
            -   feedback: Correct
                option: Wrong, the word `{print}` is missing
            code: "{repeat} 100 {times} 'Hello!'"
            hint: "It should be: `{repeat}` 100 `{times}` `{print}` 'Hello'"
            question_score: '10'
            correct_answer: D
            question_text: Is this code right or wrong?
        5:
            mp_choice_options:
            -   feedback: That's right!
                option: Correct
            -   option: Wrong
                feedback: That's not it
            question_text: Is this code right or wrong?
            code: "{repeat} 100 {times} {print} 'Hedy is awesome!'"
            question_score: '10'
            hint: The code is correct!
            correct_answer: A
    8:
        2:
            mp_choice_options:
            -   option: This should be only one line, not 2.
                feedback: No it should be 2 lines.
            -   option: This `{print}` command has to go
                feedback: No, you need it.
            -   option: There is a spelling mistake in the `{repeat}` command.
                feedback: Nee, repeat is de goede spelling
            -   option: The second line need to start with 4 spaces as indentation.
                feedback: Correct!
            code: "{repeat} 5 {times}\n{print} 'Hedy is cool!'"
            question_text: What is wrong with this code?
            question_score: '10'
            correct_answer: D
            hint: Something is missing in the second line?
        3:
            mp_choice_options:
            -   option: |-
                    Baby shark tututudutudu
                    Baby shark
                feedback: Mind the `{repeat}` command!
            -   option: |-
                    Baby shark tututudutudu
                    Baby shark
                    Baby shark tututudutudu
                    Baby shark
                    Baby shark tututudutudu
                    Baby shark
                feedback: The last line has no indentation, so it's not repeated.
            -   option: |-
                    Baby shark tututudutudu
                    Baby shark tututudutudu
                    Baby shark tututudutudu
                    Baby shark
                feedback: Right!
            -   option: |-
                    Baby shark tututudutudu
                    Baby shark
                    Baby shark
                    Baby shark
                feedback: What is being repeated and what isn't.
            hint: What is being repeated and what is not?.
            question_score: '10'
            correct_answer: C
            code: "{repeat} 3 {times}\n    {print} 'Baby shark tututudutudu'\n{print} 'Baby shark'"
            question_text: What output will be produced when you run this program?
        4:
            code: |-
                {print} 'The children went:'
                {repeat} 2 {times}
                    {print} 'Yay!'
                    {print} 'Were going on holiday!'
            mp_choice_options:
            -   option: |-
                    The children went:
                    Yay!
                    Were going on holiday!
                feedback: Mind the `{repeat}` command !
            -   option: |-
                    The children went:
                    Yay!
                    Were going on holiday!
                    Yay!
                    Were going on holiday!
                feedback: Correct!
            -   option: |-
                    The children went:
                    Yay!
                    Yay!
                    Were going on holiday!
                    Were going on holiday!
                feedback: This order is incorrect.
            -   option: |-
                    The children went:
                    Yay!
                    Yay!
                    Were going on holiday!
                feedback: The last line is repeated too.
            correct_answer: B
            hint: The block under the `{repeat}` command is repeated twice.
            question_score: '10'
            question_text: Which output is correct?
        5:
            mp_choice_options:
            -   option: The `{print}` commands on the last two lines should start on new lines en start with 4 spaces.
                feedback: That's right!
            -   option: '`{else}` is not a command!'
                feedback: It is!
            -   option: Lines that start with `{if}` should start with 4 spaces
                feedback: That's not true
            -   option: '`{ask}` is no longer a command'
                feedback: That's not true
            correct_answer: A
            code: "end = {ask} 'Do you want a happy or a sad ending?'\n{if} end {is} happy {print} 'They lived happily ever after'\n{else} {print} 'The world exploded. The end.'"
            question_text: What is wrong with this code?
            question_score: '10'
            hint: Something is wrong with indentation
        7:
            code: |-
                eten = {ask} 'What would you like to eat?'
                {if} food {is} fries
                sauce = {ask} 'What sauce would you like?'
                    {print} 'One fries with ' sauce
                {if} food {is} pizza
                    topping = {ask} 'What topping would you like?'
                    {print} 'One pizza with ' topping
                {print} 'That you for your order'
            mp_choice_options:
            -   option: Nothing this code is correct!
                feedback: Something is wrong!.
            -   option: You're not allowed to use an `{if}` command after an `{ask}` command.
                feedback: You are!.
            -   option: You don't have to use indentation twice. Only in the first `{if}` command.
                feedback: You always have to use indentation.
            -   option: The indentation is wrong in the first `{if}` command.
                feedback: That's right.
            question_text: What is wrong with this code?
            correct_answer: D
            hint: Take a careful look at the indentation.
            question_score: '10'
        8:
            mp_choice_options:
            -   option: |-
                    ```
                    {if} answer is right
                       {print} You are...
                          sleep
                              {print} right!
                          {else}
                              {print} You are wrong!
                    ```
                feedback: You are wrong!
            -   option: |-
                    ```
                    {if} answer is right
                    {print} You are...
                    sleep
                    {print} right!
                    {else}
                    {print} You are wrong!
                    ```
                feedback: You are wrong!
            -   option: |-
                    ```
                    {if} answer is right
                        {print} You are...
                        sleep
                        {print} right!
                    {else}
                        {print} You are wrong!
                    ```
                feedback: You are... right!
            -   option: |-
                    ```
                    {if} answer is right
                        {print} You are...
                        sleep
                    {print} right!
                    {else}
                        {print} You are wrong!
                    ```
                feedback: You are wrong!
            correct_answer: C
            question_score: '10'
            hint: What should happen if the person is right? And what else?
            question_text: In which of the codes is the indentation done right?
        9:
            code: |-
                1 music = {ask} 'What is your favorite music genre?'
                2 {if} music is rock
                3 {print} '🤘'
                4 {else}
                5 {print} '👎'
            mp_choice_options:
            -   option: Line 2 and 4
                feedback: The lines after the `{if}` and `{else}` command should start with 4 spaces
            -   option: Only line 3
                feedback: Not only 3...
            -   option: Line 3, 4 and 5
                feedback: Line 4 shouldn't
            -   option: Line 3 and 5
                feedback: Great job!
            hint: The lines after an `{if}` or `{else}` command should start with 4 spaces.
            question_score: '10'
            correct_answer: D
            question_text: What line(s) in this code should start with 4 spaces?
        10:
            code: |-
                1 level = {ask} 'What level are you on?"
                2 {if} level {is} 8
                3 {print} Great job!
            correct_answer: D
            mp_choice_options:
            -   feedback: That's not true
                option: All lines should start with 4 spaces
            -   feedback: That's not true
                option: Line 2 and 3 should start with 4 spaces
            -   feedback: That's not true
                option: Line 2 should start with 4 spaces
            -   option: Line 3 should start with 4 spaces
                feedback: You are correct!
            question_score: '10'
            question_text: Which statement is true?
            hint: Only one line starts with 4 spaces, but which one...?
        1:
            hint: Both lines are repeated twice.
            question_text: Which output will be produced by this code?
            correct_answer: C
            mp_choice_options:
            -   feedback: Everything is printed twice.
                option: "Hello\nIm Hedy!"
            -   option: "Hello\nHello\nIm Hedy"
                feedback: The second line is repeated twice as well.
            -   feedback: Super!
                option: "Hello\nIm Hedy!\nHello\nIm Hedy!"
            -   option: "Hello\nHello\nIm Hedy!\nIm Hedy!"
                feedback: Everything is printed twice
            question_score: '10'
            code: "{repeat} 2 {times}\n    {print} 'Hello'\n    {print} 'Im Hedy!'"
        6:
            question_score: '10'
            correct_answer: D
            mp_choice_options:
            -   feedback: There is no repetition in this answer.
                option: "Welcome to restaurant Hedy\nPancakes"
            -   feedback: This answer also repeats the welcome message
                option: "Welcome to restaurant Hedy\nWelcome to restaurant Hedy\nPancakes\nPancakes"
            -   option: "Welcome to restaurant Hedy\nWhat do you want to eat?\nWhat do you want to eat?\nPancakes\nPancakes"
                feedback: Almost! But look at the question, it is not repeated.
            -   feedback: Well done!
                option: "Welcome to restaurant Hedy\nPancakes\nPancakes"
            code: "{print} 'Welcome to restaurant Hedy'\n{repeat} 2 {times}\n    food {is} {ask} 'What do you want to eat?'\n    {print} food"
            hint: The first sentence and question will not be repeated
            question_text: What will be the output of this code when we enter pancakes?
    9:
        1:
            code: |-
                {repeat} 3 {times}
                   eten = {ask} 'What would you like to eat?'
                   {if} food {is} fries
                       sauce = {ask} 'What sauce would you like?'
                       {print} 'One fries with ' sauce
                   {if} food {is} pizza
                       topping = {ask} 'What topping would you like?'
                       {print} 'One pizza with ' topping
                {print} 'That you for your order'
            mp_choice_options:
            -   option: Nothing this code is correct!
                feedback: That's right!.
            -   option: You're not allowed to use an `{if}` command after an `{ask}` command.
                feedback: You are!.
            -   option: You don't have to use indentation twice.
                feedback: You always have to use indentation.
            -   option: The indentation is wrong in the last `{if}` command.
                feedback: It not, though.
            hint: all the indentation is done correctly.
            question_text: What is wrong with this code?
            correct_answer: A
            question_score: '10'
        2:
            mp_choice_options:
            -   option: |-
                    Good job!
                    Good job!
                feedback: That's not it!
            -   option: The computer will explode in 5... 4... 3... 2... 1...
                feedback: That's not it!
            -   option: |-
                    Good job !
                    Good job!
                    You can use the computer!
                feedback: That's not it!
            -   option: |-
                    Good job!
                    You can use the computer!
                    Good job!
                    You can use the computer!
                feedback: Correct!
            hint: Everything under the `{repeat}` command is repeated twice.
            question_score: '10'
            correct_answer: D
            code: "password = {ask} 'What is the password?'\ncorrect_password = Hedy\n{if} password {is} correct_password\n    {repeat} 2 {times}\n        {print} 'Good job!'\n        {print} 'You can use the computer!'\n{else}\n    {print} 'The computer will explode in 5... 4... 3... 2... 1...'"
            question_text: What will be printed after entering the correct password?
        3:
            code: |-
                {print} 'Choose the right case and win!'
                case = {ask} 'Which case will you pick? 1 or 2?'
                {if} case {is} 1
                     action = {ask} 'Open it or sell it?'
                         {if} action {is} sell
                             {print} 'You sell your case for 10 dollars'
                         {if} action {is} open
                             {print} 'You open the case and win an apple pie'
                {if} case {is} 2
                     action = {ask} 'Open it or sell it?'
                         {if} action {is} sell
                             {print} 'You sell the case for 500 dollars'
                         {if} action {is} open
                             {print} 'You open the case and win a million dollars!'
            mp_choice_options:
            -   option: case 1, sell
                feedback: You don't win a million!
            -   option: case 1, open
                feedback: You don't win a million
            -   feedback: You don't win a million
                option: case 2, sell
            -   option: case 2, open
                feedback: Great job! You win!
            correct_answer: D
            hint: Follow the right path
            question_score: '10'
            question_text: Which case should you choose to win a million dollars?
        4:
            code: |-
                name = {ask} 'What is your name?'
                size = {ask} 'What is your shoe size?'
                {if} size {is} 38
                    {if} name {is} Cinderella
                        {print} 'I was looking for you!'
                    {else}
                        {print} 'You are not the one!'
                {else}
                    {print} 'Ill keep looking'
            mp_choice_options:
            -   option: Sleeping Beauty with shoe size 38 gets the output 'Ill keep looking'
                feedback: No, she gets 'You are not the one!'
            -   option: 'Cinderella with shoe size 40 gets the output: ''I was looking for you!'''
                feedback: No, she gets 'Ill keep looking'
            -   option: Sleeping Beauty with shoe size 40 gets the output 'Ill keep looking'
                feedback: That's right!
            -   option: Cinderella with shoe size 40 gets the output 'I was looking for you!'
                feedback: No she gets 'Ill keep looking'
            question_text: Which statement is true?
            correct_answer: C
            question_score: '10'
            hint: No matter what your name is, if you have shoe size 40 you will get the message 'Ill keep looking'.
        5:
            mp_choice_options:
            -   option: |-
                    ```
                    desert = {ask} 'What is your favorite type of desert?'
                    {if} desert {is} icecream
                        {repeat} 3 {times}
                        {print} 'Icecream is the best!'
                    ```
                feedback: Don't forget the indentation after `{repeat}` commands.
            -   option: |-
                    ```
                    desert = {ask} 'What is your favorite type of desert?'
                    {if} desert {is} icecream
                    {repeat} 3 {times}
                        {print} 'Icecream is the best!'
                    ```
                feedback: Use indentation after an `{if}` command
            -   option: |-
                    ```
                    desert = {ask} 'What is your favorite type of desert?'
                    {if} desert {is} icecream
                        {repeat} 3 {times}
                            {print} 'Icecream is the best!'
                    ```
                feedback: Perfect
            -   option: |-
                    ```
                    {repeat} 3 {times}
                        desert = {ask} 'What is your favorite type of desert?'
                        {if} desert {is} icecream
                            {repeat} 3 {times}
                            {print} 'Icecream is the best!'
                    ```
                feedback: There are 2 `{repeat}` commands in this code.
            output: "Icecream is the best!\nIcecream is the best!\nIcecream is the best!"
            question_text: Which code produced this output?
            hint: Watch the indentation
            question_score: '10'
            correct_answer: C
        6:
            mp_choice_options:
            -   option: '`{if}`'
                feedback: Don't forget the others
            -   option: '`{if}` `{repeat}`'
                feedback: Don't forget `{else}`!
            -   option: '`{if}` `{else}` `{repeat}`'
                feedback: Keep it up!
            -   option: '`{if}` `{else}` `{repeat}` `{print}`'
                feedback: Not with print
            hint: Indentation happens on the line below some commands
            question_score: '10'
            question_text: After which command(s) should you use indentation (starting the next line with 4 spaces)?
            correct_answer: C
        7:
            question_text: "In this code from a pizza restaurant. \nYoull get a 5 dollar discount if you order a medium pizza with coke.\n What should you do to debug this code?"
            code: |-
                {if} food {is} pizza
                {if} size {is} medium
                {if} drink {is} coke
                price = price - 2
            mp_choice_options:
            -   option: |-
                    ```
                    {if} food {is} pizza
                        {if} size {is} medium
                            {if} drink {is} coke
                                price = price - 2
                    ```
                feedback: Amazing!
            -   option: |-
                    ```
                    {if} food {is} pizza
                        {if} size {is} medium
                    {if} drink {is} coke
                        price = price - 2
                    ```
                feedback: Try again!
            -   option: |-
                    ```
                    {if} food {is} pizza
                    {if} size {is} medium
                    {if} drink {is} coke
                            price = price - 2
                    ```
                feedback: Try again
            -   option: |-
                    ```
                    {if} food {is} pizza
                        {if} size {is} medium
                            {if} drink {is} coke
                            price = price - 2
                    ```
                feedback: Try again
            hint: After each `{if}` command, the line below should indent
            correct_answer: A
            question_score: '10'
        8:
            question_text: What is wrong is this code?
            code: |-
                age = {ask} 'Happy Birthday! How old are you?'
                singing = {ask} 'Would you like us to sing?'
                    if singing {is} yes
                        {repeat} years {times}
                        {print} 'Hip Hip Hooray'
            mp_choice_options:
            -   option: You can't put two questions in a row
                feedback: Yes you can.
            -   option: The variable called 'age' is later on used as 'years'
                feedback: Keen eye! Good job!
            -   option: You're not allowed to start with 8 spaces, like line 4 and 5 do
                feedback: You actually must start like that.
            -   option: A code must always start with a `{print}` command in the first line
                feedback: That's not true.
            correct_answer: B
            question_score: '10'
            hint: The indentation is done right this time
        10:
            code: |-
                1 {repeat} 2 {times}
                2 {if} level {is} 9
                3 {print} Great job!
            mp_choice_options:
            -   option: All lines should start with 4 spaces
                feedback: Only line 2 and 3 start with spaces
            -   option: Line 2 and 3 should start with 4 spaces
                feedback: Line 3 should start with 8
            -   option: Line 2 and 3 should start with 8 spaces
                feedback: Line 2 should start with 4
            -   option: line 2 should atart with 4 spaces and line 3 with 8
                feedback: You are correct!
            hint: The first line doens't start with any spaces
            correct_answer: D
            question_score: '10'
            question_text: Which statement is true?
        9:
            hint: You can put an `{if}` command inside an `{if}` command.
            correct_answer: D
            question_text: How many `{if}` commands can be placed inside another `{if}` command?
            mp_choice_options:
            -   feedback: You are allowed to
                option: None, that is not allowed
            -   option: Only 1
                feedback: You could use more if you like
            -   feedback: You could use more if you like
                option: '3'
            -   option: Infinite, as long as you keep using indentation correctly
                feedback: That is true
            question_score: '10'
    10:
        1:
            question_text: What do we need to fill in on the `_?_` if we want to print each compliment?
            code: |-
                compliments = perfect, great job, amazing
                _?_
                    {print} compliment
            mp_choice_options:
            -   option: "```\n{for} each compliment\n```"
                feedback: That's not it
            -   option: "```\n{for} compliment {in} compliments\n```"
                feedback: You deserve all those compliments!
            -   feedback: That's not it
                option: "```\n{if} compliment {in} compliments\n```"
            -   feedback: Almost there!
                option: "```\n{for} compliments {in} compliment\n```"
            correct_answer: B
            question_score: '10'
            hint: '`{for}` each compliment in the lists of compliments...'
        5:
            question_text: What word should be on the _?_ with these digital dice?
            code: |-
                {print} 'Welcome to the digital dice!'
                players = Ann, John, Jesse
                choices = 1, 2, 3, 4, 5, 6
                {for} player {in} players
                    {print} player ' throws ' _?_ {at} {random}
            mp_choice_options:
            -   feedback: It would say 'Ann throws Jesse', instead of 'Ann throws 6'.
                option: players
            -   feedback: That's right!
                option: choices
            -   option: choice
                feedback: You are very close. But you need Hedy to pick from the list called 'choices' not 'choice'...
            -   option: dice
                feedback: Look at the names of the variables.
            hint: Hedy needs to pick a number `{at} {random}`
            question_score: '10'
            correct_answer: B
        6:
            mp_choice_options:
            -   option: Kelly chooses rock
                feedback: Meredith wants to play too!
            -   option: |-
                    Meredith chooses scissors
                    Kelly chooses rock
                feedback: So close! But Kelly is first in the list, so she goes first
            -   option: Meredith chooses paper
                feedback: Kelly wants to play too!
            -   option: |-
                    Kelly chooses paper
                    Meredith chooses scissors
                feedback: Amazing!
            question_text: Which of the answers below is a possible outcome when you run the code?
            code: "choices = rock, paper, scissors\nplayers = Kelly, Meredith\n{for} player {in} players\n    {print} player ' chooses ' choices {at} {random}"
            hint: Each player will pick an option. The player that's first on the list will go first.
            question_score: '10'
            correct_answer: D
        7:
            question_text: What line should be on the _?_ in this code that decides what these people will have for dinner?
            code: |-
                names = Ron, Leslie, April, Andy
                food = pasta, fries, salad
                _?_
                    {print} name ' has to eat ' food {at} {random} ' for dinner'
            mp_choice_options:
            -   feedback: You are on fire!
                option: "```\n{for} name {in} names\n```"
            -   feedback: No it should be for each name in the list nameS, so the other way around
                option: "```\n{for} names {in} name\n```"
            -   option: "```\n{for} food {in} food\n```"
                feedback: Each name should be told what they will have for dinner.
            -   option: "```\n{for} name {in} food\n```"
                feedback: Each name should be told what they will have for dinner.
            question_score: '10'
            hint: Each name should be told what they will have for dinner.
            correct_answer: A
        8:
            question_text: What should be on the _?_ in this code that decides which color shirt you get?
            code: |-
                names = Donna, Tommy, Ben
                colors = blue, red, purple
                {for} name {in} names
                    {print} _?_
            mp_choice_options:
            -   option: |-
                    ```
                    'name gets a color shirt'
                    ```
                feedback: That's not it!
            -   option: |-
                    ```
                    name 'gets a ' colors {at} {random} ' shirt'
                    ```
                feedback: Great job! This was a hard one!
            -   option: |-
                    ```
                    names 'gets a ' color {at} {random} ' shirt'
                    ```
                feedback: You want each name printed. So the first word should not be names but...
            -   option: |-
                    ```
                    'people gets a colors shirt'
                    ```
                feedback: There is no variable named people..
            hint: Mind the quotation marks and the names of the variables
            question_score: '10'
            correct_answer: B
        9:
            question_text: What is the first question Hedy will `{ask}` you when you run the program?
            code: |-
                courses = appetizer, main course, dessert
                names = Timon, Onno
                {for} name in names
                    {for} course {in} courses
                        food = {ask} name ', what would you like to eat as your ' course '?'
                        {print} name ' orders ' food ' as their ' course
            mp_choice_options:
            -   feedback: Perfect!
                option: Timon, what would you like to eat as your appetizer?
            -   option: Onno, what would you like to eat as your appetizer?
                feedback: Timon is first on the list!
            -   feedback: Appetizers are first in the list
                option: Timon, what would you like to eat as your dessert?
            -   feedback: There is no `{at} {random}` in this code...
                option: You don't know that. Hedy will choose `{at} {random}`.
            question_score: '10'
            hint: The first options from both lists are chosen.
            correct_answer: A
        10:
            code: |-
                prices = 1 million dollars, car, sandwich
                names = Bob, Patrick, Sandy, Larry
                {for} price {in} prices
                    {print} 'The ' price 'is won by ' names {at} {random}
            mp_choice_options:
            -   option: Everybody will always win a price.
                feedback: That is not true, you could end up without a price.
            -   option: All the prices always go to one single person.
                feedback: That is not true. All the prices are given away, but to random people
            -   option: Larry will never win a price
                feedback: That is not true. Larry has the same odds as the others
            -   option: Someone might win with two prices
                feedback: You get it!
            hint: Try to imagine the output of this code.
            correct_answer: D
            question_score: '10'
            question_text: What is true about this code?
        4:
            mp_choice_options:
            -   option: Line 2 needs to start with 4 spaces as indentation
                feedback: No it doesn't. Only line 3 needs indentation, which it has.
            -   feedback: Line 2 is a `{for}`command so line 3 does need to start with an indent.
                option: Line 3 does not need to start with 4 spaces as indentation
            -   feedback: Good job!
                option: Line 3 should say item instead of groceries
            -   feedback: No it does not.
                option: Line 2 should say groceries instead of item
            hint: Line 2 says `{for}` each item in the list of groceries
            code: "groceries = apples, bread, milk\n{for} item {in} groceries\n    {print} 'We need ' groceries"
            correct_answer: C
            question_score: '10'
            question_text: What's wrong with this code?
        2:
            mp_choice_options:
            -   feedback: Line 2 says `{for}` each meal in the list of meals. So each meal is printed.
                option: I love pizza
            -   option: I love pasta
                feedback: Line 2 says `{for}` each meal in the list of meals. So each meal is printed.
            -   option: I love pancakes
                feedback: Line 2 says `{for}` each meal in the list of meals. So each meal is printed.
            -   option: "I love pizza\nI love pasta\nI love pancakes"
                feedback: Great!
            correct_answer: D
            hint: Line 2 says for each meal in the list of meals. So each meal is printed.
            code: "meals = pizza, pasta, pancakes\n{for} meal {in} meals\n    {print} 'I love ' meal"
            question_score: '10'
            question_text: Which output is correct?
        3:
            mp_choice_options:
            -   feedback: Line 2 says {for} each animal in the list of animals. So each animal is {print}ed.
                option: dogs are lovely pets
            -   option: dogs, cats, hamsters, chickens are lovely pets
                feedback: Each animal gets their own line in the output.
            -   option: "dogs are lovely pets\ncats are lovely pets\nhamsters are lovely pets\nchickens are lovely pets"
                feedback: Great!
            -   option: You don't know yet. Because it chooses one of the animals {at} {random}.
                feedback: Line 2 says {for} each animal in the list of animals. So each animal is {print}ed.
            hint: Line 2 says {for} each animal in the list of animals. So each animal is printed
            question_text: Which output is correct?
            correct_answer: C
            question_score: '10'
            code: "animals = dogs, cats, hamsters, chickens\n{for} animal {in} animals\n    {print} animal ' are lovely pets'"
    11:
        1:
            question_text: What word should be at the place of the question mark?
            code: |-
                {for} i {in} _?_ 1 {to} 10
                    {print} i
            mp_choice_options:
            -   option: |-
                    ```
                    counter
                    ```
                feedback: 'No'
            -   option: |-
                    ```
                    {range}
                    ```
                feedback: Correct
            -   option: |-
                    ```
                    {if}
                    ```
                feedback: 'No'
            -   option: |-
                    ```
                    {for}
                    ```
                feedback: 'No'
            hint: What did you learn in this level?
            correct_answer: B
            question_score: '10'
        2:
            mp_choice_options:
            -   option: |-
                    1
                    2
                    3
                feedback: Correct!
            -   option: 1 2 3
                feedback: That's not it
            -   option: 1, 2, 3
                feedback: That's not it
            -   option: '123'
                feedback: That's not it
            code: "{for} i {in} {range} 1 {to} 3\n    {print} i"
            question_text: What will be the output from this code?
            hint: How do the numbers appear in the screen?
            correct_answer: A
            question_score: '10'
        4:
            mp_choice_options:
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 10
                        {print} i
                    ```
                feedback: Now Hedy prints the numbers from 0 to 10 instead of 10 to 0.
            -   option: |-
                    ```
                    {for} i {in} {range} 0 to 10
                        {print} - i
                    ```
                feedback: Hedy would print negative numbers in this case.
            -   option: |-
                    ```
                    {for} i {in} {range} 10 to 0
                        {print} 10 9 8 7 6 5 4 3 2 1 0
                    ```
                feedback: Unfortunately this does not exist.
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 10
                        {print} 10 - i
                    ```
                feedback: That's right!
            hint: It has to be a calculation...
            output: "10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n0"
            question_text: Which code was used to get this output?
            question_score: '10'
            correct_answer: D
        7:
            question_text: What should be on the place of the question mark?
            code: |-
                {print} 'Welcome to Hedys diner'
                people is {ask} 'How many people will be eating here tonight?'
                _?_
                    food is {ask} 'What would you like to order?'
                    {print} food
            mp_choice_options:
            -   option: "```\n{for} i {in} {range} 0 {to} 3\n```"
                feedback: There's not always 3 people
            -   option: "```\n{for} i {in} {range} 1 {to} guests\n```"
                feedback: The variable is not named guests
            -   option: "```\n{for} i {in} {range} 1 {to} people\n```"
                feedback: Great!
            -   option: "```\n{for} i {in} {range} 0 {to} people\n```"
                feedback: That's one order too many!
            hint: Use the variable 'people'
            question_score: '10'
            correct_answer: C
        8:
            mp_choice_options:
            -   option: |-
                    23
                    24
                    25
                feedback: The numbers don't appear. It doesn't say `{print}` i.
            -   option: 23 hi 24 hi 25 hi
                feedback: The numbers don't appear. It doesn't say `{print}` i
            -   option: |-
                    hi
                    hi
                    hi
                feedback: Correct
            -   option: The word 'hi' will appear 25 times in a row.
                feedback: No it will only appear 3 times.
            question_text: What will be the output from this code?
            code: "{for} i {in} {range} 23 {to} 25\n    {print} 'hi'"
            hint: It doesn't say `{print}` i
            correct_answer: C
            question_score: '10'
        10:
            mp_choice_options:
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 3
                        {print} Baby shark tututudutudu
                        {print} Baby shark
                    ```
                feedback: Mind the indention
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 3
                        {print} Baby shark tututudutudu
                    {print} Baby shark
                    ```
                feedback: That's right!
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 3
                        {print} Baby shark tututudutudu
                    {print} Baby shark
                    ```
                feedback: '`{range}` 0 `{to}` 3 is 4 times.'
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 3
                        {print} Baby shark tututudutudu
                        {print} Baby shark
                    ```
                feedback: '`{range}` 0 `{to}` 3 is 4 times.'
            hint: Mind the indention
            output: "Baby shark tututudutudu\nBaby shark tututudutudu\nBaby shark tututudutudu\nBaby shark"
            question_text: Which code belongs to this output?
            question_score: '10'
            correct_answer: B
        5:
            mp_choice_options:
            -   option: The i in the last line need quotation marks
                feedback: No it doesn't.
            -   option: You can't use `{range}` 1 `{to}` 5 only `{range}` 1 `{to}` 10
                feedback: You could use 1 to 5 just as well!
            -   feedback: Not line 1...
                option: Line 1 needs to start with an indention.
            -   feedback: Perfect!
                option: Line 2 needs to start with an indention
            question_text: What's wrong with this code?
            code: "{for} i {in} {range} 1 {to} 10\n{print} i"
            hint: There is something wrong with the indention
            correct_answer: D
            question_score: '10'
        6:
            mp_choice_options:
            -   feedback: No
                option: 1 time
            -   feedback: No
                option: 2 times
            -   feedback: That's right!
                option: 3 times
            -   option: Never
                feedback: No
            hint: 0 also counts. So 0,1,2 that's 3 times.
            correct_answer: C
            code: "{for} i {in} {range} 0 {to} 2\n    {print} 'Hello'"
            question_score: '10'
            question_text: How many times does the word Hello appear on your screen when you run the code?
        9:
            mp_choice_options:
            -   option: 1 time
                feedback: Try again
            -   option: 2 times
                feedback: Try again
            -   feedback: Try again
                option: Never
            -   option: That depends on how old you are
                feedback: That's right!
            hint: '`{for}` i `{in}` `{range}` 1 `{to}` age'
            question_text: How many times does Hedy chant Hip Hip Hooray?
            question_score: '10'
            correct_answer: D
            code: "age = {ask} 'How old are you?'\n{for} i {in} {range} 1 {to} age\n    {print} 'Hip Hip Hoorray!'"
        3:
            mp_choice_options:
            -   feedback: Perfect
                option: "```\n{for} i {in} {range} 1 {to} 5\n    {print} i\n{print} 'Once I caught a fish alive!'\n```"
            -   feedback: This code won't work. You need an indent after {for}.
                option: "```\n{for} i {in} {range} 1 {to} 5\n{print} i\n{print} 'Once I caught a fish alive!'\n```"
            -   option: "```\n{for} i {in} {range} 1 {to} 5\n    {print} i\n    {print} 'Once I caught a fish alive!'\n```"
                feedback: Now Hedy will count '1 Once I caught a fish alive!, 2 Once I caught a fish alive! etc.
            -   option: "```\n{for} i {in} {range} 1 {to} 5\n    {print} 'i'\n{print} 'Once I caught a fish alive!'\n```"
                feedback: i is a variable and shouldn't have quotation marks
            output: "1\n2\n3\n4\n5\nOnce I caught a fish alive!"
            question_score: '10'
            correct_answer: A
            hint: First all the numbers, then the sentence
            question_text: Which code was used to get this output?
    12:
        1:
            code: |-
                print 'three and a half plus one and a half is...'
                print 3.5 + 1.5
            mp_choice_options:
            -   option: '5'
                feedback: Don't forget the first line of code!
            -   option: 3.5 + 1.5
                feedback: This is not the one!
            -   option: |-
                    thee and a half plus one and a half is...
                    five
                feedback: Take a close look at the second line...
            -   option: |-
                    three and a half plus one and a half is...
                    5
                feedback: Great job!
            question_text: Which output is correct?
            question_score: '10'
            hint: Both lines are printed!
            correct_answer: D
        2:
            mp_choice_options:
            -   option: |-
                    ```
                    flavors is vanilla, strawberry, chocolate
                    print 'I would like a ' flavors at random ' cake.'
                    ```
                feedback: All the different values of flavors should be in quotation marks.
            -   option: |-
                    ```
                    'flavors = vanilla, strawberry, chocolate'
                    print 'I would like a ' flavors at random ' cake.'
                    ```
                feedback: All the different values of flavors should be in quotation marks.
            -   option: |-
                    ```
                    flavors = 'vanilla', 'strawberry', 'chocolate'
                    print 'I would like a ' flavors at random ' cake.'
                    ```
                feedback: Alright!
            -   option: |-
                    ```
                    flavors = 'vanilla, strawberry, chocolate'
                    print 'I would like a ' flavors at random ' cake.'
                    ```
                feedback: All the different values of flavors should be in quotation marks.
            correct_answer: C
            question_score: '10'
            hint: The second line is the same in each code, pay attention to the first line
            question_text: Which of these codes is correct?
        3:
            code: |-
                favorite_animal = ask 'What is your favorite animal?'
                print 'I like ' favoriteanimal ' too!'
            mp_choice_options:
            -   option: The name of the variable is different in line 1 than in line 2.
                feedback: Correct!
            -   option: The quotation marks aren't used correctly in line 2
                feedback: That's not true
            -   option: You can't use the = sign when using an ask command
                feedback: That's not true
            -   option: Nothing is wrong.
                feedback: That's not true
            question_score: '10'
            question_text: What's wrong with this code?
            hint: The quotation marks are used correctly
            correct_answer: A
        4:
            code: |-
                print Welcome to the online shoe shop
                category = ask What kind of shoes are you looking for?
                if category = high heels
                  print High heels are 50% off now!
            mp_choice_options:
            -   feedback: No
                option: Line 1 and 2
            -   option: Line 1, 2 and 3
                feedback: No
            -   option: Line 1, 2 and 4
                feedback: No
            -   option: All of the lines
                feedback: Perfect!
            question_score: '10'
            hint: Does line 3 need quotation marks too?
            correct_answer: D
            question_text: In which lines are quotation marks needed to get the code to work?
        5:
            code: |-
                name is ask 'What is your name?'
                if name is 'Agent007'
                    a is 'Go to the airport '
                else
                    a is 'Go to the train station '
                password is ask 'What is the password?'
                if password is 'TOPSECRET'
                    b is 'tomorrow at 02.00'
                else
                    b is 'today at 10.00'
                print a + b
            mp_choice_options:
            -   feedback: The agent won't be catching any bad guys here
                option: Go to the train station today at 10.00
            -   feedback: You've cracked the code!
                option: Go to the airport tomorrow at 02.00
            -   option: Go to the train station tomorrow at 02.00
                feedback: The agent won't be catching any bad guys here
            -   option: Go to the airport tomorrow at 10.00
                feedback: The agent won't be catching any bad guys here
            correct_answer: B
            hint: The correct password is TOPSECRET
            question_score: '10'
            question_text: What output does Agent007 get when they put in the correct password?
        6:
            question_text: Which line should be filled in at the ???
            code: |-
                print 'Welcome to McHedy!'
                order = ask 'Would you like a hamburger or fries?'
                if order = 'hamburger'
                  price = 12
                if order = 'fries'
                  price = 4
                drinks = ask 'Would you like a drink with that for 2 dollars?'
                if drinks = 'yes'
                  ???
                print 'That will be ' price ' dollar please'
            correct_answer: C
            hint: What if you only order fries and a drink?
            mp_choice_options:
            -   option: "```\nprice = 14\n```"
                feedback: What if you only order fries and a drink?
            -   option: "```\nprice = '14'\n```"
                feedback: What if you only order fries and a drink?
            -   feedback: Excellent!
                option: "```\nprice = price + 2\n```"
            -   feedback: Almost there!
                option: "```\nprice = + 2\n```"
            question_score: '10'
        7:
            code: |-
                menu = 'cookies', 'cheese', 'grapes'
                print "It's my birthday! I`ve brought some snacks!"
                diet = ask 'Do you have any dietary restrictions?'
                if diet = 'gluten free'
                    remove 'cookies' from menu
                if diet = 'vegan'
                    remove 'cheese' from menu
                print 'For you I have brought: '
                for snack in menu
                    print snack
            mp_choice_options:
            -   feedback: Terrific!
                option: "It's my birthday! I've brought some snacks!\nFor you I have brought:\ncookies\ngrapes"
            -   option: "It's my birthday! I've brought some snacks!\nFor you I have brought:\ngrapes"
                feedback: There's more options than just one
            -   option: "It's my birthday! I've brought some snacks!\nFor you I have brought:\ncheese\ngrapes"
                feedback: A vegan person can't have cheese
            -   option: "It's my birthday! I've brought some snacks!\nFor you I have brought:\ngrapes\ncookies"
                feedback: Almost there, but look at the order of snacks in the list
            question_text: Which output does a vegan get?
            hint: What item is removed from the list when you answer 'vegan'?
            question_score: '10'
            correct_answer: A
        8:
            mp_choice_options:
            -   option: |-
                    ```
                    print '7 / 2'
                    ```
                feedback: 'No'
            -   option: |-
                    ```
                    print 7 / 2
                    ```
                feedback: That is right!
            -   option: |-
                    ```
                    print 7 : 2
                    ```
                feedback: 'No'
            -   option: |-
                    ```
                    print 7 * 2
                    ```
                feedback: 'No'
            hint: 7 devided by 2 is 3.5
            correct_answer: B
            code: '3.5'
            question_text: Which code was used to create this output?
            question_score: '10'
        9:
            question_text: Which code should be filled in in line 1 at the ???
            code: |-
                ???
                print 'You won ' prices at random '!'
            mp_choice_options:
            -   option: |-
                    ```
                    prices = 'one' 'million' 'dollars', 'nothing'
                    ```
                feedback: You won nothing
            -   option: |-
                    ```
                    prices = 'one million dollars, nothing'
                    ```
                feedback: You won nothing
            -   option: |-
                    ```
                    prices = 'one million dollars', 'nothing'
                    ```
                feedback: Winner!
            -   option: |-
                    ```
                    'prices' = 'one million dollars', 'nothing'
                    ```
                feedback: You one nothing
            correct_answer: C
            question_score: '10'
            hint: The items on the list should be in quotation marks
        10:
            question_text: Which line of code should be filled in at the ??? to complete the song ?
            code: |-
                actions = 'clap your hands', 'stomp your feet', 'shout Hurray!'
                ???
                    for i in range 0 to 1
                        print 'if youre happy and you know it'
                        print action
                    print 'if youre happy and you know it and you really want to show it'
                    print 'if youre happy and you know it'
                    print action
            mp_choice_options:
            -   option: for i in range 1 to 3
                feedback: This is a hard one! All the actions on the list must be in the song.
            -   option: for action in actions
                feedback: You are amazing!
            -   option: repeat 3 times
                feedback: This is a hard one! All the actions on the list must be in the song.
            -   option: print actions at random
                feedback: This is a hard one! All the actions on the list must be in the song.
            question_score: '10'
            hint: This is a hard one! All the actions on the list must be in the song.
            correct_answer: B
    13:
        1:
            code: |-
                name = ask 'What is your name?'
                song = ask 'Whould you like to hear a song?'
                birthday = ask 'Is today your birthday?'
                ???
                  print 'Happy Birthday to you!'
                  print 'Happy Birthday to you!'
                  print 'Happy Birthday. dear ' name
                  print 'Happy Birthday to you!'
            mp_choice_options:
            -   option: |-
                    ```
                    if birthday and song = 'yes'
                    ```
                feedback: Almost there
            -   option: |-
                    ```
                    if birthday = 'yes' and name = 'Hedy'
                    ```
                feedback: Hedy only sings for you if you like to hear a song
            -   option: |-
                    ```
                    if song = 'yes' and birthday = 'yes'
                    ```
                feedback: Super!
            -   option: |-
                    ```
                    if song = 'yes' or birthday = 'yes'
                    ```
                feedback: Hedy only sings if both answers are yes
            question_text: Which code should be filled in at the ??? ?
            correct_answer: C
            question_score: '10'
            hint: Hedy sings if you want to hear a song and it's you birthday
        2:
            code: |-
                menu = 'cheese', 'sausage rolls', 'cookies'
                diet = ask 'Do you have any dietary restrictions?'
                if diet = 'vegan' ??? diet = 'halal'
                    remove 'sausage rolls' from menu
            mp_choice_options:
            -   option: and
                feedback: You don't have to be vegan and muslim
            -   option: or
                feedback: Great thinking!
            -   option: +
                feedback: 'No'
            -   option: print
                feedback: 'No'
            question_text: Which command is missing in the code at the place of the ??? ?
            question_score: '10'
            hint: Neither vegans nor muslims can eat sausage rolls.
            correct_answer: B
        3:
            code: |-
                member = ask 'Do you have a membership card?'
                discount = ask 'Do you have a discount code?'
                if member = 'yes' or discount = 'yes'
                    print 'You get a free apple pie!'
                else
                    print 'That will be 5 dollars please'
            mp_choice_options:
            -   option: You get a free pie!
                feedback: Great job!
            -   option: That will be 5 dollars please
                feedback: That is not true
            -   option: This code won't work, so there is no output
                feedback: There is nothing wrong with the code
            -   option: There is no way of knowing
                feedback: There is! Read the question carefully
            hint: Mind the command 'or' in line 3
            question_score: '10'
            correct_answer: A
            question_text: Which output is given to a member without a discount code?
        4:
            code: if computer_choice is 'rock' and your_choice is 'paper'
            mp_choice_options:
            -   option: print 'you win'
                feedback: You win!
            -   option: print 'you lose'
                feedback: You lose!
            -   option: print 'tie'
                feedback: It's only a tie if both choices are the same
            -   option: print 'try again'
                feedback: Try again!
            question_score: '10'
            correct_answer: A
            hint: Paper beats rock
            question_text: Which line of code should follow this line in rock-paper-scissors game?
        5:
            code: |-
                if name = 'Cinderella' and shoe_size = 38
                    print 'You are my one true love!'
            hint: Both statements have to be true
            question_score: '10'
            question_text: Which statement is true about this code?
            mp_choice_options:
            -   feedback: The prince is a little more picky than that!
                option: Every person with shoe size 38 is this prince's one true love
            -   option: Every person named Cinderella is this prince's one true love
                feedback: The prince is a little more picky than that!
            -   feedback: Fantastic!
                option: Every person that is named Cinderella and has shoe size 38 is this prince's one true love
            -   option: Every person that's not named Cinderella and does not have shoe size 38 is this prince's one true love
                feedback: The prince is a little more picky than that!
            correct_answer: C
        6:
            code: |-
                print 'Let me guess which family member you are!'
                glasses = ask 'Do you wear glasses?'
                female = ask 'Are you female?'
                if glasses = 'yes' and female = 'yes'
                    print 'You must be Sophie!'
                if glasses = 'no' and female = 'yes'
                   print 'You must be Marleen!'
                if glasses = 'yes' and female = 'no'
                    print 'You must be Wouter!'
                if glasses = 'no' and female = 'no'
                    print 'You must be Michael!'
            question_score: '10'
            mp_choice_options:
            -   option: Michael is a boy with glasses
                feedback: Try again
            -   option: Marleen is a girl with glasses
                feedback: Try again
            -   feedback: Try again
                option: Wouter is a boy without glasses
            -   option: Sophie is a girl with glasses
                feedback: Great job!
            question_text: Which statement about this code is true?
            hint: Take a good look! Or do you need glasses?
            correct_answer: D
        7:
            code: |-
                print 'Thank you for helping me take care of my pets'
                print 'Here is a program to help feed them'
                animal is ask 'What kind of animal are they?'
                color is ask 'What colour are they?'
                if animal is 'cat' and color = 'grey'
                    print 'That is Abby. She eats 3 scoops of cat nibbles'
                if animal is 'cat' and color = 'orange'
                    print 'That is Milo. He eats 4 scoops of cat nibbles'
                if animal is 'bird' or color is 'black'
                    print 'I fed them this moring! They do not need more food today'
                if animal is 'hamster' and color is 'brown'
                    print 'You can feed them a piece of carrot'
            question_text: Which statement is false?
            hint: Read the last 4 lines carefully
            mp_choice_options:
            -   option: The grey cat is called Abby
                feedback: This is true!
            -   feedback: This is true
                option: Milo the orange cat eats 4 scoops of cat nibbles
            -   option: The black hamster needs to be fed a piece of carrot
                feedback: Great job!
            -   option: The yellow bird was fed this morning
                feedback: This is true
            correct_answer: C
            question_score: '10'
        8:
            code: |-
                print 'Welcome to the movie theater'
                popcorn = ask 'Would you like some popcorn?'
                drink = ask 'Would you like a drink?'
                if popcorn = 'yes' and drink = 'yes'
                    print 'That will be 8 dollars please'
                if popcorn = 'no' and drink = 'yes'
                   print 'That will be 3 dollars please'
                if popcorn = 'yes' and drink = 'no'
                    print 'That will be 5 dollars please'
                if popcorn = 'no' and drink = 'no'
                    print 'Ok'
                print 'Enjoy the movie'
            hint: popcorn = yes and drink = no
            mp_choice_options:
            -   option: "Welcome to the movie theater\nThat will be 8 dollars please\nEnjoy the movie"
                feedback: You have paid too much!
            -   option: "Welcome to the movie theater\nThat will be 5 dollars please\nEnjoy the movie"
                feedback: Amazing!
            -   feedback: That's not enough money!
                option: "Welcome to the movie theater\nThat will be 3 dollars please\nEnjoy the movie"
            -   option: "Welcome to the movie theater\nOk\nEnjoy the movie"
                feedback: You have to pay for your popcorn!
            question_text: What output do you get if you order popcorn but no drink?
            correct_answer: B
            question_score: '10'
        9:
            code: |-
                1  chocolate = ask 'Would you like chocolate sauce on your ice cream?'
                2  sprinkles = ask 'Would you like sprinkles on your ice cream?'
                3  if chocolate and sprinkles = 'yes'
                4      print 'Ice cream with chocolate sauce and sprinkles, coming up!'
                5  if chocolate = 'yes' and sprinkles = 'no'
                6      print 'Ice cream with chocolate sauce, coming up!'
                7  if chocolate = 'no' and sprinkles = 'yes'
                8      print 'Ice cream with sprinkles, coming up'
                9  if chocolate = 'no' and sprinkles = 'no'
                10     print 'Just plain icecream, coming up!'
            mp_choice_options:
            -   option: |-
                    Line 3 should be:
                    ```
                    {if} chocolate = 'yes' {and} sprinkles = 'yes'
                    ```
                feedback: Correct!
            -   option: |-
                    Line 3 should be:
                    ```
                    {if} chocolate = 'no' {and} sprinkles = 'no'
                    ```
                feedback: This is not what I ordered!
            -   option: |-
                    Line 5 should be:
                    ```
                    {if} chocolate = 'yes' {and} sprinkles = 'yes'
                    ```
                feedback: This is not what I ordered!
            -   option: |-
                    Line 7 should be:
                    ```
                    {if} chocolate = 'yes' {and} sprinkles = 'no'
                    ```
                feedback: This is not what I ordered!
            correct_answer: A
            question_text: What is wrong with this code?
            question_score: '10'
            hint: There is a mistake in line 3
        10:
            code: |-
                print 'Welcome to the product finder of this supermarkt'
                item is ask 'What product are you looking for?'
                bakery = 'bread', 'buns', 'muffins'
                drinks = 'soda', 'water', 'lemonade'
                snacks = 'chips', 'nuts', 'dips'
                frozen = 'fries', 'icecream', 'pizza'
                fruit = 'bananas', 'apples', 'oranges'
                if item in snacks ??? item in drinks
                    print 'This item is in aile 3'
                if item in bakery or item in bakery
                    print 'This item in in the back of the store'
                if item in fruit
                    print 'The fruit is sold near the register'
            mp_choice_options:
            -   option: and
                feedback: There are no items that are both the list of snacks and the list of drinks
            -   option: or
                feedback: Great job!
            -   option: in
                feedback: 'No'
            -   option: if
                feedback: 'No'
            question_text: Which command needs to be in line 8 at the place of the ??? ?
            question_score: '10'
            correct_answer: B
            hint: The item is either in the list of snacks, or in the list of drinks
    14:
        4:
            code: |-
                price = 10
                money = {ask} How much money do you have?
                buy = {ask} 'Would you like to buy this teddy bear?'
                {if} money >= price and buy == 'yes'
                    {print} 'You can buy the bear!'
                {else}
                    {print} 'You cannot buy this bear!'
            hint: The symbols are right
            mp_choice_options:
            -   option: In line 1 == should be used instead of =
                feedback: No that's not it
            -   option: Line 2 misses quotation marks
                feedback: You are correct
            -   feedback: No that's not it
                option: In line 4 = should have been used instead of ==
            -   option: In line 4 <= should have been used instead of >=
                feedback: No that's not it
            correct_answer: B
            question_text: What's wrong with this code?
            question_score: '10'
        5:
            code: |-
                age = {ask} 'How old are you?'
                ticket = {ask} 'Do you have a ticket?'
                {if} age _ and ticket == 'yes'
                    {print} 'You can enter the movie theater.'
                {else}
                    {print} 'You are not allowed to come in!'
            question_text: Which symbol should be filled in on the blanks if the movie is suitable for kids for the age of 12 and up?
            mp_choice_options:
            -   option: '`> 12`'
                feedback: 12 year olds are allowed too
            -   option: '`>= 12`'
                feedback: Great!
            -   option: '`< 12`'
                feedback: These kids are too young!
            -   feedback: These kids are too young
                option: '`<= 12`'
            hint: '> means greater than'
            correct_answer: B
            question_score: '10'
        6:
            code: |-
                lives = 2
                {repeat} 10 times
                    {if} lives != 0
                        answer = {ask} 'Are you annoyed yet?'
                    {if} answer == 'yes'
                        lives = lives - 1
            hint: "!= means 'is not'"
            mp_choice_options:
            -   feedback: It stops after 2 times
                option: 10 times
            -   feedback: It stops after 2 times
                option: 0 times
            -   option: 1 time
                feedback: It stops after 2 times
            -   option: 2 times
                feedback: That is correct
            question_score: '10'
            correct_answer: D
            question_text: How many times do you have to say you are annoyed before this annoying game stops?
        9:
            code: |-
                chocolate = {ask} 'How many pieces of chocolate have you eaten?'
                  {if} chocolate <= 2
                      {print} 'That is a healthy amount'
                  {if} chocolate > 2 and chocolate =< 8
                      {print} 'That is a bit much'
                  {if} chocolate > 8
                      {print} 'You will get a stomach ache!'
            hint: '> 8 means more than 8'
            mp_choice_options:
            -   option: 1 or more
                feedback: No
            -   option: 2 or more
                feedback: No
            -   option: 8 or more
                feedback: Almost
            -   feedback: Great!
                option: 9 or more
            question_text: How many pieces of chocolate will give you a stomach ache according to this fitbit?
            question_score: '10'
            correct_answer: D
        3:
            question_text: Which symbols should be filled in on the two blanks?
            mp_choice_options:
            -   option: '`>` and `<`'
                feedback: That's not it
            -   option: '`=` and `>=`'
                feedback: That's not it
            -   option: '`<` and `>=`'
                feedback: You are right
            -   option: '`+` and `==`'
            correct_answer: C
            question_score: '10'
            feedback: That's not it
            code: "guests = {ask} 'How many people are at the party?'\n{if} guests _ 130\n    {print} 'You can come in!'\n{if} guests _ 130\n    {print} 'Im sorry, the club is full. '\n    {print} 'You have to wait for a guest to leave'"
            hint: There are 130 people allowed in the club
        7:
            question_text: What should be filled in on the three blanks?
            mp_choice_options:
            -   feedback: That's not quite right.
                option: "`'Lower'` and `'Higher'` and `'You win!'`"
            -   option: "`'Higher'` and `'Lower'` and `'You win!'`"
                feedback: You win!
            -   feedback: That's not quite right.
                option: "`'You win!'` and `'Lower!'` and `'Higher'`"
            -   option: "`'Lower!'` and `'You win!'` and `'Higher!'`"
                feedback: That's not quite right.
            hint: The last one should say you win.
            correct_answer: B
            question_score: '10'
            code: "{print} 'Guess which number'\nnumbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\nnumber = numbers {at} {random}\ngame = 'on'\n{for} i {in} {range} 1 {to} 10\n    {if} game == 'on'\n        guess = {ask} 'Which number do you think it is?'\n        {if} guess < number\n            {print} _\n        {if} guess > number\n            {print} _\n        {if} guess == number\n            {print} _\n            game = 'over'"
        8:
            mp_choice_options:
            -   feedback: True!
                option: You must be taller than 120 cm to go on the roller coaster
            -   feedback: If you are 120 cm you won't get in
                option: You must be taller than 119 cm to go on the roller coaster
            -   option: You must be shorter than 120 cm to go on the roller coaster
                feedback: '> means greater than'
            -   option: There are no length restrictions to go on the roller coaster
                feedback: There are.
            hint: '> means greater than'
            question_score: '10'
            correct_answer: A
            question_text: Which statement is true about this roller coaster?
            code: "length = {ask} 'Please fill in your length in cm'\n{if} length < 120\n    {print} 'Sorry, you cannot go on this roller coaster.'\n{else}\n    {print} 'Enjoy the ride'"
        1:
            mp_choice_options:
            -   feedback: This is not a symbol.
                option: '`=>`'
            -   feedback: We are not comparing anything, just asking.
                option: '`==`'
            -   option: '`!=`'
                feedback: We are not comparing anything, just asking
            -   feedback: Right!
                option: '`=`'
            code: "name _ {ask} 'Who are you?'\n{if} name == 'Hedy'\n    {print} 'Me too!'"
            hint: We are not comparing anything, we are just asking a name.
            question_text: Which symbol should be used on the blank?
            question_score: '10'
            correct_answer: D
        2:
            mp_choice_options:
            -   feedback: No
                option: '{if} name = Hedy'
            -   option: '{if} age = 24'
                feedback: No
            -   option: answer = {ask} 'What is your answer'
                feedback: Yes!
            -   feedback: No
                option: answer == {ask} 'How are you doing?'
            correct_answer: C
            question_score: '10'
            hint: When you are comparing two answers you should use ==
            question_text: Which of these codes has used the correct = or == symbol?
        10:
            mp_choice_options:
            -   feedback: Look at who has the highest score!
                option: "'player 1 wins'"
            -   option: "'player 2 wins'"
                feedback: Yes!
            -   feedback: Look at who has the highest score!
                option: "'player 2 loses'"
            -   option: "'It is a tie'"
                feedback: No it's not, one player has a higher score
            hint: You win the game by having the most points
            question_score: '10'
            correct_answer: B
            code: "{print} 'Whoever gets the most points wins!'\n{if} points_player_1 < points_player_2\n    {print} _"
            question_text: What should be filled in in the blanks?
    15:
        1:
            code: |-
                answer = 0
                while answer _ 'Amsterdam'
                    answer = ask 'What is the capital city of the Netherlands?'
                print 'You have given the correct answer'
            mp_choice_options:
            -   option: '`=!`'
                feedback: That is not right.
            -   option: '`==`'
                feedback: You don't have to keep guessing if you've given the right answer.
            -   feedback: Correct
                option: '`!=`'
            -   feedback: That's not it
                option: '`=`'
            question_score: '10'
            correct_answer: C
            hint: Keep guessing until you say Amsterdam
            question_text: 'Which symbol should be used on the blank? Tip: You must keep guessing until you get it right.'
        3:
            question_text: Which command should be filled in on the two blanks?
            code: |-
                _ age >= 18
                  print 'you are not allowed in this bar'
            question_score: '10'
            mp_choice_options:
            -   option: '`{in}`'
                feedback: That's not it
            -   option: '`{while}`'
                feedback: You are right
            -   option: '`{for}`'
                feedback: That's not it
            -   option: '`{range}`'
                feedback: That's not it
            correct_answer: B
            hint: You are not allowed in the bar as long as you are 17 or younger
        4:
            code: |-
                options = 1, 2, 3, 4, 5, 6
                print 'Throw 6 as fast as you can!'
                thrown = 0
                tries = 0
                while thrown == 6
                    thrown = options at random
                    print 'You threw ' thrown
                    tries = tries + 1
                print 'Yes! You have thrown 6 in ' tries ' tries.'
            mp_choice_options:
            -   option: In line 1 == should be used instead of =
                feedback: No that's not it
            -   option: Line 2 misses quotation marks
                feedback: That's not right
            -   option: In line 5 if should have been used instead of while
                feedback: That's not it
            -   option: In line 5 != should have been used instead of ==
                feedback: You are correct
            question_score: '10'
            hint: There is something wrong in line 5
            correct_answer: D
            question_text: What's wrong with this code?
        5:
            code: |-
                wetness = 10
                while wetness != 0
                    print 'Your hair is still wet, hair dryer on!'
                    sleep 1
                    clear
                    wetness _

                print 'All dry!'
            mp_choice_options:
            -   option: = wetness
                feedback: That will not change anything
            -   option: = wetness = 1
                feedback: You can't have two times = in one line
            -   option: = wetness - 1
                feedback: You are correct!
            -   option: = wetness + 1
                feedback: The program should count down
            question_score: '10'
            correct_answer: C
            question_text: What should be placed on the blank to make this program work correctly?
            hint: wetness should get less each time
        6:
            question_text: what is wrong with this code?
            code: |-
                lives = 100
                    {while} lives != 0
                    answer = {ask} 'Are you annoyed yet?'
                {if} answer == 'yes'
                    lives = lives - 1
            mp_choice_options:
            -   option: while should be if
                feedback: No that is not right
            -   option: if should be while
                feedback: No that is not right
            -   option: Line 3 should start with more indentation
                feedback: No that's not right
            -   option: Line 2 should start with less indentation
                feedback: That is correct
            hint: Look closely at the indentation
            correct_answer: D
            question_score: '10'
        7:
            question_text: How should this program be changed to that it works?
            mp_choice_options:
            -   option: '... change the first {if} into a {while}'
                feedback: Perfect!
            -   option: '... change the second {if} into a {while}'
                feedback: That's not quite right.
            -   option: '... change the third {if} into a {while}'
                feedback: That's not quite right.
            -   option: '... change the fourth {if} into a {while}'
                feedback: That's not quite right.
            question_score: '10'
            correct_answer: A
            hint: The last one should say you win.
            code: "{print} 'Guess which number'\nnumbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\nnumber = numbers {at} {random}\ngame = 'on'\n{if} game == 'on'\n    guess = {ask} 'Which number do you think it is?'\n    {if} guess < number\n        {print} _\n    {if} guess > number\n        {print} _\n    {if} guess == number\n        {print} _\n        game = 'over'"
        8:
            hint: The block after the while command keeps happening while the toilet is occupied.
            question_score: '10'
            code: "{while} toilet == 'occupied'\n    lights = 'on'\n    air_freshener_sprays = 'yes'\n    {sleep} 60\nlights = 'off'\nair_freshener_sprays = 'no'"
            mp_choice_options:
            -   option: The lights and air freshener will turn off after 1 minute
                feedback: False!
            -   feedback: Great job
                option: The air freshener sprays once every minute and the lights stay on the whole time while you are on the toilet
            -   option: The air freshener sprays once you leave the toilet.
                feedback: It only sprays when you're in there.
            -   feedback: That wouldn't be right.
                option: The lights will always stay on.
            question_text: Which statement is true about this automated toilet system?
            correct_answer: B
        9:
            code: |-
                chocolate = {ask} 'How many calories have you eaten today?'
                  {while} calories <= 1000
                      {print} 'You could eat some more'
                  {while} calories > 1000 and calories =< 2000
                      {print} 'That is alright'
                  {while} calories > 2000
                      {print} 'You have had enough for today'
            mp_choice_options:
            -   option: Nothing. 1600 is not programmed into the app.
                feedback: 'No'
            -   option: you could eat some more
                feedback: 'No'
            -   option: That is alright
                feedback: Yes!
            -   option: You have eaten enough for today
                feedback: 'No'
            question_text: What will the diet app say if you have eaten 1600 calories today?
            hint: 1600 is between 1000 and 2000
            question_score: '10'
            correct_answer: C
        10:
            mp_choice_options:
            -   option: name_player_1
                feedback: You are right!
            -   option: name_player_2
                feedback: No they are losing!
            -   option: points_player_1
                feedback: You should fill in a name, not a number
            -   option: points_player_2
                feedback: You should fill in a name, not a number
            correct_answer: A
            question_score: '10'
            hint: You win the game by having the most points. Your name should appear on the screen
            question_text: 'What should be filled in in the blanks? Tip: the player with the most points is in the lead.'
            code: "name_player_1 = {ask} 'Name player 1:'\nname_player_2 = {ask} 'Name player 2:'\n{while} points_player_1 > points_player_2\n    {print} _ ' is in the lead right now!'"
        2:
            mp_choice_options:
            -   feedback: No
                option: "```\n{while} name = Hedy\n```"
            -   feedback: No
                option: "```\n{while} age = 24\n```"
            -   feedback: Yes!
                option: "```\n{while} time > 0\n```"
            -   option: "```\n{while} answer == yes'\n```"
                feedback: A quotation mark is missing
            question_score: '10'
            correct_answer: C
            question_text: Which of these codes has used the correct symbol(s)?
            hint: When you are comparing two answers you should use ==
    16:
        2:
            code: |-
                friends = ['Wesley', 'Eric', 'Kaylee']
                chores = [the cooking, the cleaning, nothing]
                {for} i {in} {range} 1 {to} 3
                    {print}  _
            mp_choice_options:
            -   option: "```\nfriends[i] has to do chores [i]\n```"
                feedback: Mind the spacing.
            -   feedback: It will print 3 times that Wesley has to do the cooking
                option: "```\nfriends[1] has to do chores[1]\n```"
            -   feedback: The person has to do the chore, not the other way around
                option: "```\nchores[i] ' has to do ' friends[random]\n```"
            -   option: "```\nfriends[i] ' has to do ' chores[i]\n```"
                feedback: Fantastic!
            question_score: '10'
            hint: '`i` tells us what item in the list it is. So friend 1 does chore 1 etc.'
            correct_answer: D
            question_text: What should be filled in on the blanks if you want a list of what chores are done by whom?
        3:
            code: |-
                friends = ['Wesley', 'Eric', 'Kaylee']
                chore = [the cooking, the cleaning, nothing]
                {for} i {in} {range} 1 {to} 3
                    {print}  friends[i] has to do chores[i]
            mp_choice_options:
            -   option: "```\nWesley has to do the cooking\nEric has to do the cleaning\nKaylee has to do nothing\n```"
                feedback: Super!
            -   feedback: No, it is not random.
                option: "```\nKaylee has to do the cooking\nWesley has to do the cleaning\nEric has to do nothing\n```"
            -   option: "```\nWesley has to do the cooking\nWesley has to do the cleaning\nWesley has to do the nothing\n```"
                feedback: Poor Wesley!
            -   option: "```\nWesley has to do the cooking\nWesley has to do the cooking\nWesley has to do the cooking\n```"
                feedback: That's not it
            question_text: What is a possible output for this program?
            hint: It's not random...
            correct_answer: A
            question_score: '10'
        4:
            mp_choice_options:
            -   option: The variable in line 4 should be 'friend[i]', not 'friends[i]'
                feedback: That is not right.
            -   option: Line 3 should say 'in range 1 to 3' not 'in range 0 to 3'
                feedback: Good catch!
            -   option: Line 4 should say 'lucky_number', not 'lucky number
                feedback: It's not a variable, it's just text.
            -   option: '{in} in line 3 should be removed'
                feedback: That's not it
            question_text: What is wrong with this code?
            code: "friends = ['Jaylee', 'Erin', 'Fay']\nlucky_numbers = [15, 18, 6]\n{for} i {in} {range} 0 {to} 3\n    print 'the lucky number of ' friends[i]\n    print 'is ' lucky_numbers[i]"
            hint: There's nothing wrong with line 4
            correct_answer: B
            question_score: '10'
        5:
            mp_choice_options:
            -   option: noises = ['moo', 'woof', 'neigh']
                feedback: Mind the variable name and the order of the sounds.
            -   option: sounds = '[woof], [moo], [neigh]'.
                feedback: Look at line one to see how brackets are supposed to be used.
            -   option: sounds = [woof, moo, neigh]
                feedback: Don't forget the quotation marks!
            -   option: sounds = ['woof', 'moo', 'neigh']
                feedback: Great job!
            question_text: Which line should be filled in in the blank?
            code: "animals = ['dog', 'cow', 'horse']\n_\n{for} i {in} {range} 1 {to} 3\n    {print} 'the ' animals[i] ' says ' sounds[i]"
            hint: Look at line 1 to see proper use of brackets and quotation marks.
            correct_answer: D
            question_score: '10'
        1:
            mp_choice_options:
            -   feedback: This is the old way.
                option: '`snacks {at} {random}`'
            -   option: '`[{random} snack]`'
                feedback: The order is wrong.
            -   feedback: Correct
                option: '`snacks[{random}]`'
            -   option: '`snacks[{at} {random}]`'
                feedback: We do not need `at`anymore
            code: "snacks = nachos, chips, cucumber, sweets\n{print} _"
            question_score: '10'
            correct_answer: C
            hint: We no longer use {at}
            question_text: Which command should be filled in on the blanks to print a random snack?
        6:
            mp_choice_options:
            -   option: You are not allowed to use the variable o. It should be named i.
                feedback: i is the most commonly used variable name in this case, but it's not mandatory to use i.
            -   option: The output will say that Jaylino likes fortnite.
                feedback: No, he likes minecraft.
            -   feedback: Correct
                option: The output will say that Ryan likes fifa
            -   feedback: No, the code is correct.
                option: This code will not work. It will give and error.
            code: "people = ['Chris', 'Jaylino', 'Ryan']\ngames = ['fortnite', 'minecraft', 'fifa']\n{for} o {in} {range} 1 {to} 3\n  {print} people[o] ' likes ' games[o]"
            question_score: '10'
            correct_answer: C
            hint: There is nothing wrong with this code.
            question_text: Which statement is true?
        7:
            mp_choice_options:
            -   feedback: That is not right.
                option: Line 1 needs less quotation marks
            -   feedback: It should not!
                option: Line 3 should start with indentation
            -   option: Line 4 should start without indentation
                feedback: It should not
            -   feedback: Amazing!
                option: Line 4 needs more quotation marks.
            question_text: What's wrong with this code?
            correct_answer: D
            hint: There is a mistake made in the usage of quotation marks.
            code: "people = ['Savi', 'Senna', 'Fayenne']\ntransportation = ['bike', 'train', 'car']\n{for} i {in} {range} 1 {to} 3\n  {print} people[i] goes to school by transportation[i]"
            question_score: '10'
        8:
            mp_choice_options:
            -   feedback: This is not right
                option: "```\nteams = ['Macy and Kate', 'Lionell and Raj', 'Kim and Leroy']\nposition = ['first', 'second', 'third']\n{for} i {in} {range} 0 {to} 3\n{print} teams[random] ' get to go ' position[i]\n```"
            -   feedback: Amazing!
                option: "```\nteams = ['Macy and Kate', 'Lionell and Raj', 'Kim and Leroy']\nposition = ['first', 'second', 'third']\n{for} i {in} {range} 1 {to} 3\n  {print} teams[i] ' get to go ' position[i]\n```"
            -   option: "```\nteams = ['Macy', 'Kate', 'Lionell', 'Raj', 'Kim', 'Leroy']\nposition = ['first', 'second', 'third']\n{for} i {in} {range} 1 {to} 6\n  {print} teams[random] ' get to go ' position[random]\n```"
                feedback: This is not it.
            -   option: "```\nteams = ['Macy and Kate' 'Lionell and Raj' 'Kim and Leroy']\nposition = ['first' 'second' 'third']\n{for} teams {in} {range} 0 {to} 3\n    {print} teams[i] ' get to go ' position[i]\n```"
                feedback: This is not going to work!
            question_score: '10'
            code: "Macy and Kate get to go first\nLionell and Raj get to go second\nKim and Leroy get to go third"
            correct_answer: B
            hint: If you look carefully at the first line, you'll see that only the first two answers are possibly correct.
            question_text: Which of these codes belongs to this output?
        9:
            mp_choice_options:
            -   option: "```\nI will travel to Canada\nI will travel to Canada\n```"
                feedback: Great job!
            -   feedback: It will be repeated twice
                option: "```\nI will travel to Canada\n```"
            -   feedback: This is not it.
                option: "```\nI will travel to Canada, Zimbabwe and New Zealand\n```"
            -   option: "```\nI will travel to Canada\nI will travel to Zimbabwe\nI will travel to New Zealand\n```"
                feedback: It's only repeated twice
            question_score: '10'
            code: "countries = ['Canada', 'Zimbabwe', 'New Zealand']\n{for} i {in} {range} 0 {to} 1\n  {print} 'I will travel to ' countries[random]"
            question_text: What is a possible output for this code?
            hint: Range 0 to 1 is 2 times
            correct_answer: A
        10:
            mp_choice_options:
            -   option: "```\nchosen_number = list_of_numbers at random\nprint books[i] ' will go to person number ' chosen_number\n{add} chosen_number {to} list_of_numbers\n```"
                feedback: Almost there... but adding the winner to the list makes this raffle unfair
            -   option: "```\nprint person[i] ' wins ' book[i]\n```"
                feedback: There is no list called 'person'
            -   feedback: This is not it.
                option: "```\nchosen_number = list_of_numbers[people]\nprint books[people] ' will go to person number ' chosen_number\n{remove} chosen_number {from} list_of_numbers\n```"
            -   feedback: Fantastic!
                option: "```\nchosen_number = list_of_numbers[random]\nprint books[i] ' will go to person number ' chosen_number\n{remove} chosen_number {from} list_of_numbers\n```"
            question_text: Which 3 lines will complete this code correctly?
            hint: You need to use the {remove} command
            correct_answer: D
            code: "{print} 'The book raffle will start soon'\n{print} 'Get your tickets now!'\nbooks = ['Narnia', 'The Hobbit', 'Oliver Twist', 'Harry Potter', 'Green eggs and ham']\npeople = {ask} 'How many raffle tickets are sold?'\nlist_of_numbers = [1, 2]\n{for} i {in} {range} 3 {to} people\n    {add} i {to} list_of_numbers\n{for} i {in} {range} 1 {to} 5"
            question_score: '10'
    17:
        3:
            mp_choice_options:
            -   feedback: Try again.
                option: "```\n🦔\n🦔\n🦔\n```"
            -   feedback: One more try.
                option: "```\n🦔\n🦔\n```"
            -   option: "```\n🦔\n🦔\n🦔\n🦔\n🦔\n🦔\n```"
                feedback: Well done!
            -   option: "```\n🦔\n🦔\n🦔\n🦔\n🦔\n```"
                feedback: That is not it.
            hint: Think about how many times you need repeating.
            correct_answer: C
            question_score: '10'
            question_text: How many hedgehogs will this code print?
            code: "{for} x in range 1 to 3:\n  {for} y in range 1 to 2:\n    {print} 🦔"
        10:
            question_score: '10'
            hint: Read the code carefully.
            mp_choice_options:
            -   option: The word num needs quotation marks.
                feedback: Try again.
            -   feedback: Not true.
                option: The `{if}` command is not used correctly.
            -   option: Line 3 should be `volume_room = number * number * number`.
                feedback: Well done!
            -   option: There is an indentation mistake in the last line.
                feedback: Nope.
            question_text: What is wrong with this code?
            code: "{for} number in range 1 to 5:\n  volume_room = num * num * num\n  {print} volume_room ' cubic meters'\n    {if} volume_room > 100:\n      {print} 'this is a large room'\n    {elif} volume_room < 100:\n      {print} 'small room but cosy'\n    {else}:\n      {print} 'i will look for something else'"
            correct_answer: C
        4:
            code: "name_color = {ask} 'What is your favorite color?'\n{if} name_color == 'red':\n  {print} 'the color of a tomato'\n{elif} name_color == 'green':\n  {print} 'the color of an apple'\n{elif} name_color == 'blue':\n  {print} 'the color of a blueberry'\n{elif} name_color == 'yellow':\n  {print} 'the color of a banana'\n{elif}:\n  {print} 'this fruit-color does not exist'"
            question_text: What is wrong with code?
            mp_choice_options:
            -   feedback: Try again.
                option: The first `{elif}` should be used before the `print` command
            -   option: '`{elif}` can only be used once'
                feedback: From now on we can use elif multiple times.
            -   feedback: Not correct.
                option: '`==` used with `{elif}` should be replaced by `=`'
            -   option: '`{elif}` in the last line should be replaced by `{else}`'
                feedback: Great!
            correct_answer: D
            question_score: '10'
            hint: Think about `{if}`, `{elif}`, `{else}`.
        1:
            mp_choice_options:
            -   option: "```\nm i n i o n s\n```"
                feedback: This is not it.
            -   option: "```\nBob\nKevin\nStuart\n```"
                feedback: Correct!
            -   option: "```\nminions\nminions\nminions\n```"
                feedback: Take a look at the content of your list.
            -   option: "```\nB o b K e v i n S t u a r t\n```"
                feedback: Do not loop through the letters.
            question_text: What is the output of this code?
            code: "minions = ['Bob', 'Kevin', 'Stuart']\n{for} x in minions:\n    {print} x"
            hint: Loop through your list.
            correct_answer: B
            question_score: '10'
        2:
            question_score: '10'
            hint: Read the code carefully.
            mp_choice_options:
            -   feedback: This is not it.
                option: You cannot have so many variables.
            -   option: The way the variables are multiplied is incorrect.
                feedback: Not true!
            -   feedback: Keep looking for the mistake.
                option: One of the variables `noleap_year` does not belong with the `{if}` statement.
            -   option: The `noleap_year` has to be identical in both cases.
                feedback: Correct!
            question_text: What is wrong with this code?
            correct_answer: D
            code: "seconds_minute = 60\nminute_hour = 60\nhour_day = 24\nleap_year = 366\nno_leap_year = 365\nyears = ask 'what year is it?'\n{if} years = 2024:\n print seconds_minute * minute_hour * hour_day * leap_year\n{else}:\n print seconds_minute * minute_hour * hour_day * noleap_year"
        5:
            mp_choice_options:
            -   option: "```\n7\nanother number\nanother number\nanother number\nanother number\n71\n79\n97\n```"
                feedback: Well done!
            -   option: "```\nanother number\n19\n29\n41\n53\n71\n79\n97\n```"
                feedback: Try again.
            -   feedback: One more try.
                option: "```\n7\n19\n29\n41\n53\n71\n79\nanother number\n```"
            -   option: "```\n7\n19\n29\n41\n53\n71\n79\n97\n```"
                feedback: That is not it.
            code: "numbers = [7, 19, 29, 41, 53, 71, 79, 97]\n{for} prime in numbers:\n  {if} prime <= 10：\n    {print} prime\n  {elif} prime >= 60:\n    {print} prime\n  {elif} prime >= 90:\n    {print} prime\n  {else}:\n    {print} 'another number'"
            hint: Think about how many times you need repeating and the values of if and elif.
            question_text: What is the output of this code?
            question_score: '10'
            correct_answer: A
        6:
            code: "name = {ask} 'What is your name?'\n{if} name == 'Hedy':\n    password = {ask} 'What is your password?'\n    {if} password =='turtle123':\n        {print} 'Yey'\n    {else}:\n        {print} 'Access denied'\n{else}:\n {print} 'Go fish'"
            mp_choice_options:
            -   feedback: Try again.
                option: '`{elif}` is missing.'
            -   option: '`{else}` can only be used once.'
                feedback: From now on we can use elif multiple times.
            -   option: Nothing!
                feedback: There is a mistake. Look carefully!
            -   feedback: Amazing!
                option: There is an indentation mistake in the last line.
            correct_answer: D
            hint: There is a mistake somewhere...
            question_score: '10'
            question_text: What is wrong with code?
        7:
            mp_choice_options:
            -   feedback: Try again!
                option: "```\n numbers = [1, 2 , 3, 4, 5]\n {for} n in numbers：\n     result = n * 1\n {print} 'The result is ' result\n```"
            -   option: "```\nnumbers = [1, 2, 3, 4, 5]\n {for} u in numbers：\n     number = u\n {print} 'The result is ' number\n```"
                feedback: That is not it.
            -   option: "```\nnumbers = [1, 2, 3, 4, 5]\n {for} number in numbers：\n     number = 3\n {print} 'The result is ' number\n```"
                feedback: Very good!
            -   option: "```\nnumbers = [1, 2 , 3, 4, 5]\n {for} n in numbers：\n     n = result\n {print} 'The result is ' result\n```"
                feedback: That is not it.
            question_score: '10'
            hint: Think about mathematical symbols.
            question_text: Which of the following codes will print five times 'the result is 3' on the screen?
            correct_answer: C
        8:
            code: "insects = ['🐝', '🦋', '🕷', '🐞']\nyour_favorite = {ask} 'what is your favorite insect?'\n{for} insect in insects:\n {if} your_favorite == '🐝' {or} your_favorite == '🐞':\n  {print} 'very useful'\n {elif} your_favorite == '🕷':\n  {print} 'it can catch mosquitoes'\n {else}:\n  {print} 'almost all insects can be useful one way or another'"
            mp_choice_options:
            -   option: '`{or}` cannot be used with `{if}`.'
                feedback: Try again.
            -   option: In the `{for}` command `insect` should be `insects`.
                feedback: Not true.
            -   feedback: Well done!
                option: Nothing!
            -   option: There is an indentation mistake in the last line.
                feedback: Nope.
            question_score: '10'
            correct_answer: C
            hint: Read the code carefully.
            question_text: What is wrong with code?
        9:
            question_text: Which one of the codes below gave this output?
            mp_choice_options:
            -   option: "```\n {for} number in range -5 to 3:\n     {if} number > 0: \n      {print} number ' is positive'\n     {elif} number < 0: \n      {print} number ' is negative' \n    {else}: \n     {print} number ' is zero'\n```"
                feedback: Try again!
            -   feedback: That is not it.
                option: "```\n {for} number in range -5 to 3:\n     {if} number > 0: \n      {print} number ' is positive'\n     {elif} number <= 0: \n     {print} number ' is negative' \n    {else}: \n     {print} number ' is zero'\n```"
            -   option: "```\n {for} number in range -5 to 3:\n     {if} number >= 0: \n     {print} number ' is positive'\n     {elif} number < 0: \n     {print} number ' is negative' \n     {else}: \n     {print} number ' is zero'\n```"
                feedback: Very good!
            -   option: "```\n {for} number in range -5 to 3:\n     {if} number < 0: \n      {print} number ' is positive'\n     {elif} number <=0: \n     {print} number ' is negative' \n     {else}: \n     {print} number ' is zero'\n```"
                feedback: That is not it.
            question_score: '10'
            code: "-5 is negative\n-4 is negative\n-3 is negative\n-2 is negative\n-1 is negative\n0 is positive\n1 is positive\n2 is positive\n3 is positive"
            hint: Read the code carefully.
            correct_answer: C
