levels:
    1:
        2:
            code: ___ Hello!
            mp_choice_options:
            -   option: |-
                    ```
                    {echo}
                    ```
                feedback: '`{echo}` repeats a given answer.'
            -   option: |-
                    ```
                    {print}
                    ```
                feedback: Correct!
            -   option: |-
                    ```
                    hello
                    ```
                feedback: Hello isn't a command.
            -   option: |-
                    ```
                    {ask}
                    ```
                feedback: With `{ask}`, you can ask a question.
            hint: _?_ Hello world!
            correct_answer: B
            question_score: '10'
            question_text: Which need to be filled in on the blanks to make the text Hello! appear?
        4:
            mp_choice_options:
            -   option: '`{print}` in line 1 is missing.'
                feedback: Correct!
            -   option: Im in line 1 is spelled wrong.
                feedback: Im is spelled wrong on purpose; Hedy doesn't understand the apostrophes yet.
            -   option: '`{echo}` isn''t a command.'
                feedback: '`{echo}` is a command, there''s another mistake.'
            -   option: Nothing! This is a perfect code!
                feedback: Wrong, look carefully!
            question_text: What is wrong with this code?
            hint: Line 1 doesn't seem right
            correct_answer: A
            code: "Hi Im Hedy!\n{ask} Who are you?\n{echo} Hi..."
            question_score: '10'
        5:
            code: |-
                {ask} What is your favorite pet?
                _?_ So your favorite pet is...
            mp_choice_options:
            -   option: |-
                    ```
                    {print}
                    ```
                feedback: No, you would like the answer to be repeated back to you.
            -   option: |-
                    ```
                    Hedy
                    ```
                feedback: Hedy isn't a command.
            -   option: |-
                    ```
                    {ask}
                    ```
                feedback: With `{ask}` you can ask a question.
            -   option: |-
                    ```
                    {echo}
                    ```
                feedback: Right on!
            question_text: Which command is missing in line 2?
            hint: You want to see the answer at the end of line 2...
            correct_answer: D
            question_score: '10'
        8:
            mp_choice_options:
            -   option: You can use it to `{ask}` a question.
                feedback: That's what `{ask}` is for!
            -   option: You can use it to print text.
                feedback: That's what `{print}` is for!
            -   option: You can use it to repeat an answer.
                feedback: Good job!
            -   option: You can use it to make text disappear.
                feedback: That's not right...
            correct_answer: C
            question_text: How do you use the `{echo}` command?
            hint: '`{echo}` is used after an `{ask}` command.'
            question_score: '10'
        10:
            question_text: Which output will be in your outputscreen after you've run this code?
            mp_choice_options:
            -   option: Are you ready to go to level 2?
                feedback: There are two echo commands
            -   option: |-
                    Yes!
                    Yes!
                feedback: Great job!
            -   option: Yes!
                feedback: There are two echo commands
            -   option: |-
                    Are you ready to go to level 2?
                    Yes!
                feedback: There are two echo commands
            code: "{ask} Are you ready to go to level 2?\n{echo}\n{echo}"
            hint: Let's go!
            question_score: '10'
            correct_answer: B
        3:
            mp_choice_options:
            -   feedback: "`{print}` prints text, but it doesn't ask questions."
                option: "```\n{print} What is your favorite color?\n```"
            -   option: "```\n{ask} {print} What is your favorite color?\n```"
                feedback: You only need one command, not two.
            -   option: "```\n{ask} What is your favorite color?\n```"
                feedback: Great!
            -   feedback: '`{echo}` repeats your answer back to you.'
                option: "```\n{echo} What is your favorite color?\n```"
            correct_answer: C
            question_score: '10'
            question_text: How do you ask what someone's favorite color is?
            hint: You can ask something with the `{ask}` command
        6:
            mp_choice_options:
            -   feedback: '`{print}` in line 1 is correct.'
                option: In line 1 `{print}` should be replaced with `{ask}`.
            -   option: In line 2, `{print}` should be replaced with `{ask}`.
                feedback: Great! You paid attention!
            -   option: Line 3 has to begin with `{print}` instead of `{echo}`.
                feedback: '`{echo}` is correct.'
            -   option: In line 4, `{print}` is spelled wrong.
                feedback: No, there is a mistake somewhere else
            hint: Check the `{print}` commands.
            question_text: What's wrong with this code?
            code: "{print} Hi im Hedy!\n{print} Which football team do you support?\n{echo} You support...\n{print} Cool! Me too!"
            question_score: '10'
            correct_answer: B
        7:
            correct_answer: D
            hint: Check the code line by line
            mp_choice_options:
            -   option: In line 1 `{print}` needs to be replaced with `{ask}`
                feedback: Are you sure something is wrong?
            -   option: In line 1 `{print}` needs to be replaced with `{echo}`
                feedback: Are you sure something's wrong?
            -   feedback: Are you sure something is wrong?
                option: In line 3 `{echo}` needs to be replaced with `{print}`
            -   option: Nothing! This is a perfect code!
                feedback: Correct!
            question_score: '10'
            question_text: What's wrong with this code?
            code: "{print} Welcome at Hedys restaurant!\n{ask} What would you like to eat?\n{echo} So you want to order ...\n{print} Coming right up! Enjoy!"
        9:
            mp_choice_options:
            -   option: '`{print}` in line 1 should be `{ask}`'
                feedback: No, `{print}` is right. Where is the question being asked?
            -   feedback: Super!
                option: '`{print}` in line 2 should be `{ask}`'
            -   feedback: No, `{echo}` is right. Where is the question being asked?
                option: '`{echo}` in line 3 should be `{ask}`'
            -   option: Nothing. This is a perfect code!
                feedback: Look carefully for the mistake...
            hint: '`{ask}` allows you to ask a question'
            correct_answer: B
            code: "{print} Hello!\n{print} How are you doing?\n{echo} So you are doing..."
            question_text: What's wrong with this code?
            question_score: '10'
        1:
            question_text: What's this programming language called?
            mp_choice_options:
            -   option: Hedy
                feedback: Good job!
            -   option: Heddy
                feedback: Not this one!
            -   feedback: Not this one!
                option: Haydie
            -   feedback: Not this one!
                option: Heidi
            hint: It's named after Hedy Lamarr.
            correct_answer: A
            question_score: '10'
    2:
        1:
            mp_choice_options:
            -   option: You can use the {print} command to ask questions.
                feedback: That is what ask is for
            -   option: You can use the {ask} command to echo answers.
                feedback: That is not true
            -   option: With the {print} command you can make text appear
                feedback: Good
            -   option: With the {sleep} command, you can remove text from the screen.
                feedback: That's not how `{sleep}` works.
            correct_answer: C
            hint: '`{print}` still works the same way as in level 1'
            question_score: '10'
            question_text: Which statement is true?
        6:
            code: |-
                {print} And the award for best programming language goes to...
                _?_
                {print} Hedy!
            mp_choice_options:
            -   option: |-
                    ```
                    {sleep}
                    ```
                feedback: Perfect!
            -   option: |-
                    ```
                    {echo}
                    ```
                feedback: There is nothing to repeat back here
            -   option: |-
                    ```
                    {print}
                    ```
                feedback: There is no text there to `{print}` there
            -   option: |-
                    ```
                    {ask}
                    ```
                feedback: There is no question there to be asked
            question_text: What should be on the lines?
            correct_answer: A
            hint: Pause for dramatic effect...
            question_score: '10'
        7:
            code: |-
                {print} I will explode in 3 seconds!
                _?_
                {print} BOOM!
            mp_choice_options:
            -   feedback: You don't need to `{print}`
                option: "```\n{print} 3\n```"
            -   feedback: Perfect!
                option: "```\n{sleep} 3\n```"
            -   feedback: This way the bomb will explode in 1 second
                option: "```\n{sleep}\n```"
            -   feedback: Make it easier on yourself by using the number 3
                option: "```\n{sleep} {sleep} {sleep}\n```"
            question_score: '10'
            hint: You want the computer to wait for 3 seconds
            correct_answer: B
            question_text: What command should be used on line 2?
        10:
            code: |-
                flavor {is} _?_
                {print} Your favorite icecream is...
                {sleep}
                {print} flavor
            mp_choice_options:
            -   feedback: You want to know the favorite flavor!
                option: "```\n{sleep} 3\n```"
            -   option: "```\n{print} strawberries\n```"
                feedback: You do not want a `{print}` command at the middle of the line...
            -   feedback: This way you are making a list. You don't want that now.
                option: "```\nstrawberries, chocolate, vanilla\n```"
            -   feedback: That's right!
                option: "```\n{ask} What flavor icecream do you like?\n```"
            question_text: What command should be used on the line 1?
            correct_answer: D
            hint: You want to `{ask}` a question
            question_score: '10'
        4:
            mp_choice_options:
            -   option: Hi my name is name
                feedback: The variable name is replaced with Hedy
            -   option: Hi my name is Hedy
                feedback: The variable name is replaced with Hedy
            -   option: Hi my Hedy is name
                feedback: The variable name is replaced with Hedy
            -   feedback: Correct, this mistake will be fixed in level 4!
                option: Hi my Hedy is Hedy
            question_score: '10'
            hint: "'name' is being replaced with 'Hedy' in both places"
            code: "name {is} Hedy\n{print} Hi my name is name"
            question_text: What will you see on the output screen when you run this code?
            correct_answer: D
        2:
            mp_choice_options:
            -   option: "```\nname {is} {ask} What is your name?\n```"
                feedback: Super!
            -   feedback: The words are right, the order is not!
                option: "```\n{ask} {is} name What is your name\n```"
            -   option: "```\n{ask} What is your name?\n```"
                feedback: This worked in level 1, but in level 2 and up it works differently.
            -   feedback: The words are right, the order isn't!
                option: "```\n{ask} What is your name? {is} name\n```"
            hint: "`{ask}` doesn't work like in level 1"
            correct_answer: A
            question_text: Which code is correct?
            question_score: '10'
        3:
            question_text: What appears on your output screen when you run this code?
            mp_choice_options:
            -   feedback: The word name is replaced with Marleen
                option: name goes to the market and she buys an apple.
            -   option: Marleen goes to the market.
                feedback: The second part of the sentence isn't left out!
            -   feedback: Right on!
                option: Marleen goes to the market and she buys an apple.
            -   feedback: She is not replaced with the name
                option: Marleen goes to the market and Marleen buys an apple.
            hint: The word name is replaced with Marleen
            question_score: '10'
            correct_answer: C
            code: "name {is} Marleen\n{print} name goes to the market and she buys an apple."
        8:
            question_text: How would you correct the first line of code?
            mp_choice_options:
            -   option: "```\nage {ask} {is} How old are you?\n```"
                feedback: That is the wrong order
            -   option: "```\n{ask} {is} age How old are you?\n```"
                feedback: That is the wrong order
            -   option: "```\nage {is} {ask} How old are you?\n```"
                feedback: You get it!
            -   option: "```\nage {is} How old are you?\n```"
                feedback: Where is the `{ask}` command?
            question_score: '10'
            correct_answer: C
            code: "{ask} {is} How old are you?\n{print} age"
            hint: The variable name should come first
        9:
            mp_choice_options:
            -   feedback: The variable name is animal
                option: 'Line 1 should say: dogs `{is}` animals'
            -   feedback: Great!
                option: 'Line 1 should say: animal `{is}` dogs'
            -   option: 'Line 2 should say: `{print}` I love animals'
                feedback: The variable name is animal
            -   option: 'Line 2 should say: `{sleep}` I love animals'
                feedback: Sleep is not used to `{print}` text
            code: "dogs {is} animal\n{print} I love animal"
            question_score: '10'
            question_text: What is going wrong in this code?
            hint: You want to `{print}` 'I love dogs'
            correct_answer: B
        5:
            question_text: What happens when you use the `{sleep}` command?
            question_score: '10'
            mp_choice_options:
            -   feedback: fortunately not!
                option: It slows down your computer
            -   option: It closes down Hedy
                feedback: fortunately not!
            -   feedback: That's right!
                option: Your program pauses for a second and then continues
            -   feedback: No it would be useless at the end of your code
                option: You put it at the end so Hedy knows your program is finished
            hint: The computer waits for a second at the `{sleep}` command
            correct_answer: C
    3:
        1:
            question_text: What command do you use to let Hedy pick something arbitrarily?
            mp_choice_options:
            -   option: |-
                    ```
                    {print}
                    ```
                feedback: '`{print}` is used to print text'
            -   option: |-
                    ```
                    {ask}
                    ```
                feedback: '`{ask}` is used to ask a question'
            -   option: |-
                    ```
                    {is}
                    ```
                feedback: '`{is}` is used to make a list'
            -   option: |-
                    ```
                    {at} {random}
                    ```
                feedback: Correct!
            hint: Arbitrarily means without a plan or randomly.
            question_score: '10'
            correct_answer: D
        2:
            mp_choice_options:
            -   option: 'You need commas in line 1: dog, cat, cow.'
                feedback: Good job!
            -   option: Line 1 needs to start with `{print}`.
                feedback: No, you don't need `{print}`
            -   option: Line 2 needs to say 'animal' instead of 'animals'',
                feedback: animals is correct.
            -   option: '`{at} {random}` is spelled incorrectly'
                feedback: '`{at} {random}` is the correct spelling'
            correct_answer: A
            hint: There's something wrong in line 1
            question_score: '10'
            question_text: What's wrong with this code?
            code: "animals {is} dog cat cow\n{print} animals {at} {random}"
        9:
            hint: Look at line 3
            mp_choice_options:
            -   option: 'Line 3 should say: `{remove}` blue `{from}` colors'
                feedback: Maybe you want blue hair though!
            -   feedback: You want to remove the chosen color so `{remove}` is right.
                option: Line 3 should have an `{add}` command instead of a `{remove}` command
            -   feedback: Great job!
                option: In line 4 the variable should be called colors instead of color
            -   feedback: Find the mistake!
                option: Nothing, this is a correct code!
            question_score: '10'
            code: "colors {is} blue, purple, green\nchosen_color {is} {ask} Which hair color wouldn't you like to have?\n{remove} chosen_color {from} colors\n{print} I will dye my hair color {at} {random}"
            question_text: What's wrong with this code?
            correct_answer: C
        10:
            question_text: What should be on the _?_?
            code: |-
                walkers {is} dad, mom, Sam, Petra
                walked_yesterday {is} {ask} Who walked the dogs yesterday?
                {print} walked_yesterday shouldn't have to walk the dogs again today
                _?_
                {print} walkers {at} {random} , it's your turn to walk the dogs!
            mp_choice_options:
            -   option: |-
                    ```
                    {remove} walked_yesterday {from} walkers
                    ```
                feedback: Super!
            -   option: |-
                    ```
                    {remove} walked yesterday {to} walkers
                    ```
                feedback: '`{remove} {from}` or `{add} {to}`, not `{remove} {to}`'
            -   option: |-
                    ```
                    {remove} walkers {from} yesterday
                    ```
                feedback: yesterday is not a variable
            -   option: |-
                    ```
                    {add} walked_yesterday {to} walkers
                    ```
                feedback: This increased the chance that the person who walked yesterday now has to do it again. That's mean.
            hint: The person who walked the dog yesterday should be removed from the list.
            question_score: '10'
            correct_answer: A
        3:
            mp_choice_options:
            -   option: "```\n{at} {random} {print} options\n```"
                feedback: You're almost there. The order of the words isn't right yet.
            -   option: "```\n{print} rock {at} {random}\n```"
                feedback: you don't always want the Hedy to {print} rock, sometimes you want scissors or paper.
            -   feedback: Very good!
                option: "```\n{print} options {at} {random}\n```"
            -   option: Nothing, the code is correct!
                feedback: Look carefully for the mistake
            hint: The variable (the list) is called options.
            question_score: '10'
            correct_answer: C
            code: "options {is} rock, paper, scissors\n{print} rock, paper, scissors {at} {random}"
            question_text: How do you fix the mistake in line 2?
        4:
            hint: The variable name is prices
            correct_answer: B
            question_score: '10'
            mp_choice_options:
            -   option: "```\n{print} price\n```"
                feedback: You don't want to `{print}` the word price, but you want to `{print}` one price out of your list `{at} {random}`
            -   option: "```\n{print} prices {at} {random}\n```"
                feedback: Great! You've really paid attention.
            -   feedback: '`{at} {random}` is placed behind the variable.'
                option: "```\n{print} {at} {random} price\n```"
            -   option: Nothing, this code is alright.
                feedback: Look carefully for the mistake you missed!
            question_text: What should change in line 2 to print a random price?
            code: "prices {is} 1 dollar, 100 dollar, 1 million dollar\n{print} price {at} {random}"
        5:
            mp_choice_options:
            -   option: Line 1 needs to say `{print}` instead of `{ask}`
                feedback: No, that's not wrong.
            -   option: Line 2 needs to say `{ask}` instead of `{print}`
                feedback: No that's not wrong.
            -   feedback: No, that's not wrong.
                option: Line 2 needs to say answers `{at} {random}` `{is}` yes, no, maybe
            -   feedback: That's right!
                option: Nothing, this code is perfect
            correct_answer: D
            hint: Does this code even have a mistake?
            question_score: '10'
            code: "question {is} {ask} What do you want to know?\n{print} question\nanswers {is} yes, no, maybe\n{print} answers {at} {random}"
            question_text: What is wrong in this code?
        6:
            code: "question {is} {ask} What do you want to know?\nanswers yes, no, maybe\n{print} answers {at} {random}"
            question_text: What's wrong with this code?
            mp_choice_options:
            -   feedback: No that's not right
                option: Line 2 needs to say question instead of answers
            -   option: Line 2 needs the `{is}` command
                feedback: Correct
            -   option: Line 3 needs to say answer instead of answers
                feedback: No the variable's called answers
            -   option: Nothing! This code is great!
                feedback: Actually, line 2 has a mistake.
            question_score: '10'
            correct_answer: B
            hint: There is something wrong with line 2.
        7:
            code: "books {is} Harry Potter, The Hobbit, Green Eggs and Ham\nyour_book {is} {ask} What is your favorite book?\n{add} your_book {to} books\n{print} books {at} {random}"
            mp_choice_options:
            -   feedback: The remove command removes, the add command adds
                option: The `{add}` command removes a random book from the list
            -   option: The `{add}` command adds a random book to a list
                feedback: It doesn't. It adds your answer to the list!
            -   feedback: Correct!
                option: The `{add}` command adds your favorite book to the list
            -   option: The `{add}` command prints your favorite book.
                feedback: No, it adds your favorite book to the list
            question_text: What does the `{add}` command do?
            question_score: '10'
            correct_answer: C
            hint: The `{add}` command adds a book, but which one?
        8:
            mp_choice_options:
            -   feedback: Take a look at the `{remove}` commands
                option: You can't tell, because Hedy will `{print}` one of the 3 flavors `{at} {random}`
            -   feedback: sea salt is removed from the list
                option: sea salt
            -   feedback: Paprika is removed from the list
                option: paprika
            -   option: sour cream
                feedback: That's right!
            hint: There are 3 flavors, bit 2 are removed. Which one remains?
            correct_answer: D
            question_score: '10'
            code: "crisps {is} sea salt, paprika, sour cream\n{remove} sea salt {from} crisps\n{remove} paprika {from} crisps\n{print} crisps {at} {random}"
            question_text: What is the output of this code?
    4:
        1:
            question_text: Which of these is true?
            mp_choice_options:
            -   option: '`{print}` and `{ask}` now need quotation marks'
                feedback: That's right
            -   option: Only `{print}` needs quotation marks
                feedback: '`{ask}` needs quotation marks too!'
            -   option: '`{at} {random}` doesn''t work anymore in level 4'
                feedback: '`{at} {random}` still works'
            -   option: '`{at} {random}` now needs quotation marks'
                feedback: No, but 2 other commands do.
            hint: In level 4 you need quotation marks for 2 commands.
            correct_answer: A
            question_score: '10'
        2:
            mp_choice_options:
            -   option: |-
                    ```
                    {print} `hello`
                    ```
                feedback: This quotation mark is skewed, you need a straight one.
            -   option: |-
                    ```
                    {print} 'hello'
                    ```
                feedback: Correct
            -   option: |-
                    ```
                    {print} hello
                    ```
                feedback: There are no quotation marks here!.
            -   option: |-
                    ```
                    {print} ,hello,
                    ```
                feedback: This is a comma, you need quotation marks.
            hint: Pick the right quotation marks.
            correct_answer: B
            question_text: Which code uses the proper quotation marks?
            question_score: '10'
        3:
            mp_choice_options:
            -   option: |-
                    ```
                    {print} Hi Im Hedy
                    ```
                feedback: Add quotation marks please!
            -   option: |-
                    ```
                    {print} 'Hi Im Hedy
                    ```
                feedback: Both before and after the words you want to print should be a quotation mark.
            -   option: |-
                    ```
                    '{print} Hi Im Hedy'
                    ```
                feedback: The first quotation mark should be behind the word {print}
            -   option: |-
                    ```
                    {print} 'Hi Im Hedy'
                    ```
                feedback: Perfect!
            hint: Both before and after the words you want to print should be a quotation mark.
            question_text: Where are the quotation marks used correctly?
            question_score: '10'
            correct_answer: D
        5:
            mp_choice_options:
            -   option: |-
                    ```
                    '{print} options {at} {random}'
                    ```
                feedback: Never put the quotation mark in front of the {print} command.
            -   option: |-
                    ```
                    {print} 'options' {at} {random}
                    ```
                feedback: options is a variable. You don't literally want to print 'options {at} {random}'.
            -   option: |-
                    ```
                    {print} options {at} {random}
                    ```
                feedback: That's right
            -   option: Nothing, the game already works!
                feedback: Look carefully. There is an error.
            question_text: What has to be changed in order for the game to work?
            code: "options {is} rock, paper, scissors\n{print} 'options {at} {random}'"
            correct_answer: C
            question_score: '10'
            hint: You don't want Hedy to literally print 'options {at} {random}', you want it to print 'rock' or 'paper' or 'scissors'.
        4:
            mp_choice_options:
            -   option: "You need quotation marks around the word `{print}`, like this: `'{print}'`."
                feedback: The quotation marks shouldn't be around the command itself.
            -   option: You need quotation marks around the words you want to print.
                feedback: Super!
            -   feedback: Both `{print}` and `{ask}` require quotation marks
                option: You do not need quotation marks when using the `{ask}` command
            -   option: You can choose yourself whether to use quotation marks or not.
                feedback: Unfortunately, Hedy is stricter than that.
            correct_answer: B
            hint: From level 4 on you need to use quotation marks.
            question_text: Which statement is true?
            question_score: '10'
        6:
            correct_answer: A
            hint: 'Think carefully: what is a variable and should be outside of the quotation marks? And what are normal words that should be inside?'
            mp_choice_options:
            -   feedback: Great! You get it!
                option: "```\n{print} 'You win...' prices {at} {random}\n```"
            -   option: "```\n{print} You win... 'prices {at} {random}'\n```"
                feedback: Hedy will literally print 'prices {at} {random}'
            -   option: "```\n{print} You win... prices {at} {random}\n```"
                feedback: You need some quotation marks!
            -   option: "```\n{print} 'You win... prices {at} {random}'\n```"
                feedback: Hedy will literally print 'prices {at} {random}''
            code: prices {is} 1 dollar, 100 dollars, 1 million dollars
            question_text: What would be a good next line in this code?
            question_score: '10'
        7:
            hint: Check each line on whether they'd need quotation marks or not.
            correct_answer: A
            mp_choice_options:
            -   feedback: Correct!
                option: Quotation marks are missing in line 1
            -   option: Quotation marks are missing in line 2
                feedback: A variable doesn't need quotes
            -   feedback: You don't want Hedy to literally print 'answers {at} {random}' so no quotation marks needed here!
                option: Quotation marks are missing in line 3
            -   option: Nothing, this code is good as is!
                feedback: Look carefully. You missed a mistake!
            question_score: '10'
            question_text: What's wrong with this code?
            code: "question {is} {ask} What do you want to know?\nanswers {is} yes, no, maybe\n{print} answers {at} {random}"
        8:
            code: "{print} 'Welcome at the money show!'\n{print} 'In front of you are 3 doors'\ndoor {is} {ask} 'Which door do you choose?'"
            question_text: What would be a good next line for this code?
            mp_choice_options:
            -   option: "```\n{print} So you pick door door\n```"
                feedback: We need quotation marks
            -   option: "```\n{print} 'So you pick ' door door\n```"
                feedback: If the player chooses door 3, Hedy will say 'So you pick 3 3
            -   feedback: Super!
                option: "```\n{print} 'So you pick door ' door\n```"
            -   feedback: Hedy will literally print 'So you pick door door
                option: "```\n{print} 'So you pick door door'\n```"
            hint: The second word door should be replaced with the number, the first should still be the word door...
            correct_answer: C
            question_score: '10'
        9:
            question_text: What will never appear in your output screen?
            hint: What are Hedy's options to randomly pick from?
            mp_choice_options:
            -   feedback: Hedy could `{print}` that
                option: Ajax is going to win the champions league
            -   feedback: Hedy could `{print}` that
                option: Real Madrid is going to win the champions league
            -   option: Bayern Munchen is going to win the champions league
                feedback: Hedy could `{print}` that
            -   option: FC Barcelona is going to win the champions league
                feedback: That's right. It's not in the list
            correct_answer: D
            question_score: '10'
            code: "clubs {is} Real Madrid, Bayern Munchen, Manchester United, Ajax\n{print} clubs {at} {random} ' is going the win the champions league'"
        10:
            mp_choice_options:
            -   option: Quotation marks are missing in line 1
                feedback: A list doesn't need quotation marks
            -   feedback: Correct
                option: Quotation marks are missing in line 2
            -   option: Quotation marks are missing in both line 2 and 3
                feedback: Line 3 doesn't need quotation marks because it's not printed literally
            -   feedback: You missed one!
                option: Nothing, this code has no mistakes
            question_text: Which statement is true?
            question_score: '10'
            code: "people {is} mom, dad, Emma, Sophie\n{print} The dishes are done by...\n{print} people {at} {random}"
            correct_answer: B
            hint: One line needs quotation marks, because you want it to be printed literally.
    5:
        1:
            question_text: Which command should be filled in on the _?_?
            code: |-
                number {is} {ask} 'What is your lucky number?'
                {if} number {is} 5 {print} 'Mine too!'
                _?_ {print} 'My lucky number is 5!'
            mp_choice_options:
            -   option: |-
                    ```
                    {print}
                    ```
                feedback: There already is a `{print}` command.
            -   option: |-
                    ```
                    {if}
                    ```
                feedback: The `{if}` command is used in the line above.
            -   option: |-
                    ```
                    {sleep}
                    ```
                feedback: That's not it!
            -   option: |-
                    ```
                    {else}
                    ```
                feedback: That's right!
            correct_answer: D
            hint: Which one goes together with the `{if}` command?
            question_score: '10'
        3:
            hint: '`{if}` password `{is}` ... `{print}` ''Correct!''!'''
            mp_choice_options:
            -   feedback: This is printed when you type in the correct password
                option: Correct!
            -   option: SECRET
                feedback: That's right!'
            -   option: password
                feedback: The password isn't password...
            -   feedback: This is printed when you type in the incorrect password!
                option: ALARM INTRUDER
            correct_answer: B
            question_score: '10'
            question_text: What is the right password?
            code: "password {is} {ask} 'What is the password?'\n{if} password {is} SECRET {print} 'Correct!'\n{else} {print} 'ALARM! INTRUDER!'"
        6:
            question_text: Which word should be on the place of the question mark in the last line?
            code: |-
                {print} 'Im Hedy the football fortune teller!'
                {print} 'I will predict what place your team will end up!'
                club is {ask} 'Which club is your favorite?'
                {if} club {is} ajax {print} 'Ajax is going to win of course!'
                _?_ {print} 'Sorry, your club is gonna be in last place...'
            mp_choice_options:
            -   option: "```\n{if}\n```"
                feedback: '`{if}` is already in the line above'
            -   feedback: No, you need `{else}`.
                option: "```\n{at} {random}\n```"
            -   option: "```\n{else}\n```"
                feedback: Great!
            -   feedback: '`{print}` is already there, we need a word before it!'
                option: "```\n{print}\n```"
            hint: '`{if}` goes together with...?'
            correct_answer: C
            question_score: '10'
        7:
            question_text: Which word should be in the place of the question mark?
            code: |-
                {print} 'I can predict if you will be a millionair or not!'
                name {is} {ask} 'Whats your name?'
                {if} name {is} Hedy {print} 'You will be a millionair!'
                {else} _?_ 'Unfortunately... No big money for you.'
            mp_choice_options:
            -   option: |-
                    ```
                    {if}
                    ```
                feedback: '`{if}` is in the line above.'
            -   option: |-
                    ```
                    {at} {random}
                    ```
                feedback: No, you don't need `{at} {random}`.
            -   option: |-
                    ```
                    {else}
                    ```
                feedback: There already is an `{else}` command
            -   option: |-
                    ```
                    {print}
                    ```
                feedback: Awesome!
            hint: After `{else}` a `{print}` command follows
            question_score: '10'
            correct_answer: D
        8:
            question_text: Which word should be on the place of the question mark?
            code: |-
                animal {is} {ask} 'What is your favorite animal?'
                {if} _?_ {is} penguin {print} 'Thats my favorite animal too!'
                {else} {print} 'Cool! I like penguins.'
            mp_choice_options:
            -   option: |-
                    ```
                    favorite animal
                    ```
                feedback: That's not the variable name.
            -   option: |-
                    ```
                    animal
                    ```
                feedback: Great job!
            -   option: |-
                    ```
                    {if}
                    ```
                feedback: '`{if}` is already there'
            -   option: |-
                    ```
                    {print}
                    ```
                feedback: No, that's not it.
            hint: What the variable name?
            correct_answer: B
            question_score: '10'
        2:
            hint: '`{if}` name `{is}` Hedy `{print}` ...?'
            code: "name {is} {ask} 'What is your name?'\n{if} name {is} Hedy {print} 'fun' {else} {print} 'less fun'"
            question_text: What appears in your output screen when you type in the name Hedy?
            question_score: '10'
            mp_choice_options:
            -   feedback: That's right!
                option: fun
            -   option: less fun
                feedback: If the name is Hedy, it will say 'fun''
            -   option: Hedy
                feedback: No, it doesn't print the name
            -   option: Error
                feedback: Fortunately not!
            correct_answer: A
        5:
            mp_choice_options:
            -   feedback: Indeed!
                option: Because it needs to be in capitals, so SECRET
            -   feedback: No, this is not the password.
                option: Because the password is alarm
            -   option: Because it's spelled wrong.
                feedback: That's not how you spell secret
            -   option: Because Hedy makes a mistake
                feedback: No, Hedy is right
            correct_answer: A
            question_score: '10'
            code: "password {is} {ask} 'What is the password?'\n{if} password {is} SECRET {print} 'Correct!'\n{else} {print} 'ALARM! INTRUDER!'"
            hint: The spelling of the word has to be exactly the same.
            question_text: Why will Hedy say 'ALARM! INTRUDER' when you type in 'secret'?
        9:
            question_text: Which door should you choose to escape??
            correct_answer: B
            mp_choice_options:
            -   option: '1'
                feedback: Bad choice! You're being eaten
            -   feedback: Super! You escaped!
                option: '2'
            -   feedback: Bad choice! You're being eaten.
                option: '3'
            -   option: It's a trap, you will always be eaten!
                feedback: Luckily not!
            hint: One of the doors will keep you safe..
            question_score: '10'
            code: "{print} 'Escape from the haunted house!'\n{print} 'There are 3 doors in front of you'\ndoor {is} {ask} 'Which door do you choose?'\nmonsters {is} vampire, werewolf, giant spider\n{if} door {is} 2 {print} 'Yay, you can escape!'\n{else} {print} 'You are being devoured by a... ' monsters {at} {random}"
        10:
            mp_choice_options:
            -   feedback: Awesome!
                option: Hedy picks a random monster each time.
            -   feedback: Not always...
                option: vampire
            -   option: werewolf
                feedback: Not always...
            -   option: giant spider
                feedback: Not always...
            question_text: Which monster is standing behind door 1?
            code: "{print} 'Escape from the haunted house!'\n{print} 'There are 3 doors in front of you'\ndoor {is} {ask} 'Which door do you choose?'\nmonsters {is} vampire, werewolf, giant spider\n{if} door {is} 2 {print} 'Yay, you can escape!'\n{else} {print} 'You are being devoured by a... ' monsters {at} {random}"
            correct_answer: A
            question_score: '10'
            hint: Mind the last 3 words... monsters `{at} {random}`...
        4:
            code: "password {is} {ask} 'What is the password?'\n{if} password {is} SECRET {print} 'Correct!'\n{else} {print} 'ALARM! INTRUDER!'"
            mp_choice_options:
            -   feedback: That's printed if the correct answer is given, not the wrong one...
                option: Correct
            -   feedback: That's not the right answer
                option: SECRET
            -   feedback: No, this is not what Hedy will print
                option: Wrong!
            -   option: ALARM! INTRUDER!
                feedback: Great job!
            question_score: '10'
            hint: Your computer will sound the alarm for intruders!
            correct_answer: D
            question_text: What does Hedy print when you type in the wrong password?
    6:
        10:
            code: |-
                name _?_ Hedy
                {print} name 'is walking trough the forrest'
            mp_choice_options:
            -   option: You can only fill in the word is on the `_?_`
                feedback: You are allowed to use the `=` sign as well
            -   option: You can fill in either the word is or the `=` sign on the `_?_`
                feedback: Amazing!
            -   option: You have to fill in =is= on the `_?_`
                feedback: No, one `=` sign is enough
            -   option: You can only use the `=` sign when working with numbers, not with words.
                feedback: You can also use `=` with words.
            question_text: Which statement is true?
            hint: '`{is}` and `=` are both allowed'
            correct_answer: B
            question_score: '10'
        1:
            mp_choice_options:
            -   option: '20'
                feedback: Correct!
            -   feedback: No, the plus sign is used in addition
                option: '12'
            -   feedback: No, Hedy will calculate the answer
                option: 2*10
            -   option: '210'
                feedback: Mind it's a calculation.
            correct_answer: A
            hint: The `*` is used as a multiplication sign
            code: '{print} 2*10'
            question_score: '10'
            question_text: What's Hedy's output when you run this code?
        2:
            hint: It's the plus sign.
            mp_choice_options:
            -   option: '`-`'
                feedback: That's not it
            -   option: plus
                feedback: That's not it
            -   option: '`*`'
                feedback: That's not it
            -   option: '`+`'
                feedback: Correct!
            correct_answer: D
            question_text: What do you use when you want to add two numbers?
            question_score: '10'
        3:
            mp_choice_options:
            -   option: '30'
                feedback: This would be the right answer if there were no quotation marks.
            -   option: '13'
                feedback: Try again..
            -   feedback: Correct! There are quotation marks, so Hedy will print it literally.
                option: 3*10
            -   option: Nothing, Hedy will give an error message.
                feedback: No, Hedy will print it literally.
            hint: Mind the quotation marks!!
            correct_answer: C
            question_text: What's Hedy's output when you run this code?
            code: "{print} '3*10'"
            question_score: '10'
        5:
            mp_choice_options:
            -   feedback: Unfortunately, it's not that cheap.
                option: 5 dollars
            -   option: 10 dollars
                feedback: No, it's 10 dollars each.
            -   feedback: The * means multiplication.
                option: 15 dollars
            -   option: 50 dollars
                feedback: Great!
            question_score: '10'
            correct_answer: D
            hint: '`price` `is` `people` `times` 10'
            question_text: If 5 people eat at this restaurant, how much do they have to pay in total?
            code: "{print} 'Welcome to Hedys!'\npeople = {ask} 'How many people are eating with us tonight?'\nprice = people * 10\n{print} 'That will be ' price 'dollar please'"
        6:
            mp_choice_options:
            -   feedback: Super!
                option: 15 dollars
            -   option: 6 dollars
                feedback: The fries are 6 dollars
            -   feedback: The hamburger isn't free!
                option: 0 dollars
            -   feedback: That's the price for a hamburger and fries!
                option: 21 dollars
            hint: Mind the fourth line.
            correct_answer: A
            question_score: '10'
            question_text: How much does a hamburger cost in this virtual restaurant?
            code: "{print} 'Welcome at Hedys diner'\nfood = {ask} 'What would you like to eat?'\nprice = 0\n{if} food {is} hamburger price = 15\n{if} food {is} fries price = 6"
        7:
            mp_choice_options:
            -   option: It could have been `price = 3` just as well.
                feedback: No, that's not true. Hedy needs to add 3 dollars to the total.
            -   feedback: Hedy would understand, but it wouldn't be right.
                option: Because Hedy doesn't understand `price = 3`.
            -   option: Because Hedy would otherwise forget about the previous order. The price would be 3 dollars in total.
                feedback: That's right!
            -   option: Because the price is 0 dollars to begin with.
                feedback: That's true, but not the reason
            correct_answer: C
            hint: The price shouldn't be 3, but 3 dollars more than it already was
            question_score: '10'
            question_text: Why does line 7 say 'price is price + 3' instead of 'price is 3'?
            code: "{print} 'Welcome at Hedys diner'\nfood = {ask} 'What would you like to eat?'\nprice = 0\n{if} food {is} hamburger price = price + 15\n{if} food {is} fries price = price + 6\ndrinks is {ask} 'What would you like to drink?'\n{if} drinks {is} coke price = price + 3\n{if} drinks {is} water price = price + 1\n{print} price ' dollars please'"
        8:
            mp_choice_options:
            -   feedback: No, there should be!
                option: There shouldn't be quotation marks in line 2
            -   option: The variable is called correct answer, but a variable's name can only be 1 word. So it should be correct_answer
                feedback: Correct!
            -   option: The `{if}` and `{else}` commands should be in the same line.
                feedback: No, that's not true.
            -   feedback: Variable names can be similar, but they can't be 2 words...
                option: The variable in line 2 can't be called answer, because it is too similar to the variable correct answer.
            hint: Inspect what the variables are called.
            correct_answer: B
            question_score: '10'
            code: "correct answer = 3*12\nanswer = {ask} 'What is 3 times 12?'\n{if} answer {is} correct answer {print} 'Good job!'\n{else} {print} 'No... It was ' correct answer"
            question_text: Why is this code incorrect?
        9:
            question_text: Imagine you love football a 10, you've eaten 2 bananas and have washed your hands 3 times today. How smart does the silly fortune teller think you are?
            mp_choice_options:
            -   option: 10%
                feedback: (2 bananas + 3 hygiene) * 10 football = 5*10 =?
            -   option: 32%
                feedback: (2 bananas + 3 hygiene) * 10 football = 5*10 =?
            -   option: 50%
                feedback: Super! You are 100 percent smart!
            -   option: 100%
                feedback: (2 bananas + 3 hygiene) * 10 football = 5*10 =?
            correct_answer: C
            hint: (2 bananas + 3 hygiene) * 10 football = 5*10 =?
            question_score: '10'
            code: "{print} 'Im Hedy the silly fortune teller'\n{print} 'I will predict how smart you are!'\nfootball = {ask} 'On a scale of 0 to 10 how much do you love football?'\nbananas = {ask} 'How many bananas have you eaten this week?'\nhygiene = {ask} 'How many times did you wash your hands today??'\nresult = bananas + hygiene\nresult = result * football\n{print} 'You are ' result 'percent smart.'"
        4:
            question_score: '10'
            hint: 'Kim has 3 letters, she is 10 years old so: letters times age = 3*10 = 30.'
            correct_answer: C
            mp_choice_options:
            -   feedback: Mind, Hedy also prints 'Your lucky number is...'
                option: '30'
            -   feedback: Please try again.
                option: '10'
            -   feedback: That's right!
                option: Your lucky number is... 30
            -   option: Your lucky number is... 10
                feedback: Her lucky number is name times age...
            question_text: Kim is 10 years old. What will Hedy print for her?
            code: "name = {ask} 'How many letters are in your name?'\nage = {ask} 'How old are you?'\nluckynumber = name*age\n{print} 'Your lucky number is...' luckynumber"
    7:
        1:
            mp_choice_options:
            -   option: '0'
                feedback: No you can repeat a line.
            -   option: '1'
                feedback: Correct, one line at a time
            -   option: '2'
                feedback: In this level only one line at a time
            -   option: infinite
                feedback: In this level you can only repeat one line at a time
            hint: You can only repeat 1 line at a time
            correct_answer: B
            question_score: '10'
            question_text: How many lines can you repeat at once with the repeat command at this level?
        2:
            hint: First the repeat command, then the `{print}` command
            correct_answer: D
            question_text: Which code is right?
            question_score: '10'
            mp_choice_options:
            -   feedback: "`{repeat}` 100 `{times}` `{print}` 'hello'"
                option: "```\n{print} 100 {times} 'hello'\n```"
            -   option: "```\n{print} {repeat} 100 {times} 'hello'\n```"
                feedback: "{repeat} 100 {times} {print} 'hello'"
            -   feedback: "{repeat} 100 {times} {print} 'hello'"
                option: "```\n{repeat} 'hello' 100 {times}\n```"
            -   feedback: That's right!
                option: "```\n{repeat} 100 {times} {print} 'hello'\n```"
        4:
            mp_choice_options:
            -   option: |-
                    ```
                    I'm
                    ```
                feedback: That's right!
            -   option: |-
                    ```
                    {print}
                    ```
                feedback: '`{print}` is spelled correctly'
            -   option: |-
                    ```
                    {repeat}
                    ```
                feedback: '`{repeat}` is spelled correctly'
            -   option: |-
                    ```
                    {times}
                    ```
                feedback: '`{times}` is spelled correctly'
            hint: I'm is wrong, you can't use apostrophes
            correct_answer: A
            question_score: '10'
            code: "{print} 'I'm blue'\n{repeat} 7 {times} {print} 'da ba dee, da ba da'"
            question_text: Which word is wrong in the code?
        6:
            mp_choice_options:
            -   option: |-
                    the wheels on the bus go
                    round and round
                feedback: Only the second line is repeated 3 times
            -   option: |-
                    the wheels on the bus go
                    the wheels on the bus go
                    the wheels on the bus go
                    round and round
                feedback: Only the second line is repeated 3 times
            -   option: |-
                    the wheels on the bus go
                    round and round
                    the wheels on the bus go
                    round and round
                    the wheels on the bus go
                    round and round
                feedback: Only the second line is repeated 3 times
            -   option: |-
                    the wheels on the bus go
                    round and round
                    round and round
                    round and round
                feedback: All though the town! Perfect!
            question_text: What will be the output from this code?
            hint: Only 'round and round' is repeated 3 times.
            question_score: '10'
            correct_answer: D
            code: "{print} 'The wheels on the bus go'\n{repeat} 3 {times} {print} ' round and round'"
        7:
            mp_choice_options:
            -   option: |-
                    We will We will
                    ROCK YOU!
                feedback: '''We will'' won''t appear twice in the same line'
            -   option: |-
                    We will
                    We will
                    ROCK YOU!
                feedback: Great!
            -   option: |-
                    We will
                    ROCK YOU!
                    We will
                    ROCK YOU!
                feedback: ROCK YOU! won't be repeated
            -   option: |-
                    We will
                    ROCK YOU!
                feedback: Mind the repeat command
            hint: Mind the `{repeat}` command.
            correct_answer: B
            question_score: '10'
            question_text: What will be the output from this code?
            code: "{repeat} 2 {times} {print} 'We will'\n{print} 'ROCK YOU!'"
        9:
            mp_choice_options:
            -   option: |-
                    ```
                    {print} 'Batman was flying through Gotham. '
                    {print} 'When suddenly he heard someone screaming...'
                    {print} 'Help!'
                    {repeat} 3 {times} {print} 'Please help me!'
                    ```
                feedback: Your repeated line is incorrect.
            -   option: |-
                    ```
                    {print} 'Batman was flying through Gotham.'
                    {print} 'When suddenly he heard someone screaming...'
                    {repeat} 3 {times} 'Help!'
                    {print} 'Please help me!'
                    ```
                feedback: The `{print}` command is missing on line 3.
            -   option: |-
                    ```
                    {print} Batman was flying through Gotham.
                    {print} When suddenly he heard someone screaming...
                    {repeat} 3 {times} {print} Help!
                    {print} Please help me!
                    ```
                feedback: You're missing the quotation marks
            -   option: |-
                    ```
                    {print} 'Batman was flying through Gotham.'
                    {print} 'When suddenly he heard someone screaming...'
                    {repeat} 3 {times} {print} 'Help!'
                    {print} 'Please help me!'
                    ```
                feedback: Perfect
            question_score: '10'
            question_text: What Hedy code belongs to this output?
            correct_answer: D
            hint: "'Help!' is repeated 3 times."
            code: "Batman was flying through Gotham.\nWhen suddenly he heard someone screaming...\nHelp!\nHelp!\nHelp!\nPlease help me!"
        10:
            question_text: What Hedy code belongs to this output?
            mp_choice_options:
            -   option: |-
                    ```
                    {repeat} 2 {times} 'if youre happy and you know it clap your hands'
                    {print} 'if youre happy and you know it and you really want to show it'
                    {print} 'if youre happy and you know it clap your hands'
                    ```
                feedback: Almost! the first line needs an extra word
            -   option: |-
                    ```
                    {repeat} 2 {times} {print} 'if youre happy and you know it clap your hands'
                    {print} 'if youre happy and you know it and you really want to show it'
                    {print} 'if youre happy and you know it clap your hands'
                    ```
                feedback: Great!
            -   option: |-
                    ```
                    {repeat} 3 {times} {print} 'if youre happy and you know it clap your hands'
                    {print} 'if youre happy and you know it and you really want to show it'
                    ```
                feedback: This is not in the right order.
            -   option: |-
                    ```
                    {repeat} 4 {times} 'if youre happy and you know it'
                    {repeat} 2 times 'clap your hands'
                    {print} 'and you really want to show it'
                    {print} 'clap your hands'
                    ```
                feedback: This is not in the right order.
            question_score: '10'
            hint: Mind the order of the sentences.
            correct_answer: B
            code: "if youre happy and you know it clap your hands\nif youre happy and you know it clap your hands\nif youre happy and you know it and you really want to show it\nif youre happy and you know it clap your hands"
        3:
            correct_answer: D
            hint: "It should be: `{repeat}` 100 `{times}` `{print}` 'Hello'"
            question_text: Is this code right or wrong?
            mp_choice_options:
            -   feedback: No, a word is missing
                option: Right
            -   feedback: The word `{repeat}` is there, another word is missing
                option: Wrong, the word `{repeat}` is missing
            -   option: Wrong, the word `{times}` is missing
                feedback: The word `{times}` is there, another word is missing.
            -   feedback: Correct
                option: Wrong, the word `{print}` is missing
            question_score: '10'
            code: "{repeat} 100 {times} 'Hello!'"
        5:
            hint: The code is correct!
            correct_answer: A
            question_score: '10'
            mp_choice_options:
            -   option: Correct
                feedback: That's right!
            -   option: Wrong
                feedback: That's not it
            question_text: Is this code right or wrong?
            code: "{repeat} 100 {times} {print} 'Hedy is awesome!'"
        8:
            question_score: '10'
            hint: '`{repeat}` can only be used if you want to execute the same line multiple times in a row.'
            correct_answer: A
            code: "Here comes the sun\nDo do do do\nHere comes the sun\nAnd I say\nIts alright"
            mp_choice_options:
            -   option: "```\n{print} 'Here comes the sun'\n{print} 'Do do do do'\n{print} 'Here comes the sun'\n{print} 'And I say'\n{print} 'Its alright'\n```"
                feedback: Awesome, you can't use the `{repeat}` command here.
            -   option: "```\n{repeat} 2 {times} {print} 'Here comes the sun'\n{print} 'And I say'\n{print} 'Its alright'"
                feedback: Where did you leave 'Do do do do'?
            -   option: "```\n{repeat} 2 {times} {print} 'Here comes the sun'\n{print} 'Do do do do'\n{print} 'And I say'\n{print} 'Its alright'\n```"
                feedback: This is not the correct order..
            -   option: "```\n{repeat} 2 {times} {print} 'Here comes the sun'\n{repeat} 2 {times} {print} 'Do do'\n{print} 'And I say'\n{print} 'Its alright'\n```"
                feedback: This is not the correct order..
            question_text: What Hedy code belongs to this output?
    8:
        2:
            mp_choice_options:
            -   option: This should be only one line, not 2.
                feedback: No it should be 2 lines.
            -   option: This `{print}` command has to be removed.
                feedback: No, you need it.
            -   option: There is a spelling mistake in the `{repeat}` command.
                feedback: No, repeat is the correct spelling
            -   option: The second line needs to start with 4 spaces as indentation.
                feedback: Correct!
            hint: Something is missing in the second line?
            code: "{repeat} 5 {times}\n{print} 'Hedy is cool!'"
            question_score: '10'
            correct_answer: D
            question_text: What is wrong with this code?
        3:
            mp_choice_options:
            -   option: |-
                    Baby shark tututudutudu
                    Baby shark
                feedback: Mind the `{repeat}` command!
            -   option: |-
                    Baby shark tututudutudu
                    Baby shark
                    Baby shark tututudutudu
                    Baby shark
                    Baby shark tututudutudu
                    Baby shark
                feedback: The last line has no indentation, so it's not repeated.
            -   option: |-
                    Baby shark tututudutudu
                    Baby shark tututudutudu
                    Baby shark tututudutudu
                    Baby shark
                feedback: Right!
            -   option: |-
                    Baby shark tututudutudu
                    Baby shark
                    Baby shark
                    Baby shark
                feedback: What is being repeated and what isn't.
            hint: What is being repeated and what is not?.
            question_text: What output will be produced when you run this program?
            question_score: '10'
            code: "{repeat} 3 {times}\n    {print} 'Baby shark tututudutudu'\n{print} 'Baby shark'"
            correct_answer: C
        7:
            code: |-
                food = {ask} 'What would you like to eat?'
                {if} food {is} fries
                sauce = {ask} 'What sauce would you like?'
                    {print} 'One fries with ' sauce
                {if} food {is} pizza
                    topping = {ask} 'What topping would you like?'
                    {print} 'One pizza with ' topping
                {print} 'That you for your order'
            mp_choice_options:
            -   option: Nothing this code is correct!
                feedback: Something is wrong!.
            -   option: You're not allowed to use an `{if}` command after an `{ask}` command.
                feedback: You are!
            -   option: You don't have to use indentation twice. Only in the first `{if}` command.
                feedback: You always have to use indentation.
            -   option: The indentation is wrong in the first `{if}` command.
                feedback: That's right.
            correct_answer: D
            hint: Take a careful look at the indentation.
            question_score: '10'
            question_text: What is wrong with this code?
        5:
            correct_answer: A
            question_score: '10'
            mp_choice_options:
            -   feedback: That's right!
                option: The `{print}` commands on the last two lines should start on new lines and start with 4 spaces.
            -   option: '`{else}` is not a command!'
                feedback: It is!
            -   feedback: That's not true
                option: Lines that start with `{if}` should start with 4 spaces
            -   feedback: That's not true
                option: '`{ask}` is no longer a command'
            code: "end = {ask} 'Do you want a happy or a sad ending?'\n{if} end {is} happy {print} 'They lived happily ever after'\n{else} {print} 'The world exploded. The end.'"
            question_text: What is wrong with this code?
            hint: Something is wrong with indentation
        6:
            correct_answer: D
            code: "{print} 'Welcome to restaurant Hedy'\n{repeat} 2 {times}\n    food {is} {ask} 'What do you want to eat?'\n    {print} food"
            question_score: '10'
            mp_choice_options:
            -   feedback: There is no repetition in this answer.
                option: "Welcome to restaurant Hedy\nPancakes"
            -   feedback: This answer also repeats the welcome message
                option: "Welcome to restaurant Hedy\nWelcome to restaurant Hedy\nPancakes\nPancakes"
            -   feedback: Almost! But look at the question, it is not repeated.
                option: "Welcome to restaurant Hedy\nWhat do you want to eat?\nWhat do you want to eat?\nPancakes\nPancakes"
            -   option: "Welcome to restaurant Hedy\nPancakes\nPancakes"
                feedback: Well done!
            hint: The first sentence and question will not be repeated
            question_text: What will be the output of this code when we enter pancakes?
        8:
            mp_choice_options:
            -   feedback: You are wrong!
                option: "```\n{if} answer {is} 32\n   {print} 'You are...'\n      {sleep}\n          {print} 'right!'\n      {else}\n          {print} 'You are wrong!'\n```"
            -   feedback: You are wrong!
                option: "```\n{if} answer {is} 32\n{print} 'You are...'\n{sleep}\n{print} 'right!'\n{else}\n{print} 'You are wrong!'\n```"
            -   feedback: You are... right!
                option: "```\n{if} answer {is} 32\n    {print} 'You are...'\n    {sleep}\n    {print} 'right!'\n{else}\n    {print} 'You are wrong!'\n```"
            -   feedback: You are wrong!
                option: "```\n{if} answer {is} 32\n    {print} 'You are...'\n    {sleep}\n{print} 'right!'\n{else}\n    {print} 'You are wrong!'\n```"
            question_text: In which of the codes is the indentation done right?
            question_score: '10'
            hint: What should happen if the person is right? And what else?
            correct_answer: C
        10:
            mp_choice_options:
            -   feedback: That's not true
                option: All lines should start with 4 spaces
            -   option: Line 2 and 3 should start with 4 spaces
                feedback: That's not true
            -   feedback: That's not true
                option: Line 2 should start with 4 spaces
            -   option: Line 3 should start with 4 spaces
                feedback: You are correct!
            code: "1 level = {ask} 'What level are you on?'\n2 {if} level {is} 8\n3 {print} 'Great job!'"
            correct_answer: D
            question_text: Which statement is true?
            hint: Only one line starts with 4 spaces, but which one...?
            question_score: '10'
        4:
            question_score: '10'
            question_text: Which output is correct?
            mp_choice_options:
            -   feedback: Mind the `{repeat}` command!
                option: "The children went:\nYay!\nWe are going on vacation!"
            -   option: "The children went:\nYay!\nWe are going on vacation!\nYay!\nWe are going on vacation!"
                feedback: Correct!
            -   feedback: This order is incorrect.
                option: "The children went:\nYay!\nYay!\nWe are going on vacation!\nWe are going on vacation!"
            -   feedback: The last line is repeated too.
                option: "The children went:\nYay!\nYay!\nWe are going on vacation!"
            hint: The block under the `{repeat}` command is repeated twice.
            correct_answer: B
            code: "{print} 'The children went:'\n{repeat} 2 {times}\n    {print} 'Yay!'\n    {print} 'We are going on vacation!'"
        9:
            hint: The lines after an `{if}` or `{else}` command should start with 4 spaces.
            correct_answer: D
            mp_choice_options:
            -   feedback: The lines after the `{if}` and `{else}` command should start with 4 spaces
                option: Line 2 and 4
            -   option: Only line 3
                feedback: Not only 3...
            -   option: Line 3, 4 and 5
                feedback: Line 4 shouldn't
            -   feedback: Great job!
                option: Line 3 and 5
            question_text: What line(s) in this code should start with 4 spaces?
            code: "1 music = {ask} 'What is your favorite music genre?'\n2 {if} music {is} rock\n3 {print} '🤘'\n4 {else}\n5 {print} '👎'"
            question_score: '10'
        1:
            mp_choice_options:
            -   option: "Hello\nIm Hedy!"
                feedback: Everything is printed twice.
            -   option: "Hello\nHello\nIm Hedy"
                feedback: The second line is repeated twice as well.
            -   option: "Hello\nIm Hedy!\nHello\nIm Hedy!"
                feedback: Super!
            -   feedback: Everything is printed twice
                option: "Hello\nHello\nIm Hedy!\nIm Hedy!"
            hint: Both lines are repeated twice.
            question_text: Which output will be produced by this code?
            code: "{repeat} 2 {times}\n    {print} 'Hello'\n    {print} 'Im Hedy!'"
            correct_answer: C
            question_score: '10'
    9:
        1:
            mp_choice_options:
            -   option: Nothing, this code is correct!
                feedback: That's right!.
            -   option: You're not allowed to use an `{if}` command after an `{ask}` command.
                feedback: You are!.
            -   option: You don't have to use indentation twice.
                feedback: You always have to use indentation.
            -   option: The indentation is wrong in the last `{if}` command.
                feedback: It is not the indentation.
            question_text: What is wrong with this code?
            correct_answer: A
            hint: All the indentation is done correctly.
            question_score: '10'
            code: "{repeat} 3 {times}\n   food = {ask} 'What would you like to eat?'\n   {if} food {is} fries\n       sauce = {ask} 'What sauce would you like?'\n       {print} 'One fries with ' sauce\n   {if} food {is} pizza\n       topping = {ask} 'What topping would you like?'\n       {print} 'One pizza with ' topping\n{print} 'Thank you for your order'"
        3:
            code: |-
                {print} 'Choose the right case and win!'
                case = {ask} 'Which case will you pick? 1 or 2?'
                {if} case {is} 1
                     action = {ask} 'Open it or sell it?'
                         {if} action {is} sell
                             {print} 'You sell your case for 10 dollars'
                         {if} action {is} open
                             {print} 'You open the case and win an apple pie'
                {if} case {is} 2
                     action = {ask} 'Open it or sell it?'
                         {if} action {is} sell
                             {print} 'You sell the case for 500 dollars'
                         {if} action {is} open
                             {print} 'You open the case and win a million dollars!'
            mp_choice_options:
            -   option: case 1, sell
                feedback: You don't win a million!
            -   option: case 1, open
                feedback: You don't win a million
            -   feedback: You don't win a million
                option: case 2, sell
            -   option: case 2, open
                feedback: Great job! You win!
            question_score: '10'
            correct_answer: D
            hint: Follow the right path
            question_text: Which case should you choose to win a million dollars?
        6:
            mp_choice_options:
            -   option: '`{if}`'
                feedback: Don't forget the others
            -   option: '`{if}` `{repeat}`'
                feedback: Don't forget `{else}`!
            -   option: '`{if}` `{else}` `{repeat}`'
                feedback: Keep it up!
            -   option: '`{if}` `{else}` `{repeat}` `{print}`'
                feedback: Not with print
            hint: Indentation happens on the line below some commands
            question_score: '10'
            correct_answer: C
            question_text: After which command(s) should you use indentation (starting the next line with 4 spaces)?
        7:
            mp_choice_options:
            -   option: |-
                    ```
                    {if} food {is} pizza
                        {if} size {is} medium
                            {if} drink {is} coke
                                price = price - 5
                    ```
                feedback: Amazing!
            -   option: |-
                    ```
                    {if} food {is} pizza
                        {if} size {is} medium
                    {if} drink {is} coke
                        price = price - 5
                    ```
                feedback: The second {if} misses code!
            -   option: |-
                    ```
                    {if} food {is} pizza
                    {if} size {is} medium
                    {if} drink {is} coke
                            price = price - 5
                    ```
                feedback: Two consecutive {if}s is never correct.
            -   option: |-
                    ```
                    {if} food {is} pizza
                        {if} size {is} medium
                            {if} drink {is} coke
                            price = price - 5
                    ```
                feedback: Almost right! Take another look at the last line.
            hint: After each `{if}` command, the line below should indent
            question_score: '10'
            code: "{if} food {is} pizza\n{if} size {is} medium\n{if} drink {is} coke\nprice = price - 5"
            question_text: You'll get a 5 dollar discount if you order a medium pizza with coke.<br>But the code has a mistake! How to debug it?
            correct_answer: A
        8:
            question_text: What is wrong is this code?
            code: |-
                age = {ask} 'Happy Birthday! How old are you?'
                singing = {ask} 'Would you like us to sing?'
                    if singing {is} yes
                        {repeat} years {times}
                            {print} 'Hip Hip Hooray'
            mp_choice_options:
            -   option: You can't put two questions in a row
                feedback: Yes you can.
            -   option: The variable called 'age' is later on used as 'years'
                feedback: Keen eye! Good job!
            -   option: You're not allowed to start with 8 spaces, like line 4 and 5 do
                feedback: You actually must start like that.
            -   option: A code must always start with a `{print}` command in the first line
                feedback: That's not true.
            hint: The indentation is done right this time
            correct_answer: B
            question_score: '10'
        10:
            code: |-
                1 {repeat} 2 {times}
                2 {if} level {is} 9
                3 {print} Great job!
            question_text: Which statement is true?
            mp_choice_options:
            -   feedback: Only line 2 and 3 start with spaces
                option: All lines should start with 4 spaces
            -   feedback: Line 3 should start with 8
                option: Line 2 and 3 should start with 4 spaces
            -   option: Line 2 and 3 should start with 8 spaces
                feedback: Line 2 should start with 4
            -   feedback: You are correct!
                option: line 2 should start with 4 spaces and line 3 with 8
            question_score: '10'
            correct_answer: D
            hint: The first line doesn't start with any spaces
        2:
            mp_choice_options:
            -   feedback: That's not it!
                option: "```\nGood job!\nGood job!\n```"
            -   feedback: That's not it!
                option: "```\nThe computer will explode in 5... 4... 3... 2... 1...\n```"
            -   feedback: That's not it!
                option: "```\nGood job!\nGood job!\nYou can use the computer!\n```"
            -   feedback: Correct!
                option: "```\nGood job!\nYou can use the computer!\nGood job!\nYou can use the computer!\n```"
            correct_answer: D
            hint: Everything under the `{repeat}` command is repeated twice.
            question_score: '10'
            code: "password = {ask} 'What is the password?'\ncorrect_password = Hedy\n{if} password {is} correct_password\n    {repeat} 2 {times}\n        {print} 'Good job!'\n        {print} 'You can use the computer!'\n{else}\n    {print} 'The computer will explode in 5... 4... 3... 2... 1...'"
            question_text: What will be printed after entering the correct password?
        4:
            question_text: Which statement is true?
            mp_choice_options:
            -   option: Sleeping Beauty with shoe size 38 gets the output 'Ill keep looking'
                feedback: No, she gets 'You are not the one!'
            -   option: Cinderella with shoe size 40 gets the output '❤️❤️❤️'
                feedback: No, she gets 'Ill keep looking'
            -   feedback: That's right!
                option: Sleeping Beauty with shoe size 40 gets the output 'Ill keep looking'
            -   feedback: No she gets '❤️❤️❤️'
                option: Cinderella with shoe size 38 gets the output 'Ill keep looking'
            hint: No matter what your name is, if you have shoe size 40 you will get the message 'Ill keep looking'.
            correct_answer: C
            question_score: '10'
            code: "name = {ask} 'What is your name?'\nsize = {ask} 'What is your shoe size?'\n{if} size {is} 38\n    {if} name {is} Cinderella\n        {print} '❤️❤️❤️'\n    {else}\n        {print} 'You are not the one!'\n{else}\n    {print} 'Ill keep looking'"
        5:
            mp_choice_options:
            -   option: "```\ndessert = {ask} 'What is your favorite type of dessert?'\n{if} dessert {is} icecream\n    {repeat} 3 {times}\n    {print} 'Icecream is the best!'\n```"
                feedback: Don't forget the indentation after `{repeat}` commands.
            -   feedback: Use indentation after an `{if}` command
                option: "```\ndessert = {ask} 'What is your favorite type of dessert?'\n{if} dessert {is} icecream\n{repeat} 3 {times}\n    {print} 'Icecream is the best!'\n```"
            -   feedback: Perfect
                option: "```\ndessert = {ask} 'What is your favorite type of dessert?'\n{if} dessert {is} icecream\n    {repeat} 3 {times}\n        {print} 'Icecream is the best!'\n```"
            -   feedback: There are 2 `{repeat}` commands in this code.
                option: "```\n{repeat} 3 {times}\n    dessert = {ask} 'What is your favorite type of dessert?'\n    {if} dessert {is} icecream\n        {repeat} 3 {times}\n        {print} 'Icecream is the best!'\n```"
            output: "Icecream is the best!\nIcecream is the best!\nIcecream is the best!"
            hint: Watch the indentation
            question_score: '10'
            question_text: Which code produced this output?
            correct_answer: C
        9:
            mp_choice_options:
            -   option: None, that is not allowed
                feedback: You are allowed to
            -   option: Only 1
                feedback: You could use more if you like
            -   option: '3'
                feedback: You could use more if you like
            -   option: Infinite, as long as you keep using indentation correctly
                feedback: That is true
            correct_answer: D
            question_text: How many `{if}` commands can be placed inside another `{if}` command?
            question_score: '10'
            hint: You can put an `{if}` command inside an `{if}` command.
    10:
        1:
            question_text: What do we need to fill in on the `_?_` if we want to print each compliment?
            code: |-
                compliments = perfect, great job, amazing
                _?_
                    {print} compliment
            mp_choice_options:
            -   option: "```\n{for} each compliment\n```"
                feedback: That's not it
            -   feedback: You deserve all those compliments!
                option: "```\n{for} compliment {in} compliments\n```"
            -   option: "```\n{if} compliment {in} compliments\n```"
                feedback: That's not it
            -   feedback: Almost there!
                option: "```\n{for} compliments {in} compliment\n```"
            question_score: '10'
            hint: '`{for}` each compliment in the lists of compliments...'
            correct_answer: B
        5:
            question_text: What word should be on the _?_ with these digital dice?
            code: |-
                {print} 'Welcome to the digital dice!'
                players = Ann, John, Jesse
                choices = 1, 2, 3, 4, 5, 6
                {for} player {in} players
                    {print} player ' throws ' _?_ {at} {random}
            mp_choice_options:
            -   option: players
                feedback: It would say 'Ann throws Jesse', instead of 'Ann throws 6'.
            -   feedback: That's right!
                option: choices
            -   option: choice
                feedback: You are very close. But you need Hedy to pick from the list called 'choices' not 'choice'...
            -   feedback: Look at the names of the variables.
                option: dice
            hint: Hedy needs to pick a number `{at} {random}`
            correct_answer: B
            question_score: '10'
        6:
            mp_choice_options:
            -   option: Kelly chooses rock
                feedback: Meredith wants to play too!
            -   option: |-
                    Meredith chooses scissors
                    Kelly chooses rock
                feedback: So close! But Kelly is first in the list, so she goes first
            -   option: Meredith chooses paper
                feedback: Kelly wants to play too!
            -   option: |-
                    Kelly chooses paper
                    Meredith chooses scissors
                feedback: Amazing!
            question_text: Which of the answers below is a possible outcome when you run the code?
            question_score: '10'
            code: "choices = rock, paper, scissors\nplayers = Kelly, Meredith\n{for} player {in} players\n    {print} player ' chooses ' choices {at} {random}"
            correct_answer: D
            hint: Each player will pick an option. The player that's first on the list will go first.
        7:
            question_text: What line should be on the _?_ in this code that decides what these people will have for dinner?
            code: |-
                names = Ron, Leslie, April, Andy
                food = pasta, fries, salad
                _?_
                    {print} name ' has to eat ' food {at} {random} ' for dinner'
            mp_choice_options:
            -   option: "```\n{for} name {in} names\n```"
                feedback: You are on fire!
            -   option: "```\n{for} names {in} name\n```"
                feedback: No it should be for each name in the list nameS, so the other way around
            -   option: "```\n{for} food {in} food\n```"
                feedback: Each name should be told what they will have for dinner.
            -   option: "```\n{for} name {in} food\n```"
                feedback: Each name should be told what they will have for dinner.
            question_score: '10'
            correct_answer: A
            hint: Each name should be told what they will have for dinner.
        8:
            question_text: What should be on the _?_ in this code that decides which color shirt you get?
            code: |-
                names = Donna, Tommy, Ben
                colors = blue, red, purple
                {for} name {in} names
                    {print} _?_
            mp_choice_options:
            -   option: |-
                    ```
                    'name gets a color shirt'
                    ```
                feedback: That's not it!
            -   option: |-
                    ```
                    name 'gets a ' colors {at} {random} ' shirt'
                    ```
                feedback: Great job! This was a hard one!
            -   option: |-
                    ```
                    names 'gets a ' color {at} {random} ' shirt'
                    ```
                feedback: You want each name printed. So the first word should not be names but...
            -   option: |-
                    ```
                    'people gets a colors shirt'
                    ```
                feedback: There is no variable named people..
            correct_answer: B
            hint: Mind the quotation marks and the names of the variables
            question_score: '10'
        9:
            code: |-
                courses = appetizer, main course, dessert
                names = Timon, Onno
                {for} name in names
                    {for} course {in} courses
                        food = {ask} name ', what would you like to eat as your ' course '?'
                        {print} name ' orders ' food ' as their ' course
            mp_choice_options:
            -   option: Timon, what would you like to eat as your appetizer?
                feedback: Perfect!
            -   option: Onno, what would you like to eat as your appetizer?
                feedback: Timon is first on the list!
            -   feedback: Appetizers are first in the list
                option: Timon, what would you like to eat as your dessert?
            -   option: You don't know that. Hedy will choose `{at} {random}`.
                feedback: There is no `{at} {random}` in this code...
            correct_answer: A
            hint: The first options from both lists are chosen.
            question_score: '10'
            question_text: What is the first question Hedy will ask you when you run the program?
        10:
            code: |-
                prices = 1 million dollars, car, sandwich
                names = Bob, Patrick, Sandy, Larry
                {for} price {in} prices
                    {print} 'The ' price 'is won by ' names {at} {random}
            mp_choice_options:
            -   option: Everybody will always win a price.
                feedback: That is not true, you could end up without a price.
            -   option: All the prices always go to one single person.
                feedback: That is not true. All the prices are given away, but to random people
            -   option: Larry will never win a price
                feedback: That is not true. Larry has the same odds as the others
            -   option: Someone might win with two prices
                feedback: You get it!
            correct_answer: D
            hint: Try to imagine the output of this code.
            question_score: '10'
            question_text: What is true about this code?
        4:
            mp_choice_options:
            -   option: Line 2 needs to start with 4 spaces as indentation
                feedback: No it doesn't. Only line 3 needs indentation, which it has.
            -   option: Line 3 does not need to start with 4 spaces as indentation
                feedback: Line 2 is a `{for}`command so line 3 does need to start with an indent.
            -   feedback: Good job!
                option: Line 3 should say item instead of groceries
            -   feedback: No it does not.
                option: Line 2 should say groceries instead of item
            hint: Line 2 says `{for}` each item in the list of groceries
            question_score: '10'
            question_text: What's wrong with this code?
            correct_answer: C
            code: "groceries = apples, bread, milk\n{for} item {in} groceries\n    {print} 'We need ' groceries"
        3:
            mp_choice_options:
            -   option: dogs are lovely pets
                feedback: Line 2 says {for} each animal in the list of animals. So each animal is {print}ed.
            -   option: dogs, cats, hamsters, chickens are lovely pets
                feedback: Each animal gets their own line in the output.
            -   option: "dogs are lovely pets\ncats are lovely pets\nhamsters are lovely pets\nchickens are lovely pets"
                feedback: Great!
            -   option: You don't know yet. Because it chooses one of the animals {at} {random}.
                feedback: Line 2 says {for} each animal in the list of animals. So each animal is {print}ed.
            hint: Line 2 says {for} each animal in the list of animals. So each animal is printed
            question_score: '10'
            correct_answer: C
            question_text: Which output is correct?
            code: "animals = dogs, cats, hamsters, chickens\n{for} animal {in} animals\n    {print} animal ' are lovely pets'"
        2:
            mp_choice_options:
            -   feedback: Line 2 says `{for}` each meal in the list of meals. So each meal is printed.
                option: I love pizza
            -   option: I love pasta
                feedback: Line 2 says `{for}` each meal in the list of meals. So each meal is printed.
            -   option: I love pancakes
                feedback: Line 2 says `{for}` each meal in the list of meals. So each meal is printed.
            -   feedback: Great!
                option: "I love pizza\nI love pasta\nI love pancakes"
            correct_answer: D
            hint: Line 2 says for each meal in the list of meals. So each meal is printed.
            code: "meals = pizza, pasta, pancakes\n{for} meal {in} meals\n    {print} 'I love ' meal"
            question_score: '10'
            question_text: Which output is correct?
    11:
        1:
            question_text: What word should be at the place of the question mark?
            code: |-
                {for} i {in} _?_ 1 {to} 10
                    {print} i
            mp_choice_options:
            -   option: |-
                    ```
                    counter
                    ```
                feedback: 'No'
            -   option: |-
                    ```
                    {range}
                    ```
                feedback: Correct
            -   option: |-
                    ```
                    {if}
                    ```
                feedback: 'No'
            -   option: |-
                    ```
                    {for}
                    ```
                feedback: 'No'
            hint: What did you learn in this level?
            correct_answer: B
            question_score: '10'
        2:
            mp_choice_options:
            -   option: |-
                    1
                    2
                    3
                feedback: Correct!
            -   option: 1 2 3
                feedback: That's not it
            -   option: 1, 2, 3
                feedback: That's not it
            -   option: '123'
                feedback: That's not it
            question_text: What will be the output from this code?
            hint: How do the numbers appear in the screen?
            correct_answer: A
            question_score: '10'
            code: "{for} i {in} {range} 1 {to} 3\n    {print} i"
        4:
            mp_choice_options:
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 10
                        {print} i
                    ```
                feedback: Now Hedy prints the numbers from 0 to 10 instead of 10 to 0.
            -   option: |-
                    ```
                    {for} i {in} {range} 0 to 10
                        {print} - i
                    ```
                feedback: Hedy would print negative numbers in this case.
            -   option: |-
                    ```
                    {for} i {in} {range} 10 to 0
                        {print} 10 9 8 7 6 5 4 3 2 1 0
                    ```
                feedback: Unfortunately this does not exist.
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 10
                        {print} 10 - i
                    ```
                feedback: That's right!
            hint: It has to be a calculation...
            question_text: Which code was used to get this output?
            output: "10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n0"
            correct_answer: D
            question_score: '10'
        7:
            question_text: What should be on the place of the question mark?
            code: |-
                {print} 'Welcome to Hedys diner'
                people is {ask} 'How many people will be eating here tonight?'
                _?_
                    food is {ask} 'What would you like to order?'
                    {print} food
            correct_answer: C
            hint: Use the variable 'people'
            mp_choice_options:
            -   option: "```\n{for} i {in} {range} 0 {to} 3\n```"
                feedback: There's not always 3 people
            -   feedback: The variable is not named guests
                option: "```\n{for} i {in} {range} 1 {to} guests\n```"
            -   feedback: Great!
                option: "```\n{for} i {in} {range} 1 {to} people\n```"
            -   feedback: That's one order too many!
                option: "```\n{for} i {in} {range} 0 {to} people\n```"
            question_score: '10'
        8:
            mp_choice_options:
            -   option: |-
                    23
                    24
                    25
                feedback: The numbers don't appear. It doesn't say `{print}` i.
            -   option: 23 hi 24 hi 25 hi
                feedback: The numbers don't appear. It doesn't say `{print}` i
            -   option: |-
                    hi
                    hi
                    hi
                feedback: Correct
            -   option: The word 'hi' will appear 25 times in a row.
                feedback: No it will only appear 3 times.
            correct_answer: C
            hint: It doesn't say `{print}` i
            question_score: '10'
            question_text: What will be the output from this code?
            code: "{for} i {in} {range} 23 {to} 25\n    {print} 'hi'"
        10:
            mp_choice_options:
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 3
                        {print} Baby shark tututudutudu
                        {print} Baby shark
                    ```
                feedback: Mind the indention
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 3
                        {print} Baby shark tututudutudu
                    {print} Baby shark
                    ```
                feedback: That's right!
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 3
                        {print} Baby shark tututudutudu
                    {print} Baby shark
                    ```
                feedback: '`{range}` 0 `{to}` 3 is 4 times.'
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 3
                        {print} Baby shark tututudutudu
                        {print} Baby shark
                    ```
                feedback: '`{range}` 0 `{to}` 3 is 4 times.'
            hint: Mind the indention
            output: "Baby shark tututudutudu\nBaby shark tututudutudu\nBaby shark tututudutudu\nBaby shark"
            question_text: Which code belongs to this output?
            correct_answer: B
            question_score: '10'
        3:
            question_text: Which code was used to get this output?
            hint: First all the numbers, then the sentence
            correct_answer: A
            mp_choice_options:
            -   feedback: Perfect
                option: "```\n{for} i {in} {range} 1 {to} 5\n    {print} i\n{print} 'Once I caught a fish alive!'\n```"
            -   option: "```\n{for} i {in} {range} 1 {to} 5\n{print} i\n{print} 'Once I caught a fish alive!'\n```"
                feedback: This code won't work. You need an indent after {for}.
            -   option: "```\n{for} i {in} {range} 1 {to} 5\n    {print} i\n    {print} 'Once I caught a fish alive!'\n```"
                feedback: Now Hedy will count '1 Once I caught a fish alive!, 2 Once I caught a fish alive! etc.
            -   feedback: i is a variable and shouldn't have quotation marks
                option: "```\n{for} i {in} {range} 1 {to} 5\n    {print} 'i'\n{print} 'Once I caught a fish alive!'\n```"
            question_score: '10'
            output: "1\n2\n3\n4\n5\nOnce I caught a fish alive!"
        5:
            question_score: '10'
            correct_answer: D
            hint: There is something wrong with the indention
            question_text: What's wrong with this code?
            mp_choice_options:
            -   option: The i in the last line need quotation marks
                feedback: No it doesn't.
            -   feedback: You could use 1 to 5 just as well!
                option: You can't use `{range}` 1 `{to}` 5 only `{range}` 1 `{to}` 10
            -   option: Line 1 needs to start with an indention.
                feedback: Not line 1...
            -   feedback: Perfect!
                option: Line 2 needs to start with an indention
            code: "{for} i {in} {range} 1 {to} 10\n{print} i"
        6:
            mp_choice_options:
            -   feedback: No
                option: 1 time
            -   feedback: No
                option: 2 times
            -   feedback: That's right!
                option: 3 times
            -   option: Never
                feedback: No
            hint: 0 also counts. So 0,1,2 that's 3 times.
            code: "{for} i {in} {range} 0 {to} 2\n    {print} 'Hello'"
            question_text: How many times does the word Hello appear on your screen when you run the code?
            correct_answer: C
            question_score: '10'
        9:
            question_text: How many times does Hedy chant Hip Hip Hooray?
            question_score: '10'
            hint: '`{for}` i `{in}` `{range}` 1 `{to}` age'
            correct_answer: D
            mp_choice_options:
            -   feedback: Try again
                option: 1 time
            -   feedback: Try again
                option: 2 times
            -   feedback: Try again
                option: Never
            -   feedback: That's right!
                option: That depends on how old you are
            code: "age = {ask} 'How old are you?'\n{for} i {in} {range} 1 {to} age\n    {print} 'Hip Hip Hoorray!'"
    12:
        1:
            code: |-
                print 'three and a half plus one and a half is...'
                print 3.5 + 1.5
            mp_choice_options:
            -   option: '5'
                feedback: Don't forget the first line of code!
            -   option: 3.5 + 1.5
                feedback: This is not the one!
            -   option: |-
                    thee and a half plus one and a half is...
                    five
                feedback: Take a close look at the second line...
            -   option: |-
                    three and a half plus one and a half is...
                    5
                feedback: Great job!
            hint: Both lines are printed!
            correct_answer: D
            question_score: '10'
            question_text: Which output is correct?
        2:
            mp_choice_options:
            -   option: |-
                    ```
                    flavors is vanilla, strawberry, chocolate
                    print 'I would like a ' flavors at random ' cake.'
                    ```
                feedback: All the different values of flavors should be in quotation marks.
            -   option: |-
                    ```
                    'flavors = vanilla, strawberry, chocolate'
                    print 'I would like a ' flavors at random ' cake.'
                    ```
                feedback: All the different values of flavors should be in quotation marks.
            -   option: |-
                    ```
                    flavors = 'vanilla', 'strawberry', 'chocolate'
                    print 'I would like a ' flavors at random ' cake.'
                    ```
                feedback: Alright!
            -   option: |-
                    ```
                    flavors = 'vanilla, strawberry, chocolate'
                    print 'I would like a ' flavors at random ' cake.'
                    ```
                feedback: All the different values of flavors should be in quotation marks.
            hint: The second line is the same in each code, pay attention to the first line
            question_text: Which of these codes is correct?
            question_score: '10'
            correct_answer: C
        3:
            code: |-
                favorite_animal = ask 'What is your favorite animal?'
                print 'I like ' favoriteanimal ' too!'
            mp_choice_options:
            -   option: The name of the variable is different in line 1 than in line 2.
                feedback: Correct!
            -   option: The quotation marks aren't used correctly in line 2
                feedback: That's not true
            -   option: You can't use the = sign when using an ask command
                feedback: That's not true
            -   option: Nothing is wrong.
                feedback: That's not true
            hint: The quotation marks are used correctly
            question_score: '10'
            question_text: What's wrong with this code?
            correct_answer: A
        4:
            code: |-
                print Welcome to the online shoe shop
                category = ask What kind of shoes are you looking for?
                if category = high heels
                  print High heels are 50% off now!
            correct_answer: D
            question_score: '10'
            hint: Does line 3 need quotation marks too?
            question_text: In which lines are quotation marks needed to get the code to work?
            mp_choice_options:
            -   feedback: No
                option: Line 1 and 2
            -   feedback: No
                option: Line 1, 2 and 3
            -   option: Line 1, 2 and 4
                feedback: No
            -   feedback: Perfect!
                option: All of the lines
        5:
            code: |-
                name is ask 'What is your name?'
                if name is 'Agent007'
                    a is 'Go to the airport '
                else
                    a is 'Go to the train station '
                password is ask 'What is the password?'
                if password is 'TOPSECRET'
                    b is 'tomorrow at 02.00'
                else
                    b is 'today at 10.00'
                print a + b
            correct_answer: B
            question_score: '10'
            mp_choice_options:
            -   feedback: The agent won't be catching any bad guys here
                option: Go to the train station today at 10.00
            -   feedback: You've cracked the code!
                option: Go to the airport tomorrow at 02.00
            -   option: Go to the train station tomorrow at 02.00
                feedback: The agent won't be catching any bad guys here
            -   option: Go to the airport tomorrow at 10.00
                feedback: The agent won't be catching any bad guys here
            question_text: What output does Agent007 get when they put in the correct password?
            hint: The correct password is TOPSECRET
        6:
            question_text: Which line should be filled in at the ???
            code: |-
                print 'Welcome to McHedy!'
                order = ask 'Would you like a hamburger or fries?'
                if order = 'hamburger'
                  price = 12
                if order = 'fries'
                  price = 4
                drinks = ask 'Would you like a drink with that for 2 dollars?'
                if drinks = 'yes'
                  ???
                print 'That will be ' price ' dollar please'
            mp_choice_options:
            -   option: "```\nprice = 14\n```"
                feedback: What if you only order fries and a drink?
            -   option: "```\nprice = '14'\n```"
                feedback: What if you only order fries and a drink?
            -   feedback: Excellent!
                option: "```\nprice = price + 2\n```"
            -   feedback: Almost there!
                option: "```\nprice = + 2\n```"
            correct_answer: C
            hint: What if you only order fries and a drink?
            question_score: '10'
        7:
            code: |-
                menu = 'cookies', 'cheese', 'grapes'
                print "It's my birthday! I`ve brought some snacks!"
                diet = ask 'Do you have any dietary restrictions?'
                if diet = 'gluten free'
                    remove 'cookies' from menu
                if diet = 'vegan'
                    remove 'cheese' from menu
                print 'For you I have brought: '
                for snack in menu
                    print snack
            question_text: Which output does a vegan get?
            hint: What item is removed from the list when you answer 'vegan'?
            question_score: '10'
            mp_choice_options:
            -   feedback: Terrific!
                option: "It's my birthday! I've brought some snacks!\nFor you I have brought:\ncookies\ngrapes"
            -   option: "It's my birthday! I've brought some snacks!\nFor you I have brought:\ngrapes"
                feedback: There's more options than just one
            -   option: "It's my birthday! I've brought some snacks!\nFor you I have brought:\ncheese\ngrapes"
                feedback: A vegan person can't have cheese
            -   option: "It's my birthday! I've brought some snacks!\nFor you I have brought:\ngrapes\ncookies"
                feedback: Almost there, but look at the order of snacks in the list
            correct_answer: A
        8:
            mp_choice_options:
            -   option: |-
                    ```
                    print '7 / 2'
                    ```
                feedback: 'No'
            -   option: |-
                    ```
                    print 7 / 2
                    ```
                feedback: That is right!
            -   option: |-
                    ```
                    print 7 : 2
                    ```
                feedback: 'No'
            -   option: |-
                    ```
                    print 7 * 2
                    ```
                feedback: 'No'
            code: '3.5'
            hint: 7 devided by 2 is 3.5
            correct_answer: B
            question_text: Which code was used to create this output?
            question_score: '10'
        9:
            question_text: Which code should be filled in in line 1 at the ???
            code: |-
                ???
                print 'You won ' prices at random '!'
            mp_choice_options:
            -   option: |-
                    ```
                    prices = 'one' 'million' 'dollars', 'nothing'
                    ```
                feedback: You won nothing
            -   option: |-
                    ```
                    prices = 'one million dollars, nothing'
                    ```
                feedback: You won nothing
            -   option: |-
                    ```
                    prices = 'one million dollars', 'nothing'
                    ```
                feedback: Winner!
            -   option: |-
                    ```
                    'prices' = 'one million dollars', 'nothing'
                    ```
                feedback: You one nothing
            hint: The items on the list should be in quotation marks
            correct_answer: C
            question_score: '10'
        10:
            question_text: Which line of code should be filled in at the ??? to complete the song ?
            code: |-
                actions = 'clap your hands', 'stomp your feet', 'shout Hurray!'
                ???
                    for i in range 0 to 1
                        print 'if youre happy and you know it'
                        print action
                    print 'if youre happy and you know it and you really want to show it'
                    print 'if youre happy and you know it'
                    print action
            mp_choice_options:
            -   option: for i in range 1 to 3
                feedback: This is a hard one! All the actions on the list must be in the song.
            -   option: for action in actions
                feedback: You are amazing!
            -   option: repeat 3 times
                feedback: This is a hard one! All the actions on the list must be in the song.
            -   option: print actions at random
                feedback: This is a hard one! All the actions on the list must be in the song.
            hint: This is a hard one! All the actions on the list must be in the song.
            correct_answer: B
            question_score: '10'
    13:
        1:
            code: |-
                name = ask 'What is your name?'
                song = ask 'Whould you like to hear a song?'
                birthday = ask 'Is today your birthday?'
                ???
                  print 'Happy Birthday to you!'
                  print 'Happy Birthday to you!'
                  print 'Happy Birthday. dear ' name
                  print 'Happy Birthday to you!'
            mp_choice_options:
            -   option: |-
                    ```
                    if birthday and song = 'yes'
                    ```
                feedback: Almost there
            -   option: |-
                    ```
                    if birthday = 'yes' and name = 'Hedy'
                    ```
                feedback: Hedy only sings for you if you like to hear a song
            -   option: |-
                    ```
                    if song = 'yes' and birthday = 'yes'
                    ```
                feedback: Super!
            -   option: |-
                    ```
                    if song = 'yes' or birthday = 'yes'
                    ```
                feedback: Hedy only sings if both answers are yes
            question_text: Which code should be filled in at the ??? ?
            correct_answer: C
            question_score: '10'
            hint: Hedy sings if you want to hear a song and it's you birthday
        2:
            code: |-
                menu = 'cheese', 'sausage rolls', 'cookies'
                diet = ask 'Do you have any dietary restrictions?'
                if diet = 'vegan' ??? diet = 'halal'
                    remove 'sausage rolls' from menu
            mp_choice_options:
            -   option: and
                feedback: You don't have to be vegan and muslim
            -   option: or
                feedback: Great thinking!
            -   option: +
                feedback: 'No'
            -   option: print
                feedback: 'No'
            question_text: Which command is missing in the code at the place of the ??? ?
            hint: Neither vegans nor muslims can eat sausage rolls.
            question_score: '10'
            correct_answer: B
        3:
            code: |-
                member = ask 'Do you have a membership card?'
                discount = ask 'Do you have a discount code?'
                if member = 'yes' or discount = 'yes'
                    print 'You get a free apple pie!'
                else
                    print 'That will be 5 dollars please'
            mp_choice_options:
            -   option: You get a free pie!
                feedback: Great job!
            -   option: That will be 5 dollars please
                feedback: That is not true
            -   option: This code won't work, so there is no output
                feedback: There is nothing wrong with the code
            -   option: There is no way of knowing
                feedback: There is! Read the question carefully
            hint: Mind the command 'or' in line 3
            correct_answer: A
            question_score: '10'
            question_text: Which output is given to a member without a discount code?
        4:
            code: if computer_choice is 'rock' and your_choice is 'paper'
            mp_choice_options:
            -   option: print 'you win'
                feedback: You win!
            -   option: print 'you lose'
                feedback: You lose!
            -   option: print 'tie'
                feedback: It's only a tie if both choices are the same
            -   option: print 'try again'
                feedback: Try again!
            correct_answer: A
            hint: Paper beats rock
            question_score: '10'
            question_text: Which line of code should follow this line in rock-paper-scissors game?
        5:
            code: |-
                if name = 'Cinderella' and shoe_size = 38
                    print 'You are my one true love!'
            mp_choice_options:
            -   option: Every person with shoe size 38 is this prince's one true love
                feedback: The prince is a little more picky than that!
            -   option: Every person named Cinderella is this prince's one true love
                feedback: The prince is a little more picky than that!
            -   feedback: Fantastic!
                option: Every person that is named Cinderella and has shoe size 38 is this prince's one true love
            -   feedback: The prince is a little more picky than that!
                option: Every person that's not named Cinderella and does not have shoe size 38 is this prince's one true love
            hint: Both statements have to be true
            correct_answer: C
            question_score: '10'
            question_text: Which statement is true about this code?
        6:
            code: |-
                print 'Let me guess which family member you are!'
                glasses = ask 'Do you wear glasses?'
                female = ask 'Are you female?'
                if glasses = 'yes' and female = 'yes'
                    print 'You must be Sophie!'
                if glasses = 'no' and female = 'yes'
                   print 'You must be Marleen!'
                if glasses = 'yes' and female = 'no'
                    print 'You must be Wouter!'
                if glasses = 'no' and female = 'no'
                    print 'You must be Michael!'
            mp_choice_options:
            -   feedback: Try again
                option: Michael is a boy with glasses
            -   feedback: Try again
                option: Marleen is a girl with glasses
            -   feedback: Try again
                option: Wouter is a boy without glasses
            -   option: Sophie is a girl with glasses
                feedback: Great job!
            hint: Take a good look! Or do you need glasses?
            correct_answer: D
            question_score: '10'
            question_text: Which statement about this code is true?
        7:
            code: |-
                print 'Thank you for helping me take care of my pets'
                print 'Here is a program to help feed them'
                animal is ask 'What kind of animal are they?'
                color is ask 'What colour are they?'
                if animal is 'cat' and color = 'grey'
                    print 'That is Abby. She eats 3 scoops of cat nibbles'
                if animal is 'cat' and color = 'orange'
                    print 'That is Milo. He eats 4 scoops of cat nibbles'
                if animal is 'bird' or color is 'black'
                    print 'I fed them this moring! They do not need more food today'
                if animal is 'hamster' and color is 'brown'
                    print 'You can feed them a piece of carrot'
            correct_answer: C
            hint: Read the last 4 lines carefully
            question_score: '10'
            mp_choice_options:
            -   option: The grey cat is called Abby
                feedback: This is true!
            -   option: Milo the orange cat eats 4 scoops of cat nibbles
                feedback: This is true
            -   option: The black hamster needs to be fed a piece of carrot
                feedback: Great job!
            -   option: The yellow bird was fed this morning
                feedback: This is true
            question_text: Which statement is false?
        8:
            code: |-
                print 'Welcome to the movie theater'
                popcorn = ask 'Would you like some popcorn?'
                drink = ask 'Would you like a drink?'
                if popcorn = 'yes' and drink = 'yes'
                    print 'That will be 8 dollars please'
                if popcorn = 'no' and drink = 'yes'
                   print 'That will be 3 dollars please'
                if popcorn = 'yes' and drink = 'no'
                    print 'That will be 5 dollars please'
                if popcorn = 'no' and drink = 'no'
                    print 'Ok'
                print 'Enjoy the movie'
            correct_answer: B
            question_text: What output do you get if you order popcorn but no drink?
            hint: popcorn = yes and drink = no
            question_score: '10'
            mp_choice_options:
            -   feedback: You have paid too much!
                option: "Welcome to the movie theater\nThat will be 8 dollars please\nEnjoy the movie"
            -   option: "Welcome to the movie theater\nThat will be 5 dollars please\nEnjoy the movie"
                feedback: Amazing!
            -   feedback: That's not enough money!
                option: "Welcome to the movie theater\nThat will be 3 dollars please\nEnjoy the movie"
            -   feedback: You have to pay for your popcorn!
                option: "Welcome to the movie theater\nOk\nEnjoy the movie"
        9:
            code: |-
                1  chocolate = ask 'Would you like chocolate sauce on your ice cream?'
                2  sprinkles = ask 'Would you like sprinkles on your ice cream?'
                3  if chocolate and sprinkles = 'yes'
                4      print 'Ice cream with chocolate sauce and sprinkles, coming up!'
                5  if chocolate = 'yes' and sprinkles = 'no'
                6      print 'Ice cream with chocolate sauce, coming up!'
                7  if chocolate = 'no' and sprinkles = 'yes'
                8      print 'Ice cream with sprinkles, coming up'
                9  if chocolate = 'no' and sprinkles = 'no'
                10     print 'Just plain icecream, coming up!'
            mp_choice_options:
            -   option: 'Line 3 should be: if chocolate = ''yes'' and sprinkles is ''yes'''
                feedback: Correct!
            -   option: |-
                    Line 3 should be:
                    ```
                    {if} chocolate = 'no' {and} sprinkles = 'no'
                    ```
                feedback: This is not what I ordered!
            -   option: |-
                    Line 5 should be:
                    ```
                    {if} chocolate = 'yes' {and} sprinkles = 'yes'
                    ```
                feedback: This is not what I ordered!
            -   option: |-
                    Line 7 should be:
                    ```
                    {if} chocolate = 'yes' {and} sprinkles = 'no'
                    ```
                feedback: This is not what I ordered!
            question_score: '10'
            hint: There is a mistake in line 3
            question_text: What is wrong with this code?
            correct_answer: A
        10:
            code: |-
                print 'Welcome to the product finder of this supermarkt'
                item is ask 'What product are you looking for?'
                bakery = 'bread', 'buns', 'muffins'
                drinks = 'soda', 'water', 'lemonade'
                snacks = 'chips', 'nuts', 'dips'
                frozen = 'fries', 'icecream', 'pizza'
                fruit = 'bananas', 'apples', 'oranges'
                if item in snacks ??? item in drinks
                    print 'This item is in aile 3'
                if item in bakery or item in bakery
                    print 'This item in in the back of the store'
                if item in fruit
                    print 'The fruit is sold near the register'
            mp_choice_options:
            -   option: and
                feedback: There are no items that are both the list of snacks and the list of drinks
            -   option: or
                feedback: Great job!
            -   option: in
                feedback: 'No'
            -   option: if
                feedback: 'No'
            question_score: '10'
            correct_answer: B
            hint: The item is either in the list of snacks, or in the list of drinks
            question_text: Which command needs to be in line 8 at the place of the ??? ?
    14:
        4:
            code: |-
                price = 10
                money = {ask} How much money do you have?
                buy = {ask} 'Would you like to buy this teddy bear?'
                {if} money >= price and buy == 'yes'
                    {print} 'You can buy the bear!'
                {else}
                    {print} 'You cannot buy this bear!'
            mp_choice_options:
            -   option: In line 1 == should be used instead of =
                feedback: No that's not it
            -   feedback: You are correct
                option: Line 2 misses quotation marks
            -   feedback: No that's not it
                option: In line 4 = should have been used instead of ==
            -   feedback: No that's not it
                option: In line 4 <= should have been used instead of >=
            hint: The symbols are right
            question_text: What's wrong with this code?
            correct_answer: B
            question_score: '10'
        5:
            code: |-
                age = {ask} 'How old are you?'
                ticket = {ask} 'Do you have a ticket?'
                {if} age _ and ticket == 'yes'
                    {print} 'You can enter the movie theater.'
                {else}
                    {print} 'You are not allowed to come in!'
            mp_choice_options:
            -   feedback: 12 year olds are allowed too
                option: '`> 12`'
            -   feedback: Great!
                option: '`>= 12`'
            -   option: '`< 12`'
                feedback: These kids are too young!
            -   feedback: These kids are too young
                option: '`<= 12`'
            question_text: Which symbol should be filled in on the blanks if the movie is suitable for kids for the age of 12 and up?
            hint: '> means greater than'
            question_score: '10'
            correct_answer: B
        6:
            code: |-
                lives = 2
                {repeat} 10 times
                    {if} lives != 0
                        answer = {ask} 'Are you annoyed yet?'
                    {if} answer == 'yes'
                        lives = lives - 1
            mp_choice_options:
            -   feedback: It stops after 2 times
                option: 10 times
            -   option: 0 times
                feedback: It stops after 2 times
            -   option: 1 time
                feedback: It stops after 2 times
            -   option: 2 times
                feedback: That is correct
            question_score: '10'
            correct_answer: D
            question_text: How many times do you have to say you are annoyed before this annoying game stops?
            hint: "!= means 'is not'"
        9:
            code: |-
                chocolate = {ask} 'How many pieces of chocolate have you eaten?'
                  {if} chocolate <= 2
                      {print} 'That is a healthy amount'
                  {if} chocolate > 2 and chocolate =< 8
                      {print} 'That is a bit much'
                  {if} chocolate > 8
                      {print} 'You will get a stomach ache!'
            correct_answer: D
            mp_choice_options:
            -   option: 1 or more
                feedback: No
            -   option: 2 or more
                feedback: No
            -   option: 8 or more
                feedback: Almost
            -   feedback: Great!
                option: 9 or more
            hint: '> 8 means more than 8'
            question_text: How many pieces of chocolate will give you a stomach ache according to this fitbit?
            question_score: '10'
        8:
            mp_choice_options:
            -   feedback: True!
                option: You must be taller than 120 cm to go on the roller coaster
            -   feedback: If you are 120 cm you won't get in
                option: You must be taller than 119 cm to go on the roller coaster
            -   feedback: '> means greater than'
                option: You must be shorter than 120 cm to go on the roller coaster
            -   feedback: There are.
                option: There are no length restrictions to go on the roller coaster
            correct_answer: A
            question_text: Which statement is true about this roller coaster?
            hint: '> means greater than'
            code: "length = {ask} 'Please fill in your length in cm'\n{if} length < 120\n    {print} 'Sorry, you cannot go on this roller coaster.'\n{else}\n    {print} 'Enjoy the ride'"
            question_score: '10'
        10:
            mp_choice_options:
            -   option: "'player 1 wins'"
                feedback: Look at who has the highest score!
            -   option: "'player 2 wins'"
                feedback: Yes!
            -   option: "'player 2 loses'"
                feedback: Look at who has the highest score!
            -   feedback: No it's not, one player has a higher score
                option: "'It is a tie'"
            hint: You win the game by having the most points
            correct_answer: B
            code: "{print} 'Whoever gets the most points wins!'\n{if} points_player_1 < points_player_2\n    {print} _"
            question_text: What should be filled in in the blanks?
            question_score: '10'
        3:
            question_text: Which symbols should be filled in on the two blanks?
            mp_choice_options:
            -   option: '`>` and `<`'
                feedback: That's not it
            -   option: '`=` and `>=`'
                feedback: That's not it
            -   option: '`<` and `>=`'
                feedback: You are right
            -   option: '`+` and `==`'
            correct_answer: C
            hint: There are 130 people allowed in the club
            question_score: '10'
            feedback: That's not it
            code: "guests = {ask} 'How many people are at the party?'\n{if} guests _ 130\n    {print} 'You can come in!'\n{if} guests _ 130\n    {print} 'Im sorry, the club is full. '\n    {print} 'You have to wait for a guest to leave'"
        7:
            mp_choice_options:
            -   feedback: That's not quite right.
                option: "`'Lower'` and `'Higher'` and `'You win!'`"
            -   feedback: You win!
                option: "`'Higher'` and `'Lower'` and `'You win!'`"
            -   option: "`'You win!'` and `'Lower!'` and `'Higher'`"
                feedback: That's not quite right.
            -   option: "`'Lower!'` and `'You win!'` and `'Higher!'`"
                feedback: That's not quite right.
            hint: The last one should say you win.
            correct_answer: B
            question_text: What should be filled in on the three blanks?
            question_score: '10'
            code: "{print} 'Guess which number'\nnumbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\nnumber = numbers {at} {random}\ngame = 'on'\n{for} i {in} {range} 1 {to} 10\n    {if} game == 'on'\n        guess = {ask} 'Which number do you think it is?'\n        {if} guess < number\n            {print} _\n        {if} guess > number\n            {print} _\n        {if} guess == number\n            {print} _\n            game = 'over'"
        1:
            correct_answer: D
            mp_choice_options:
            -   feedback: This is not a symbol.
                option: '`=>`'
            -   option: '`==`'
                feedback: We are not comparing anything, just asking.
            -   option: '`!=`'
                feedback: We are not comparing anything, just asking
            -   feedback: Right!
                option: '`=`'
            code: "name _ {ask} 'Who are you?'\n{if} name == 'Hedy'\n    {print} 'Me too!'"
            hint: We are not comparing anything, we are just asking a name.
            question_text: Which symbol should be used on the blank?
            question_score: '10'
        2:
            mp_choice_options:
            -   feedback: No
                option: '{if} name = Hedy'
            -   feedback: No
                option: '{if} age = 24'
            -   option: answer = {ask} 'What is your answer'
                feedback: Yes!
            -   feedback: No
                option: answer == {ask} 'How are you doing?'
            correct_answer: C
            question_score: '10'
            hint: When you are comparing two answers you should use ==
            question_text: Which of these codes has used the correct = or == symbol?
    15:
        1:
            code: |-
                answer = 0
                while answer _ 'Amsterdam'
                    answer = ask 'What is the capital city of the Netherlands?'
                print 'You have given the correct answer'
            mp_choice_options:
            -   feedback: That is not right.
                option: '`=!`'
            -   option: '`==`'
                feedback: You don't have to keep guessing if you've given the right answer.
            -   option: '`!=`'
                feedback: Correct
            -   feedback: That's not it
                option: '`=`'
            correct_answer: C
            hint: Keep guessing until you say Amsterdam
            question_score: '10'
            question_text: 'Which symbol should be used on the blank? Tip: You must keep guessing until you get it right.'
        3:
            question_text: Which command should be filled in on the two blanks?
            code: |-
                _ age >= 18
                  print 'you are not allowed in this bar'
            question_score: '10'
            mp_choice_options:
            -   option: '`{in}`'
                feedback: That's not it
            -   feedback: You are right
                option: '`{while}`'
            -   feedback: That's not it
                option: '`{for}`'
            -   option: '`{range}`'
                feedback: That's not it
            correct_answer: B
            hint: You are not allowed in the bar as long as you are 17 or younger
        4:
            code: |-
                options = 1, 2, 3, 4, 5, 6
                print 'Throw 6 as fast as you can!'
                thrown = 0
                tries = 0
                while thrown == 6
                    thrown = options at random
                    print 'You threw ' thrown
                    tries = tries + 1
                print 'Yes! You have thrown 6 in ' tries ' tries.'
            mp_choice_options:
            -   option: In line 1 == should be used instead of =
                feedback: No that's not it
            -   option: Line 2 misses quotation marks
                feedback: That's not right
            -   option: In line 5 if should have been used instead of while
                feedback: That's not it
            -   option: In line 5 != should have been used instead of ==
                feedback: You are correct
            question_score: '10'
            hint: There is something wrong in line 5
            correct_answer: D
            question_text: What's wrong with this code?
        5:
            code: |-
                wetness = 10
                while wetness != 0
                    print 'Your hair is still wet, hair dryer on!'
                    sleep 1
                    clear
                    wetness _

                print 'All dry!'
            mp_choice_options:
            -   option: = wetness
                feedback: That will not change anything
            -   option: = wetness = 1
                feedback: You can't have two times = in one line
            -   option: = wetness - 1
                feedback: You are correct!
            -   option: = wetness + 1
                feedback: The program should count down
            hint: wetness should get less each time
            question_score: '10'
            correct_answer: C
            question_text: What should be placed on the blank to make this program work correctly?
        6:
            question_text: what is wrong with this code?
            code: |-
                lives = 100
                    {while} lives != 0
                    answer = {ask} 'Are you annoyed yet?'
                {if} answer == 'yes'
                    lives = lives - 1
            mp_choice_options:
            -   option: while should be if
                feedback: No that is not right
            -   option: if should be while
                feedback: No that is not right
            -   option: Line 3 should start with more indentation
                feedback: No that's not right
            -   option: Line 2 should start with less indentation
                feedback: That is correct
            question_score: '10'
            hint: Look closely at the indentation
            correct_answer: D
        7:
            question_text: How should this program be changed to that it works?
            mp_choice_options:
            -   option: '... change the first {if} into a {while}'
                feedback: Perfect!
            -   option: '... change the second {if} into a {while}'
                feedback: That's not quite right.
            -   option: '... change the third {if} into a {while}'
                feedback: That's not quite right.
            -   option: '... change the fourth {if} into a {while}'
                feedback: That's not quite right.
            correct_answer: A
            hint: The last one should say you win.
            question_score: '10'
            code: "{print} 'Guess which number'\nnumbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\nnumber = numbers {at} {random}\ngame = 'on'\n{if} game == 'on'\n    guess = {ask} 'Which number do you think it is?'\n    {if} guess < number\n        {print} _\n    {if} guess > number\n        {print} _\n    {if} guess == number\n        {print} _\n        game = 'over'"
        8:
            hint: The block after the while command keeps happening while the toilet is occupied.
            code: "{while} toilet == 'occupied'\n    lights = 'on'\n    air_freshener_sprays = 'yes'\n    {sleep} 60\nlights = 'off'\nair_freshener_sprays = 'no'"
            question_text: Which statement is true about this automated toilet system?
            mp_choice_options:
            -   feedback: False!
                option: The lights and air freshener will turn off after 1 minute
            -   option: The air freshener sprays once every minute and the lights stay on the whole time while you are on the toilet
                feedback: Great job
            -   option: The air freshener sprays once you leave the toilet.
                feedback: It only sprays when you're in there.
            -   feedback: That wouldn't be right.
                option: The lights will always stay on.
            question_score: '10'
            correct_answer: B
        9:
            code: |-
                chocolate = {ask} 'How many calories have you eaten today?'
                  {while} calories <= 1000
                      {print} 'You could eat some more'
                  {while} calories > 1000 and calories =< 2000
                      {print} 'That is alright'
                  {while} calories > 2000
                      {print} 'You have had enough for today'
            mp_choice_options:
            -   option: Nothing. 1600 is not programmed into the app.
                feedback: 'No'
            -   option: you could eat some more
                feedback: 'No'
            -   option: That is alright
                feedback: Yes!
            -   option: You have eaten enough for today
                feedback: 'No'
            correct_answer: C
            question_score: '10'
            question_text: What will the diet app say if you have eaten 1600 calories today?
            hint: 1600 is between 1000 and 2000
        10:
            mp_choice_options:
            -   option: name_player_1
                feedback: You are right!
            -   option: name_player_2
                feedback: No they are losing!
            -   option: points_player_1
                feedback: You should fill in a name, not a number
            -   option: points_player_2
                feedback: You should fill in a name, not a number
            question_score: '10'
            correct_answer: A
            hint: You win the game by having the most points. Your name should appear on the screen
            question_text: 'What should be filled in in the blanks? Tip: the player with the most points is in the lead.'
            code: "name_player_1 = {ask} 'Name player 1:'\nname_player_2 = {ask} 'Name player 2:'\n{while} points_player_1 > points_player_2\n    {print} _ ' is in the lead right now!'"
        2:
            mp_choice_options:
            -   feedback: No
                option: "```\n{while} name = Hedy\n```"
            -   feedback: No
                option: "```\n{while} age = 24\n```"
            -   feedback: Yes!
                option: "```\n{while} time > 0\n```"
            -   option: "```\n{while} answer == yes'\n```"
                feedback: A quotation mark is missing
            question_text: Which of these codes has used the correct symbol(s)?
            hint: When you are comparing two answers you should use ==
            question_score: '10'
            correct_answer: C
    16:
        2:
            code: |-
                friends = ['Wesley', 'Eric', 'Kaylee']
                chores = [the cooking, the cleaning, nothing]
                {for} i {in} {range} 1 {to} 3
                    {print}  _
            mp_choice_options:
            -   option: "```\nfriends[i] has to do chores [i]\n```"
                feedback: Mind the spacing.
            -   feedback: It will print 3 times that Wesley has to do the cooking
                option: "```\nfriends[1] has to do chores[1]\n```"
            -   feedback: The person has to do the chore, not the other way around
                option: "```\nchores[i] ' has to do ' friends[random]\n```"
            -   feedback: Fantastic!
                option: "```\nfriends[i] ' has to do ' chores[i]\n```"
            question_text: What should be filled in on the blanks if you want a list of what chores are done by whom?
            question_score: '10'
            hint: '`i` tells us what item in the list it is. So friend 1 does chore 1 etc.'
            correct_answer: D
        3:
            code: |-
                friends = ['Wesley', 'Eric', 'Kaylee']
                chore = [the cooking, the cleaning, nothing]
                {for} i {in} {range} 1 {to} 3
                    {print}  friends[i] has to do chores[i]
            mp_choice_options:
            -   feedback: Super!
                option: "```\nWesley has to do the cooking\nEric has to do the cleaning\nKaylee has to do nothing\n```"
            -   feedback: No, it is not random.
                option: "```\nKaylee has to do the cooking\nWesley has to do the cleaning\nEric has to do nothing\n```"
            -   feedback: Poor Wesley!
                option: "```\nWesley has to do the cooking\nWesley has to do the cleaning\nWesley has to do the nothing\n```"
            -   feedback: That's not it
                option: "```\nWesley has to do the cooking\nWesley has to do the cooking\nWesley has to do the cooking\n```"
            question_score: '10'
            correct_answer: A
            hint: It's not random...
            question_text: What is a possible output for this program?
        4:
            mp_choice_options:
            -   option: The variable in line 4 should be 'friend[i]', not 'friends[i]'
                feedback: That is not right.
            -   option: Line 3 should say 'in range 1 to 3' not 'in range 0 to 3'
                feedback: Good catch!
            -   option: Line 4 should say 'lucky_number', not 'lucky number
                feedback: It's not a variable, it's just text.
            -   option: '{in} in line 3 should be removed'
                feedback: That's not it
            question_text: What is wrong with this code?
            code: "friends = ['Jaylee', 'Erin', 'Fay']\nlucky_numbers = [15, 18, 6]\n{for} i {in} {range} 0 {to} 3\n    print 'the lucky number of ' friends[i]\n    print 'is ' lucky_numbers[i]"
            correct_answer: B
            hint: There's nothing wrong with line 4
            question_score: '10'
        5:
            mp_choice_options:
            -   option: noises = ['moo', 'woof', 'neigh']
                feedback: Mind the variable name and the order of the sounds.
            -   option: sounds = '[woof], [moo], [neigh]'.
                feedback: Look at line one to see how brackets are supposed to be used.
            -   option: sounds = [woof, moo, neigh]
                feedback: Don't forget the quotation marks!
            -   option: sounds = ['woof', 'moo', 'neigh']
                feedback: Great job!
            hint: Look at line 1 to see proper use of brackets and quotation marks.
            correct_answer: D
            question_score: '10'
            question_text: Which line should be filled in in the blank?
            code: "animals = ['dog', 'cow', 'horse']\n_\n{for} i {in} {range} 1 {to} 3\n    {print} 'the ' animals[i] ' says ' sounds[i]"
        10:
            code: "{print} 'The book raffle will start soon'\n{print} 'Get your tickets now!'\nbooks = ['Narnia', 'The Hobbit', 'Oliver Twist', 'Harry Potter', 'Green eggs and ham']\npeople = {ask} 'How many raffle tickets are sold?'\nlist_of_numbers = [1, 2]\n{for} i {in} {range} 3 {to} people\n    {add} i {to} list_of_numbers\n{for} i {in} {range} 1 {to} 5"
            mp_choice_options:
            -   feedback: Almost there... but adding the winner to the list makes this raffle unfair
                option: "```\nchosen_number = list_of_numbers at random\nprint books[i] ' will go to person number ' chosen_number\n{add} chosen_number {to} list_of_numbers\n```"
            -   feedback: There is no list called 'person'
                option: "```\nprint person[i] ' wins ' book[i]\n```"
            -   feedback: This is not it.
                option: "```\nchosen_number = list_of_numbers[people]\nprint books[people] ' will go to person number ' chosen_number\n{remove} chosen_number {from} list_of_numbers\n```"
            -   option: "```\nchosen_number = list_of_numbers[random]\nprint books[i] ' will go to person number ' chosen_number\n{remove} chosen_number {from} list_of_numbers\n```"
                feedback: Fantastic!
            correct_answer: D
            hint: You need to use the {remove} command
            question_text: Which 3 lines will complete this code correctly?
            question_score: '10'
        1:
            code: "snacks = nachos, chips, cucumber, sweets\n{print} _"
            mp_choice_options:
            -   option: '`snacks {at} {random}`'
                feedback: This is the old way.
            -   feedback: The order is wrong.
                option: '`[{random} snack]`'
            -   feedback: Correct
                option: '`snacks[{random}]`'
            -   option: '`snacks[{at} {random}]`'
                feedback: We do not need `at`anymore
            question_score: '10'
            hint: We no longer use {at}
            correct_answer: C
            question_text: Which command should be filled in on the blanks to print a random snack?
        6:
            mp_choice_options:
            -   option: You are not allowed to use the variable o. It should be named i.
                feedback: i is the most commonly used variable name in this case, but it's not mandatory to use i.
            -   feedback: No, he likes minecraft.
                option: The output will say that Jaylino likes fortnite.
            -   feedback: Correct
                option: The output will say that Ryan likes fifa
            -   option: This code will not work. It will give and error.
                feedback: No, the code is correct.
            hint: There is nothing wrong with this code.
            question_score: '10'
            question_text: Which statement is true?
            correct_answer: C
            code: "people = ['Chris', 'Jaylino', 'Ryan']\ngames = ['fortnite', 'minecraft', 'fifa']\n{for} o {in} {range} 1 {to} 3\n  {print} people[o] ' likes ' games[o]"
        7:
            mp_choice_options:
            -   option: Line 1 needs less quotation marks
                feedback: That is not right.
            -   option: Line 3 should start with indentation
                feedback: It should not!
            -   feedback: It should not
                option: Line 4 should start without indentation
            -   feedback: Amazing!
                option: Line 4 needs more quotation marks.
            question_text: What's wrong with this code?
            correct_answer: D
            code: "people = ['Savi', 'Senna', 'Fayenne']\ntransportation = ['bike', 'train', 'car']\n{for} i {in} {range} 1 {to} 3\n  {print} people[i] goes to school by transportation[i]"
            hint: There is a mistake made in the usage of quotation marks.
            question_score: '10'
        8:
            mp_choice_options:
            -   feedback: This is not right
                option: "```\nteams = ['Macy and Kate', 'Lionell and Raj', 'Kim and Leroy']\nposition = ['first', 'second', 'third']\n{for} i {in} {range} 0 {to} 3\n{print} teams[random] ' get to go ' position[i]\n```"
            -   option: "```\nteams = ['Macy and Kate', 'Lionell and Raj', 'Kim and Leroy']\nposition = ['first', 'second', 'third']\n{for} i {in} {range} 1 {to} 3\n  {print} teams[i] ' get to go ' position[i]\n```"
                feedback: Amazing!
            -   feedback: This is not it.
                option: "```\nteams = ['Macy', 'Kate', 'Lionell', 'Raj', 'Kim', 'Leroy']\nposition = ['first', 'second', 'third']\n{for} i {in} {range} 1 {to} 6\n  {print} teams[random] ' get to go ' position[random]\n```"
            -   feedback: This is not going to work!
                option: "```\nteams = ['Macy and Kate' 'Lionell and Raj' 'Kim and Leroy']\nposition = ['first' 'second' 'third']\n{for} teams {in} {range} 0 {to} 3\n    {print} teams[i] ' get to go ' position[i]\n```"
            correct_answer: B
            question_score: '10'
            hint: If you look carefully at the first line, you'll see that only the first two answers are possibly correct.
            code: "Macy and Kate get to go first\nLionell and Raj get to go second\nKim and Leroy get to go third"
            question_text: Which of these codes belongs to this output?
        9:
            mp_choice_options:
            -   option: "```\nI will travel to Canada\nI will travel to Canada\n```"
                feedback: Great job!
            -   option: "```\nI will travel to Canada\n```"
                feedback: It will be repeated twice
            -   option: "```\nI will travel to Canada, Zimbabwe and New Zealand\n```"
                feedback: This is not it.
            -   feedback: It's only repeated twice
                option: "```\nI will travel to Canada\nI will travel to Zimbabwe\nI will travel to New Zealand\n```"
            hint: Range 0 to 1 is 2 times
            correct_answer: A
            question_text: What is a possible output for this code?
            code: "countries = ['Canada', 'Zimbabwe', 'New Zealand']\n{for} i {in} {range} 0 {to} 1\n  {print} 'I will travel to ' countries[random]"
            question_score: '10'
    17:
        1:
            mp_choice_options:
            -   option: "```\nm i n i o n s\n```"
                feedback: This is not it.
            -   feedback: Correct!
                option: "```\nBob\nKevin\nStuart\n```"
            -   option: "```\nminions\nminions\nminions\n```"
                feedback: Take a look at the content of your list.
            -   option: "```\nB o b K e v i n S t u a r t\n```"
                feedback: Do not loop through the letters.
            question_text: What is the output of this code?
            question_score: '10'
            hint: Loop through your list.
            code: "minions = ['Bob', 'Kevin', 'Stuart']\n{for} x in minions:\n    {print} x"
            correct_answer: B
        2:
            mp_choice_options:
            -   option: You cannot have so many variables.
                feedback: This is not it.
            -   option: The way the variables are multiplied is incorrect.
                feedback: Not true!
            -   feedback: Keep looking for the mistake.
                option: One of the variables `noleap_year` does not belong with the `{if}` statement.
            -   option: The `noleap_year` has to be identical in both cases.
                feedback: Correct!
            question_text: What is wrong with this code?
            correct_answer: D
            hint: Read the code carefully.
            code: "seconds_minute = 60\nminute_hour = 60\nhour_day = 24\nleap_year = 366\nno_leap_year = 365\nyears = ask 'what year is it?'\n{if} years = 2024:\n print seconds_minute * minute_hour * hour_day * leap_year\n{else}:\n print seconds_minute * minute_hour * hour_day * noleap_year"
            question_score: '10'
        3:
            mp_choice_options:
            -   option: "```\n🦔\n🦔\n🦔\n```"
                feedback: Try again.
            -   option: "```\n🦔\n🦔\n```"
                feedback: One more try.
            -   feedback: Well done!
                option: "```\n🦔\n🦔\n🦔\n🦔\n🦔\n🦔\n```"
            -   option: "```\n🦔\n🦔\n🦔\n🦔\n🦔\n```"
                feedback: That is not it.
            question_score: '10'
            hint: Think about how many times you need repeating.
            correct_answer: C
            code: "{for} x in range 1 to 3:\n  {for} y in range 1 to 2:\n    {print} 🦔"
            question_text: How many hedgehogs will this code print?
        5:
            mp_choice_options:
            -   feedback: Well done!
                option: "```\n7\nanother number\nanother number\nanother number\nanother number\n71\n79\n97\n```"
            -   feedback: Try again.
                option: "```\nanother number\n19\n29\n41\n53\n71\n79\n97\n```"
            -   option: "```\n7\n19\n29\n41\n53\n71\n79\nanother number\n```"
                feedback: One more try.
            -   option: "```\n7\n19\n29\n41\n53\n71\n79\n97\n```"
                feedback: That is not it.
            question_text: What is the output of this code?
            question_score: '10'
            hint: Think about how many times you need repeating and the values of if and elif.
            code: "numbers = [7, 19, 29, 41, 53, 71, 79, 97]\n{for} prime in numbers:\n  {if} prime <= 10：\n    {print} prime\n  {elif} prime >= 60:\n    {print} prime\n  {elif} prime >= 90:\n    {print} prime\n  {else}:\n    {print} 'another number'"
            correct_answer: A
        7:
            mp_choice_options:
            -   feedback: Try again!
                option: "```\n numbers = [1, 2 , 3, 4, 5]\n {for} n in numbers：\n     result = n * 1\n {print} 'The result is ' result\n```"
            -   option: "```\nnumbers = [1, 2, 3, 4, 5]\n {for} u in numbers：\n     number = u\n {print} 'The result is ' number\n```"
                feedback: That is not it.
            -   option: "```\nnumbers = [1, 2, 3, 4, 5]\n {for} number in numbers：\n     number = 3\n {print} 'The result is ' number\n```"
                feedback: Very good!
            -   option: "```\nnumbers = [1, 2 , 3, 4, 5]\n {for} n in numbers：\n     n = result\n {print} 'The result is ' result\n```"
                feedback: That is not it.
            question_score: '10'
            hint: Think about mathematical symbols.
            question_text: Which of the following codes will print five times 'the result is 3' on the screen?
            correct_answer: C
        4:
            question_text: What is wrong with code?
            correct_answer: D
            mp_choice_options:
            -   feedback: Try again.
                option: The first `{elif}` should be used before the `print` command
            -   feedback: From now on we can use elif multiple times.
                option: '`{elif}` can only be used once'
            -   feedback: Not correct.
                option: '`==` used with `{elif}` should be replaced by `=`'
            -   feedback: Great!
                option: '`{elif}` in the last line should be replaced by `{else}`'
            code: "name_color = {ask} 'What is your favorite color?'\n{if} name_color == 'red':\n  {print} 'the color of a tomato'\n{elif} name_color == 'green':\n  {print} 'the color of an apple'\n{elif} name_color == 'blue':\n  {print} 'the color of a blueberry'\n{elif} name_color == 'yellow':\n  {print} 'the color of a banana'\n{elif}:\n  {print} 'this fruit-color does not exist'"
            question_score: '10'
            hint: Think about `{if}`, `{elif}`, `{else}`.
        6:
            question_text: What is wrong with code?
            code: "name = {ask} 'What is your name?'\n{if} name == 'Hedy':\n    password = {ask} 'What is your password?'\n    {if} password =='turtle123':\n        {print} 'Yey'\n    {else}:\n        {print} 'Access denied'\n{else}:\n {print} 'Go fish'"
            mp_choice_options:
            -   feedback: Try again.
                option: '`{elif}` is missing.'
            -   option: '`{else}` can only be used once.'
                feedback: From now on we can use elif multiple times.
            -   option: Nothing!
                feedback: There is a mistake. Look carefully!
            -   feedback: Amazing!
                option: There is an indentation mistake in the last line.
            correct_answer: D
            hint: There is a mistake somewhere...
            question_score: '10'
        8:
            question_text: What is wrong with code?
            mp_choice_options:
            -   option: '`{or}` cannot be used with `{if}`.'
                feedback: Try again.
            -   option: In the `{for}` command `insect` should be `insects`.
                feedback: Not true.
            -   feedback: Well done!
                option: Nothing!
            -   option: There is an indentation mistake in the last line.
                feedback: Nope.
            code: "insects = ['🐝', '🦋', '🕷', '🐞']\nyour_favorite = {ask} 'what is your favorite insect?'\n{for} insect in insects:\n {if} your_favorite == '🐝' {or} your_favorite == '🐞':\n  {print} 'very useful'\n {elif} your_favorite == '🕷':\n  {print} 'it can catch mosquitoes'\n {else}:\n  {print} 'almost all insects can be useful one way or another'"
            question_score: '10'
            correct_answer: C
            hint: Read the code carefully.
        9:
            question_text: Which one of the codes below gave this output?
            code: "-5 is negative\n-4 is negative\n-3 is negative\n-2 is negative\n-1 is negative\n0 is positive\n1 is positive\n2 is positive\n3 is positive"
            mp_choice_options:
            -   feedback: Try again!
                option: "```\n {for} number in range -5 to 3:\n     {if} number > 0: \n      {print} number ' is positive'\n     {elif} number < 0: \n      {print} number ' is negative' \n    {else}: \n     {print} number ' is zero'\n```"
            -   feedback: That is not it.
                option: "```\n {for} number in range -5 to 3:\n     {if} number > 0: \n      {print} number ' is positive'\n     {elif} number <= 0: \n     {print} number ' is negative' \n    {else}: \n     {print} number ' is zero'\n```"
            -   option: "```\n {for} number in range -5 to 3:\n     {if} number >= 0: \n     {print} number ' is positive'\n     {elif} number < 0: \n     {print} number ' is negative' \n     {else}: \n     {print} number ' is zero'\n```"
                feedback: Very good!
            -   option: "```\n {for} number in range -5 to 3:\n     {if} number < 0: \n      {print} number ' is positive'\n     {elif} number <=0: \n     {print} number ' is negative' \n     {else}: \n     {print} number ' is zero'\n```"
                feedback: That is not it.
            hint: Read the code carefully.
            correct_answer: C
            question_score: '10'
        10:
            mp_choice_options:
            -   feedback: Try again.
                option: The word num needs quotation marks.
            -   option: The `{if}` command is not used correctly.
                feedback: Not true.
            -   option: Line 3 should be `volume_room = number * number * number`.
                feedback: Well done!
            -   option: There is an indentation mistake in the last line.
                feedback: Nope.
            question_text: What is wrong with this code?
            question_score: '10'
            hint: Read the code carefully.
            code: "{for} number in range 1 to 5:\n  volume_room = num * num * num\n  {print} volume_room ' cubic meters'\n    {if} volume_room > 100:\n      {print} 'this is a large room'\n    {elif} volume_room < 100:\n      {print} 'small room but cosy'\n    {else}:\n      {print} 'i will look for something else'"
            correct_answer: C
