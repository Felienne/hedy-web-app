1:
-   explanation: Siggez kra s `{print}`.
    demo_code: '{print} Azul, ansuf …£er Hedy!'
    name: '{print}'
-   name: '{ask}'
    explanation: Ssuter kra s `{ask}`.
    demo_code: '{ask} D acu yini i tesmenyafaye·∏ç?'
-   name: '{echo}'
    explanation: Ales kra s useqdec n `{echo}`.
-   demo_code: '{print} üôã üåç ‚ùó'
    name: '{print} imujiten'
    explanation: Sken imujit s `{print}`.
-   name: '{forward}'
    explanation: Su…£en izirig s `{forward}`.
    demo_code: '{forward} 100'
-   name: '{turn}'
    demo_code: "{forward} 25\n{turn} {left}\n{forward} 25\n{turn} {right}"
    explanation: Zzi ifker ara isunu…£en s `{turn}`.
2:
-   demo_code: "isem {is} Hedy\n{print} Ansuf ay isem"
    name: '{is}'
-   name: '{ask}'
-   name: '{sleep}'
    demo_code: "{print} E«ß«ß-iyi ad xemmem…£ yiwet n tasint...\n{sleep}\n{print} Hmm.. Sri…£ 3 niden n tsinin...\n{sleep} 3\n{print} Yay! Ufi…£-tt-id!"
-   demo_code: "ti…£mert {is} 90\n{turn} ti…£mert\n{forward} 100"
    name: '{is} s yifker'
3:
-   name: S wudem yerwin
    demo_code: "animals {is} dog, cat, kangaroo\n{print} animals {at} {random}"
-   name: '{add}'
    explanation: '`{add}` aferdis `{to_list}` tabdart.'
    demo_code: "i…£ersiwen {is} tafunast, amcic\n{add} aqjun {to_list} i…£ersiwen"
-   explanation: '`{remove}` aferdis `{from}` tabdart.'
    name: '{remove}'
4:
-   name: '{print}'
    demo_code: "{print} 'Azul, ansuf …£er Hedy.'"
-   demo_code: "isem {is} Hedy\n{print} 'isem-is d ' isem"
    name: '{is}'
-   name: '{ask}'
7:
-   demo_code: "{print} 'Azul, ansuf …£er Hedy.'"
    name: '{print}'
-   name: '{ask}'
-   name: '{if}'
    explanation: Eg afran s `{if}`.
-   demo_code: '{repeat} 3 {times} {forward} 10'
    name: '{repeat} s yifker'
    explanation: Ales i yizirig n tengalt s tladna `{repeat}`.
9:
-   {}
-   demo_code: "{repeat} 4 {times}\n    {turn} 90\n    {forward} 50"
    name: '{repeat} s yifker'
10:
-   name: '{print}'
    demo_code: "{print} '5 tikkal 5 d ' 5 * 5"
-   name: '{for} s tebdart'
11:
-   explanation: Nezmer ad nesseqdec `{for}` s `{range}`.
-   name: '{ask}'
14:
-   name: Amec·π≠u·∏•
-   name: Meqqer ugar
-   {}
-   {}
-   demo_code: "leŒµme·πõ = {ask} 'Ac·∏•al deg leŒµme·πõ-ik?'\n{if} leŒµme·πõ <= 12\n    {print} 'Me·∫ì·∫ìiyet a·π≠as fell-i!'"
-   name: Meqqer ugar ne…£ kifkif
16:
-   name: ikrucciyen
    explanation: Tibdarin s yikrucciyen.
-   name: Awi aferdis seg tebdart
    demo_code: "agummu = ['tabananat', 'tatteffa·∏•t', 'are·∏çli']\nagummu_amezwaru = agummu[1]\n{print} agummu_amezwaru"
-   name: Awi-d aferdis kan akka seg tebdart
8:
-   demo_code: "{print} '5 tikkal 5 d ' 5 * 5"
    name: '{print}'
-   name: '{ask}'
-   name: '{repeat} s yifker'
    demo_code: "{repeat} 4 {times}\n    {turn} 90\n    {forward} 50"
-   name: '{pressed}'
12:
-   {}
-   demo_code: "isem = 'Hedy a·πõubut'\n{print} 'Azul ' isem"
15:
-   name: '{while}'
-   demo_code: "amsem·∏çan = 1\n{while} count < 3\n    {print} 'Ad nesmi·∏çen ' 3 - amesmi·∏çan ' a·π≠as n tikkal'\n    amesmi·∏çan = amesmi·∏çan + 1\n{print} 'Nfukk'"
    name: Mec·π≠u·∏• ugar {while}
    explanation: Nezmer da…£en ad nesseqdec tineddict `{while}` s `<` akked `>`.
5:
-   name: '{print}'
    demo_code: "{print} 'Azul, ansuf …£er Hedy.'"
-   name: '{ask}'
-   name: '{if}'
-   name: '{if} s yifker'
-   name: '{in}'
    explanation: Senqed iferdisen s `{in}`.
-   name: '{pressed}'
6:
-   name: '{print}'
    demo_code: "{print} '5 tikkal 5 d ' 5 * 5"
-   name: '{ask}'
-   name: '`{ask}` akked `{if}` s yifker'
13:
-   name: '{and}'
-   name: '{or}'
18:
-   name: '{print}'
    explanation: Seld `{print}` tesri·∏ç ad tesqedce·∏ç tacciwin.
    demo_code: "{print}('azul!')"
-   demo_code: "{for} i {in} {range} (1,10):\n    {print}('Azul, i, 'tikkal')"
    name: '{range}'
    explanation: Seld `{range}` tesri·∏ç ad tesqedce·∏ç tacciwin.
-   demo_code: "isem = 'Hedy'\n{print}('isem-iw d ', isem)"
-   name: ssuter kra s {input}
    explanation: Seqdec `{input}` deg wadeg n `{ask}` i ussuter n kra.
    demo_code: "isem = {input}('Isem-ik?')\n{print}('Ihi, isem-ik ', isem)"
17:
-   name: '{elif}'
    explanation: '`{elif}`'
    demo_code: "a = 2\n{if} a == 1:\n    {print} 'a d 1'\n{elif} a == 2:\n    {print} 'a d 2'\n{else}:\n    {print} 'a maƒçƒçi d 1 ne…£ 2'"
-   name: '{print}'
    explanation: Mi ara nesseqdec `{for}`, nesra ad nerr `:` deffir n tuttra n `{for}`!
    demo_code: "{for} i {in} {range} 1 {to} 12:\n    {print} i\n{print} 'Twejde·∏ç ne…£ mazal, nekk ww·∏çe…£-d!'"
-   name: '{if}'
    explanation: Nesra ad neg kifkif akked me·πõ·πõa issutar-nne…£ `{if}`.
