3:
-   explanation: '`{at}` மற்றும் `{random} with உடன் ஒரு குழுவிலிருந்து ஒரு சீரற்ற வார்த்தையைத் தேர்வுசெய்க.'
    name: சீரற்றதைத் தேர்வுசெய்க
    demo_code: "விலங்குகள் {is} நாய், பூனை, கங்காரு\n {print} விலங்குகள் {at} {random}"
-   explanation: '`{ஒரு உருப்படி` {add} `ஒரு பட்டியல் சேர்க்கவும்.'
    demo_code: "விலங்குகள் {is} மாடு, பூனை\n {add} நாய் {to_list} விலங்குகள்"
    name: '{add}'
-   explanation: '`{ஒரு உருப்படியிலிருந்து {{ஒரு உருப்படியிலிருந்து {{ஒரு பட்டியலிலிருந்து அகற்று.'
    demo_code: "விலங்குகள் {is} பூனை, நாய், மாடு\n } விலங்குகளிலிருந்து} நாய் {அகற்று"
    name: '{remove}'
4:
-   explanation: மேற்கோள் மதிப்பெண்களைப் பயன்படுத்தி சரியாக அச்சிடுக.
    name: '{print}'
    demo_code: "{print} 'அலோ எசிக்கு வருக.'"
-   name: '{is}'
    explanation: சில உரைக்கு ஒரு பெயரைக் கொடுங்கள் மற்றும் மேற்கோள் குறிகள் இல்லாமல் `{அச்சிடுக.
    demo_code: "பெயர் {is} எடி\n {print} 'என் பெயர்' பெயர்"
-   explanation: '`{ask}` உடன் ஏதாவது கேளுங்கள்.'
    demo_code: "வண்ணம் {is} {ask} 'உங்களுக்கு பிடித்த நிறம் என்ன?'\n {print} வண்ணம் 'உங்களுக்கு பிடித்தது!'"
    name: '{ask}'
5:
-   explanation: மேற்கோள் மதிப்பெண்களைப் பயன்படுத்தி சரியாக அச்சிடுக.
    demo_code: "{print} 'அலோ எசிக்கு வருக.'"
    name: '{print}'
-   name: '{ask}'
    explanation: '`{ask}` உடன் ஏதாவது கேளுங்கள்.'
    demo_code: "வண்ணம் {is} {ask} 'உங்களுக்கு பிடித்த நிறம் என்ன?'\n {print} வண்ணம் 'உங்களுக்கு பிடித்தது!'"
-   name: '{if}'
    explanation: '`{if}` உடன் தேர்வு செய்யுங்கள்.'
    demo_code: "வண்ணம் {is} {ask} 'உங்களுக்கு பிடித்த நிறம் என்ன?'\n {if} வண்ணம் {is} பச்சை {print} 'அழகான!' {else} {print} 'meh'"
-   name: '{if} ஆமை'
    demo_code: "பதில் {{{is} 'நான் எவ்வளவு தூரம் நடக்க வேண்டும்?'\n {ask} பதில் {} far {if} 100 {is} {forward} 5"
    explanation: '`{if}` உடன் தேர்வு செய்யுங்கள்.'
-   name: '{in}'
    explanation: '} {In {in உடன் கூறுகளைச் சரிபார்க்கவும்.'
    demo_code: "greet_colors {is} பச்சை, மஞ்சள்\n வண்ணம் {is} {ask} 'உங்களுக்கு பிடித்த நிறம் என்ன?'\n {if} color {in} greet_colors {print} 'அழகான!' {else} {print} 'meh'"
-   explanation: விசைப்பலகையில் கொடுக்கப்பட்ட விசை `{அழுத்தப்பட்டதா என்பதை சரிபார்க்கவும்.
    demo_code: "{if} a {is} {pressed} {print} 'நீங்கள் A ஐ அழுத்தினீர்கள்!' {else} {print} 'நீங்கள் மற்றொரு விசையை அழுத்தினீர்கள்!'"
    name: '{pressed}'
6:
-   explanation: மேற்கோள் மதிப்பெண்களைப் பயன்படுத்தி சரியாக அச்சிடுக.
    name: '{print}'
    demo_code: "{print} '5 முறை 5' 5 * 5"
-   demo_code: "பதில் = {ask} '10 பிளச் 10 என்றால் என்ன?'\n {if} பதில் {is} 20 {print} 'ஆம்!' {else} {print} 'அச்சச்சோ'"
    name: '{ask}'
    explanation: ஒரு கணக்கீட்டைக் கேட்டு, அது சரியானதா என்று சரிபார்க்கவும்.
-   explanation: பயனரிடம் எத்தனை கோணங்கள் வேண்டும் என்று கேளுங்கள்.
    name: '`{ask}` மற்றும் `{if}` ஆமைடன்'
    demo_code: "கோணங்கள் = {ask} 'எத்தனை கோணங்கள்?'\n கோணம் = 360 / கோணங்கள்\n {forward} 50"
7:
-   name: '{print}'
    explanation: மேற்கோள் மதிப்பெண்களைப் பயன்படுத்தி சரியாக அச்சிடுக.
    demo_code: "{print} 'அலோ எசிக்கு வருக.'"
-   name: '{ask}'
    explanation: '`{ask}` உடன் ஏதாவது கேளுங்கள்.'
    demo_code: "color = {ask} 'உங்களுக்கு பிடித்த நிறம் என்ன?'\n {print} வண்ணம் 'உங்களுக்கு பிடித்தது!'"
-   explanation: '`{if}` உடன் தேர்வு செய்யுங்கள்.'
    name: '{if}'
    demo_code: "color = {ask} 'உங்களுக்கு பிடித்த நிறம் என்ன?'\n {if} வண்ணம் {is} பச்சை {print} 'அழகான!' {else} {print} 'meh'"
-   name: '{repeat} ஆமை'
    explanation: '`{repeat}` உடன் குறியீட்டின் வரியை மீண்டும் செய்யவும்.'
    demo_code: '{repeat} 3 {times} {forward} 10'
8:
-   explanation: ஏதாவது அச்சிடுக. நேரடி அச்சிடுவதற்கு மேற்கோள் அடையாளத்தைப் பயன்படுத்த நினைவில் கொள்ளுங்கள்.
    demo_code: "{print} '5 முறை 5' 5 * 5"
    name: '{print}'
-   name: '{ask}'
    explanation: ஒரு தொகைக்கான பதிலைக் கேளுங்கள், அது சரியானதா என்று சரிபார்க்கவும். நாம் இப்போது 2 வரிகளை அச்சிடலாம்.
    demo_code: "பதில் = {ask} '5 பிளச் 5 என்றால் என்ன?'\n {if} பதில் {is} 10\n {print} 'நன்றாக முடிந்தது!'\n {print} 'உண்மையில், பதில்' பதில்\n {else}\n {print} 'அச்சச்சோ!'\n {print} 'பதில் 10'"
-   explanation: பல வரிகளை மீண்டும் செய்யவும்.
    demo_code: "{repeat} 4 {times}\n {turn} 90\n {forward} 50"
    name: '{repeat} ஆமை'
-   name: '{pressed}'
    explanation: விசைப்பலகையில் கொடுக்கப்பட்ட விசை `{அழுத்தப்பட்டதா என்பதை சரிபார்க்கவும்.
    demo_code: "} if} a {if} {is}\n {pressed} 'நீங்கள் ஒரு அழுத்தினீர்கள்!'\n {print}\n {else} 'நீங்கள் மற்றொரு விசையை அழுத்தினீர்கள்!'"
9:
-   explanation: '`{ask}` உடன் கேள்விகளின் தொகை மற்றும் அது சரியானதா என்று பாருங்கள். இப்போது நாம் இரண்டு வரிகளை அச்சிடுகிறோம்.'
    demo_code: "பதில் = {ask} '10 பிளச் 10 என்றால் என்ன?'\n {if} பதில் {is} 20\n {print} 'நன்றாக முடிந்தது !!'\n {print} 'பதில் உண்மையில்' பதில்\n {else}\n {print} 'தவறு'\n {print} 'பதில் 20'"
    name: '{if the பல வரிகளுடன்'
-   name: '{repeat} ஆமை'
    explanation: பல வரிகளை மீண்டும் செய்யவும்.
    demo_code: "{repeat} 4 {times}\n {turn} 90\n {forward} 50"
10:
-   explanation: ஏதாவது அச்சிடுக. நேரடி அச்சிடுவதற்கு மேற்கோள் அடையாளத்தைப் பயன்படுத்த நினைவில் கொள்ளுங்கள்.
    demo_code: "{print} '5 முறை 5' 5 * 5"
    name: '{print}'
-   name: '{for} ஒரு பட்டியலுடன்'
    explanation: எல்லாவற்றையும் ஒரு பட்டியலில் அச்சிடுங்கள்.
    demo_code: "விலங்குகள் {is} நாய், பூனை, குமிழி\n }} விலங்குகளில்} விலங்குகளில்\n {for} 'நான் நேசிக்கிறேன்' விலங்கு"
11:
-   name: '} for} loop'
    explanation: '`{for} with உடன்} க்கு க்கு` {பயன்படுத்தலாம்.'
    demo_code: "{} {for} {in} 1 {range} 5 வரை\n {to} கவுண்டர்"
-   explanation: ஒரு தொகைக்கான பதிலைக் கேளுங்கள், அது சரியானதா என்று சரிபார்க்கவும். நாம் இப்போது 2 வரிகளை அச்சிடலாம்.
    demo_code: "பதில் = {ask} '5 பிளச் 5 என்றால் என்ன?'\n {if} பதில் {is} 10\n {print} 'நன்றாக முடிந்தது!'\n {print} 'உண்மையில், பதில்' பதில்\n {else}\n {print} 'அச்சச்சோ!'\n {print} 'பதில் 10'"
    name: '{ask}'
12:
-   name: நேரடியாக மிதக்கவும்
    explanation: தசம எண்கள்.
    demo_code: "{print} 'கணக்கிடுங்கள்!'\n {print} 'இரண்டரை பிளச் இரண்டரை மற்றும் ஒரு அரை ...'\n {print} 2.5 + 2.5"
-   explanation: '`=` க்குப் பிறகு மேற்கோள் மதிப்பெண்களுடன் உரை'
    name: உரையை ஒதுக்க
    demo_code: "பெயர் = 'ரோபோ எடி'\n {print} 'அலோ' பெயர்"
-   demo_code: "பெயர் = {ask} 'நீங்கள் யார்?'\n } if} பெயர் = 'hedy'\n {if} 'ஆய்!'"
    name: '`{if}` ஒப்பீட்டுக்குப் பிறகு மேற்கோள்கள்'
    explanation: '`{if}` க்குப் பிறகு மேற்கோள் மதிப்பெண்களுடன் உரை.'
-   explanation: மேற்கோள் மதிப்பெண்களைக் கொண்ட பட்டியல்.
    demo_code: "சூப்பர் ஈரோக்கள் = 'அயர்ன் மேன்', 'பேட்மேன்', 'சூப்பர்மேன்'\n {print} சூப்பர் ஈரோக்கள் {at} {random}"
    name: பட்டியலில் மேற்கோள்கள்
16:
-   demo_code: "பழம் = ['ஆப்பிள்', 'வாழை', 'செர்ரி']\n {print} பழம்"
    name: சதுர அடைப்புக்குறிப்புகள்
    explanation: சதுர அடைப்புக்குறிகள் கொண்ட பட்டியல்கள்.
-   name: பட்டியலிலிருந்து ஒரு பொருளைப் பெறுங்கள்
    explanation: ஒரு பட்டியலிலிருந்து ஒரு பொருளைப் பெற நாம் [எண்] எனவே பழம் [1] என்றால், பட்டியலிலிருந்து முதல் பழத்தைப் பெறுங்கள்!
    demo_code: "பழம் = ['வாழை', 'ஆப்பிள்', 'செர்ரி']\n firstFruit = பழம் [1]\n {print} முதல் ஃப்ரூட்"
-   demo_code: "பழம் = ['வாழை', 'ஆப்பிள்', 'செர்ரி']\n சீரற்ற பழம் = பழம் [{random}]\n {print} சீரற்ற பழம்"
    name: ஒரு பட்டியலிலிருந்து ஒரு சீரற்ற உருப்படியைப் பெறுங்கள்
    explanation: ஒரு பட்டியலிலிருந்து ஒரு சீரற்ற உருப்படியைப் பெற நாம் [{random}] எனவே பழம் [{random}] என்றால், பட்டியலிலிருந்து ஒரு சீரற்ற பழத்தைப் பெறுங்கள்!
17:
-   name: '{elif}'
    explanation: '`{elif}`'
    demo_code: "a = 2\n {if} a == 1:\n {print} 'a என்பது 1'\n {elif} a == 2:\n {print} 'a 2'\n {else}:\n {print} 'a 1 அல்லது 2 அல்ல'"
-   name: '{print}'
    demo_code: "{for} i {in} {range} 1 {to} 12 வரை:\n {print} i\n {print} 'தயாராக இல்லையா, இங்கே நான் வருகிறேன்!'"
    explanation: '{For க்கு க்கு நாம் ஒரு `{ஐப் பயன்படுத்தும்போது,` {for} `அறிக்கைக்கு பின்னால் ஒரு`: `க்கு வைக்க வேண்டும்!'
-   name: '{if}'
    explanation: எங்கள் `{if}` அறிக்கைகள் அனைத்தையும் நாம் அவ்வாறே செய்ய வேண்டும்.
    demo_code: "color = {ask} 'உங்களுக்கு பிடித்த நிறம் என்ன?'\n {if} color == 'பச்சை':\n {print} 'உங்களுக்கு பிடித்த நிறம் பச்சை'\n {else}:\n {print} 'உங்களுக்கு பிடித்த நிறம் பச்சை அல்ல'"
18:
-   name: '{print}'
    explanation: '`{அச்சிட்ட பிறகு` நீங்கள் அடைப்புக்குறிகளைப் பயன்படுத்த வேண்டும்.'
    demo_code: "{print} ('ஆய்!')"
-   name: '{range}'
    explanation: '`{range}` பிறகு நீங்கள் அடைப்புக்குறிகளைப் பயன்படுத்த வேண்டும்.'
    demo_code: "} for} i {for} {in} (1,10):\n {range} ('அலோ, டைம்ச்', i)"
-   name: var உடன் அச்சிடுக அச்சிடுக var
    explanation: '`{print}` உடன் நீங்கள் அதிக உருப்படிகளை அச்சிட்டால் அடைப்புக்குறிப்புகள் மற்றும் காற்புள்ளிகளைப் பயன்படுத்த வேண்டும்.'
    demo_code: "பெயர் = 'எடி'\n {print} ('என் பெயர்', பெயர்)"
-   name: '{உள்ளீடு with உடன் ஏதாவது கேளுங்கள்'
    demo_code: "பெயர் = {input} ('உங்கள் பெயர் என்ன?')\n {print} ('எனவே உங்கள் பெயர்', பெயர்)"
    explanation: ஏதாவது கேட்க `{input} keen kess ஐக் கேட்க}` பயன்படுத்தவும்.
14:
-   name: சிறிய
    explanation: முதல் எண் இரண்டாவது எண்ணை விட சிறியதா என்பதை சரிபார்க்க `<` ஐப் பயன்படுத்துகிறோம்.
    demo_code: "அகவை = {ask} 'உங்களுக்கு எவ்வளவு வயது?'\n {if} அகவை <13\n {print} 'நீங்கள் என்னை விட இளையவர்!'"
-   name: பெரியது
    explanation: முதல் எண் இரண்டாவது எண்ணை விட பெரியதா என்பதை சரிபார்க்க `>` பயன்படுத்துகிறோம்.
    demo_code: "அகவை = {ask} 'உங்களுக்கு எவ்வளவு வயது?'\n } என்றால்} வயது> 13\n {if} 'நீங்கள் என்னை விட வயதானவர்!'"
-   name: சமமான
    explanation: இரண்டு விசயங்கள் ஒரே மாதிரியாக இருக்கிறதா என்று சரிபார்க்க `==` பயன்படுத்துகிறோம்.
    demo_code: "பதில் = {ask} '5 * 5 என்றால் என்ன?'\n {if} பதில் == 25\n {print} 'அது சரியானது!'"
-   name: சமமாக இல்லை
    explanation: இரண்டு விசயங்கள் ஒரே மாதிரியாக இல்லையா என்பதைச் சரிபார்க்க `! =` பயன்படுத்துகிறோம்.
    demo_code: "பதில் = {ask} '5 * 5 என்றால் என்ன?'\n {if} பதில்! = 25\n {print} 'அது சரியானதல்ல!'"
-   name: சிறிய அல்லது சமமான
    explanation: முதல் எண் இரண்டாவது எண்ணை விட சிறியதா அல்லது சமமாக இருக்கிறதா என்று சரிபார்க்க `<=` பயன்படுத்துகிறோம்.
    demo_code: "அகவை = {ask} 'உங்களுக்கு எவ்வளவு வயது?'\n {if} அகவை <= 12\n {print} 'நீங்கள் என்னை விட இளையவர்!'"
-   name: பெரிய அல்லது சமமான
    explanation: முதல் எண் இரண்டாவது எண்ணை விட பெரியதா அல்லது சமமாக இருக்கிறதா என்று சரிபார்க்க `> =` பயன்படுத்துகிறோம்.
    demo_code: "அகவை = {ask} 'உங்களுக்கு எவ்வளவு வயது?'\n } என்றால்} வயது> = 14\n {if} 'நீங்கள் என்னை விட வயதானவர்!'"
13:
-   explanation: இரண்டு பகுதிகள் இரண்டும் சரியாக இருக்க வேண்டும்.
    name: '{and}'
    demo_code: "பதில் 1 = {ask} '3+2 என்றால் என்ன?'\n பதில் 2 = {ask} '2+2 என்றால் என்ன?'\n {if} பதில் 1 {is} 5 {and} பதில் 2 {is} 4\n {print} 'இரண்டு பதில்களும் சரியானவை!'\n {else}\n {print} 'குறைந்தது ஒரு பதிலில் தவறு!'"
-   name: '{or}'
    explanation: இரண்டு பகுதிகளில் குறைந்தது 1 சரியாக இருக்க வேண்டும். இரண்டும் சரியாக இருந்தால், அதுவும் நன்றாக இருக்கிறது.
    demo_code: "பதில் 1 = {ask} '3+2 என்றால் என்ன?'\n பதில் 2 = {ask} '2+2 என்றால் என்ன?'\n {if} பதில் 1 {is} 5 {or} பதில் 2 {is} 4\n {print} 'குறைந்தது ஒரு பதிலில் சரியானது!'\n {else}\n {print} 'இரண்டு பதில்களும் தவறானவை!'"
1:
-   name: '{print}'
    explanation: '`{print}` உடன் ஏதாவது அச்சிடுக.'
    demo_code: '{print} அலோ எடிக்கு வரவேற்கிறோம்!'
-   name: '{ask}'
    explanation: '`{ask}` உடன் ஏதாவது கேளுங்கள்.'
    demo_code: '{ask} உங்களுக்கு பிடித்த நிறம் எது?'
-   name: '{echo}'
    demo_code: "{ask} உங்களுக்கு பிடித்த நிறம் எது?\n {echo} எனவே உங்களுக்கு பிடித்த நிறம்"
    explanation: '`{echo}` ஐப் பயன்படுத்தி ஏதாவது செய்யவும்.'
-   explanation: ஒரு ஈமோசியை `{print}` உடன் அச்சிடுக.
    name: '{print} ஈமோசிச்'
    demo_code: '{print} 🙋'
-   name: '{forward}'
    explanation: '`{forward}` உடன் ஒரு வரியை வரையவும்.'
    demo_code: '{forward} 100'
-   name: '{turn}'
    explanation: வரைபட ஆமை `{turn}` உடன் திருப்புங்கள்.
    demo_code: "{forward} 25\n {turn} {left}\n {forward} 25\n {turn} {right}"
2:
-   name: '{is}'
    explanation: '`{is}` ஐப் பயன்படுத்தி நிரலில் பயன்படுத்த ஒரு வார்த்தைக்கு பெயரைக் கொடுங்கள். பெயரை நீங்களே தேர்வு செய்யலாம்.'
    demo_code: "பெயர் {is} எடி\n {print} வரவேற்பு பெயர்"
-   explanation: '`{ask}` உடன் ஏதாவது கேளுங்கள். சாக்கிரதை! `{is} with உடன் பதிலுக்கு ஒரு பெயரை நீங்கள் கொடுக்க வேண்டும்.'
    name: '{ask}'
    demo_code: "வண்ணம் {is} {ask} உங்களுக்கு பிடித்த நிறம் எது?\n {print} வண்ணம் உங்களுக்கு பிடித்தது!"
-   explanation: '`{sleep}` உடன், நீங்கள் ஒரு (சோடி) இரண்டாவது (கள்) க்கு இடைநிறுத்தத்தை அனுமதிக்கலாம்.'
    name: '{sleep}'
    demo_code: "{print} Let me think க்கு one second...\n {sleep}\n {print} Hmm.. I need 3 more seconds...\n {sleep} 3\n {print} Eureka! Ive கிடைத்தது!"
-   name: '{என்பது ஆமைடன்'
    explanation: '`{is}` ஐப் பயன்படுத்தி ஒரு எண்ணைக் கொடுங்கள். பெயரை நீங்களே தேர்வு செய்யலாம்.'
    demo_code: "கோணம் {is} 90\n {turn} கோணம்\n {forward} 100"
15:
-   name: '{while}'
    explanation: நாம் `{அதே நேரத்தில்` வளையத்தைப் பயன்படுத்தலாம்.
    demo_code: "பதில் = 0\n } போது} பதில்! = 25\n பதில் = {while} '5 முறை 5 என்ன?'\n {ask} 'சரியான பதில் வழங்கப்பட்டுள்ளது'"
-   name: சிறிய {while}
    explanation: '`<` <`மற்றும்`> with உடன் `{அதே நேரத்தில் நாம் பயன்படுத்தலாம்.'
    demo_code: "எண்ணிக்கை = 1\n {while} எண்ணிக்கை <3\n {print} 'இதைச் செய்கிறோம்' 3 - அதிக முறை எண்ணுங்கள் '\n எண்ணிக்கை = எண்ணிக்கை + 1\n {print} 'நாங்கள் முடித்துவிட்டோம்'"
