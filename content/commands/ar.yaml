1:
-   name: '{print}'
    explanation: โุงุทุจุน ุดูุฆุง ุนูู ุงูุดุงุดุฉ ุจุงุณุชุฎุฏุงู `{print}`.
    example: 'ูุซุงู: {print} ุฃููุง ููุฑุญุจุง ุจูู ูู ููุฏู!'
    demo_code: '{print} ุฃููุง ููุฑุญุจุง ุจูู ูู ููุฏู!'
-   name: '{ask}'
    explanation: ุงุณุฃู ุนู ุดูุก ูุง ุจุงุณุชุฎุฏุงู `{ask}`.
    example: 'ูุซุงู: {ask} ูุง ูููู ุงูููุถูุ'
    demo_code: '{ask} ูุง ูููู ุงูููุถูุ'
-   name: '{echo}'
    explanation: ุงุนุฏ ุชุฑุฏูุฏ ุงุฌุงุจุฉ ุดุฎุต ูุง ุนูู ุงูุณุคุงู ุจุงุณุชุฎุฏุงู `{echo}`.
    example: 'ูุซุงู: {echo} ุงูุง ูููู ุงูููุถู ูู '
    demo_code: |-
        {ask} ูุง ูููู ุงูููุถูุ
        {echo} ุงูุง ูููู ุงูููุถู ูู
-   name: '{print} ุฑูุฒุงู ุชุนุจูุฑูุงู (ุงูููุฌู)'
    explanation: ููู ุฑูุฒุงู ุชุนุจูุฑูุงู (ุงูููุฌู) ุจุงุณุชุฎุฏุงู `{print}`
    example: 'ูุซุงู: {print} ๐๐โ'
    demo_code: '{print} ๐โ ๐โ'
-   name: '{forward}'
    explanation: ุงุฑุณู ุฎุทุงู ูุณุชูููุงู ุจุงุณุชุฎุฏุงู `{forward}`.
    example: 'ูุซุงู: {forward} 100'
    demo_code: |-
        {forward} 100
-   example: 'ูุซุงู: {turn}'
    demo_code: "{forward} 25\n{turn} {left}\n{forward} 25\n{turn} {right}"
    explanation: ูู ุจุงูุงุณุชุฏุงุฑุฉ ู ุชุญููู ุงุชุฌุงู ุงูุฑุณู ุจุงุณุชุฎุฏุงู `{turn}`
    name: '{turn}'
2:
-   name: '{is}'
    explanation: ุงุนุท ุงุณูุงู ูุฃู ูููุฉ ุชุฑูุฏ ุงุณุชุฎุฏุงููุง ูู ุงูููุฏ ูู ุฎูุงู ุงูุฃูุฑ `{is}`. ุจุงููุงูู ุงุฎุชูุงุฑ ุงูุงุณู ุจููุณู.
    example: 'ูุซุงู: ุงุณูู {is} ููุฏู.'
    demo_code: |-
        ุงุณูู {is} ููุฏู
        {print} ูุฑุญุจุง ุงุณูู
-   name: '{ask}'
    explanation: ุงุณุฃู ุนู ุดูุก ูุง ุจุงุณุชุฎุฏุงู `{ask}`. ุงูุชุจู! ูุฌุจ ุนููู ุฃู ุชุนุทู ุงูุงุฌุงุจุฉ ุงุณูุงู ุจุงุณุชุฎุฏุงู `{is}`.
    example: 'ูุซุงู: ูููู {is} {ask} ูุง ูููู ุงูููุถูุ'
    demo_code: |-
        ูููู {is} {ask} ูุง ูููู ุงูููุถูุ 
        {print} ูููู ูู ุงูููุถู ูุฏูู!
-   explanation: ูุนูู ุนูู ููุฏู (ุชูุชุธุฑ) ุนุฏุฏ ูุนูู ูู ุงูุซูุงูู.
    example: 'ูุซุงู: {sleep} 2 '
    demo_code: |-
        {print} ุฏุนูู ุฃููุฑ ููุญุธุฉ...
        {sleep}
        {print} ููู.. ุฃูุง ุฃุญุชุงุฌ ุงูู 3 ุซูุงูู ุฃุฎุฑู
        {sleep} 3
        {print} ููุฏ ูุฌุฏุชูุง!
    name: '{sleep}'
-   name: ูู - ุณูุญูุงุฉ
    explanation: ุงุนุท ุงุณูุง ูุงู ุฑูู ูู ุฎูุงู ุงูุฃูุฑ `{is}`. ุจุงููุงูู ุงุฎุชูุงุฑ ุงูุงุณู ุจููุณู.
    example: 'ูุซุงู: ุงูุฒุงููุฉ ูู 90'
    demo_code: "ุงูุฒุงููุฉ ูู 90\n{turn} ุงูุฒุงููุฉ\n{forward} 100"
3:
-   name: ุจุดูู ุนุดูุงุฆู
    explanation: 'ุงุฎุชุฑ ูููุฉ ูู ูุฌููุนุฉ ุงู ูุงุฆูุฉ ุจุดูู ุนุดูุงุฆู ุจุงุณุชุฎุฏุงู `{at}` ู `{random}`'
    example: 'ูุซุงู: ุญููุงูุงุช {is} ููุจุ ูุทุฉุ ุฌูู.'
    demo_code: |-
        ุญููุงูุงุช {is} ููุจุ ูุทุฉุ ุฌูู
        {print} ุญููุงูุงุช {at} {random}
-   name: '{add}'
    explanation: ูุถูู ุนูุตุฑุงู ุงูู ูุงุฆูุฉ
    example: 'ูุซุงู: {add} ุฃูุนู {to_list} ุญููุงูุงุช'
    demo_code: "ุญููุงูุงุช {is} ุจูุฑุฉุ ูุทุฉ\n{add} ุฃูุนู {to_list} ุญููุงูุงุช"
-   example: 'ูุซุงู: {remove} ุฃูุนู {from} ุญููุงูุงุช'
    demo_code: "ุญููุงูุงุช {is} ุจูุฑุฉุ ุฃูุนูุ ูุทุฉ\n{remove} ุฃูุนู {from} ุญููุงูุงุช"
    name: '{remove}'
    explanation: ูุฒูู ุนูุตุฑุงู ูู ูุงุฆูุฉ
4:
-   name: '{print}'
    explanation: ูุทุจุน ูุญุชูู ูุง ุจูู ุนูุงูุงุช ุงูุงูุชุจุงุณ ุญุฑููุงู
    example: "ูุซุงู: {print} \"ุฃููุงู ุจูู ููุฑุญุจุงู ูู ููุฏู\""
    demo_code: '{print} "ุฃููุงู ุจูู ููุฑุญุจุงู ูู ููุฏู"'
-   name: '{is}'
    explanation: ุงุนุท ุงุณูุง ููููุฉ ุฃู ุฑูู ูุนูู ู `{print}`ูุญุชูู ูุฐุง ุงูุงุณู ุจุฏูู ุงูุญุงุฌุฉ ุงูู ุนูุงูุงุช ุงูุงูุชุจุงุณ
    example: 'ูุซุงู: ุงุณูู {is} ููุฏู.'
    demo_code: |-
        ุงุณูู {is} ููุฏู
        {print} "ุฃูุง ุงุณูู " ุงุณูู
-   name: '{ask}'
    explanation: ุงุณุฃู ุนู ุดูุก ูุง ูู ุฎูุงู ุงูุฃูุฑ `{ask}`. ุถุน ุงูุณุคุงู ูุง ุจูู ุนูุงูุงุช ุงูุงูุชุจุงุณ.
    example: "ูุซุงู: ูููู {is} {ask} \"ูุง ูู ูููู ุงูููุถูุ\""
    demo_code: |-
        ูููู {is} {ask} "ูุง ูู ูููู ุงูููุถูุ"
        {print} ูููู "ูู ูููู ูููุถู!"
5:
-   name: "{print}"
    explanation: "ูุทุจุน ูุญุชูู ูุง ุจูู ุนูุงูุงุช ุงูุงูุชุจุงุณ ุญุฑููุงู"
    example: "ูุซุงู: {print} \"ุฃููุงู ุจูู ููุฑุญุจุงู ูู ููุฏู\""
    demo_code: "{print} \"ุฃููุงู ุจูู ููุฑุญุจุงู ูู ููุฏู\""
-   name: "{ask}"
    explanation: "ุงุณุฃู ุนู ุดูุก ูุง ูู ุฎูุงู ุงูุฃูุฑ `{ask}`. ุถุน ุงูุณุคุงู ูุง ุจูู ุนูุงูุงุช ุงูุงูุชุจุงุณ."
    example: "ูุซุงู: ูููู {is} {ask} \"ูุง ูู ูููู ุงูููุถูุ\""
    demo_code: |-
        ูููู {is} {ask} "ูุง ูู ูููู ุงูููุถูุ"
        {print} ูููู "ูู ูููู ูููุถู!"
-   name: "{if}"
    explanation: "ุจุงุณุชุฎุฏุงู ุงูุฃูุฑ `{if}` ููููู ุฃู ุชูุญุต ุดูุฆุง ูุง ูุชููู ุจุงูุงุฎุชูุงุฑ ุจูุงุก ุนูู ูุชูุฌุฉ ุฐูู ุงููุญุต"
    example: "ูุซุงู: {if} ุงูููู {is} ุงุฎุถุฑ {print} \"ูุฐุง ุฑุงุฆุน!\" {else} {print} \"ูุง ุฎุณุงุฑุฉ!\""
    demo_code: |-
        ุงูููู {is} {ask} "ูุง ูููู ุงูููุถูุ"
        {if} ุงูููู {is} ุงุฎุถุฑ {print} "ูุฐุง ุฑุงุฆุน!" {else} {print} "ูุง ุฎุณุงุฑุฉ!"
-   name: "{if} with turtle"
    explanation: "ุจุงุณุชุฎุฏุงู ุงูุฃูุฑ `{if}` ููููู ุฃู ุชูุญุต ุดูุฆุง ูุง ูุชููู ุจุงูุงุฎุชูุงุฑ ุจูุงุก ุนูู ูุชูุฌุฉ ุฐูู ุงููุญุต"
    example: "ูุซุงู: {if} ุงูุฌูุงุจ {is} ูุซูุฑุง {forward} 100 {forward} {else} 5\n{if} ุงูุฌูุงุจ {is} ูุซูุฑุง {forward} 100 {forward} {else} 5"
    demo_code: |-
        ุงูุฌูุงุจ {is} {ask} "ูู ูุฌุจ ุนูู ุฃู ุงูุดูุ"
        {if} ุงูุฌูุงุจ {is} ูุซูุฑุง {forward} 100 {else} {forward} 5
-   name: "{in}"
    explanation: "ุชูุญุต ุงูุนูุงุตุฑ ุงูููุฌูุฏุฉ ูู ูุงุฆูุฉ ูุนููุฉ ูู ุฎูุงู `{in}`"
    example: "{if} ูููู_ุงูููุถู {in} ุงูุงููุงู_ุงูุฌูููุฉ {print} \"ูุฐุง ุฌููู!\" {else} {print} \"ูุง ุฎุณุงุฑุฉ!\""
    demo_code: |-
        ุงูุงููุงู_ุงูุฌูููุฉ {is} ุงุฎุถุฑุ ุงุตูุฑ
        ูููู_ุงูููุถู {is} {ask} "ูุง ูููู ุงูููุถูุ"
        {if} ูููู_ุงูููุถู {in} ุงูุงููุงู_ุงูุฌูููุฉ {print} "ูุฐุง ุฌููู!" {else} {print} "ูุง ุฎุณุงุฑุฉ!"
6:
-   name: "{print}"
    explanation: "ุงุทุจุน ูุญุชูู ูุง ุจูู ุนูุงูุงุช ุงูุงูุชุจุงุณ ุญุฑููุงู ุจุงุณุชุฎุฏุงู `{print}`"
    example: "ูุซุงู: {print} \"5 ุถุฑุจ 5 ุชุณุงูู \" 5*5"
    demo_code: "{print} \" ุถุฑุจ 5 ุชุณุงูู \" 5*5"
-   name: "{ask}"
    explanation: "`{ask}` ุนู ูุงุชุฌ ุนูููุฉ ุญุณุงุจูุฉ ูุงูุญุต ูุง ุงุฐุง ูุงู ุงูุฌูุงุจ ุตุญูุญุงู."
    example: "ูุซุงู: ุงูุฌูุงุจ =  {ask} \"ูุง ุญุงุตู 10 ุฒุงุฆุฏ 10ุ\""
    demo_code: |-
        ุงูุฌูุงุจ = {ask} "ูุง ุญุงุตู 10 ุฒุงุฆุฏ 10ุ"
        {if} ุงูุฌูุงุจ {is} 20 {print} "ูุนู ุตุญูุญ!" {else} {print} "ููุฃุณู! ุงุฌุงุจุฉ ุฎุงุทุฆุฉ.."
-   name: "`{ask}` ู `{if}` turtle"
    explanation: "`{ask}` ุงููุณุชุฎุฏู ูู ุฒุงููุฉ ูุฑูุฏ ุฃู ูุณุชุนูู ููุญุฑูุฉ"
    example: "ูุซุงู: ุนุฏุฏ_ุงูุฒูุงูุง = {ask} \"ูู ุนุฏุฏ ุงูุฒูุงูุงุ\""
    demo_code: |-
        ุนุฏุฏ_ุงูุฒูุงูุง = {ask} "ูู ุนุฏุฏ ุงูุฒูุงูุงุ"
        ุฒุงููุฉ_ุงูุญุฑูุฉ = 360/ุนุฏุฏ_ุงูุฒูุงูุง
        {forward} 50
7:
-   name: "{print}"
    explanation: "`{print}` ูุทุจุน ูุญุชูู ูุง ุจูู ุนูุงูุงุช ุงูุงูุชุจุงุณ ุญุฑููุงู"
    example: "ูุซุงู: {print} \"ูุฑุญุจุงู ูุฃููุงู ุจูู ูู ููุฏู!\""
    demo_code: "{print} \"ูุฑุญุจุงู ูุฃููุงู ุจูู ูู ููุฏู!\""
-   name: "{ask}"
    explanation: "ุงุณุฃู ุนู ุดูุก ูุง ุจุงุณุชุฎุฏุงู `{ask}`."
    example: "ูุซุงู: ูููู = {ask} \"ูุง ูููู ุงูููุถูุ\""
    demo_code: |-
        ูููู = {ask} "ูุง ูููู ุงูููุถูุ"
        {print} ูููู "ูู ูููู ุงูููุถู!!"
-   name: "{if}"
    explanation: "ุจุงุณุชุฎุฏุงู ุงูุฃูุฑ `{if}` ููููู ุฃู ุชูุญุต ุดูุฆุง ูุง ูุชููู ุจุงูุงุฎุชูุงุฑ ุจูุงุก ุนูู ูุชูุฌุฉ ุฐูู ุงููุญุต"
    example: "ูุซุงู: {if} ุงูููู {is} ุงุฎุถุฑ {print} \"ูุฐุง ุฑุงุฆุน!\" {else} {print} \"ูุง ุฎุณุงุฑุฉ!\""
    demo_code: |-
        ุงูููู = {ask} "ูุง ูููู ุงูููุถูุ"
        {if} ุงูููู {is} ุงุฎุถุฑ {print} "ูุฐุง ุฑุงุฆุน!" {else} {print} "ูุง ุฎุณุงุฑุฉ!"
-   name: "{repeat} - turtle"
    explanation: "ุฃุนุฏ ุชูููุฐ ุฌุฒุก ูู ุงูููุฏ ุจุงุณุชุฎุฏุงู ุงูุฃูุฑ `{repeat}`."
    example: "ูุซุงู: {repeat} 3 {times} {forward} 10"
    demo_code: |-
        {repeat} 3 {times} {forward} 10
8:
-   name: "{print}"
    explanation: "ุงุทุจุน ุดูุฆุง ุนูู ุงูุดุงุดุฉ ุจุงุณุชุฎุฏุงู ุงูุฃูุฑ `{print}`. ูุง ุชูุณ ุฃู ุชุณุชุฎุฏู ุนูุงูุงุช ุงูุงูุชุจุงุณ \"\" ููู ุชุทุจุน ูุง ุชุฑูุฏ ุญุฑููุง."
    example: "ูุซุงู: {print} \"5 ุถุฑุจ 5 ุชุณุงูู \" 5*5"
    demo_code: "{print} \" ุถุฑุจ 5 ุชุณุงูู \" 5*5"
-   name: "{ask}"
    explanation: "`{ask}` ุนู ูุงุชุฌ ุนูููุฉ ุญุณุงุจูุฉ ูุงูุญุต ูุง ุงุฐุง ูุงู ุงูุฌูุงุจ ุตุญูุญุงู. ุจุงููุงููุง ุงูุงู ุฃู ูุทุจุน ุนูู ุณุทุฑูู ุงุซููู."
    example: "ูุซุงู: ุงูุฌูุงุจ {is} {ask} \"ูุง ูุงุชุฌ 5 ุฒุงุฆุฏ 5ุ\""
    demo_code: |-
        ุงูุฌูุงุจ = {ask} "ูุง ูุงุชุฌ 5 ุฒุงุฆุฏ 5ุ"
        {if} ุงูุฌูุงุจ {is} 10
            {print} "ุฃุญุณูุช!"
            {print} ุงูุฌูุงุจ "ุจุงููุนู ุงูุงุฌุงุจุฉ ูู"
        {else}
            {print} "ูุง ููุฃุณู!"
            {print} "ุงูุงุฌุงุจุฉ ุงูุตุญูุญุฉ ูู 10."
-   name: "`{repeat}` with turtle"
    explanation: "{repeat} multiple lines"
    example: "ูุซุงู: ุงุฑุณู ูุฑุจุนูุง"
    demo_code: |-
        {repeat} 4 {times}
            {turn} 90
            {forward} 50
9:
-   name: "`{if}` with multiple lines"
    explanation: "The answer of a sum of questions with '{ask}' and see if it is correct. Now we print out two lines."
    example: "Example: answer = {ask} 'What is 20 plus 20?'"
    demo_code: |-
        answer = {ask} 'What is 20 plus 20?'
        {if} answer {is} 20
            {print} 'Well done!!'
            {print} 'The answer is indeed' answer
        else
            {print} 'Wrong'
            {print} 'The answer is 20'
-   name: "`{repeat}` and turtle"
    explanation: "{repeat} multiple lines"
    example: "Example: create a square"
    demo_code: |-
        {repeat} 4 {times}
            {turn} 90
            {forward} 50
10:
-   name: "{print}"
    explanation: "print something. Remember to use a quotation mark for literal printing."
    example: "Example: {print} '5 times 5 is ' 5 * 5"
    demo_code: "{print} '5 times 5 is ' 5 * 5"
-   name: "{for} with a list"
    explanation: "print all things in a list "
    example: "Example: {for} animal {in} animals"
    demo_code: |-
        animals {is} dog, cat, blobfish
        {for} animal {in} animals
          {print} 'I love ' animal
11:
-   name: "{for} loop"
    explanation: "We can use `{for}` with a {range}"
    example: "for counter {in} {range} 1 {to} 5"
    demo_code: |-
        {for} counter {in} {range} 1 {to} 5
            {print} counter
-   name: "{ask}"
    explanation: "ask for the answer to a sum and check if it is correct. We can now print 2 lines."
    example: "Example: answer = {ask} 'What is 5 plus 5?'"
    demo_code: |-
        answer = {ask} 'What is 5 plus 5?'
        {if} answer {is} 10
            {print} 'Well done!'
            {print} 'Indeed, the answer was ' answer
        else
            {print} 'Oops!'
            {print} 'The answer is 10'
12:
-   name: "float directly"
    explanation: "Decimal numbers"
    example: "{print} 2.5 + 2.5"
    demo_code: |
        {print} 'Calculate away!'
        {print} 'Two and a half plus two and a half is...'
        {print} 2.5 + 2.5
-   name: "assign text"
    explanation: "Text with quotation marks after ="
    example: "name = 'Hedy'"
    demo_code: |
        name = 'Hedy the Robot'
        {print} 'Hello ' name
-   name: "quotes after {if} comparison"
    explanation: "Text with quotation marks after {if}"
    example: "name = 'Hedy'"
    demo_code: |
        name = {ask} 'Who are you?'
        {if} name = 'Hedy'
            {print} 'Hi there!'
-   name: "quotes in list"
    explanation: "A list with quotation marks"
    example: "name = 'Hedy', 'Felienne'"
    demo_code: |
        superheroes = 'Iron Man', 'Batman', 'Superman'
        {print} superheroes {at} {random}
13:
-   name: "{and}"
    explanation: "Two parts both need to be correct"
    example: "if 3+2 {is} 5 {and} 2+2 {is} 4"
    demo_code: |-
        answer1 = {ask} 'What is 3+2?'
        answer2 = {ask} 'What is 2+2?'
        {if} answer1 {is} 5 {and} answer2 {is} 4
            {print} 'Both answers are correct!'
        else
            {print} 'At least one answer is wrong!'
-   name: "{or}"
    explanation: "At least 1 of the two parts need to be correct. If both are correct, it is also fine."
    example: "if 3+2 {is} 5 {or} 2+2 {is} 4"
    demo_code: |-
        answer1 = {ask} 'What is 3+2?'
        answer2 = {ask} 'What is 2+2?'
        {if} answer1 {is} 5 {or} answer2 {is} 4
            {print} 'At least one answer is correct!'
        else
            {print} 'Both answers are wrong!'
14:
-   name: "Smaller"
    explanation: "We use the `<` to check if the first number is smaller than the second number."
    example: "For example: age < 12"
    demo_code: |-
        age = {ask} 'How old are you?'
        {if} age < 13
            {print} 'You are younger than me!'
-   name: "Bigger"
    explanation: "We use the `>` to check if the first number is bigger than the second number."
    example: "For example: age > 12"
    demo_code: |-
        age = {ask} 'How old are you?'
        {if} age > 13
            {print} 'You are older than me!'
-   name: "Equal"
    explanation: "We use the `==` to check if two things are the same."
    example: "For example: answer == 25"
    demo_code: |-
        answer = {ask} 'What is 5 * 5?'
        {if} answer == 25
            {print} 'That {is} correct!'
-   name: "Not equal"
    explanation: "We use the `!=` to check if two things are not the same. "
    example: "For example: answer != 25"
    demo_code: |-
        answer = {ask} 'What is 5 * 5?'
        {if} answer != 25
            {print} 'That is not correct!'

-   name: "Smaller {or} equal"
    explanation: "We use the `<=` to check if the first number is smaller than or equal to the second number."
    example: "For example: age <= 12"
    demo_code: |-
        age = {ask} 'How old are you?'
        {if} age <= 12
            {print} 'You are younger than me!'

-   name: "Bigger or equal"
    explanation: "We use the `>=` to check if the first number is bigger than or equal to the second number."
    example: "For example: age >= 14"
    demo_code: |-
        age = {ask} 'How old are you?'
        {if} age >= 14
            {print} 'You are older than me!'
15:
-   name: "{while}"
    explanation: "We can use the `{while}` loop with not equal"
    example: "Example: {while} correct_answer != 25"
    demo_code: |-
        answer = 0
        {while} answer != 25
            answer = {ask} 'What is 5 times 5?'
        {print} 'A correct answer has been given'
-   name: "Smaller {while}"
    explanation: "We can also use the `{while}` loop with `<` and `>`. "
    example: "For example: {while} count < 3"
    demo_code: |-
        count = 1
        {while} count < 3
            {print} 'We do this ' 3 - count ' more times'
            count = count + 1
        {print} 'We are done'
16:
-   name: "square brackets"
    explanation: "Lists with square brackets"
    example: "For example: fruit = ['apple', 'banana', 'cherry']"
    demo_code: |-
        fruit = ['apple', 'banana', 'cherry']
        {print} fruit
-   name: "Get an item from a list"
    explanation: "To get an item from a list we use [number] so fruit[1] means, get the first fruit from the list!"
    example: "For example: firstfruit = fruit[1]"
    demo_code: |-
        fruit = ['banana', 'apple', 'cherry']
        firstfruit = fruit[1]
        {print} firstfruit
-   name: "Get a random item from a list"
    explanation: "To get a random item from a list we use [random] so fruit[random] means, get a random fruit from the list!"
    example: "For example: random_fruit {is} fruit[random]"
    demo_code: |-
        fruit = ['banana', 'apple', 'cherry']
        random_fruit = fruit[random]
        {print} random_fruit
17:
-   name: "{elif}"
    explanation: "`{elif}`."
    example: "{elif} a {is} 5:"
    demo_code: |-
        a = 2
        {if} a == 1:
            {print} 'a is 1'
        {elif} a == 2:
            {print} 'a is 2'
        {else}:
            {print} 'a is not 1 or 2'
-   name: "{print}"
    explanation: "When we use a `{for}`, we need to put a `:` behind the `{for}` statement!"
    example: "for i {in} {range} 1 {to} 10:"
    demo_code: |-
        {for} i {in} {range} 1 {to} 12:
            {print} i
        {print} 'Ready or not, here I come!'
-   name: "{if}"
    explanation: "We need to do the same with all of our `{if}` statements"
    example: "if colour {is} green:'"
    demo_code: |-
        colour = {ask} 'What is your favorite color?'
        {if} colour == 'green':
            {print} 'Your favorite colour is green'
        {else}:
            {print} 'Your favorite colour is not green'
18:
-   name: "{print}"
    explanation: "With `{print}` you need to use parentheses"
    example: "{print}"
    demo_code: |-
        {print}('hi!')
-   name: "{print} with var"
    explanation: "With `{print}` you need to use parentheses and commas if you {print} more items"
    example: "{print}"
    demo_code: |-
        name = 'Hedy'
        {print}('my name is ', name)
-   name: '{print} with var'
    explanation: With `{print}` you need to use parentheses and commas if you {print} more items
    example: '{print}'
    demo_code: "name = 'Hedy'\n{print}('my name is ', name)"
-   name: ask something with {input}
    explanation: Use `{input}` instead of `{ask}` to ask something
    example: '{input}'
    demo_code: "name = {input}('What is your name?')\n{print}('So your name is ', name)"
