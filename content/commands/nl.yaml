1:
-   name: "{print}"
    explanation: "Iets printen met `{print}`."
    demo_code: "{print} Hallo welkom bij Hedy!"
-   name: "{ask}"
    explanation: "Iets vragen met `{ask}`."
    demo_code: "{ask} Wat is je lievelingskleur?"
-   name: "{echo}"
    explanation: "Iets herhalen dat is ingetypt met `{echo}`."
    demo_code: |-
        {ask} Wat is je lievelingskleur?
        {echo} dus je lievelingskleur is
-   name: "{print} emojis"
    explanation: "print een emoji met `{print}`"
    demo_code: "{print} \U0001F64B \U0001F30D ❗"
-   name: "{forward}"
    explanation: "Een lijn trekken met `{forward}`."
    demo_code: "{forward} 100"
-   name: "{turn}"
    explanation: "De teken-schildpad draaien met `{turn}`"
    demo_code: |-
        {forward} 25
        {turn} {left}
        {forward} 25
        {turn} {right}
2:
-   name: "{is}"
    explanation: "Een woord een naam geven met `{is}`. Je mag de naam zelf kiezen."
    demo_code: |-
        voornaam {is} Hedy
        {print} ik heet voornaam
-   name: "{sleep}"
    explanation: "Laat Hedy een of meer seconde(n) pauzeren."
    demo_code: |-
        {print} Ik moet even een seconde nadenken...
        {sleep}
        {print} Hmm.. Geef me nog 3 seconden...
        {sleep} 3
        {print} Eureka! Ik weet het!
-   name: "{is} - turtle"
    explanation: "Een getal een naam geven met `{is}`. Je mag de naam zelf kiezen."
    demo_code: |-
        hoek {is} 90
        {turn} hoek
        {forward} 100
-   name: "{ask}"
    explanation: "Iets vragen met `{ask}`. Maar let op! Je moet je antwoord een naam geven met `{is}`."
    demo_code: |-
        kleur {is} {ask} Wat is je lievelingskleur?
        {print} Jouw favoriet is dus kleur
3:
-   name: "kies_random"
    explanation: "Iets willekeurigs uit een groep woorden kiezen met `{at}` en `{random}`."
    demo_code: |-
        dieren {is} hond, kat, kangoeroe
        {print} dieren {at} {random}
-   name: "Toevoegen"
    explanation: "Voeg iets toe aan een lijst"
    demo_code: |-
        dieren {is} kat, koe
        {add} hond {to_list} dieren
-   name: "Verwijderen"
    explanation: "Verwijder iets van een lijst"
    demo_code: |-
        dieren {is} hond, kat, koe
        {remove} hond {from} dieren
4:
-   name: "{print}"
    explanation: "Iets letterlijk printen met `{print}`."
    demo_code: "{print} 'Hallo welkom bij Hedy'"
-   name: "{is}"
    explanation: "Een stukje tekst een naam geven met `{is}` en printen zonder aanhalingstekens"
    demo_code: |-
        naam {is} Hedy
        {print} 'ik heet ' naam
-   name: "{ask}"
    explanation: "Iets vragen met `{ask}`"
    demo_code: |-
        kleur {is} {ask} 'Wat is je lievelingskleur?'
        {print} 'Jouw favoriet is dus ' kleur
5:
-   name: "{if}"
    explanation: "Een keuze maken met `{if}`"
    demo_code: |-
        kleur {is} {ask} 'Wat is je lievelingskleur?'
        {if} kleur {is} groen {print} 'mooi!' {else} {print} 'niet zo mooi'
-   name: "{if} met turtle"
    explanation: "Een keuze maken met `{if}`"
    demo_code: |-
        antwoord {is} {ask} 'Hoe ver moet ik lopen?'
        {if} antwoord {is} ver {forward} 100 {else} {forward} 5
-   demo_code: "kleur {is} {ask} 'Wat is je lievelingskleur?'\n{if} kleur {is} groen {print} 'mooi!' {else} {print} 'bah'"
    name: '{if}'
    explanation: Maak een keuze met `{if}`
-   explanation: Maak een keuze met `{if}`
    demo_code: "antwoord {is} {ask} 'Hoe ver moet ik lopen?'\n{if} antwoord {is} ver {forward} 100 {else} {forward} 5"
    name: '{if} with turtle'
-   explanation: Check elements with `{in}`
    name: '{in}'
    demo_code: "mooie_kleuren {is} groen, geel\nkleur {is} {ask} 'Wat {is} je lievelingskleur?'\n{if} kleur {in} mooie_kleuren {print} 'mooi!' {else} {print} 'bah'"
6:
-   name: "{print}"
    explanation: "Iets letterlijk printen met `{print}`"
    demo_code: "{print} '5 keer 5 {is} ' 5 * 5"
-   name: "`{ask}` en `{if}` samen met rekenen"
    explanation: "Het antwoord van een som vragen met `{ask}` en kijken of het goed is."
    demo_code: |-
        antwoord = {ask} 'Hoeveel is 10 plus 10?'
        {if} antwoord {is} 20 {print} 'Goedzo!' {else} {print} 'Foutje'
-   name: "`{ask}` en `{if}` turtle"
    explanation: "De gebruiker vragen hoeveel hoeken hij wil"
    demo_code: |-
        hoeken = {ask} 'Hoeveel hoeken krijgt dit figuur?'
        hoek = 360 / hoeken
        {forward} 50
7:
-   name: "{repeat}"
    explanation: "Iets herhalen met `{repeat}`."
    demo_code: |-
        {repeat} 3 {times} {print} 'Hedy is leuk!'
-   name: "{repeat} - turtle"
    explanation: "Een regel code herhalen met `{repeat}`."
    demo_code: |-
        {repeat} 3 {times} {forward} 10
-   demo_code: "kleur = {ask} 'Wat is je favoriete kleur?'\n{if} kleur {is} groen {print} 'mooi!' {else} {print} 'meh'"
    name: '{if}'
    explanation: Maak een keuze met `{if}`
-   name: '{repeat} - turtle'
    explanation: Herhaal een regel code met `{repeat}`.
    demo_code: '{repeat} 3 {times} {forward} 10'
8:
-   name: "`{if}` met meerdere regels"
    explanation: "Het antwoord van een som vragen met `{ask}` en kijken of het goed is. Nu printen we twee regels uit."
    demo_code: |-
        antwoord = {ask} 'Hoeveel is 10 plus 10?'
        {if} antwoord {is} 20
            {print} 'Goedzo!'
            {print} 'Het antwoord was inderdaad ' antwoord
        {else}
            {print} 'Foutje'
            {print} 'Het antwoord moest zijn 20'
-   name: "`{repeat}` met de turtle"
    explanation: "Meerdere regels samen herhalen"
    demo_code: |-
        {repeat} 4 {times}
            {turn} 90
            {forward} 50
-   name: '`{repeat}` with turtle'
    explanation: '{repeat} meerdere lijnen'
    demo_code: "{repeat} 4 {times}\n    {turn} 90\n    {forward} 50"
9:
-   name: "`{if}` met meerdere regels"
    explanation: "Het antwoord van een som vragen met `{ask}` en kijken of het goed is. Nu printen we twee regels uit."
    demo_code: |-
        antwoord = {ask} 'Hoeveel is 10 plus 10?'
        {if} antwoord {is} 20
            {print} 'Goedzo!'
            {print} 'Het antwoord was inderdaad ' antwoord
        {else}
            {print} 'Foutje'
            {print} 'Het antwoord moest zijn 20'
-   name: "`{repeat}` met de turtle"
    explanation: "Meerdere regels samen herhalen"
    demo_code: |-
        {repeat} 4 {times}
            {turn} 90
            {forward} 50
10:
-   name: "{for} met een lijst"
    explanation: "Alle dingen in een lijstje printen "
    demo_code: |-
        dieren {is} hond, kat, papegaai
        {for} dier {in} dieren
          {print} dier
-   name: '{for} with a list'
    explanation: 'print all things in a list '
    demo_code: "animals {is} hond, kat, blobvis\n{for} animal {in} animals\n  {print} 'I love ' animal"
11:
-   name: "{for} met i"
    explanation: "`{for}` met getallen"
    demo_code: |
        {for} i {in} {range} 1 {to} 10
            {print} i
        {print} 'Wie niet weg is is gezien'
-   demo_code: "antwoord = {ask} 'Wat is 5 + 5?'\n{if} antwoord {is} 10\n    {print} 'Goed gedaan!'\n    {print} 'Klopt, het antwoord was ' antwoord\nelse\n    {print} 'Oeps!'\n    {print} 'Het antwoord is 10'"
    name: '{ask}'
    explanation: vraag voor het antwoord van een som en controleer of het correct is. We kunnen nu 2 regels printen.
12:
-   name: "assign text"
    explanation: "Tekst met aanhalingstekens na ="
    demo_code: |
        naam = 'Hedy de Robot'
        {print} 'Hallo ' naam
-   name: "quotes {in} list"
    explanation: "Een lijstje maken met aanhalingstekens"
    demo_code: |
        superhelden = 'Iron Man', 'Batman', 'Superman'
        {print} superhelden {at} {random}
-   name: "quotes after {if} comparison"
    explanation: "Tekst met aanhalingstekens na {if}"
    demo_code: |
        naam = {ask} 'Wie ben jij?'
        {if} naam = 'Hedy'
            {print} 'Hoi!'
-   name: "float directly"
    explanation: "Kommagetallen"
    demo_code: |
        {print} 'Rekenen maar!'
        {print} 'Tweeënhalf plus tweeënhalf is...'
        {print} 2.5 + 2.5
13:
-   name: "{and}"
    explanation: "`{and}` is dus en. Beide dingen links en rechts van de `{and}` moeten waar zijn."
    demo_code: |-
        antwoord1 = {ask} 'Hoeveel is 3+2?'
        antwoord2 = {ask} 'Hoeveel is 2+2?'
        {if} antwoord1 {is} 5 {and} antwoord2 {is} 4
            {print} 'beide antwoorden zijn goed!'
        {else}
            {print} 'Minimaal 1 antwoord is fout!'
-   name: "{or}"
    explanation: "`{or}` is dus of. Minimaal 1 van de 2 tussen de `{or}` moet goed zijn. Allebei goed mag ook."
    demo_code: |-
        antwoord1 = {ask} 'Hoeveel is 3+2?'
        antwoord2 = {ask} 'Hoeveel is 2+2?'
        {if} antwoord1 {is} 5 {or} antwoord2 {is} 4
            {print} 'Je hebt minimaal 1 antwoord goed!'
        {else}
            {print} 'Beide antwoorden zijn fout!'
14:
-   name: "Kleiner"
    explanation: "De `<` kijkt of het eerste getal kleiner is dan het tweede getal."
    demo_code: |-
        leeftijd = {ask} 'Hoe oud ben jij?'
        {if} leeftijd < 13
            {print} 'Dan ben je jonger dan ik!'
-   name: "Groter"
    explanation: "De `>` kijkt of het eerste getal groter is dan het tweede getal"
    demo_code: |-
        leeftijd = {ask} 'Hoe oud ben jij?'
        {if} leeftijd > 13
            {print} 'Dan ben je ouder dan ik!'
-   name: Gelijk
    explanation: "We gebruiken `==` om te kijken of twee dingen hetzelfde zijn"
    demo_code: |-
        antwoord = {ask} 'Wat is 5 * 5?'
        {if} antwoord == 25
            {print} 'Klopt!'
-   name: Ongelijk
    explanation: "We gebruiken `!=` om te kijken of twee dingen niet hetzelfde zijn"
    demo_code: |-
        antwoord = {ask} 'Wat is 5 * 5?'
        {if} antwoord != 25
            {print} 'Foutje!'
-   name: "Kleiner of gelijk"
    explanation: "We gebruiken `<=` om te kijken of het eerste getal kleiner of even klein is als het tweede getal"
    demo_code: |-
        leeftijd = {ask} 'Hoe oud ben jij?'
        {if} leeftijd <= 12
            {print} 'Dan ben je jonger dan ik!'
-   name: "Groter of gelijk"
    explanation: "We gebruiken `>=` om te kijken of het eerste getal groter of even groot is als het tweede getal"
    demo_code: |-
        leeftijd = {ask} 'Hoe oud ben jij?'
        {if} leeftijd >= 14
            {print} 'Dan ben je ouder dan ik!'
15:
-   name: "{while}"
    explanation: "We kunnen dus een `{while}` loop gebruiken"
    demo_code: |-
        antwoord = 0
        {while} antwoord != 25
            antwoord = {ask} 'Wat is 5 keer 5?'
        {print} 'Goed gedaan!'
-   name: "Kleiner {while}"
    explanation: "We kunnen een `{while}` loop ook gebruiken met `<` en `>`."
    demo_code: |-
        tel = 1
        {while} tel < 3
            {print} 'Dit is de ' tel 'e keer'
            tel = tel + 1
        {print} 'We zijn klaar'
16:
-   name: "Haakjes om lijstjes"
    explanation: "Lijstjes met vierkante haken!"
    demo_code: |-
        fruit = ['appel', 'banaan', 'kers']
        {print} fruit
-   name: "Pak iets uit een lijst"
    explanation: "Om een item uit een lijst te krijgen gebruiken we [nummer] dus met fruit[1] krijg je de eerste fruit uit de lijst!"
    demo_code: |-
        fruit = ['banaan', 'appel', 'kers']
        eerstefruit = fruit[1]
        {print} eerstefruit
-   name: "Pak een random item uit een lijst"
    explanation: "Om een random item uit een lijst te pakken, gebruiken we [{random}]. Dus fruit[{random}] pakt een random fruit uit de lijst!"
    demo_code: |-
        fruit = ['banaan', 'appel', 'kers']
        randomfruit = fruit[{random}]
        {print} randomfruit
17:
-   name: "elif"
    explanation: "`{elif}`."
    demo_code: |-
        a = 2
        {if} a == 1:
            {print} 'a is 1'
        {elif} a == 2:
            {print} 'a is 2'
        {else}:
            {print} 'a is niet 1 of 2'
-   name: "{for} met :"
    explanation: "Bij `for` moet je dus een `:` er achter zetten!"
    demo_code: |-
        {for} i {in} {range} 1 {to} 10:
            {print} i
        {print} 'Wie niet weg is is gezien'
-   name: "{if} met :"
    explanation: "We moeten hetzelfde doen met al onze `{if}` statements"
    demo_code: |-
        kleur = {ask} 'Wat vind jij de mooiste kleur?'
        {if} kleur == 'groen':
            {print} 'Jouw kleur is groen'
        {else}:
            {print} 'Jouw kleur is zeker niet groen'
18:
-   name: "{print}"
    explanation: "Bij `{print}` moet je haakjes gebruiken"
    demo_code: |-
        {print}('hallo!')
-   name: "{range}"
    explanation: "Bij `{range}` moet je haakjes gebruiken "
    demo_code: |-
        {for} i {in} {range} (1,10):
            {print}('Hallo nummero ', i)
-   name: "{print} met var"
    explanation: "Bij `{print}` moet je haakjes gebruiken en komma's als je meerdere dingen {print}"
    demo_code: |-
        naam = 'Hedy'
        {print}('ik heet', naam)
-   name: "iets vragen met {input}"
    explanation: "Gebruik `{input}` in plaats van `{ask}` om iets te vragen"
    demo_code: |-
        naam = {input}('Hoe heet jij?')
        {print}('Dus jij heet ', naam)
