title: Hedy documentation
sections:
-   title: Introduction
    key: intro
    subsections:
    -   title: Что такое Hedy?
        text: "Hedy - это текстовый язык программирования, специально разработанный для (пред)подростков (от 10 до 15 лет).\nВ отличие от языков программирования для детей, таких как Scratch, Hedy использует не кодовые блоки, а текстовый код.\nПоэтому с Hedy вы научитесь набирать код, как это делают настоящие программисты, но небольшими шагами, с помощью игровых упражнений.\nТаким образом, Hedy может служить ступенькой к настоящим языкам программирования, таким как Python, в доступной и, в основном, веселой форме!\nЗдесь вы можете посмотреть [видео](https://www.youtube.com/watch?v=EdqT313rM40&amp;t=2s) о развитии Hedy как языка программирования.\n"
    -   title: Целевая аудитория
        text: "Hedy is developed with middle school and junior high school students in mind (ages 10 - 15).\nIt's important for the students to be able to read well. We recommend not to start with Hedy before the students have achieved at least a 3rd grade reading level.\nStudents (and teachers!) don't need any programming experience before starting with Hedy.\n"
    -   title: Как работает Hedy?
        text: "Hedy is divided into levels, in which new commands are taught.Each level contains a variety of exercises to practice to newly learned commands.\nThe exercises can be done by the students individually, or you can use them in classical instructions. The lesson plans for each level are included in this teacher manual.\nThe lesson plans and exercises are explained step by step, to make sure the less digitally informed teachers should be able to use Hedy too!\nOf course Hedy also caters to the creative teachers that love to make their own lessonplans and exercises!\n"
    -   title: Devices
        text: "Hedy is webbased, which means it works on any device with a browser (Google Chrome, Firefox, Edge etc), so laptops, chromebooks, tablets and even smartphones are suitable to use Hedy.\nThere's no need to download anything before working with Hedy, just go to the website and you're all set!\n"
    -   title: The Hedy Community
        text: "All Hedy teachers, programmers and other fans are welcome to join our [Discord server](https://discord.gg/8yY7dEme9r). This is the ideal place to chat about Hedy: we have channels where you can show your cool projects and lessons, channels to report bugs, and channels to chat with other teachers and with the Hedy team."
-   title: Подготовка
    key: подготовка
    subsections:
    -   title: Создание класса
        text: "Как учитель, вы можете создать класс для своих учеников. В этом классе вы можете видеть учетные записи учеников и их программы, а также следить за их успехами.\nВы также можете настроить свой класс и выбрать, какие приключения будут доступны для них. Таким образом, ваши ученики не будут перегружены количеством приключений и уровней, и они смогут сосредоточиться на тех приключениях, которые вы хотели бы, чтобы они практиковали.\n"
    -   title: Студенческие аккаунты
        text: "Есть два способа позволить вашим ученикам присоединиться к вашему классу: Вы можете позволить им создать свои собственные учетные записи или создать учетные записи для них.\n\n**Ученики создают свои собственные учетные записи**.\nВаши ученики могут зайти на сайт Hedy и создать свои собственные учетные записи, как это сделали вы. Чтобы пригласить их в ваш класс, им нужно просто нажать на ссылку приглашения.\nВы можете найти ссылку на приглашение на странице класса и отправить ее своим ученикам. Имейте в виду, что ваши ученики должны быть зарегистрированы в Hedy, когда они нажмут на ссылку, поэтому позаботьтесь о том, чтобы все прошло гладко.\n\n**Вы создаете учетные записи для своих учеников**.\nИногда проще создать целую кучу аккаунтов для своих учеников самостоятельно. Это можно сделать, нажав кнопку \"Создать учетные записи учеников\" и заполнив для них имена пользователей и пароли.\nСтуденты могут войти в систему с выбранными вами именем пользователя и паролем. После этого они могут изменить свое имя пользователя или пароль, если захотят, и все равно останутся в вашем классе.\n"
    -   title: Настройка предпочитаемого языка
        text: "Когда студенты создают профиль, они должны выбрать \"предпочитаемый язык\". Hedy всегда будет загружаться на этом выбранном языке.\nИзменить этот язык всегда можно позже, перейдя в \"Мой аккаунт\" и \"Мои личные настройки\".\nС декабря 2021 года установка предпочтительного языка является обязательной для каждого аккаунта Hedy.\nЕсли ваш аккаунт или аккаунты ваших учеников были созданы раньше этой даты, вы получите сообщение о том, что выбранный язык отсутствует.\nНе волнуйтесь! Перейдите в \"Мой профиль\" и установите язык в настройках вашего профиля.\nПока вы не установите язык, Hedy будет отображаться на языке вашего браузера, а если этот язык не поддерживается, то на английском.\n\n**Для неанглоязычных пользователей**.\nВы можете не только изменить язык приключений на свой собственный. Вы также можете выбрать, на каком языке должны быть ключевые слова (например, \"печатать\" или \"спрашивать\").\nТаким образом, вы можете научить своих студентов кодировать с помощью английских ключевых слов, но при этом позволить им программировать на своем родном языке. Например, голландские студенты могут использовать команду \"vraag\" вместо \"ask\".\n"
    -   title: Хранение программ
        text: "Поскольку вы уже вошли в систему, вы увидите синий баннер с Моим профилем и Моими программами.\nЭти вкладки существуют и для ваших учеников. В разделе Мои программы вы можете найти все коды, которые вы сохранили.\n\nВы можете легко сохранить свои проекты, дав название проекту на белой полосе и нажав зеленую кнопку Сохранить код.\nВы (и ваши ученики) также можете обмениваться программами. Эти программы будут размещены на нашей странице explore, чтобы все могли их увидеть и использовать.\nЕсли вы хотите убрать свою программу из общего доступа, перейдите в раздел \"Мои программы\" и нажмите кнопку \"Убрать из общего доступа\".\n"
-   subsections:
    -   title: Преподавание с Хеди
        text: "Hedy содержит множество различных уровней, каждый из которых обучает различным новым навыкам. Мы рекомендуем преподавать один уровень за урок.\nЭто даст вашим ученикам время полностью усвоить новую команду или концепцию и попрактиковаться с ней, прежде чем переходить к следующему уровню.\nМы используем эту структуру в наших уроках:\n"
    -   title: Introduction
        text: "Вы можете начать свои уроки с активизации предыдущих знаний ваших учеников: Что они уже знают о предмете, что они узнали на предыдущем уроке и какие ошибки они совершили, от которых теперь отучились?\nТаким образом, все ранее выученные команды и часто допускаемые ошибки будут свежи в памяти учеников, когда вы будете вводить новый урок.\n"
    -   title: Введение новых понятий и команд
        text: "Новые понятия и команды могут быть очень трудны для полного понимания некоторыми учащимися.\nПоэтому очень важно показать ученикам, как правильно использовать новые команды.\nОсобенно на начальных уровнях, где у некоторых студентов вообще нет опыта программирования, им может быть трудно понять новые абстрактные концепции.\nДемонстрация большого количества примеров делает абстрактное понятие (например, \"Что такое переменная?\") более узнаваемым и легким для понимания (\"Смотрите, переменная pet изменилась на dog\").\n"
    -   title: Приступаем к работе
        text: "Каждый уровень содержит различные приключения, которые можно найти на розовых вкладках. Первая розовая вкладка объясняет новые команды в этом уровне.\nСледующие вкладки - это приключения, которые ученики могут опробовать и создать свои собственные.\nПриключения расположены от самого простого к самому сложному, поэтому мы рекомендуем начинать слева и двигаться вправо.\nПоследняя вкладка \"Что дальше\" дает небольшое представление о том, что вы узнаете на следующем уровне. Конечно, вы можете выбрать приключения, которые вы хотите, чтобы ваши ученики проходили на каждом уровне.\nИм не обязательно выполнять каждое приключение. Каждое приключение содержит пример кода, который ученики могут опробовать с помощью зеленой кнопки.\nПример кода копируется на рабочее поле, где ученики могут опробовать код и изменить его под себя.\nСтимулируйте учеников превратить примеры кодов в свои собственные проекты, добавляя свои идеи и создавая свои собственные варианты приключений.\n"
    -   title: Викторина
        text: "Чтобы проверить, усвоили ли ваши ученики всю новую информацию, содержащуюся в уровне, вы можете предложить им составить викторину.\nТест содержит 10 вопросов с несколькими вариантами ответов о новых понятиях и командах для данного уровня.\nПока что викторина есть не для каждого уровня, так как мы все еще создаем викторины.\n"
    -   title: Оценка
        text: "Завершите урок кратким подведением итогов. Чему научились ученики? С какими трудностями они столкнулись?\nКак они учились на своих ошибках? И, конечно же: Что они создали?\nУченики часто очень гордятся своими собственными творениями, поэтому приятно сэкономить немного времени и дать ученикам возможность показать свои работы одноклассникам.\n"
    title: Преподавание с Хеди
    key: обучение
-   levels:
    -   level: '1'
        sections:
        -   title: Студенты забывают печатать "коммандос"
            example:
                error_text: "Например, они набирают предложение, не используя печатный текст.\n"
                error_code: "Хеди не может напечатать это\n"
                solution_text: "Научите своих студентов всегда начинать строку кода с команды.\n"
                solution_code: "печать Хеди может напечатать это!\n"
        -   title: Студенты используют заглавные буквы при наборе команд
            example:
                error_text: "Команды не будут работать, если они написаны заглавными буквами.\n"
                error_code: "Спросите Почему мой код не работает?\nОтвет Потому что я использую заглавные буквы.\n"
                solution_text: "Уберите заглавные буквы.\n"
                solution_code: "спросить Почему мой код теперь работает?\nпечать Потому что я убрал заглавные буквы!\n"
        -   title: Студенты используют печатать без вопроса
            example:
                error_text: "Эхо создано для того, чтобы повторять ответ после команды спросить. Без команды спросить эхо не будет ничего делать.\n"
                error_code: "echo Your name is\n"
                solution_text: "Add an ask command to make it work.\n"
                solution_code: "ask What's your name?\necho Your name is\n"
        -   title: Students want their echo word (variable) to be in the middle of a sentence
            example:
                error_text: "And they are right! That's why they will learn to use proper variables in the next level.\n"
                error_code: "ask Which programming language is the most fun?\necho is the best!\n"
                solution_text: "In level 1 we have to keep it at this:\n"
                solution_code: "ask Which programming language is the most fun?\necho The best is...\n"
        -   title: 'Turtle: Students let the turtle walk off of the screen'
            example:
                error_text: "Often students love to try out big numbers when using the turtle, which causes the arrow to walk off the screen.\n"
                error_code: "forward 300\nturn 90\n"
                solution_text: "In the example. students tend to think that the turn command doesn't work. Eventhough is does work, but you can't see it happening off screen. Use smaller numbers to prevent this from happening.\n"
                solution_code: "forward 100\nturn 90\n"
        -   title: "Turtle: Students use the command backward, but that doens't exist"
            example:
                error_text: "Назад - это не команда.\n"
                error_code: "назад 100\n"
                solution_text: "To make the turtle go backwards, you use the forward command and a negative number. For example:\n"
                solution_code: "вперед -100\n"
    -   level: '2'
        sections:
        -   title: Students make typos in their commands
            example:
                solution_code: "print Don't make typos!\n"
                error_text: "Hedy can't recognize a command with a typo.\n"
                error_code: "prinnt Don't make typos!\n"
                solution_text: "Teach your students to read the error messages. This way they can find out themselves what went wrong.\n"
        -   title: Students forget that the ask command has changed
            example:
                error_text: "In this level students learn about variables. The ask command requires a variable as well, but students forget this.\n"
                error_code: "ask what would you like to eat?\n"
                solution_text: "In this level you have to tell Hedy where to save your answer, so it can be used later on. This is called a variable.\n"
                solution_code: "order is What would you like to eat?\n"
        -   title: 'Students try to use the echo command. '
            example:
                error_text: "For some students it might be frustrating to learn that the echo command doesn't work anymore. That's why it's very important to explain the advantages of using variables. For example you can use multiple variables in a code, and you can put them anywhere you like in a sentence!\n"
                error_code: "answer is ask Why doesn't echo work anymore?!\necho\n"
                solution_text: "Use a varible instead.\n"
                solution_code: "answer is ask Why doens't echo work anymore?!\nprint answer\n"
        -   title: Students use a variable name or as a normal word
            example:
                error_text: "In the example below the word 'name' is used a a variable, but also as a normal text. The output of this code will be 'Hi my Hedy is Hedy'.\n"
                error_code: "name is Hedy\nprint Hi my name is name\n"
                solution_text: "So don't use a word you want to use in the text as a variable name. In level 4 this is solved with quotation marks.\n"
                solution_code: "name is Hedy\nprint Hi I'm name\n"
        -   title: Students use long variable names containing two words.
            example:
                error_text: "A variable should be named with one word. You could use an underscore to connect two words. That counts as one.\n"
                error_code: "chosen door is ask Which door do you pick?\n"
                solution_text: "Добавьте знак подчеркивания.\n"
                solution_code: "chosen_door is ask which door do you pick?\n"
        -   title: Students might use two different names for the same variable
            example:
                error_text: "In this example the student has used 'horse' and 'name' for the same variables.\n"
                error_code: "horse is ask What is your horse called?\nprint Your horse is called name\n"
                solution_text: "Always check wheter the variable has the same name throughout the code. Slight differences can be hard to spot (for example plurals) but they will interfere with the code.\n"
                solution_code: "name is ask What is your horse called?\nprint Your horse is called name\n"
    -   level: '3'
        sections:
        -   title: Students try to print whole lists
            example:
                error_text: "A list can't be printed. You can only print one item from the list with at random.\n"
                error_code: "groceries is apples, milk, chocolate\nprint groceries\n"
                solution_text: "To print a list of all the groceries, you simply need to put them after a print command. Else you can use the list to print one item with at random.\n"
                solution_code: "print apples, milk, chocolate\n\nor\n\ngroceries is apples, milk, chocolate\nprint groceries at random\n"
        -   title: Students use the name of a variable or list as regular text.
            example:
                error_text: "This problem probably occured in level 2 as well. Now it can happen with lists too.\n"
                error_code: "name is Hedy\nprint Hi my name is name\n\nor\n\nanimal is rhino, bee, swan\nprint The best animal is... animal at random\n"
                solution_text: "Don;t use the names of variables or lists in regular text to print. In level 4 this problem is solves with quotation marks.\n"
                solution_code: "name is Hedy\nprint Hi I'm name\n\nor\n\nanimals is rhino, bee, swan\nprint The best animal is... animals at random\n"
        -   title: Students forget at in at random
            example:
                error_text: "Like in the example\n"
                error_code: "birds is sparrow, seagull, robin\nprint birds random\n"
                solution_text: "This problem is solved by adding the word at.\n"
                solution_code: "birds is sparrow, seagull, robin\nprint birds at random\n"
        -   title: Students forget to use the print command when also using the at random command.
            example:
                error_text: "Or they will sometimes put at random at the beginning of the line.\n"
                error_code: "fruit is apple, cherry, banana\nfruit at random\n"
                solution_text: "Emphasize to your students that you always need a print to print text.\n"
                solution_code: "fruit is apple, cherry, banana\nprint fruit at random\n"
        -   title: Students forget to use commas in their lists
            example:
                error_text: "In a list items are seperated with a comma.\n"
                error_code: "pizzas is funghi tonno quattro stagioni\nprint pizzas at random\n"
                solution_text: "After each item on your list, there should be a comma\n"
                solution_code: "pizzas is funghi, tonno, quattro stagioni\nprint pizzas at random\n"
        -   title: Students try to use at random without a list.
            example:
                error_text: "Например\n"
                error_code: "clubs is Manchester United\nprint clubs at random\n"
                solution_text: "Hedy can't print anything at random, because there is no list to choose from.\n"
                solution_code: "clubs is Manchester United, Bayrn Munchen, FC Barcelona\nprint clubs at random\n"
        -   title: 'Students try to use add/remove without a list '
            example:
                error_text: "In the example below 'names' is not a list, but a variable. You cannot add anything to it.\n"
                error_code: "names is Jake\nyour_name is ask Who are you?\nadd your_name to names\nprint names at random\n"
                solution_text: "There has to be a list first, so you have to add a second name to turn names into a list, for example Amy. If you don't want amy on your list, you can use remove to remove it after.\n"
                solution_code: "names is Jake, Amy\nyour_name is ask Who are you?\nadd your_name to names\nprint names at random\n"
        -   title: Students forget to use to/from in add/remove.
            example:
                error_text: "Without to/from the add/remove command won't work.\n"
                error_code: "adventures is story, parrot, dice\nchoice is Which adventure do you like best?\nadd choice\nremove dice\nprint I love adventures at random\n"
                solution_text: "Hedy has to know which list the item should be added to/removed from.\n"
                solution_code: "adventures is story, parrot, dice\nchoice is Which adventure do you like best?\nadd choice to adventures\nremove dice from adventures\nprint I love adventures at random\n"
    -   level: '4'
        sections:
        -   title: Students forget to use quotation marks on both sides of the text
            example:
                error_text: "In this level print and ask need a set of quotation marks. One before of the text and one after.\n"
                error_code: "print Hello\nmood is ask 'How are you?\n"
                solution_text: "Добавьте правильные кавычки.\n"
                solution_code: "print 'Hello'\nmood is ask 'How are you?'\n"
        -   title: Students use the wrong quotation marks
            example:
                error_text: "It is important to start your lesson by checking if the students know how to type a quotation mark properly. ELse they might use the \"double quotes\" or the `skewed one`.\n"
                error_code: "print `Welcome to the restaurant`\nfood is ask \"What would you like to order?\"\n"
                solution_text: "These are the correct quotation marks:\n"
                solution_code: "print 'Welcome to the restaurant'\nfood is ask 'What would you like to order?'\n"
        -   title: Students use an apostrophe in their text
            example:
                error_text: "From this level on apostrophes are not allowed. They are often used in English when thyping contractions like you're, don't or what's.\n"
                error_code: "print 'You're not allowed to type this'\n"
                solution_text: "You can choose to use the wrong grammar and just leave the apostrophe out. Or you could use the ` as an apostrophe.\n"
                solution_code: "print 'Youre allowed to type this'\nprint 'And you`re able to do this'\n"
    -   sections:
        -   title: Students forget to use print in an if command
            example:
                error_text: "After students use if or else they forget to use a second command like print or ask.\n"
                error_code: "if name is Hedy 'Great!'\nelse 'Hedy is better!'\n"
                solution_text: "Add the print command to fix it.\n"
                solution_code: "if name is Hedy print 'Great!'\nelse print 'Hedy is better!'\n"
        -   title: Students might use two different names for the same variable
            example:
                error_text: "In this example the student has used 'horse' and 'name' for the same variables.\n"
                error_code: "horse is ask 'What is your horse called?'\nif name is Bonfire print 'cool'\nelse print 'less cool!'\n"
                solution_text: "Always check wheter the variable has the same name throughout the code. Slight differences can be hard to spot (for example plurals) but they will interfere with the code.\n"
                solution_code: "horse is ask 'What is your horse called'\nif horse is Bonfire print 'cool!'\nelse print 'less cool!'\n"
        -   title: Students still forget the quotes on both sides.
            example:
                error_text: "If commandos can get very long and students tend to forget to use quotes.\n"
                error_code: "if name is Hedy print fun\nelse print 'meh!\n"
                solution_text: "Always use 2 quotes in a print command.\n"
                solution_code: "if name is Hedy print 'fun'\nelse print 'meh!'\n"
        -   title: Students use quotes around variable names.
            example:
                error_text: "In this level there are no quotes around variable names.\n"
                error_code: "if 'name' is 'Hedy' print 'fun'\nelse print 'meh!'\n"
                solution_text: "Remove the quotes to get the code to work.\n"
                solution_code: "if name is Hedy print 'fun'\nelse print 'meh!\n"
        -   title: Students use long variable names containing two words.
            example:
                error_text: "A variable should be named with one word. You could use an underscore to connect two words. That counts as one.\n"
                error_code: "chosen door is ask 'Which door do you pick?'\n"
                solution_text: "Добавьте знак подчеркивания.\n"
                solution_code: "chosen_door is ask 'which door do you pick?'\n"
        -   example:
                error_code: "if name is Jesse, David, Souf print 'You are funny' else print 'You are not funny'\n"
                error_text: "For example this student Hedy to tell all his friends that they are funny, but other classmates would be told that they are not.\n"
                solution_text: "You could use the `in` command for that. It is explained in a higher level, but it does already work in level 5.\nAnother solution is to use multiple if commands and no else command. The disadvantage is that it won't tell the other classmates that they are not funny.\n"
                solution_code: "friends is Jesse, David, Souf\nname is ask 'Who are you?'\nif name in friends print 'You are funny'\nelse print 'You are not funny'\n\nor\n\nname is ask 'Who are you?'\nif naam is Jesse print 'You are funny'\nif naam is David print 'You are funny'\nif naam is Souf print 'You are funny'\n"
            title: Students want multiple answers to be correct
        -   title: The students make the variable name the same as the value in the if statement
            example:
                error_text: "In the example below the password is 'password'. This will result in it always being correct.\n"
                error_code: "password is ask 'What is the password?'\nif password is password print 'Access granted'\nelse print 'Acces denied!'\n"
                solution_text: "Pick a different name for your variable.\n"
                solution_code: "secret_password is ask 'What is the password'\nif secret_password is password print 'Access granted!'\nelse print 'Access denied!'"
        level: '5'
    -   level: '6'
        sections:
        -   title: Студенты испытывают трудности с кавычками
            example:
                error_text: "Some students struggle with adding quotattion marks or not. If you add quotation marks, the output screen will literally show '5+5'.\n"
                error_code: "print '5 + 5'\n"
                solution_text: "In this code the output screen will print '10'.\n"
                solution_code: "print 5 + 5\n"
        -   example:
                solution_text: "Or take it a step further like this.\n"
                error_text: "Some students will find it hard to do maths with variables. Try to show them very simple examples, like:\n"
                error_code: "age = ask 'How old are you?'\nprint 'Next year you will be ' age + 1\n"
                solution_code: "price = 0\nprint 'Welcome to our burger restaurant'\nburger = ask 'Would you like a burger?'\nif burger = yes price = price + 10\ndrink = ask 'Would you like a drink?'\nif drink = yes price = price + 4\nprint 'That will be ' price ' euros please'\n"
            title: Students struggle with the concept of doing maths with a variable
    -   sections:
        -   example:
                solution_code: "repeat 3 times print 'For he`s a jolly good fellow'\nrepeat 3 times print 'Which nobody can deny!'\n"
                error_text: "Make sure that the students know to use both the full repeat command and the print command.\n"
                error_code: "repeat 3 times 'For he`s a jolly good fellow'\nrepeat 3 print 'Which nobody can deny!'\n"
                solution_text: "Это правильный код:\n"
            title: Students forget one of the word of the repeat command, or they forget the print command
        -   title: Students try to repeat multiple lines
            example:
                error_text: "In this level you can only repeat one line of code multiple times. In this code the student wanted to print 3 different drinks, but it won't work. It will ask the question 3 times and only print the last answer.\n"
                error_code: "repeat 3 times drink = ask 'What would you like to drink?'\nprint drink\n"
                solution_text: "You should go to the next level to be able to repeat multiple lines. So on this level you'll have to print everything seperately.\n"
                solution_code: "drink = ask 'What would you like to drink?'\nprint drink\ndrink = ask 'What would you like to drink?'\nprint drink\ndrink = ask 'What would you like to drink?'\nprint drink\n"
        -   title: Students make programs that take too long to run
            example:
                error_text: "In this level it's very easy to make long codes. The students aren't allowed to make programs that take to long to load (to save our servers).\n"
                error_code: "repeat 100 times print 'How many times can I repeat this?'\n"
                solution_text: "Make sure the codes aren't too long\n"
                solution_code: "repeat 20 times print 'This is enough'\n"
        level: '7'
    -   level: '8'
        sections:
        -   example:
                error_text: "Indentation is a new concept in this level, that is hard to use for some students. Make sure they practise some simple codes before making a whole program with it.\n"
                error_code: "repeat 3 times\nprint 'hello'\n"
                solution_text: "Это правильный код:\n"
                solution_code: "повторить 3 раза\n    выведите 'hello'\n"
            title: Студенты неправильно используют отступы
        -   example:
                error_text: "For instance, in the code below the student wanted to take the drinks order of 3 people. But insted the program asked 3 times, but only wrote down one order.\n"
                error_code: "repeat 3 times\n    drink = ask 'What would you like to drink?'\nprint drink\n"
                solution_text: "In the correct code the third line starts with indentation too. This way it belongs to the repeat block and therefore it will be repeated 3 times.\nShowing your students these differences can help them understand why we need indentation to make our programs work.\n"
                solution_code: "repeat 3 times\n    drink = ask 'What would you like to drink?'\n    print drink\n"
            title: Students only repeat 1 line when they wanted to repeat multiple lines
        -   title: Students want to nest if statements, or put if statements inside a loop
            example:
                error_text: "In this level students aren't allowed yet to put if statements inside other if statements or inside repeat loops.\nIn the next level this is allowed.\n"
                error_code: "birthday = ask 'Is it you birthday?'\nif birthday = yes\n    repeat 3 times\n        print 'Hip Hip Hooray!'\n"
                solution_text: "This is the correct code for this level:\n"
                solution_code: "birthday = ask 'Is it you birthday?'\nif birthday = yes\n    print 'Hip Hip Hooray!'\n    print 'Hip Hip Hooray!'\n    print 'Hip Hip Hooray!'\n"
        -   example:
                error_code: "repeat 100 times\n    print 'How many times can I repeat this?'\n"
                solution_text: "Make sure the codes aren't too long\n"
                solution_code: "repeat 20 times\n    print 'This is enough'\n"
                error_text: "In this level it's very easy to make long codes. The students aren't allowed to make programs that take to long to load (to save our servers).\n"
            title: Students make programs that take too long to run
        -   title: Students use the if command to check if the variable value is the same as the variable name
            example:
                error_code: "password is ask 'What is the password?'\nif password is password\n    print 'You can come in'\nelse\n    print 'You are not allowed'\n"
                solution_code: "password is ask 'What is the password?'\nif password is 'password'\n    print 'You can come in'\nelse\n    print 'You are not allowed'\n"
                error_text: "We have seen this mistake by some of our students. They make a password for their computer, but they make the password 'password'.\nIn line 2 the computer is asked to check wheter the variable password is the same as the variable password, so itself. Which means the answer is alway yes.\nSo with this code the answer will always be 'You can come in' no matter what the player fills in.\n"
                solution_text: "You can fix this mistake by adding quotation marks. This way the computer knows that the second password in `if password is 'password'` is a string value (so normal text) and not the variable name.\n"
    -   level: '9'
        sections:
        -   title: Студенты допускают ошибки с отступами
            example:
                error_text: "The hardest part about this level is getting the indentation right. Students love nesting if statements, sometimes even inside other nested if statements. Keeping track of indentation can get pretty tough.\n"
                error_code: "print 'Robin is walking downtown'\nlocation = ask 'Is Robin going into a shop, or does she go home?'\nif location is shop\n    print 'She enters the shop.'\n    print 'Robin sees an interesting looking book'\n    book = ask 'Does Robin buy the book?'\n        if book is yes\nprint 'Robin buys the book and goes home'\nelse\n    print 'Robin leaves the shop and goes home'\nelse\n    print 'Robin goes home'\n"
                solution_text: "This is the correct code. Try to keep track of all the different constructions when putting if statements inside other if statements.\n"
                solution_code: "print 'Robin is walking downtown'\nlocation = ask 'Is Robin going into a shop, or does she go home?'\nif location is shop\n    print 'She enters the shop.'\n    print 'Robin sees an interesting looking book'\n    book = ask 'Does Robin buy the book?'\n    if book is yes\n        print 'Robin buys the book and goes home'\n    else\n        print 'Robin leaves the shop and goes home'\nelse\n    print 'Robin goes home'\n"
    -   level: '10'
        sections:
        -   title: Students so not use the for command correctly
            example:
                error_text: "We often see that students try to print the list (in the example animals) instead of the items of the list.\n"
                error_code: "animals is dog, cat, blobfish\nfor animal in animals\n  print 'I love ' animals\n"
                solution_code: "animals is dog, cat, blobfish\nfor animal in animals\n  print 'I love ' animal\n"
                solution_text: "The word animals in the last line should be changed into animal.\n"
        -   title: Students forget the indentation
            example:
                error_text: "Students tend to forget to use indentation after a for command.\n"
                error_code: "animals is dog, cat, blobfish\nfor animal in animals\nprint 'I love ' animals\n"
                solution_text: "You should use indentation after a for command.\n"
                solution_code: "animals is dog, cat, blobfish\nfor animal in animals\n  print 'I love ' animal\n"
    -   level: '11'
        sections:
        -   title: Студенты забывают использовать отступы
            example:
                error_text: "Make sure that the students use indentation.\n"
                error_code: "for i in range 1 to 5\nprint i\n"
                solution_text: "Это правильный код:\n"
                solution_code: "for i in range 1 to 5\n    print i\n"
        -   title: Студенты не понимают i
            example:
                error_text: "Some students don't understand that i is a variable. i is chosen, because it is used in Python programming, but you could just as easily use a different variable name.\nFor example, this code:\n"
                error_code: "for i in range 1 to 5\nprint i\n"
                solution_text: "Could just as well be replaced with this code. It works the same.\n"
                solution_code: "for banana in range 1 to 5\n    print banana\n"
    -   level: '12'
        sections:
        -   title: Students forget quotation marks
            example:
                error_text: "Students need more quotation marks now than in the previous levels. In this example quotation marks were forgotten in the list and in the if command.\n"
                error_code: "superheroes = Spiderman, Batman, Iron Man\nsuperhero = superheroes at random\nif superhero = Batman\n    print 'IM BATMAN!'\n"
                solution_text: "Это правильный код:\n"
                solution_code: "superheroes = 'Spiderman', 'Batman', 'Iron Man'\nsuperhero = superheroes at random\nif superhero is 'Batman'\n    print 'IM BATMAN!'\n"
        -   title: Students use quotation marks on numbers they want to use for calculations
            example:
                error_code: "score = '25'\nanswer is ask 'Do you want a point?'\nif answer is 'yes'\n    score = score + 1\n    print score\n"
                error_text: "You can use quotation marks on numbers, but only if you want the computer to think of them as text. This means you can't do calculations with the number.\nIn the example below, you can't do maths with the number 25, because it's in quotation marks.\n"
                solution_text: "Это правильный код:\n"
                solution_code: "score = 25\nanswer is ask 'Do you want a point?'\nif answer is 'yes'\n    score = score + 1\n    print score\n"
        -   title: Students use commas instead of periods in decimal numbers
            example:
                error_code: "print 2,5 + 2,5\n"
                error_text: "Decimal numbers can be used from this level on, but you can't use commas.\n"
                solution_text: "Это правильный код:\n"
                solution_code: "напечатать 2,5 + 2,5\n"
    -   sections:
        -   example:
                error_code: "game is ask 'Do you want to play a game?'\ntime is ask 'Do you have time to play?'\nif game is 'yes' or time is 'yes'\n    print 'Lets play!'\n"
                solution_text: "In this case, the person should answer yes on both questions, so you should use `and`.\n"
                solution_code: "game is ask 'Do you want to play a game?'\ntime is ask 'Do you have time to play?'\nif game is 'yes' and time is 'yes'\n    print 'Lets play!'\n"
                error_text: "Both commands might appear similar, but their functions are very different.\n"
            title: Students confuse `and` with `or`
        level: '13'
    -   level: '14'
        sections:
        -   title: Students confuse the < and > signs
            example:
                error_text: "Often, students are already familiar with these signs from maths class. But if your students don't know these signs yet, they might have a challenge with it.\n"
                error_code: "age = ask 'How old are you?'\nif age < 12\n    print 'You are older than I am!'\n"
                solution_text: "Это правильный код:\n"
                solution_code: "age = ask 'How old are you?'\nif age > 12\n    print 'You are older than I am!'\n"
        -   title: Students use the wrong signs for `!=` `<=` and `>=`
            example:
                error_text: "These signs are probably new for most students. Make sure to explain these signs to your students.\n"
                solution_text: "Это правильный код:\n"
                solution_code: "name = ask 'What is your name?'\nif name != 'Hedy'\n    print 'You are not Hedy'\n"
                error_code: "name = ask 'What is your name?'\nif name =< 'Hedy'\n    print 'You are not Hedy'\n"
        -   title: Students forget to use the == sign
            example:
                error_code: "name = ask 'What is your name?'\nif name = 'Hedy'\n    print 'You are cool!'\n"
                error_text: "In this level, students are still allowed to use = or is. But on other levels, or in python, they might get in trouble for that. So it is best to train them to use it.\n"
                solution_text: "Это правильный код:\n"
                solution_code: "name = ask 'What is your name?'\nif name == 'Hedy'\n    print 'You are cool!'\n"
    -   level: '15'
        sections:
        -   title: Students forget indentation in the while loop
            example:
                error_code: "answer = 0\nwhile answer != 25\nanswer = ask 'What is 5 times 5?'\nprint 'A correct answer has been given'\n"
                solution_text: "Это правильный код:\n"
                solution_code: "answer = 0\nwhile answer != 25\n    answer = ask 'What is 5 times 5?'\nprint 'A correct answer has been given'\n"
                error_text: "Indentation is often hard for students.\n"
    -   level: '16'
        sections:
        -   title: Студенты забывают о скобках
            example:
                error_text: "From this level on lists should be in brackets.\n"
                error_code: "icecream = 'starwberry', 'chocolate'\nprint 'I love ' icecream[random] ' icecream'\n"
                solution_text: "Это правильный код:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
        -   title: Students use the wrong brackets
            example:
                error_text: "From this level on lists should be in brackets.\n"
                error_code: "icecream = ('starwberry', 'chocolate'}\nprint 'I love ' icecream[random] ' icecream'\n"
                solution_text: "Это правильный код:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
        -   title: Students forget the quotation marks while focussing on the brackets
            example:
                error_text: "Students are sometimes very focussed on the new aspect of the syntax, that they forget the quotation marks.\n"
                error_code: "icecream = [starwberry, chocolate]\nprint 'I love ' icecream[random] ' icecream'\n"
                solution_text: "Это правильный код:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
        -   title: Students still use the old at random command
            example:
                error_text: "Students are sometimes very focussed on the new aspect of the syntax, that they forget the quotation marks.\n"
                solution_text: "Это правильный код:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
                error_code: "icecream = [starwberry, chocolate]\nprint 'I love ' icecream at random ' icecream'\n"
        -   title: Students forget the quotation marks while focussing on the brackets
            example:
                error_text: "Students are sometimes very focussed on the new aspect of the syntax, that they forget the quotation marks.\n"
                error_code: "icecream = [starwberry, chocolate]\nprint 'I love ' icecream[random] ' icecream'\n"
                solution_text: "Это правильный код:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
    -   sections:
        -   example:
                error_code: "color = ask 'What is your favorite color?'\nif color == 'green':\n    print 'green is nice'\nelif:\n    print 'I like green'\n"
                solution_text: "Это правильный код:\n"
                solution_code: "color = ask 'What is your favorite color?'\nif color == 'green':\n    print 'green is nice'\nelif color == yellow:\n    print 'yellow is alright'\nelse:\n    print 'I like green'\n"
                error_text: "The elif command needs a condition behind it. It cannot be used like else, without a condition.\n"
            title: Students use elif like else, so without a condition
        -   title: Студенты забывают о двоеточии
            example:
                error_text: "After each command that requires indentation, a colon should be used.\n"
                error_code: "answer = ask 'How are you doing?'\nif answer is 'great'\n    print 'Me too!'\nelif answer is 'bad'\n    print 'Let me cheer you up!'\nelse\n    print 'Im great!'\n"
                solution_text: "Это правильный код:\n"
                solution_code: "answer = ask 'How are you doing?'\nif answer is 'great':\n    print 'Me too!'\nelif answer is 'bad':\n    print 'Let me cheer you up!'\nelse:\n    print 'Im great!'\n"
        level: '17'
    -   level: '18'
        sections:
        -   title: Students forget to use the brackets
            example:
                error_text: "Students will forget to put brackets around their text.\n"
                error_code: "print 'my name is Hedy!'\n"
                solution_text: "Это правильный код:\n"
                solution_code: "print('Меня зовут Хеди!').\n"
        -   title: Students will still use the ask command
            example:
                error_text: "The ask command has been used since level 1. So it might be hard for the students to switch to input instead of ask.\n"
                error_code: "print('My name is Hedy!')\nname = ask('What is your name?')\nprint('So your name is ', name)\n"
                solution_text: "Это правильный код:\n"
                solution_code: "print('My name is Hedy!')\nname = input('What is your name?')\nprint('So your name is ', name)\n"
        -   title: Students might use the brackets as quotation marks
            example:
                error_text: "They have learned to keep the variables outside of the quotation marks, so they might do the same with the brackets. Which is not the correct way to use them.\n"
                error_code: "temperature = 25\nprint('It is ') temperature ('degrees outside')\n"
                solution_text: "Это правильный код:\n"
                solution_code: "temperature = 25\nprint('It is ', temperature, 'degrees outside')\n"
    title: Часто допускаемые ошибки
    key: common_mistakes
    intro: "На ошибках можно учиться, особенно в кодировании!\nОшибки неизбежны, и это отличная возможность учиться, но для учителей может быть сложной задачей найти правильное исправление ошибки!\nОсобенно когда коды становятся все длиннее и длиннее по мере прохождения уровней. Поэтому мы составили список часто встречающихся ошибок в каждом уровне и их решений.\n"
learn-more-sections:
-   title: Вам нравится Хэди?
    text: "Дайте нам знать!\n\n[Нажмите сюда, чтобы написать нам](mailto:hello@hedy.org \"About Hedy\")\n"
-   title: Нашли проблему?
    text: "[Сообщите нам через Github](https://github.com/Felienne/hedy/issues/new/choose)\n"
-   text: "Самый простой способ — помочь нам [с переводом Хэди](https://github.com/Felienne/hedy/blob/main/TRANSLATING.md)\n\nВот текущий статус перевода. Помогите нам закончить перевод на русский или другой язык, или добавьте новый язык, которого нет в списке.\n<a href=\"https://hosted.weblate.org/engage/hedy/\">\n<img src=\"https://hosted.weblate.org/widgets/hedy/-/multi-auto.svg\" alt=\"Translation status\" /></a>\n"
    title: Разговор на неделе кодов
-   title: Выступление с Недели кода
    text: "Хотите узнать больше про Хэди? Фелина подробно рассказывала про него (на английском языке) на Европейской Неделе Кода в 2020:\n\n<iframe width=\"560\" height=\"315\" class=\"mx-auto mt-4\" src=\"https://www.youtube.com/embed/R2U9MEowYag?wmode=opaque\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe>\n"
start-sections:
-   title: Что такое поэтапный язык программирования?
    text: "Учиться программировать бывает сложно. Это не значит, что программирование сложно само по себе. Однако, как и при изучении русского языка, нужно запоминать правила и практиковаться.\n\nСейчас вы без труда читаете этот текст. Но помните ли вы, как сложно было читать в раннем детстве? Каждая буква давалась с трудом.\nТак же и с программированием: поначалу бывает трудно, но со временем становится проще.\n\nХэди — *поэтапный* язык программирования. Это значит, что вам не придётся изучать все правила с самого начала.\nНа первых нескольких этапах правил не так много, так что вы спокойно привыкнете к самому процессу программирования.\nНа каждом новом этапе добавляется несколько новых правил, так что вы постепенно изучаете всё больше *команд* — инструкций для компьютера.\n"
-   title: Почему Хэди — поэтапный язык?
    text: "В этом видео Фелина, создатель Хэди, объясняет, зачем он сделан поэтапным. Видео пока что доступно только на английском языке.\n\n<iframe width=\"560\" height=\"315\" class=\"mx-auto mt-4\" src=\"https://www.youtube.com/embed/EdqT313rM40\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n"
-   title: Для кого сделан Хэди?
    text: "Хэди подойдёт всем детям, которые хотят научиться программировать! Важно, чтобы вы умели бегло читать. Большая часть Хэди пока что не переведена на русский язык. Если вы хорошо понимаете по-английски, вы можете [помочь перевести Хэди на русский](https://github.com/Felienne/hedy/blob/main/TRANSLATING.md).\n"
-   title: Понадобится ли мне опыт программирования?
    text: "Не обязательно. Однако, если вы уже программировали на Scratch или Python, некоторые команды будут вам знакомы.\n"
-   title: Бесплатен ли Хэди?
    text: "Да! Это так благодаря Лейденскому университету в Нидерландах. Более того, Хэди — язык с открытым исходным кодом. Это значит, что любой, кто умеет программировать, может помочь нам в его разработке.\nИсходный код Хэди доступен на [GitHub](https://github.com/Felienne/hedy).\nЕсли вам нравится Хэди и вы готовы помочь, мы будем очень благодарны [пожертвованиям](https://www.steunleiden.nl/project/hedy).\n"
-   title: Нужно ли мне что-то устанавливать?
    text: Нет. Хэди работает в браузере — в той же программе, в которой вы сейчас видите эту страницу. Вероятно, это Chrome, Edge или Firefox. Хэди также работает на телефонах и планшетах.
join-sections:
-   text: "# There are three ways in which you can support Hedy!\n"
-   title: Улучшение языка
    text: "The gradual and multi-lingual nature of Hedy create a lot of interesting technical challenges.\nFind those issues on [Github](https://github.com/Felienne/hedy/issues?q=is%3Aopen+is%3Aissue+label%3Alanguage).\n"
-   title: Перевод Hedy
    text: "Not a programmer? No problem! Another way to support Hedy is by [translating keywords, error messages, adventures are other content](https://github.com/Felienne/hedy/blob/main/TRANSLATING.md)\n\nThis is the current status, help us complete a language, or add a new one!\n<a href=\"https://hosted.weblate.org/engage/hedy/\">\n<img src=\"https://hosted.weblate.org/widgets/hedy/-/multi-auto.svg\" alt=\"Translation status\" /></a>\n"
-   title: Help teachers get started
    text: "Hedy is designed to support teachers in providing programming lessons in class. We have specific teacher features like the option to create a class, customize it and see how your students are doing.\nIf you like Hedy, you can reach out to schools that you know to help teachers get started! We can help you find schools or teachers via [Discord](https://discord.gg/8yY7dEme9r).\n"
