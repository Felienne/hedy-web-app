sections:
-   title: "Introduction"
    key: "intro"
    subsections:
    -   title: "Vad är Hedy?"
        text: |
            Hedy is a textual programming language, specifically developed for (pre-)teens (10 to 15 years old).
            In contrast to programming languages for kids, like Scratch, Hedy doesn't use code blocks but textual code.
            So with Hedy you'll learn how to type code like the real programmers do, but in small steps with playful exercises.
            This way Hedy can function as a stepping stone to real programming languages like Python in an accessible and mostly fun way!
            If you want to know more, you can watch this <a href="https://www.youtube.com/watch?v=EdqT313rM40&amp;t=2s" target="_blank">video</a> about the development of Hedy as a programming language.
    -   title: "Målgrupp"
        text: |
            Hedy is developed with middle school and junior high school students in mind (ages 10 - 15).
            It's important for the students to be able to read well. We recommend not to start with Hedy before the students have achieved at least a 3rd grade reading level.
            Students (and teachers!) don't need any programming experience before starting with Hedy.
    -   title: "Hur fungerar Hedy?"
        text: |
            Hedy is divided into levels, in which new commands are taught. Each level contains a variety of adventures to practice the newly learned commands.
            As a teacher, you get to decide which adventures are available for your students. Will they be making a restaurant, a calculator or a haunted house this level? Within each level, the adventures are arranged from easiest to hardest.
            So your students keep getting challenged. The adventures can be done by the students individually, or you can use them in a classical instruction.

            The adventures also include a code example, to make sure the less digitally informed teachers are able to use Hedy too!
            Of course Hedy also caters to the creative teachers that love to make their own lessonplans and adventures!

            After programming all the adventures of a certain level, your students can test their knowledge in the quiz.
            You can track your students' work and their progress on the class page.
    -   title: "Devices"
        text: |
            Hedy är webbaserat, vilket betyder att det fungerar på alla enheter med en webbläsare (Google Chrome, Firefox, Edge etc), så bärbara datorer, Chromebooks, surfplattor och till och med mobiler är lämpliga för att använda Hedy.
            Du behöver inte ladda ner något innan du börjar arbeta med Hedy, det är bara att gå till webbplatsen så är du redo!
    -   title: "The Hedy Community"
        text: |
            Alla Hedy-lärare, -programmerare och andra fans är välkomna till vår Discord-server <a href="https://discord.gg/8yY7dEme9r" target="_blank"></a> . Detta är det perfekta stället att prata om Hedy: vi har kanaler där du kan visa dina coola projekt och lektioner, kanaler för att rapportera fel och kanaler för att prata med andra lärare och med Hedy-teamet.
            <a href="https://www.youtube.com/watch?v=Lyz_Lnd-_aI" target="_blank">Här</a> hittar du en video om hur du går med i Discord-gemenskapen.
-   title: "Tutorial"
    key: "tutorial"
    subsections:
    -   title: "Tutorial"
        text: |
            Vill du följa handledningen (igen)? Klicka <a href="https://hedycode.com/tutorial" target="_blank">här</a>.
-   title: "Teaching preparations"
    key: "preparations"
    subsections:
    -   title: "Creating a Class"
        text: |
            Som lärare kan du skapa en klass för dina elever. I den här klassen kan du se elevernas konton och program och du kan följa deras framsteg.
            Den här <a href="https://www.youtube.com/watch?v=Y3RTIWftJQg" target="_blank">videon</a> visar hur du snabbt skapar en klass i Hedy.
    -   title: "Customize your Class"
        text: |
            Du kan också anpassa din klass och välja vilka äventyr som är tillgängliga för dem. På så sätt blir dina elever inte överväldigade av mängden äventyr och nivåer, och de kan fokusera specifikt på de äventyr som du vill att de ska öva med.
            Den här <a href="https://www.youtube.com/watch?v=qva9gXBoUwY&t=10s" target="_blank">videon</a> visar hur du anpassar din klass.
    -   title: "Student Accounts"
        text: |
            Det finns två sätt att låta elever gå med i din klass: du kan skapa konton åt dem eller så kan de skapa sina egna konton.

            **Du skapar konton för dina elever**
            Det enklaste sättet att lägga till elever i din klass är att skapa ett konto åt dem. Detta gör du genom att klicka på knappen "skapa studentkonton" och fylla i användarnamn och lösenord för dem.
            Eleverna kan logga in med det användarnamn och lösenord som du har valt. Sen kan de ändra sitt användarnamn eller lösenord om de vill och de kommer fortfarande att finnas kvar i din klass.
            Den här <a href="https://www.youtube.com/watch?v=eEQvik-Ce5M" target="_blank">videon</a> visar hur du lägger till elever i din klass på det snabbaste och enklaste sättet.

            **Studenterna skapar sina egna konton**
            Dina elever kan också gå in på Hedy-sajten och skapa sina egna konton, precis som du gjorde. För att gå med i din klass behöver de bara klicka på inbjudningslänken.
            Inbjudningslänken hittar du på klassens sida och kan skicka den till dina elever. Tänk på att dina elever måste vara inloggade på Hedy när de klickar på länken för att det ska fungera smidigt.
            Du kan också manuellt bjuda in en elev till din klass med knappen "Bjud in efter användarnamn".

    -   title: "Setting preferred language"
        text: |
            När eleverna skapar profiler ska de välja ett "önskat språk". Hedy kommer alltid att laddas på det valda språket.
            Det går alltid att ändra detta språk senare genom att navigera till "Mitt konto" och "Mina personliga inställningar" igen.
            Från och med december 2021 är det obligatoriskt att ställa in ett önskat språk för varje Hedy-konto.
            Om ditt konto eller dina elevers konton skapades tidigare än detta datum kommer du att få ett meddelande om att ett önskat språk saknas.
            Inga bekymmer! Navigera till "Min profil" och ange ett språk i dina profilinställningar.
            Tills du ställer in ett språk kommer Hedy att visas på ditt webbläsarspråk och, när detta språk inte stöds, på engelska.

            **För personer som inte talar engelska**
            Du kan inte bara ändra språket i äventyren till ditt eget språk. Du kan också välja vilket språk nyckelorden (till exempel "print" eller "ask") ska vara på.
            På så sätt kan du lära dina elever att koda med engelska nyckelord, men du kan också låta dem programmera på sitt eget språk. Nederländska elever kan till exempel använda kommandot "vraag" i stället för "ask".

            **Video**
            Den här <a href="https://www.youtube.com/watch?v=QrVZETj4oLM" target="_blank">videon</a> visar hur du ställer in ett önskat språk och ändrar nyckelorden till ditt önskade språk också.

    -   title: "Storing programs"
        text: |
            When you are logged in, you'll see My programs next to your profile icon.
            This option exists for your students too. In My programs you can find all the programs that you've worked on.
            By default, programs will be saved to 'My programs' when you run the code, and every 10 seconds, under their default name
            and their level (for example: Story 5). If you want to store a program under a new name, just type the new name in the name bar.
            Currently, only one program can be saved per level, per tab.

            You (and your students) can also share programs using the share button next to program names.
            These programs will be posted on our <a href="https://hedy.org/explore" target="_blank">explore page</a>, for everybody to see and use.
            If you want to unshare your program, go to 'My programs' and click 'Unshare'.

            The paper plane icon can be used to hand in programs to the teacher of a class. Programs that have been handed is will no longer be editable.

-   title: "Teaching with Hedy"
    key: "teaching"
    subsections:
    -   title: "Undervisa med Hedy"
        text: |
            Hedy har många olika nivåer som var och en lär ut en ny färdighet. Vi rekommenderar att du lär ut en nivå per lektion.
            Det ger dina elever tid att fullt ut förstå ett nytt kommando eller begrepp och öva på det, innan de går vidare till nästa nivå.
            Vi använder den här strukturen i våra lektioner: Introduktion, Nya begrepp och kommandon, låt oss börja arbeta, pussel och quiz.
    -   title: "Bilder"
        text: |
            **KOMMER SNART** Här hittar du snart bilder att använda i dina lektioner.
    -   title: "Inledning"
        text: |
            You can start your lessons by activating your students' prior knowledge: What do they already know about the subject, what did they learn in the previous lesson and which mistakes did they make that they've now learned from?
            This way all the previously learned commands and frequently made mistakes are fresh in your students' memories, when you start introducing the new lesson.
    -   title: "Introduktion av nya begrepp och kommandon"
        text: |
            De nya begreppen och kommandona kan vara mycket svåra att förstå för vissa elever.
            Därför är det viktigt att du visar dina elever hur de nya kommandona används på rätt sätt.
            Särskilt på de lägre nivåerna, där vissa elever inte har någon erfarenhet av programmering alls, kan det vara svårt för dem att förstå de nya abstrakta begreppen.
            Genom att visa många exempel blir ett abstrakt begrepp (t.ex. "Vad är en variabel?") mer igenkännligt och lättare att förstå ("Titta, variabeln husdjur har ändrats till hund").
    -   title: "Nu sätter vi igång"
        text: |
            Varje nivå innehåller olika äventyr som du hittar i de rosa flikarna. Den första rosa fliken förklarar de nya kommandona på den här nivån.
            Följande flikar är äventyr som eleverna kan prova på och göra egna varianter på.
            Äventyren är ordnade från lättast till svårast, så vi rekommenderar att du börjar till vänster och arbetar dig åt höger.
            Den sista fliken "vad kommer sen" ger en liten teaser av vad du kommer att lära dig på nästa nivå. Naturligtvis kan du välja de äventyr du vill att dina elever ska göra för varje nivå.
            De behöver inte alltid göra varje äventyr. Varje äventyr innehåller en exempelkod som eleverna kan prova med den gröna knappen.
            Exempelkoden kopieras till arbetsfältet, där eleverna kan prova koden och justera den efter eget huvud.
            Stimulera dina elever att förvandla exempelkoden till sina egna projekt genom att lägga till egna idéer och göra sin egen variant av äventyret.
    -   title: "Quiz och pussel"
        text: |
            Om du vill testa om eleverna har tagit till sig all ny information på nivån kan du låta dem göra ett quiz.
            Testet innehåller 10 flervalsfrågor om de nya begreppen och kommandon på den nivån.
            Alla nivåer har inte ett quiz än, eftersom vi fortfarande håller på att bygga upp dem.
            Vissa nivåer innehåller också pussel. Pussel visar eleverna ett par kodrader som eleverna måste sätta i rätt ordning.

            Den här <a href="https://www.youtube.com/watch?v=lNh5EdZVUwc" target="_blank">videon</a> visar quiz och pussel.
    -   title: "Utvärdering"
        text: |
            Avsluta lektionen med en kort utvärdering. Vad har eleverna lärt sig? Vilka svårigheter stötte de på?
            Hur lärde de sig av sina misstag? Och naturligtvis: Vad har de skapat?
            Eleverna är ofta mycket stolta över sina egna skapelser, så det är trevligt att spara lite tid och ge eleverna möjlighet att visa sina arbeten för sina klasskamrater.
-   title: "Extra Hedy-funktioner"
    key: "funktioner"
    subsections:
    -   title: "Lärarstatistik"
        text: |
            Den här <a href="https://www.youtube.com/watch?v=iwHVG4NRKI4&t=5s" target="_blank">videon</a> visar mer information om hur du använder lärarstatistiken i din klass.
    -   title: "Gör ditt eget äventyr"
        text: |
            Läraren kan också skapa egna äventyr. Den här <a href="https://www.youtube.com/watch?v=A0zbXpxX4q4" target="_blank">videon</a> visar hur du som lärare gör ditt eget äventyr och lägger till det i din klass eller dina klasser.
    -   title: "Utforska sidan"
        text: |
            På <a href="https://hedycode.com/explore" target="_blank">explore-sidan</a> kan du se andra Hedy-användares arbete. Du kan prova deras program och använda dem som inspiration för att skapa något häftigt själv.
            Du kan också själv lägga till ett program som du har gjort på utforskningssidan genom att klicka på "Save and share code" (spara och dela kod) i kodningsskärmen eller gå till My Programs (Mina program) och klicka på "Share" (dela).
            Vill du inte längre dela ditt arbete? Gå helt enkelt till "Mina program" och klicka på "Unshare".
            Om du vill ha mer information om utforskningssidan kan du titta på den här <a href="https://www.youtube.com/watch?v=26boFjqvS5Q" target="_blank">videon</a>.
    -   title: "Mina prestationer"
        text: |
            Om du klickar på ditt användarnamn uppe till höger på skärmen kan du gå till <a href="https://hedycode.com/my-achievements" target="_blank">Mina prestationer</a>. På den här sidan samlas dina prestationer. Dina elever har också en sådan sida.
            När du för musen över märket ser du hur du kan ta märket. Det finns också dolda märken, som du själv måste ta reda på hur du kan ta dem.
            Om du vill ha mer information om prestationerna kan du kolla in den här <a href="https://www.youtube.com/watch?v=-FjmKejukCs" target="_blank">videon</a>.
    -   title: "Highscore"
        text: |
            På <a href="www.https://hedycode.com/highscores" target="_blank">den här sidan</a> kan du se alla Hedy-användares high score.
            I den här <a href="https://www.youtube.com/watch?v=IqTiUkBVTo8" target="_blank">videon</a>kan du lära dig mer om poängsättningen.
    -   title: "Debugger"
        text: |
            Fungerar inte din (elevs) kod? Det måste finnas en bugg (ett kodningsfel) i den! Du kan använda felsökaren för att hitta felet.
            Debuggern är nyckelpigeknappen i din kodningsskärm. Om du trycker på den kan du köra din kod rad för rad för att hitta felet.
            Har du hittat felet? Tryck på den röda stoppknappen så stängs debuggern av.
    -   title: "Läs högt"
        text: |
            Vill du att utskriften från ditt program ska läsas upp högt? Då kan du använda högläsningsfunktionen som finns under knappen "Kör kod" på kodningsskärmen.
    -   title: "Programmerarläge"
        text: |
            Blir du distraherad av alla äventyr, eller vill du göra ett långt program? Kolla då in inställningen för "Programmerarläge" längst ned på kodningsskärmen.
            Med programmerarläget kan du och dina elever använda en större kodningsskärm.
    -   title: "Cheat sheets"
        text: |
            In every level there is a button with this emoji 🤔. You and your students can find the "cheat sheets" there. On this cheat sheet, you can find all the commands that are usable in this level in their correct form.
            So if you've forgotten how a command works, simply take a peek at the cheat sheet!
    -   title: "Other useful features"
        text: |
            Den här <a href="https://www.youtube.com/watch?v=c4MntPPgl1Y" target="_blank">videon</a> visar ännu fler funktioner i Hedy, som fusklappar och hur man växlar tangentbord.
-   title: "Vanliga misstag"
    key: "vanliga_misstag"
    intro: |
        Du kan lära dig av dina misstag, särskilt inom kodning!
        Att göra misstag är oundvikligt och en fantastisk möjlighet att lära sig, men för lärare kan det vara en utmaning att hitta rätt lösning på ett misstag!
        Särskilt när koden blir längre och längre i takt med att nivåerna utvecklas. Därför har vi gjort en lista med vanliga misstag på varje nivå och deras lösningar.
    levels:
    -   level: '1'
        sections:
        -   title: "Eleverna glömmer att skriva kommandon"
            example:
                error_text: |
                    De skriver t.ex. en mening utan att använda print.
                error_code: |
                    Hedy kan inte skriva ut detta
                solution_text: |
                    Lär eleverna att alltid börja en kodrad med ett kommando.
                solution_code: |
                    skriv Hedy kan skriva detta!
        -   title: "Eleverna använder versaler när de skriver kommandon"
            example:
                error_text: |
                    Kommandon fungerar inte om de är skrivna med versaler.
                error_code: |
                    Fråga varför är min kod fel?
                    Print för jag använder stora bokstäver.
                solution_text: |
                    Ta bort versalerna.
                solution_code: |
                    fråga Varför fungerar min kod nu?
                    skriv Eftersom jag tog bort versalerna!
        -   title: "Eleverna använder eko utan fråga"
            example:
                error_text: |
                    Echo görs för att upprepa ett svar efter ett fråga-kommando. Utan fråga kommer echo inte att göra någonting.
                error_code: |
                    echo Du heter
                solution_text: |
                    Lägg till ett ask-kommando för att få det att fungera.
                solution_code: |
                    fråga Vad heter du?
                    svara Du heter
        -   title: "Eleverna vill att deras eko-ord (variabel) ska vara inuti en mening"
            example:
                error_text: |
                    Och de har rätt! Det är därför de kommer att lära sig att använda riktiga variabler på nästa nivå.
                error_code: |
                    fråga Vilket programmeringsspråk är roligast?
                    eko är bäst!
                solution_text: |
                    På nivå 1 får vi hålla oss till detta:
                solution_code: |
                    fråga Vilket programmeringsspråk är roligast?
                    echo Det bästa är …
        -   title: "Sköldpadda: Eleverna låter sköldpaddan gå utanför skärmen"
            example:
                error_text: |
                    Ofta vill eleverna testa stora tal när de använder sköldpaddan, vilket gör att pilen hamnar utanför skärmen.
                error_code: |
                    framåt 300
                    sväng 90
                solution_text: |
                    I exemplet kan eleverna att tro att kommandot för att svänga inte fungerar. Även om det fungerar kan du inte se det hända utanför skärmen. Använd mindre tal för att förhindra att detta händer.
                solution_code: |
                    framåt 100
                    sväng 90
        -   title: "Sköldpadda: Eleverna använder kommandot bakåt, men det finns inte"
            example:
                error_text: |
                    Bakåt är inte ett kommando.
                error_code: |
                    bakåt 100
                solution_text: |
                    För att få sköldpaddan att gå baklänges används kommandot framåt och ett negativt tal. Till exempel
                solution_code: |
                    framåt -100
    -   level: '2'
        sections:
        -   title: "Eleverna har stavfel i sina kommandon"
            example:
                error_text: |
                    Hedy kan inte känna igen ett felstavat kommando.
                error_code: |
                    skrivv Gör inga stavfel!
                solution_text: |
                    Lär eleverna att läsa felmeddelandena. På så sätt kan de själva ta reda på vad som gick fel.
                solution_code: |
                    skriv Gör inga stavfel!
        -   title: "Studenter glömmer att kommandot fråga har ändrats"
            example:
                error_text: |
                    På den här nivån lär sig eleverna om variabler. Kommandot fråga behöver en variabel, men eleverna glömmer detta.
                error_code: |
                    fråga vad vill du äta?
                solution_text: |
                    På den här nivån måste du berätta för Hedy var du vill spara ditt svar, så att det kan användas senare. Detta kallas en variabel.
                solution_code: |
                    beställning är fråga Vad vill du äta?
        -   title: "Eleverna försöker använda kommandot eko "
            example:
                error_text: |
                    För vissa studenter kan det vara frustrerande att lära sig att kommandot eko inte fungerar längre. Det är därför det är så viktigt att förklara fördelarna med att använda variabler. Du kan till exempel använda flera olika variabler i koden och du kan placera dem var du vill i en mening!
                error_code: |
                    svaret är fråga Varför fungerar inte eko längre?!
                    echo
                solution_text: |
                    Använd en variabel istället.
                solution_code: |
                    svar är fråga Varför fungerar inte eko längre?!
                    skriv svar
        -   title: "Eleverna använder ett variabelnamn som ett vanligt ord"
            example:
                error_text: |
                    I exemplet nedan används ordet "namn" som variabel men också som vanlig text. Resultatet av koden blir "Hej mitt Hedy är Hedy".
                error_code: |
                    namn är Hedy
                    skriv Hej mitt namn är namn
                solution_text: |
                    Använd alltså inte ett ord som du vill använda i texten som variabelnamn. På nivå 4 löses detta med citattecken.
                solution_code: |
                    namn är Hedy
                    skriv Hej jag heter namn
        -   title: "Studenter använder långa variabelnamn som innehåller två ord."
            example:
                error_text: |
                    En variabelnamn ska vara ett ord. Du kan använda ett understreck för att koppla ihop två ord. Det räknas som ett ord.
                error_code: |
                    vald dörr är fråga Vilken dörr väljer du?
                solution_text: |
                    Lägg till ett understreck.
                solution_code: |
                    vald_dörr är fråga vilken dörr väljer du?
        -   title: "Eleverna kan råka använda två olika namn för samma variabel"
            example:
                error_text: |
                    I det här exemplet har eleven använt 'häst' och 'namn' för samma variabler.
                error_code: |
                    häst är fråga vad heter din häst?
                    print Din häst heter namn
                solution_text: |
                    Kolla alltid om variabeln genomgående har samma namn. Små skillnader kan vara svåra att upptäcka (till exempel pluralformer) men de kommer att påverka vad koden gör.
                solution_code: |
                    namn är fråga Vad heter din häst?
                    print Din häst heter namn
    -   level: '3'
        sections:
        -   title: "Eleverna försöker skriva ut hela listor"
            example:
                error_text: |
                    En hel lista kan inte skrivas ut. Du kan bara skriva ut ett element i taget från listan med {at} {random}.
                error_code: |
                    matvaror är äpplen, mjölk, choklad
                    skriv matvaror
                solution_text: |
                    För att skriva ut en lista med alla matvaror behöver du bara sätta dem efter ett `{print}`-kommando. Annars kan du använda listan för att skriva ut ett element med `{at}` `{random}`.
                solution_code: |
                    {print} äpplen, mjölk, choklad

                    eller

                    matvaror {är} äpplen, mjölk, choklad
                    {print} matvaror {at} {random}
        -   title: "Eleverna använder namnet på en variabel eller lista som vanlig text"
            example:
                error_text: |
                    Det här problemet hände förmodligen redan nivå 2. Nu kan det hända med listor också.
                error_code: |
                    namn {är} Hedy
                    {print} Hej mitt namn är namn

                    eller

                    djur {är} noshörning, bi, svan
                    {print} Mitt bästa djur är … djur {at} {random}
                solution_text: |
                    Använd inte namnen på variabler eller listor i vanlig text för att skriva ut. På nivå 4 löses detta problem med citattecken.
                solution_code: |
                    namn {är} Hedy
                    {print} Mitt namn är namn

                    eller

                    djur {är} noshörning, bi, svan
                    {print} Mitt bästa djur är … djur {at} {random}
        -   title: "Elever glömmer `{at}` i `{at}` `{random}`"
            example:
                error_text: |
                    Som i exemplet
                error_code: |
                    fåglar är sparv, mås, rödhake
                    skriv fåglar slump
                solution_text: |
                    Lös problemet genom att lägga till ordet på.
                solution_code: |
                    fåglar {är} sparv, mås, rödhake
                    {print} fåglar {at} {random}
        -   title: "Eleverna glömmer använda kommandot `{print}` när de också använder kommandot `{at}` `{random}`"
            example:
                error_text: |
                    Eller så sätter de ibland `{at}` `{random}` i början av raden.
                error_code: |
                    frukt {is} äpple, körsbär, banan
                    frukt {at} {random}
                solution_text: |
                    Betona för dina elever att du alltid behöver ett skriv-kommando för att skriva ut text.
                solution_code: |
                    frukt {is} äpple, körsbär, banan
                    {print} frukt {at} {random}
        -   title: "Eleverna glömmer att använda kommatecken i listor"
            example:
                error_text: |
                    I en lista ska elementen skiljas åt med kommatecken.
                error_code: |
                    pizzor {is} funghi tonno quattro stagioni
                    {print} pizzor {at} {random}
                solution_text: |
                    Efter varje element i listan ska det vara ett kommatecken
                solution_code: |
                    pizzor är funghi, tonno, quattro stagioni
                    skriv pizzor på slump
        -   title: "Eleverna försöker använda `{at}` `{random}` utan en lista"
            example:
                error_text: |
                    Till exempel
                error_code: |
                    klubbar {is} Manchester United
                    {print} klubbar {at} {random}
                solution_text: |
                    Hedy kan inte skriva ut något slumpmässigt, eftersom det inte finns någon lista att välja ur.
                solution_code: |
                    klubbar {is} Manchester United, Bayern München, FC Barcelona
                    {print} klubbar {at} {random}
        -   title: "Eleverna försöker använda lägg till/ta bort utan någon lista "
            example:
                error_text: |
                    I exemplet nedan är 'namn' inte en lista, utan en variabel. Du kan inte lägga till något till den.
                error_code: |
                    namn {is} Jake
                    ditt_namn {is} {ask} Vem är du?
                    {add} ditt_namn {to} namn
                    {print} namn {at} {random}
                solution_text: |
                    Det måste först finnas en lista, så du måste lägga till ett andra namn för att förvandla namn till en lista, till exempel Amy. Om du inte vill ha Amy på din lista, kan du använda kommandot ta bort.
                solution_code: |
                    namn {is} Jake, Amy
                    ditt_namn {is} {ask} Vem är du?
                    {add} ditt_namn {to} namn
                    {print} namn {at} {random}
        -   title: "Elever glömmer att använda till/bort i lägg till/ta bort"
            example:
                error_text: |
                    Utan till/bort kommer kommandona lägg till/ta bort inte att fungera.
                error_code: |
                    äventyr {is} berättelse, papegoja, tärningar
                    val {is} Vilket äventyr gillar du bäst?
                    {add} val
                    {remove} tärningar
                    {print} Jag älskar äventyr {at} {random}
                solution_text: |
                    Hedy måste veta vilken lista objektet ska läggas till i/tas bort från.
                solution_code: |
                    äventyr är berättelse, papegoja, tärningar
                    val är Vilket äventyr gillar du bäst?
                    lägg till val till äventyr
                    ta bort tärningar från äventyr
                    print Jag älskar äventyr på slump
    -   level: '4'
        sections:
        -   title: "Eleverna glömmer att det behövs citattecken på båda sidor om texten"
            example:
                error_text: |
                    På den här nivån behöver skriv och fråga ett par citattecken. Ett före och ett efter texten.
                error_code: |
                    skriv Hej
                    humör är fråga 'Hur är det?
                solution_text: |
                    Lägg till rätt citattecken.
                solution_code: |
                    skriv 'Hej'
                    humör är fråga 'Hur är det?'
        -   title: "Eleverna använder fel citattecken"
            example:
                error_text: |
                    Det är viktigt att börja lektionen med att kolla om eleverna vet hur man skriver ett citattecken på rätt sätt. Annars kanske de använder "dubbla citattecken" eller den sneda apostrofen `.
                error_code: |
                    skriv `Välkommen till restaurangen`
                    mat är fråga "Vad vill du beställa?"
                solution_text: |
                    Detta är rätt citattecken:
                solution_code: |
                    skriv 'Välkommen till restaurangen'
                    mat är fråga 'Vad vill du beställa?'
        -   title: "Eleverna använder en apostrof i sin text"
            example:
                error_text: |
                    Från den här nivån är apostrofer inte tillåtna. De används ofta på engelska när du skriver sammandragningar som you’re, don’t eller what’s.
                error_code: |
                    skriv 'Skriv inte rock'n roll'
                solution_text: |
                    Du kan välja att använda fel grammatik och bara utelämna apostrof. Eller så kan du använda ` som apostrof.
                solution_code: |
                    skriv 'Du kan skriva rock-n-roll'
                    skriv 'Och du kan skriva rock`n roll'
    -   level: '5'
        sections:
        -   title: "Eleverna glömmer att använda `{print}` i ett `{if}`-kommando"
            example:
                error_text: |
                    När eleverna har använt `{if}` eller `{else}` glömmer de att ha ett andra kommando som `{print}` eller `{ ask}`.
                error_code: |
                    om namn är Hedy 'Bra!'
                    annars 'Hedy är bättre!'
                solution_text: |
                    Lägg till kommandot skriv för att fixa det.
                solution_code: |
                    om namn är Hedy skriv 'Bra!'
                    annars skriv 'Hedy är bättre!'
        -   title: "Elever råkar använda två olika namn för samma variabel"
            example:
                error_text: |
                    I det här exemplet har eleven använt 'häst' och 'namn' för samma variabler.
                error_code: |
                    häst är fråga 'Vad heter din häst?'
                    om namn är Bonfire skriv 'coolt'
                    annars skriv 'mindre coolt!'
                solution_text: |
                    Kolla alltid om variabeln har samma namn genomgående. Små skillnader kan vara svåra att upptäcka (till exempel pluralformer) men de kommer att ändra kodens innebörd.
                solution_code: |
                    häst är fråga 'Vad heter din häst?'
                    om häst är Bonfire skriv 'coolt!'
                    annars skriv 'mindre coolt!'
        -   title: "Eleverna glömmer fortfarande citattecken före och efter text"
            example:
                error_text: |
                    Kod som använder kommandot `om` kan bli väldigt lång och eleverna tenderar att glömma att använda citattecken.
                error_code: |
                    om namn är Hedy skriv 'kul'
                    annars skriv 'meh!
                solution_text: |
                    Använd alltid två citattecken i kommandot skriv.
                solution_code: |
                    om namn är Hedy skriv 'kul'
                    annars skriv 'meh!'
        -   title: "Eleverna använder citattecken runt variabelnamn"
            example:
                error_text: |
                    På den här nivån är det inga citattecken kring variabelnamn.
                error_code: |
                    om 'namn' är 'Hedy' skriv 'kul'
                    annars skriv 'meh!'
                solution_text: |
                    Ta bort citattecknen för att få koden att fungera.
                solution_code: |
                    om namn är Hedy skriv 'kul'
                    annars skriv 'meh!'
        -   title: "Studenter använder långa variabelnamn med två ord"
            example:
                error_text: |
                    En variabel ska heta ett ord. Du kan använda ett understreck för att koppla ihop två ord. Det räknas som ett ord.
                error_code: |
                    vald dörr är fråga 'Vilken dörr väljer du?'
                solution_text: |
                    Lägg till ett understreck.
                solution_code: |
                    vald_dörr är fråga 'vilken dörr väljer du?'
        -   title: "Eleverna vill att flera svar ska vara rätt"
            example:
                error_text: |
                    Till exempel vill den här eleven att Hedy ska säga att alla hens vänner är roliga och att de andra klasskamrater inte är det.
                error_code: |
                    om namn är Jesse, David, Souf skriv 'Du är rolig' annars skriv 'Du är inte rolig'
                solution_text: |
                    Du kan använda kommandot `i` för att lösa det. Det förklaras på en högre nivå, men det fungerar redan på nivå 5.
                    En annan lösning är att använda flera om-kommandon och inget annars-kommando. Nackdelen är att det inte kommer att säga till de andra klasskamraterna att de inte är roliga.
                solution_code: |
                    vänner är Jesse, David, Souf
                    namn är fråga 'Vem är du?'
                    om namn i vänner skriv 'Du är rolig'
                    annars skriv 'Du är inte rolig'

                    eller

                    namn är fråga 'Vem är du?'
                    om namn är Jesse skriv 'Du är rolig'
                    om namn är David skriv 'Du är rolig'
                    om namn är Souf skriv 'Du är rolig'
        -   title: "Eleverna gör variabelnamnet till samma som värdet i `{if}`-satsen"
            example:
                error_text: |
                    I exemplet nedan är lösenordet 'lösenord'. Detta kommer att resultera i att det alltid är korrekt.
                error_code: |
                    lösenord är fråga 'Vad är lösenordet?'
                    om lösenord är lösenord skriv 'Åtkomst beviljad'
                    annars skriv 'Ingen åtkomst'
                solution_text: |
                    Välj ett annat variabelnamn.
                solution_code: |
                    hemligt_lösenord {is} {ask} 'Vad är lösenordet'
                    {if} hemligt_lösenord {is} lösenord {print} 'Åtkomst beviljad!'
                    {else} {print} 'Ingen åtkomst'
    -   level: '6'
        sections:
        -   title: "Eleverna kämpar med citattecken"
            example:
                error_text: |
                    Vissa elever kämpar med att lägga till citattecken eller inte. Om du lägger till citattecken blir utskriften bokstavligen '5+5'.
                error_code: |
                    skriv '5 + 5'
                solution_text: |
                    I den här koden kommer utdataskärmen att skriva ut '10'.
                solution_code: |
                    skriv 5 + 5
        -   title: "Eleverna kämpar med begreppet att göra uträkningar med en variabel"
            example:
                error_text: |
                    Vissa elever kommer att tycka att det är svårt att göra uträkningar med variabler. Försök att visa dem mycket enkla exempel, t.ex:
                error_code: |
                    ålder = fråga 'Hur gammal är du?'
                    skriv 'Nästa år fyller du ' ålder + 1
                solution_text: |
                    Eller ta det ett steg längre och gör så här.
                solution_code: |
                    pris = 0
                    skriv 'Välkommen till vår hamburgerrestaurang'
                    hamburgare = fråga 'Vill du ha en hamburgare?'
                    om hamburgare = ja pris = pris + 10
                    dryck = fråga 'Vill du ha något att dricka?'
                    om dryck = ja pris = pris + 4
                    skriv 'Det blir ' pris ' euro tack'
    -   level: '7'
        sections:
        -   title: "Eleverna glömmer något av orden i repetera-kommandot, eller så glömmer de skriv-kommandot"
            example:
                error_text: |
                    Se till att eleverna vet att de ska använda både det fullständiga repetera-kommandot och utskriftskommandot.
                error_code: |
                    upprepa 3 gånger 'For he`s a jolly good fellow'
                    upprepa 3 skriv 'Which nobody can deny!'
                solution_text: |
                    Detta är rätt kod:
                solution_code: |
                    upprepa 3 gånger skriv 'For he`s a jolly good fellow'
                    upprepa 3 gånger skriv 'Which nobody can deny!'
        -   title: "Eleverna försöker upprepa flera rader"
            example:
                error_text: |
                    På den här nivån kan du bara upprepa en kodrad åt gången. I den här koden ville eleven skriva ut tre olika drycker, men det fungerar inte. Den kommer att ställa frågan tre gånger och bara skriva ut det sista svaret.
                error_code: |
                    upprepa 3 gånger dryck = fråga 'Vad skulle du vilja dricka?'
                    skriv dryck
                solution_text: |
                    Du bör gå till nästa nivå för att kunna upprepa flera rader. Så på den här nivån måste du skriva ut allt separat.
                solution_code: |
                    dryck = fråga 'Vad skulle du vilja dricka?'
                    skriv dryck
                    dryck = fråga 'Vad skulle du vilja dricka?'
                    skriv dryck
                    dryck = fråga 'Vad skulle du vilja dricka?'
                    skriv dryck
        -   title: "Eleverna skriver program som tar för lång tid att köra"
            example:
                error_text: |
                    På den här nivån är det väldigt lätt att göra långa kod. Eleverna får inte göra program som tar för lång tid att ladda (för att spara våra servrar).
                error_code: |
                    upprepa 100 gånger skriv 'Hur många gånger kan jag upprepa detta?'
                solution_text: |
                    Se till att koden inte är för lång
                solution_code: |
                    upprepa 20 gånger skriv 'Detta räcker'
    -   level: '8'
        sections:
        -   title: "Eleverna gör fel indrag"
            example:
                error_text: |
                    Indrag är ett nytt begrepp på den här nivån, som är svårt att använda för vissa elever. Se till att de tränar på enkel kod innan du gör ett helt program med det.
                error_code: |
                    upprepa 3 gånger
                    skriv 'hej'
                solution_text: |
                    Detta är rätt kod:
                solution_code: |
                    upprepa 3 gånger
                        skriv 'hej'
        -   title: "Elever upprepar bara en rad när de ville upprepa flera rader"
            example:
                error_text: |
                    I koden nedan ville studenten t.ex. ta emot tre personers dryckesbeställningar. Men istället frågade programmet tre gånger och men skrev bara ut en beställning.
                error_code: |
                    upprepa 3 gånger
                        dryck = fråga 'Vad skulle du vilja dricka?'
                    skriv dryck
                solution_text: |
                    I rätt kod börjar även den tredje raden med indrag. På så vis tillhör den raden upprepningsblocket och kommer att upprepas 3 gånger.
                    Att visa dina elever dessa skillnader kan hjälpa dem att förstå varför vi behöver indrag för att få våra program att fungera.
                solution_code: |
                    upprepa 3 gånger
                        dryck = fråga 'Vad skulle du vilja dricka?'
                        skriv dryck
        -   title: "Elever vill nästa `{if}`-satser eller ha `{if}`-satser i en loop"
            example:
                error_text: |
                    På den här nivån får eleverna ännu inte ha `{if}`-satser inuti andra `{if}`-satser eller inuti upprepade loopar.
                    På nästa nivå är detta tillåtet.
                error_code: |
                    födelsedag = fråga 'Är det din födelsedag?'
                    om födelsedag = ja
                        upprepa 3 gånger
                            skriv 'Hipp Hipp Hurra!'
                solution_text: |
                    Det här är rätt kod på den här nivån:
                solution_code: |
                    födelsedag = fråga 'Är det din födelsedag?'
                    om födelsedag = ja
                        skriv 'Hipp Hipp Hurra!'
                        skriv 'Hipp Hipp Hurra!'
                        skriv 'Hipp Hipp Hurra!'
        -   title: "Eleverna skriver program som tar för lång tid att köra"
            example:
                error_text: |
                    På den här nivån är det väldigt lätt att skriva mycket kod. Eleverna får inte göra program som tar för lång tid att ladda (för att spara våra servrar).
                error_code: |
                    upprepa 100 gånger
                        skriv 'Hur många gånger kan jag upprepa detta?'
                solution_text: |
                    Se till att koden inte är för lång
                solution_code: |
                    upprepa 20 gånger
                        skriv 'Detta räcker'
        -   title: "Elever använder kommandot `{if}` för att kolla om variabelvärdet är lika med variabelnamnet"
            example:
                error_text: |
                    Vi har sett det här misstaget hos några av våra elever. De skapar ett lösenord för sin dator, men de skapar lösenordet 'lösenord'.
                    På rad 2 uppmanas datorn att kolla om det variabeln lösenord är lika med variabeln lösenord, alltså sig själv. Det innebär att svaret alltid är ja.
                    Så med den här koden kommer svaret alltid att vara 'Du kan komma in' oavsett vad spelaren fyller i.
                error_code: |
                    lösenord är fråga 'Vad är lösenordet?'
                    om lösenord är lösenord
                        print 'Du kan komma in'
                    annars
                        print 'Du får inte komma in'
                solution_text: |
                    Du kan åtgärda det här misstaget genom att lägga till citattecken. Då vet datorn att det andra lösenordet i '{if} lösenord {is} 'lösenord' är en sträng (alltså normal text) och inte variabelnamnet.
                solution_code: |
                    lösenord är fråga 'Vad är lösenordet?'
                    om lösenord är 'lösenord'
                        print 'Du kan komma in'
                    annars
                        print 'Du får inte komma in'
    -   level: '9'
        sections:
        -   title: "Elever gör fel på indrag"
            example:
                error_text: |
                    Det svåraste med den här nivån är att ha rätt indrag. Elever älskar att kapsla `{if}`-satser, ibland även inuti andra kapslade `{if}`-satser. Att hålla reda på indragen kan bli ganska svårt.
                error_code: |
                    skriv 'Robin går på stan'
                    plats = fråga 'Går Robin in i en butik eller går hon hem?'
                    om plats är butik
                        skriv 'Hon går in i butiken.'
                        skriv 'Robin ser en intressant bok'
                        bok = fråga 'Köper Robin boken?'
                            om bok är ja
                    skriv 'Robin köper boken och går hem'
                    annars
                        skriv 'Robin lämnar butiken och går hem'
                    annars
                        skriv 'Robin går hem'
                solution_text: |
                    Detta är rätt kod. Försök att hålla reda på alla olika konstruktioner när du sätter `{if}`-satser inuti andra `{if}`-satser.
                solution_code: |
                    skriv 'Robin går på stan'
                    plats = fråga 'Går Robin in i en butik eller går hon hem?'
                    om plats är butik
                        skriv 'Hon går in i butiken.'
                        skriv 'Robin ser en intressant bok'
                        bok = fråga 'Köper Robin boken?'
                        om bok är ja
                            skriv 'Robin köper boken och går hem'
                        annars
                            skriv 'Robin lämnar butiken och går hem'
                    annars
                        skriv 'Robin går hem'

    -   level: '10'
        sections:
        -   title: "Eleverna använder inte för-kommandot rätt"
            example:
                error_text: |
                    Vi ser ofta att elever försöker skriva ut listan (i exemplet djur) istället för elementen i listan.
                error_code: |
                    djur är hund, katt, marulk
                    för djuret i djur
                      skriv 'Jag älskar ' djur
                solution_text: |
                    Ordet djur i den sista raden bör ändras till djuret.
                solution_code: |
                    djur är hund, katt, marulk
                    för djuret i djur
                      skriv 'Jag älskar ' djuret
        -   title: "Eleverna glömmer indragningen"
            example:
                error_text: |
                    Elever har en tendens att glömma att använda indrag efter ett för-kommando.
                error_code: |
                    djur är hund, katt, marulk
                    för djuret i djur
                    skriv 'Jag älskar ' djuret
                solution_text: |
                    Du behöver använda indrag efter kommandot för.
                solution_code: |
                    djur är hund, katt, marulk
                    för djuret i djur
                      skriv 'Jag älskar ' djuret
    -   level: '11'
        sections:
        -   title: "Eleverna glömmer att använda indrag"
            example:
                error_text: |
                    Se till att eleverna använder indrag.
                error_code: |
                    för j i intervallet 1 till 5
                    skriv j
                solution_text: |
                    Detta är rätt kod:
                solution_code: |
                    för j i intervallet 1 till 5
                        skriv j
        -   title: "Eleverna förstår inte j:ets betydelse"
            example:
                error_text: |
                    Vissa elever förstår inte att j är en variabel. Vi har valt j (eller i) eftersom det används i Python-programmering, men du kan lika gärna använda ett annat variabelnamn.
                    Till exempel den här koden:
                error_code: |
                    för j i intervallet 1 till 5
                    skriv j
                solution_text: |
                    Kan lika gärna ersättas med denna kod. Den fungerar på samma sätt.
                solution_code: |
                    för banan i intervallet 1 till 5
                        skriv banan
    -   level: '12'
        sections:
        -   title: "Eleverna glömmer citattecken"
            example:
                error_text: |
                    Eleverna behöver fler citattecken nu än på de tidigare nivåerna. I det här exemplet glömdes citattecken i listan och i kommandot `{if}`.
                error_code: |
                    superhjältar = Spiderman, Batman, Iron Man
                    superhjälte = superhjältar {at} {random}
                    {if} superhjälte = Batman
                        {print} 'JAG ÄR BATMAN!'

                solution_text: |
                    Detta är rätt kod:
                solution_code: |
                    superhjältar = 'Spiderman', 'Batman', 'Iron Man'
                    superhjälte = superhjältar {at} {random}
                    {if} superhjälte {is} 'Batman'
                        {print} 'JAG ÄR BATMAN!'
        -   title: "Eleverna använder citattecken runt tal som de vill använda för beräkningar"
            example:
                error_text: |
                    Du kan använda citattecken runt tal, men bara om du vill att datorn ska se dem som text. Det betyder att du inte kan göra beräkningar med talet.
                    I exemplet nedan kan du inte göra uträkningar med talet 25, eftersom det står inom citattecken.
                error_code: |
                    poäng = '25'
                    svar är fråga 'Vill du ha en poäng?'
                    om svar är 'ja'
                        poäng = poäng + 1
                        skriva poäng
                solution_text: |
                    Detta är rätt kod:
                solution_code: |
                    poäng = 25
                    svar är fråga 'Vill du ha en poäng?'
                    om svar är 'ja'
                        poäng = poäng + 1
                        skriv poäng
        -   title: "Eleverna använder kommatecken istället för punkt i decimaltal"
            example:
                error_text: |
                    Decimaltal kan användas från och med den här nivån, men du kan inte använda decimalkomma.
                error_code: |
                    skriv 2,5 + 2,5
                solution_text: |
                    Detta är rätt kod:
                solution_code: |
                    skriv 2.5 + 2.5
    -   level: '13'
        sections:
        -   title: "Elever förväxlar `och` med `eller`"
            example:
                error_text: |
                    De båda kommandona kan verka snarlika, men de fungerar helt olika.
                error_code: |
                    spel är fråga 'Vill du spela ett spel?'
                    tid är fråga 'Har du tid att spela?'
                    om spel är 'ja' eller tid är 'ja'
                        skriv 'Nu spelar vi!'
                solution_text: |
                    I det här fallet behöver personen svara ja på båda frågorna, så du ska använda `och`.
                solution_code: |
                    spel är fråga 'Vill du spela ett spel?'
                    tid är fråga 'Har du tid att spela?'
                    om spel är 'ja' och tid är 'ja'
                        skriv 'Nu spelar vi!'
    -   level: '14'
        sections:
        -   title: "Eleverna blandar ihop symbolerna < och >"
            example:
                error_text: |
                    Ofta är eleverna redan bekanta med de symbolerna från matten. Men om dina elever inte känner till tecknen än kan de få problem med det.
                error_code: |
                    ålder = fråga 'Hur gammal är du?'
                    om ålder < 12
                        skriv 'Du är äldre än jag!'
                solution_text: |
                    Detta är rätt kod:
                solution_code: |
                    ålder = fråga 'Hur gammal är du?'
                    om ålder > 12
                        skriv 'Du är äldre än jag!'
        -   title: "Eleverna använder fel symboler för `!=`, `<=` och `>=`"
            example:
                error_text: |
                    De här symbolerna är förmodligen nya för de flesta eleverna. Se till att förklara dem för dina elever.
                error_code: |
                    namn = fråga 'Vad heter du?'
                    om namn =< 'Hedy'
                        skriv 'Du är inte Hedy'
                solution_text: |
                    Detta är rätt kod:
                solution_code: |
                    namn = fråga 'Vad heter du?'
                    om namn != 'Hedy'
                        skriv 'Du är inte Hedy'
        -   title: "Eleverna glömmer att använda symbolen =="
            example:
                error_text: |
                    På den här nivån får eleverna fortfarande använda = eller är. Men på högre nivåer, eller i Python, kan de få problem. Därför är det bäst att träna dem i att använda symbolen ==.
                error_code: |
                    namn = fråga 'Vad heter du?'
                    om namn = 'Hedy'
                        skriv 'Du är cool!'
                solution_text: |
                    Detta är rätt kod:
                solution_code: |
                    namn = fråga 'Vad heter du?'
                    om namn == 'Hedy'
                        skriv 'Du är cool!'
    -   level: '15'
        sections:
        -   title: "Eleverna glömmer indrag i while-loopen"
            example:
                error_text: |
                    Indrag är ofta svårt för eleverna.
                error_code: |
                    svar = 0
                    medan svar != 25
                    svar = fråga 'Vad är 5 gånger 5?'
                    print 'Rätt svar har getts'
                solution_text: |
                    Detta är rätt kod:
                solution_code: |
                    svar = 0
                    medan svar != 25
                        svar = fråga 'Vad är 5 gånger 5?'
                    print 'Rätt svar har getts'
    -   level: '16'
        sections:
        -   title: "Eleverna glömmer klamrar"
            example:
                error_text: |
                    Från och med den här nivån ska listor anges inom klammer.
                error_code: |
                    glass = 'jordgubbs', 'choklad'
                    skriv 'Jag älskar ' glass[slump] 'glass'
                solution_text: |
                    Detta är rätt kod:
                solution_code: |
                    glass = ['jordgubbs', 'choklad']
                    skriv 'Jag älskar ' glass[slump] 'glass'
        -   title: "Eleverna använder fel sorts klammer"
            example:
                error_text: |
                    Från och med den här nivån ska listor ha hakparenteser (klammer).
                error_code: |
                    glass = ('jordgubbs', 'choklad'}
                    skriv 'Jag älskar ' glass[slump] 'glass'
                solution_text: |
                    Detta är rätt kod:
                solution_code: |
                    glass = ['jordgubbs', 'choklad']
                    skriv 'Jag älskar ' glass[slump] 'glass'
        -   title: "Eleverna glömmer citattecknen när de fokuserar på parenteserna"
            example:
                error_text: |
                    Studenter är ibland så fokuserade på den nya aspekten av syntaxen att de glömmer bort citattecknen.
                error_code: |
                    glass = [jordgubbs, choklad]
                    skriv 'Jag älskar ' glass[slump] 'glass'
                solution_text: |
                    Detta är rätt kod:
                solution_code: |
                    glass = ['jordgubbs', 'choklad']
                    skriv 'Jag älskar ' glass[slump] 'glass'
        -   title: "Eleverna använder fortfarande det gamla kommandot på slump"
            example:
                error_text: |
                    Studenter är ibland så fokuserade på den nya aspekten av syntaxen att de glömmer bort citattecknen.
                error_code: |
                    glass = [jordgubbs, choklad]
                    skriv 'Jag älskar ' glass på slump 'glass'
                solution_text: |
                    Detta är rätt kod:
                solution_code: |
                    glass = ['jordgubbs', 'choklad']
                    skriv 'Jag älskar ' glass[slump] 'glass'
        -   title: "Eleverna glömmer citattecken medan när fokuserar på parenteserna"
            example:
                error_text: |
                    Studenter är ibland så fokuserade på den nya aspekten av syntaxen att de glömmer bort citattecknen.
                error_code: |
                    glass = [jordgubbs, choklad]
                    skriv 'Jag älskar ' glass[slump] 'glass'
                solution_text: |
                    Detta är rätt kod:
                solution_code: |
                    glass = ['jordgubbs', 'choklad']
                    skriv 'Jag älskar ' glass[slump] 'glass'
    -   level: '17'
        sections:
        -   title: "Eleverna använder `{elif}` som `{else}`, alltså utan ett villkor"
            example:
                error_text: |
                    Kommandot `{elif}` behöver ett villkor efter. Det kan inte användas som `{else}`, alltså utan ett villkor.
                error_code: |
                    färg = fråga 'Vilken är din favoritfärg?'
                    {if} färg == 'grön':
                        {print} 'grönt är trevligt'
                    {elif}:
                        {print} 'Jag gillar grönt'
                solution_text: |
                    Detta är rätt kod:
                solution_code: |
                    färg = {ask} 'Vilken är din favoritfärg?'
                    {if} färg == 'grön':
                        {print} 'grönt är trevligt'
                    {elif} färg == gul:
                        {print} 'gult är okej'
                    {annars}:
                        {print} 'Jag gillar grönt'
        -   title: "Eleverna glömmer kolonet"
            example:
                error_text: |
                    Efter ett kommando som behöver indrag ska det vara ett kolon.
                error_code: |
                    svar = fråga 'Hur mår du?'
                    {if} svar {is} 'bra'
                        {print} 'Jag också!'
                    {elif} svar {är} 'dåligt'
                        {print} 'Jag kan pigga upp dig!'
                    {annars}
                        {print} 'Jag är jättebra!'
                solution_text: |
                    Detta är rätt kod:
                solution_code: |
                    svar = fråga 'Hur mår du?'
                    om svar är 'bra':
                        skriv 'Jag också!'
                    annars om svar är 'dåligt':
                        skriv 'Jag kan muntra upp dig!'
                    annars:
                        skriv 'Jag är jättebra!'
    -   level: '18'
        sections:
        -   title: "Eleverna glömmer hakparenteser"
            example:
                error_text: |
                    Eleverna glömmer att ha parenteser runt text.
                error_code: |
                    skriv 'jag heter Hedy!'
                solution_text: |
                    Detta är rätt kod:
                solution_code: |
                    skriv('jag heter Hedy!')
        -   title: "Eleverna fortsätter använda fråga-kommandot"
            example:
                error_text: |
                    Ask-kommandot har använts från nivå 1. Så det kan vara svårt för eleverna att byta till kommandot inmatning istället för kommandot fråga.
                error_code: |
                    skriv('Jag heter Hedy!')
                    namn = fråga('Vad heter du?')
                    skriv('Så du heter ', namn)
                solution_text: |
                    Detta är rätt kod:
                solution_code: |
                    skriv('Jag heter Hedy!')
                    namn = inmatning('Vad heter du?')
                    skriv('Så du heter ', namn)
        -   title: "Eleverna råkar använda parenteser som citattecken"
            example:
                error_text: |
                    De har lärt sig att ha variablerna utanför citattecknen, så de kanske gör samma sak med parenteserna, vilket inte är rätt sätt att använda dem.
                error_code: |
                    temperatur = 25
                    skriv('Det är ') temperatur (' grader ute')
                solution_text: |
                    Detta är rätt kod:
                solution_code: |
                    temperatur = 25
                    skriv('Det är' , temperatur, ' grader ute')
learn-more-sections:
-   text: "Vi vill gärna höra från dig! Det bästa sättet att komma i kontakt med oss är att gå med i vår Discord-server <a href=\"https://discord.gg/8yY7dEme9r\" target=\"_blank\"></a> .\n\nDu kan också [skicka ett mejl till oss] (mailto:hello@hedy.org \"Om Hedy\").\n"
    title: Gå med i Hedy-gemenskapen
-   title: En djupdykning!
    text: "Vill du veta mer om Hedys filosofi och design? Kolla in det här föredraget som Felienne höll på StrangeLoop-konferensen 2022:\n\n<iframe width=\"560\" height=\"315\" class=\"mx-auto mt-4\" src=\"https://www.youtube.com/embed/fmF7HpU_-9k?wmode=opaque\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe>\n"
-   title: Hedy i nyheterna
    text: "En del webbplatser och tidningar har skrivit om Hedy sedan vi släpptes i början av 2020. Vi har en lista här:\n* [Tech Optimism - A Solution to the IT Shortage (Dutch), August 2022](https://pom.show/2022/08/12/een-oplossing-voor-het-it-tekort/)\n* [Codeweek Podcast, July 2022](https://codeweek.eu/podcast/26)\n* [Heise.de (German), Januari 2022](https://www.heise.de/news/Hedy-die-mitwachsende-Programmiersprache-6336264.html)\n* [Strumenta, November 2021](https://tomassetti.me/teaching-programming-with-hedy/)\n* [Vives (Dutch), CodeWeek Special October 2021](images/Vives-174-Codeweek.pdf)\n* [CodeWeek.eu - Haunted House Challenge, September 2021](https://codeweek.eu/2021/challenges/haunted-house)\n* [Opensource.com, April 2021](https://opensource.com/article/21/4/hedy-teach-code)\n* [IO Magazine, April 2021](https://ict-research.nl/wordpress/wp-content/uploads/2021/04/IO-magazine-NR1-2021_web.pdf)\n* [Ingeniería De Software (Spanish), February 2021](https://ingenieriadesoftware.es/hedy-mejor-lenguaje-ensenar-programacion-ninos/)\n* [Hello World Magazine, February 2021](images/Hello_World_15_Hedy.pdf)\n* [Discoro, January 2021](https://discoro.wordpress.com/2021/01/09/hedy-gradually-learning-a-programming-language/)\n* [Felienne wins the Dutch award for ICT research for Hedy, January 2021](https://www.nwo.nl/en/news/felienne-hermans-receives-dutch-prize-ict-research-2021)\n* [SlashDot, August 2020](https://news.slashdot.org/story/20/08/17/024248/scientist-proposes-a-new-programming-language-for-teaching-coding-and-python)\n* [GenBeta (Spanish), August 2020](https://www.genbeta.com/desarrollo/nuevo-lenguaje-para-ensenar-programacion-a-ninos-como-se-ensena-a-leer-escribir-forma-gradual-niveles)\n* [Developpez (French), August 2020](https://programmation.developpez.com/actu/308095/Une-scientifique-propose-un-nouveau-langage-de-programmation-pour-enseigner-aux-enfants-le-codage-informatique-au-travers-d-une-approche-graduelle-implementee-en-Python-sur-13-paliers/)\n* [Vives (Dutch), October 2020](images/artikel_vives.pdf) \"Met Hedy stap voor stap leren programmeren\"\n* [Leiden University, April 2020](https://www.universiteitleiden.nl/en/news/2020/03/looking-to-distract-the-kids-while-you-work-from-home-get-them-programming)\n* [Mare (Dutch), April 2020](https://www.mareonline.nl/cultuur/computercode-voor-de-kids/)\n* [AG Connect (Dutch), April 2020](https://www.agconnect.nl/artikel/stapsgewijs-python-leren-programmeren-met-nieuwe-taal-hedy)\n"
title: Dokumentation för Hedy
start-sections:
-   title: "Textual programming made easy!"
    text: |
        Many schools and teachers around the world want to teach their students programming. Initially this is often done with playful tools, ranging from the Beebot robot to
        Scratch Junior or Scratch. After using such tools, kids often want to move to more powerful, textual programming languages, like Python.

        Python however is hard, because it is only available in English, and requires learners to learn complex programming concepts and syntax at once.
        Hedy is the easy way to get started with textual programming languages! Hedy is free to use, open source, and unlike any other textual programming language in three ways.

        1. Hedy is multi-lingual, you can use Hedy in your own language
        2. Hedy is gradual, so you can learn one concept and its syntax a time
        3. Hedy is built for the classroom, allowing teachers to fully customize their student's experience
-   title: "Multi-lingual programming"
    text: |
        Nästan alla textbaserade programspråk har nyckelord på engelska, som `for` eller `repeat`, men Hedy kan användas på alla språk! Vi stöder för närvarande 39 olika språk, inklusive spanska, arabiska, förenklad kinesiska och hindi. Om ditt språk inte finns, kan du alltid starta en ny översättning.
-   title: "Step by step learning"
    text: |
        Learning a programming language can be overwhelming, since learners have to learn concepts (for example if-else or loops) and syntax (like quotation marks or round brackets) at the same time. In Hedy, concepts are first introduced with little syntax and then refined. A scientifically proven way to learn!
-   title: "Built for the classroom"
    text: |
        Hedy is suitable for kids aged 10 and up and designed for classroom use.
        Teachers can use our free, built-in lesson plans, but can also author their own lessons and load these into the Hedy user interface.
-   title: "Programming in context"
    text: |
        Hedy shows programming in the broadest way possible, and can be used in variety of exciting ways. Hedy allows for the creation of digital and interactive stories, colorful drawings that can be shown on the screen but also drawn with a pen plotter or embroidered on a shirt, and can be used to create games or apps with buttons and keyboard actions.
-   title: "Is Hedy free?"
    text: |
        Ja! Hedy är 'öppen källkod', vilket betyder att alla kan hjälpa oss att förbättra Hedy.
        Du kan hitta vår kod på <a href="https://github.com/hedyorg/hedy" target="_blank">Github</a>.
        Om du gillar Hedy och vill bidra, tar vi emot (och är mycket tacksamma för) <a href="https://github.com/sponsors/hedyorg" target="_blank">donationer</a>!

-   title: "Do I need to install anything?"
    text: |-
        No. Hedy works in the browser, which is the program you are using to look at this page. Probably Chrome or Edge or Firefox. Hedy also works on phones and tablets.
-   title: "Behöver jag programmeringserfarenhet för att undervisa med Hedy?"
    text: |-
        Nej, det behövs inte. Alla begrepp förklaras i bilderna och i gränssnittet för elever.
        Om du skapar ett kostnadsfritt lärarkonto får du även tillgång till lärarhandledningen med information om hur du undervisar
        och vanliga misstag.

join-sections:
-   text: "# Det finns tre sätt att stödja Hedy!\n"
    title: Att stödja Hedy
-   title: Förbättra språket
    text: "Hedys stegvisa och flerspråkiga karaktär skapar många intressanta tekniska utmaningar.\nDu hittar dessa frågor på <a href=\"https://github.com/hedyorg/hedy/issues?q=is%3Aopen+is%3Aissue+label%3Alanguage\" target=\"_blank\">Github</a>.\n"
-   title: Översätta Hedy
    text: "Är du ingen programmerare? Inga problem! Ett annat sätt att stödja Hedy är att <a href=\"https://github.com/hedyorg/hedy/blob/main/TRANSLATING.md\" target=\"_blank\">översätta nyckelord, felmeddelanden, äventyr och annat innehåll</a>.\nDetta är den nuvarande statusen; hjälp oss att göra klart ett språk eller lägga till ett nytt!\n<a href=\"https://hosted.weblate.org/engage/hedy/\">\n<img src=\"https://hosted.weblate.org/widgets/hedy/-/multi-auto.svg\" alt=\"Translation status\" /></a>\n"
-   title: Hjälpa lärare att komma igång
    text: "Hedy är utformat för att hjälpa lärare att ge programmeringslektioner i klassrummet. Vi har särskilda lärarfunktioner som möjligheten att skapa en klass, anpassa den och följa dina elever.\nOm du gillar Hedy kan du nå ut till skolor som du känner för att hjälpa lärare att komma igång! Vi kan hjälpa dig att hitta skolor eller lärare via <a href=\"https://discord.gg/8yY7dEme9r\" target=\"_blank\">Discord</a>.\n"
