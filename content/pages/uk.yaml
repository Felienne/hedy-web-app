title: Документація Hedy
sections:
-   title: Введення
    key: введення
    subsections:
    -   title: Що таке Hedy?
        text: "Hedy — це мова текстового програмування, спеціально розроблена для підлітків (від 10 до 15 років).\nНа відміну від мов програмування для дітей, таких як Scratch, Hedy використовує не блоки коду, а текстовий код.\nТож із Hedy ви навчитеся вводити код, як це роблять справжні програмісти, але маленькими кроками за допомогою ігрових вправ.\nТаким чином Hedy може функціонувати як сходинка до справжніх мов програмування, таких як Python, у доступний і переважно цікавий спосіб!\nТут ви можете переглянути [відео]: (https://www.youtube.com/watch?v=EdqT313rM40&amp;t=2s) про розвиток Hedy як мови програмування.\n"
    -   title: Цільова аудиторія
        text: "Hedy розроблено для учнів середньої та молодшої школи (віком від 10 до 15 років).\nВажливо, щоб учні вміли добре читати. Ми рекомендуємо не починати з Hedy, поки учні не досягнуть рівня читання принаймні в 3-му класі.\nСтудентам (і вчителям!) не потрібен досвід програмування, перш ніж почати працювати з Hedy.\n"
    -   title: Як працює Hedy?
        text: "Hedy розділений на рівні, на яких навчаються новим командам. Кожен рівень містить різноманітні пригоди, щоб відпрацювати щойно вивчені команди.\nЯк учитель, ви вирішуєте, які пригоди доступні для ваших учнів. Чи будуть вони робити ресторан, калькулятор чи будинок з привидами такого рівня? На кожному рівні пригоди розташовані від найлегшого до найважчого.\nТож ваші студенти постійно отримують виклики. Пригоди можуть виконувати учні самостійно, або ви можете використати їх у класичному навчанні.\n\nПригоди також включають приклад коду, щоб переконатися, що вчителі, які менш обізнані з цифровими засобами, також зможуть використовувати Hedy!\nЗвичайно, Hedy також обслуговує творчих вчителів, які люблять складати власні плани уроків і пригоди!\n\nПісля програмування всіх пригод певного рівня ваші учні можуть перевірити свої знання у вікторині.\nВи можете відслідковувати роботу своїх учнів та їх прогрес на сторінці класу.\n"
    -   title: Прилади
        text: "Hedy базується в Інтернеті, що означає, що він працює на будь-якому пристрої з браузером (Google Chrome, Firefox, Edge тощо), тому для використання Hedy підходять ноутбуки, хромбуки, планшети та навіть смартфони.\nНе потрібно нічого завантажувати, перш ніж працювати з Hedy, просто перейдіть на веб-сайт, і все готово!\n"
    -   title: Спільнота Hedy
        text: "Усі вчителі Hedy, програмісти та інші шанувальники можуть приєднатися до нашого [сервера Discord](https://discord.gg/8yY7dEme9r). Це ідеальне місце для спілкування про Hedy: у нас є канали, де ви можете показати свої круті проекти та уроки, канали для повідомлення про помилки та канали для спілкування з іншими викладачами та командою Hedy.\n"
-   subsections:
    -   title: Створення класу
        text: "Як вчитель, ви можете створити клас для своїх учнів. У цьому класі ви можете бачити облікові записи студентів та їхні програми, а також контролювати їхній прогрес.\nВи також можете налаштувати свій клас і вибрати, які пригоди доступні для них. Таким чином ваші учні не будуть перевантажені кількістю пригод і рівнів, і вони зможуть спеціально зосередитися на пригодах, які ви хочете, щоб вони потренувалися.\n"
    -   title: Облікові записи студентів
        text: "Є 2 способи дозволити студентам приєднатися до вашого класу: ви можете дозволити їм створювати власні облікові записи або ви можете створити для них облікові записи.\n\n**Студенти самостійно створюють облікові записи**\nВаші учні можуть перейти на веб-сайт Hedy і створити власні облікові записи, як це зробили ви. Щоб залучити їх до вашого класу, вони просто повинні натиснути посилання запрошення.\nВи можете знайти посилання для запрошення на сторінці класу та надіслати його своїм учням. Майте на увазі, що ваші студенти мають увійти в систему Hedy, коли вони натискають посилання, тому робота буде безперебійною.\n\n**Ви створюєте облікові записи для своїх учнів**\nІноді простіше самостійно створити цілу купу облікових записів для своїх учнів. Це можна зробити, натиснувши кнопку «створити облікові записи студентів» і ввівши імена користувачів і паролі для них.\nСтуденти можуть увійти за допомогою імені користувача та пароля, які ви вибрали. Після цього вони можуть змінити своє ім’я користувача чи пароль, якщо захочуть, і залишаться у вашому класі.\n"
    -   title: Налаштування бажаної мови
        text: "Коли учні створюють профіль, вони повинні вибрати «бажану мову». Hedy завжди завантажуватиметься цією вибраною мовою.\nЗмінити цю мову можна будь-коли пізніше, знову перейшовши до «Мого облікового запису» та «Мої особисті налаштування».\nЗ грудня 2021 року встановлення бажаної мови є обов’язковим для кожного облікового запису Hedy.\nЯкщо ваш обліковий запис або облікові записи ваших студентів буде створено раніше цієї дати, ви отримаєте повідомлення про те, що бажана мова відсутня.\nНе переживай! Перейдіть до «Мого профілю» та встановіть мову в налаштуваннях профілю.\nДоки ви не виберете мову, Hedy відображатиметься мовою вашого браузера, а якщо ця мова не підтримується, англійською.\n\n**Для тих, хто не володіє англійською мовою**\nВи не тільки можете змінити мову пригод на свою мову. Ви також можете вибрати мову ключових слів (наприклад, «друкувати» або «запитати»).\nТаким чином ви можете навчити своїх учнів кодувати за допомогою англійських ключових слів, але ви також можете дозволити їм програмувати своєю мовою. Наприклад, голландські студенти можуть використовувати команду «vraag» замість «ask».\n"
    -   title: Зберігання програм
        text: "Оскільки ви вже ввійшли в систему, ви побачите синій банер в розділах Мій профіль та Мої програми.\nЦі вкладки також існують для ваших учнів. У розділі Мої програми ви можете знайти всі коди, які ви зберегли.\n\nВи можете легко зберегти свої проекти, вказавши назву проекту на білій панелі та натиснувши зелену кнопку Зберегти код.\nВи (і ваші студенти) також можете ділитися програмами. Ці програми будуть опубліковані на нашій сторінці огляду, щоб усі бачили та використовували.\nЯкщо ви хочете скасувати спільний доступ до своєї програми, перейдіть до «Мої програми» та натисніть «Скасувати спільний доступ».\n"
    title: Приготування
    key: приготування
-   title: Навчання з Хеди
    key: teaching
    subsections:
    -   title: Навчання з Хеди
        text: "Hedy містить багато різних рівнів, кожен з яких навчає окремим новим навичкам. Ми рекомендуємо викладати один рівень за урок.\nЦе дає вашим учням час, щоб повністю зрозуміти нову команду чи концепцію та потренуватися з ними, перш ніж переходити до наступного рівня.\nМи використовуємо цю структуру на наших уроках:\n"
    -   title: Вступ
        text: "Ви можете розпочинати свої уроки, активізуючи попередні знання своїх учнів: що вони вже знають про предмет, чого навчилися на попередньому уроці та яких помилок вони припустилися, на яких тепер навчилися?\nТаким чином усі вивчені раніше команди та помилки, які часто допускаються, залишаються свіжими в пам’яті ваших учнів, коли ви розпочинаєте новий урок.\n"
    -   title: Введення нових понять і команд
        text: "Деяким студентам може бути дуже важко повністю зрозуміти нові концепції та команди.\nОсь чому важливо змоделювати належне використання нових команд для ваших учнів.\nОсобливо на нижчих рівнях, де деякі студенти взагалі не мають досвіду програмування, їм може бути важко зрозуміти нові абстрактні поняття.\nПоказ великої кількості прикладів робить абстрактне поняття (наприклад: «Що таке змінна?») більш впізнаваним і легшим для розуміння («Подивіться, змінна pet змінилася на dog»).\n"
    -   title: Приступаємо до роботи
        text: "Кожен рівень містить різні пригоди, які можна знайти на рожевих вкладках. Перша рожева вкладка пояснює нові команди на цьому рівні.\nНаступні вкладки — це пригоди, які учні можуть спробувати та створити власні.\nПригоди розташовані від найпростіших до найскладніших, тому ми рекомендуємо починати зліва, а ваш шлях - праворуч.\nОстання вкладка «що далі» дає невелику підказку про те, що ви дізнаєтесь на наступному рівні. Звичайно, ви можете вибрати пригоди, які ви хочете, щоб ваші учні зробили для кожного рівня.\nЇм не завжди потрібно робити всі пригоди. Кожна пригода містить приклад коду, який учні можуть спробувати за допомогою зеленої кнопки.\nПриклад коду копіюється в робоче поле, де студенти можуть випробувати код і налаштувати його, щоб зробити його власним.\nСтимулюйте своїх учнів перетворювати приклади кодів на власні проекти, додаючи власні ідеї та створюючи власну варіацію пригоди.\n"
    -   title: Тест
        text: "Щоб перевірити, чи ваші учні підібрали всю нову інформацію на рівні, ви можете дозволити їм виконати тест.\nТест містить 10 запитань з декількома варіантами відповідей про нові концепції та команди для цього рівня.\nЩе не на кожному рівні є вікторини, оскільки ми все ще створюємо вікторини.\n"
    -   title: Оцінка
        text: "Завершіть свій урок короткою оцінкою. Чого навчилися учні? З якими труднощами вони зіткнулися?\nЯк вони вчилися на своїх помилках? І звичайно: що вони створили?\nСтуденти часто дуже пишаються своїми творіннями, тому приємно заощадити трохи часу та дати студентам можливість показати свої роботи своїм однокласникам.\n"
-   levels:
    -   level: '1'
        sections:
        -   title: Учні забувають ввести команди
            example:
                error_text: "Наприклад, вони вводять речення без використання друку.\n"
                error_code: "Hedy не може це надрукувати\n"
                solution_text: "Навчіть своїх учнів завжди починати рядок коду з команди.\n"
                solution_code: "print Hedy може надрукувати це!\n"
        -   title: Під час введення команд учні використовують великі літери
            example:
                error_text: "Команди не працюватимуть, якщо вони написані великими літерами.\n"
                error_code: "Ask Чому мій код не працює?\nPrint Oскільки я використовую великі літери.\n"
                solution_text: "Змініть великі літери.\n"
                solution_code: "ask Чому мій код зараз працює?\nprint Тому що я видалив великі літери!\n"
        -   title: Учні використовують echo без ask
            example:
                error_text: "Команду echo створено для повторення відповіді після запиту. Без команди ask, команда echo нічого не зробить.\n"
                error_code: "echo Ваше ім'я\n"
                solution_text: "Додайте команду запиту, щоб вона працювала.\n"
                solution_code: "ask Як тебе звати?\necho Ваше ім'я\n"
        -   title: Учні хочуть, щоб їхнє слово (змінна) які вонни ввели після команди ask було в середині речення
            example:
                error_text: "І вони мають рацію! Ось чому вони навчаться використовувати правильні змінні на наступному рівні.\n"
                error_code: "ask Яка мова програмування найвеселіша?\necho найкраще!\n"
                solution_text: "На першому рівні ми маємо зберегти це:\n"
                solution_code: "ask Яка мова програмування найвеселіша?\necho Найкраща мова це...\n"
        -   title: 'Черепаха: Учні відпускають черепаху від екрану'
            example:
                error_text: "Часто учні люблять пробувати великі числа, використовуючи черепаху, яка змушує стрілку йти з екрана.\n"
                error_code: "forward 300\nturn 90\n"
                solution_text: "На прикладі: Учні схильні думати, що команда turn не працює. Незважаючи на те, що вона працює, бо ви не можете побачити, як це відбувається за екраном. Щоб цього не сталося, використовуйте менші числа.\n"
                solution_code: "forward 100\nturn 90\n"
        -   title: "Черепаха: Учні використовують команду backward, але її не існує"
            example:
                error_text: "Backward не є командою.\n"
                error_code: "backward 100\n"
                solution_text: "Щоб змусити черепаху рухатися назад, ви використовуєте команду вперед і від’ємне число. Наприклад:\n"
                solution_code: "forward -100\n"
    -   level: '2'
        sections:
        -   title: Учні роблять помилки у своїх командах
            example:
                error_text: "Hedy не може розпізнати команду з помилкою.\n"
                error_code: "prinnt Не робіть опечаток!\n"
                solution_text: "Навчіть учнів читати повідомлення про помилки. Таким чином вони можуть самі дізнатися, що пішло не так.\n"
                solution_code: "print Не робіть опечаток!\n"
        -   title: Учні забувають, що команда ask змінилася
            example:
                error_code: "ask що ти хочеш їсти?\n"
                error_text: "На цьому рівні учні дізнаються про змінні. Команда ask також вимагає змінної, але учні забувають про це.\n"
                solution_text: "На цьому рівні ви повинні сказати Hedy, де зберегти вашу відповідь, щоб її можна було використати пізніше. Це називається змінною.\n"
                solution_code: "order is ask Що б ви хотіли з'їсти?\n"
        -   example:
                error_text: "Деяким студентам може бути неприємно дізнатися, що команда echo більше не працює. Саме тому дуже важливо пояснити переваги використання змінних. Наприклад, ви можете використовувати кілька змінних у коді та розміщувати їх у будь-якому реченні, де забажаєте!\n"
                error_code: "answer is ask Чому команда echo більше не працює?!\necho\n"
                solution_text: "Замість цього використовуйте змінну.\n"
                solution_code: "answer is ask Чому команда echo більше не працює?!\nprint answer\n"
            title: 'Учні пробують використати команду echo '
        -   title: Учні використовують назву змінної чи як звичайне слово
            example:
                error_text: "У наведеному нижче прикладі слово \"name\" використовується як змінна, але також як звичайний текст. Результатом цього коду буде «Привіт, моє Hedy — є Hedy».\n"
                error_code: "name is Hedy\nprint Привіт, моє name - є name\n"
                solution_text: "Тому не використовуйте слово, яке ви хочете використовувати в тексті, як назву змінної. На четвертому рівні це вирішується за допомогою лапок.\n"
                solution_code: "name is Hedy\nprint Привіт, я name\n"
        -   title: Учні використовують довгі імена змінних, що містять два слова.
            example:
                error_text: "Змінна має бути названа одним словом. Ви можете використовувати підкреслення, щоб з’єднати два слова. Це вважається за одне слово.\n"
                error_code: "chosen door is ask Які двері ви обираєте?\n"
                solution_text: "Додайте підкреслення.\n"
                solution_code: "chosen_door is ask які двері ви обираєте?\n"
        -   title: Учні можуть використовувати дві різні назви для однієї змінної
            example:
                error_text: "У цьому прикладі студент використав 'horse' та 'name' для тих самих змінних.\n"
                error_code: "horse is ask Як звати твого коня?\nprint Твого коня звати name\n"
                solution_text: "Завжди перевіряйте, чи змінна має однакову назву в коді. Незначні відмінності може бути важко помітити (наприклад, множина), бо вони заважатимуть коду.\n"
                solution_code: "name is ask What is your horse called?\nprint Your horse is called name\n"
    -   level: '3'
        sections:
        -   title: Студенти намагаються друкувати цілі списки
            example:
                error_text: "Список не може бути надрукований. Ви можете надрукувати тільки один елемент зі списку, причому навмання.\n"
                error_code: "groceries is apples, milk, chocolate\nprint groceries\n"
                solution_text: "Щоб надрукувати список всіх продуктів, потрібно просто вказати їх після команди друку. В іншому випадку зі списку можна надрукувати один елемент навмання.\n"
                solution_code: "print apples, milk, chocolate\n\nor\n\ngroceries is apples, milk, chocolate\nprint groceries at random\n"
        -   title: Студенти використовують ім'я перемінної або списку як звичайний текст
            example:
                error_text: "Ця проблема, ймовірно, сталася і на рівні 2. Тепер це може статися і зі списками.\n"
                error_code: "name is Hedy\nprint Hi my name is name\n\nor\n\nanimal is rhino, bee, swan\nprint The best animal is... animal at random\n"
                solution_text: "Не використовуйте імена перемінних або списків у звичайному тексті для виведення на друк. На рівні 4 ця проблема вирішується за допомогою лапок.\n"
                solution_code: "name is Hedy\nprint Hi I'm name\n\nor\n\nanimals is rhino, bee, swan\nprint The best animal is... animals at random\n"
        -   title: Students forget at in at random
            example:
                error_text: "Як у прикладі\n"
                error_code: "birds is sparrow, seagull, robin\nprint birds random\n"
                solution_text: "Ця проблема вирішується додаванням слова at.\n"
                solution_code: "birds is sparrow, seagull, robin\nprint birds at random\n"
        -   title: Учні забувають використовувати команду print при використанні команди at random
            example:
                error_text: "Або іноді ставлять навмання на початок ряду.\n"
                error_code: "fruit is apple, cherry, banana\nfruit at random\n"
                solution_text: "Наголосіть учням, що для друку тексту завжди потрібен print.\n"
                solution_code: "fruit is apple, cherry, banana\nprint fruit at random\n"
        -   title: Студенти забувають ставити коми у списках
            example:
                error_text: "У списку елементи розділяються комою.\n"
                error_code: "pizzas is funghi tonno quattro stagioni\nprint pizzas at random\n"
                solution_text: "Після кожного елемента вашого списку повинна стояти кома\n"
                solution_code: "pizzas is funghi, tonno, quattro stagioni\nprint pizzas at random\n"
        -   example:
                error_text: "Наприклад\n"
                error_code: "clubs is Manchester United\nprint clubs at random\n"
                solution_text: "Hedy не може надрукувати що-небудь довільно, тому що немає списку, з якого можна було б вибирати.\n"
                solution_code: "clubs is Manchester United, Bayrn Munchen, FC Barcelona\nprint clubs at random\n"
            title: Студенти намагаються використовувати random без списку
        -   title: 'Студенти намагаються використовувати додавання/видалення без списку '
            example:
                error_text: "У наведеному нижче прикладі \"names\" - це не список, а перемінна. До неї не можна нічого додавати.\n"
                error_code: "names is Jake\nyour_name is ask Who are you?\nadd your_name to names\nprint names at random\n"
                solution_text: "Спочатку має бути список, тому вам потрібно додати друге ім'я, щоб перетворити імена на список, наприклад, Емі. Якщо ви не хочете, щоб ім'я Емі було у вашому списку, ви можете використати команду видалити, щоб видалити його після.\n"
                solution_code: "names is Jake, Amy\nyour_name is ask Who are you?\nadd your_name to names\nprint names at random\n"
        -   title: Студенти забувають використовувати до/з в додаванні/видаленні
            example:
                error_text: "Без до/з команди додавання/видалення працювати не будуть.\n"
                error_code: "adventures is story, parrot, dice\nchoice is Which adventure do you like best?\nadd choice\nremove dice\nprint I love adventures at random\n"
                solution_text: "Hedy має знати, до якого списку слід додати/вилучити елемент.\n"
                solution_code: "adventures is story, parrot, dice\nchoice is Which adventure do you like best?\nadd choice to adventures\nremove dice from adventures\nprint I love adventures at random\n"
    -   level: '4'
        sections:
        -   title: Студенти забувають використовувати лапки з обох боків тексту
            example:
                error_text: "На цьому рівні потрібно ставити лапки і задавати набір лапок. Один перед текстом і один після.\n"
                error_code: "print Hello\nmood is ask 'How are you?\n"
                solution_text: "Поставте правильні лапки.\n"
                solution_code: "print 'Hello'\nmood is ask 'How are you?'\n"
        -   example:
                solution_text: "Це правильні лапки:\n"
                error_text: "Важливо почати урок з перевірки того, чи знають студенти, як правильно набирати лапки. Інакше вони можуть використовувати \"подвійні лапки\" або \"перекошені лапки\".\n"
                error_code: "print `Welcome to the restaurant`\nfood is ask \"What would you like to order?\"\n"
                solution_code: "print 'Welcome to the restaurant'\nfood is ask 'What would you like to order?'\n"
            title: Студенти використовують неправильні лапки
        -   title: Студенти використовують апостроф у тексті
            example:
                error_text: "Починаючи з цього рівня апострофи не допускаються. Вони часто використовуються в англійській мові при наборі скорочень типу you're, don't або what's.\n"
                error_code: "print 'You're not allowed to type this'\n"
                solution_text: "Ви можете використовувати неправильну граматику і просто не ставити апостроф. Або ви можете використовувати ` як апостроф.\n"
                solution_code: "print 'Youre allowed to type this'\nprint 'And you`re able to do this'\n"
    -   level: '5'
        sections:
        -   example:
                error_text: "Після того, як студенти використають if, або якщо вони забудуть використати другу команду, наприклад, print або ask.\n"
                error_code: "if name is Hedy 'Great!'\nelse 'Hedy is better!'\n"
                solution_text: "Додайте команду print, щоб виправити це.\n"
                solution_code: "if name is Hedy print 'Great!'\nelse print 'Hedy is better!'\n"
            title: Студенти забувають використовувати print в команді if
        -   title: Студенти можуть використовувати дві різні назви для однієї й тієї ж перемінної
            example:
                error_text: "У цьому прикладі учень використав \"horse\" та \"name\" для одних і тих самих перемінних.\n"
                error_code: "horse is ask 'What is your horse called?'\nif name is Bonfire print 'cool'\nelse print 'less cool!'\n"
                solution_text: "Always check wheter the variable has the same name throughout the code. Slight differences can be hard to spot (for example plurals) but they will interfere with the code.\n"
                solution_code: "horse is ask 'What is your horse called'\nif horse is Bonfire print 'cool!'\nelse print 'less cool!'\n"
        -   title: Students still forget the quotes on both sides
            example:
                error_text: "Codes using the `if` commando can get very long and students tend to forget to use quotes.\n"
                error_code: "if name is Hedy print fun\nelse print 'meh!\n"
                solution_text: "Always use 2 quotes in a print command.\n"
                solution_code: "if name is Hedy print 'fun'\nelse print 'meh!'\n"
        -   title: Студенти ставлять лапки навколо переменних
            example:
                error_text: "На цьому рівні імена перемінних не беруться в лапки.\n"
                error_code: "if 'name' is 'Hedy' print 'fun'\nelse print 'meh!'\n"
                solution_text: "Приберіть лапки, щоб код працював.\n"
                solution_code: "if name is Hedy print 'fun'\nelse print 'meh!\n"
        -   title: Студенти використовують довгі імена перемінних, які складаються з двох слів
            example:
                error_text: "Перемінну слід називати одним словом. Ви можете використовувати символ підкреслення, щоб з'єднати два слова. Це вважається за одне слово.\n"
                error_code: "chosen door is ask 'Which door do you pick?'\n"
                solution_text: "Додайте підкреслення.\n"
                solution_code: "chosen_door is ask 'which door do you pick?'\n"
        -   title: Студенти хочуть, щоб кілька відповідей були правильними
            example:
                solution_text: "Для цього можна використовувати команду `in`. Вона пояснюється на більш високому рівні, але вона працює вже на рівні 5.\nІншим рішенням є використання декількох команд if і команди no else. Недоліком є те, що це не скаже іншим однокласникам, що вони не смішні.\n"
                error_text: "Наприклад, цей студент Hedy розповідав усім своїм друзям, що вони смішні, а іншим одногрупникам говорив би, що вони не такі.\n"
                error_code: "if name is Jesse, David, Souf print 'You are funny' else print 'You are not funny'\n"
                solution_code: "friends is Jesse, David, Souf\nname is ask 'Who are you?'\nif name in friends print 'You are funny'\nelse print 'You are not funny'\n\nor\n\nname is ask 'Who are you?'\nif naam is Jesse print 'You are funny'\nif naam is David print 'You are funny'\nif naam is Souf print 'You are funny'\n"
        -   title: Студенти роблять ім'я перемінної таким самим, як і значення в інструкції if
            example:
                error_text: "In the example below the password is 'password'. This will result in it always being correct.\n"
                error_code: "password is ask 'What is the password?'\nif password is password print 'Access granted'\nelse print 'Acces denied!'\n"
                solution_text: "Pick a different name for your variable.\n"
                solution_code: "secret_password is ask 'What is the password'\nif secret_password is password print 'Access granted!'\nelse print 'Access denied!'\n"
    -   sections:
        -   example:
                error_code: "print '5 + 5'\n"
                error_text: "Деякі студенти не знають, ставити лапки чи ні. Якщо поставити лапки, то на екрані виводиться буквально \"5+5\".\n"
                solution_text: "In this code the output screen will print '10'.\n"
                solution_code: "print 5 + 5\n"
            title: Студентам важко даються лапки
        -   title: Студентам важко дається концепція виконання математичних дій із перемінною
            example:
                error_text: "Some students will find it hard to do maths with variables. Try to show them very simple examples, like:\n"
                error_code: "age = ask 'How old are you?'\nprint 'Next year you will be ' age + 1\n"
                solution_text: "Or take it a step further like this.\n"
                solution_code: "price = 0\nprint 'Welcome to our burger restaurant'\nburger = ask 'Would you like a burger?'\nif burger = yes price = price + 10\ndrink = ask 'Would you like a drink?'\nif drink = yes price = price + 4\nprint 'That will be ' price ' euros please'\n"
        level: '6'
    -   sections:
        -   title: Students forget one of the word of the repeat command, or they forget the print command
            example:
                error_text: "Make sure that the students know to use both the full repeat command and the print command.\n"
                error_code: "repeat 3 times 'For he`s a jolly good fellow'\nrepeat 3 print 'Which nobody can deny!'\n"
                solution_text: "Це вірний код:\n"
                solution_code: "repeat 3 times print 'For he`s a jolly good fellow'\nrepeat 3 times print 'Which nobody can deny!'\n"
        -   title: Students try to repeat multiple lines
            example:
                error_text: "In this level you can only repeat one line of code multiple times. In this code the student wanted to print 3 different drinks, but it won't work. It will ask the question 3 times and only print the last answer.\n"
                error_code: "repeat 3 times drink = ask 'What would you like to drink?'\nprint drink\n"
                solution_text: "You should go to the next level to be able to repeat multiple lines. So on this level you'll have to print everything seperately.\n"
                solution_code: "drink = ask 'What would you like to drink?'\nprint drink\ndrink = ask 'What would you like to drink?'\nprint drink\ndrink = ask 'What would you like to drink?'\nprint drink\n"
        -   title: Students make programs that take too long to run
            example:
                error_text: "In this level it's very easy to make long codes. The students aren't allowed to make programs that take to long to load (to save our servers).\n"
                error_code: "repeat 100 times print 'How many times can I repeat this?'\n"
                solution_text: "Make sure the codes aren't too long\n"
                solution_code: "repeat 20 times print 'This is enough'\n"
        level: '7'
    -   level: '8'
        sections:
        -   title: Студенти неправильно використовують відступи
            example:
                error_text: "Indentation is a new concept in this level, that is hard to use for some students. Make sure they practise some simple codes before making a whole program with it.\n"
                error_code: "repeat 3 times\nprint 'hello'\n"
                solution_text: "Це правильний код:\n"
                solution_code: "repeat 3 times\n    print 'hello'\n"
        -   title: Students only repeat 1 line when they wanted to repeat multiple lines
            example:
                error_text: "For instance, in the code below the student wanted to take the drinks order of 3 people. But insted the program asked 3 times, but only wrote down one order.\n"
                error_code: "repeat 3 times\n    drink = ask 'What would you like to drink?'\nprint drink\n"
                solution_text: "In the correct code the third line starts with indentation too. This way it belongs to the repeat block and therefore it will be repeated 3 times.\nShowing your students these differences can help them understand why we need indentation to make our programs work.\n"
                solution_code: "repeat 3 times\n    drink = ask 'What would you like to drink?'\n    print drink\n"
        -   title: Students want to nest if statements, or put if statements inside a loop
            example:
                error_text: "In this level students aren't allowed yet to put if statements inside other if statements or inside repeat loops.\nIn the next level this is allowed.\n"
                error_code: "birthday = ask 'Is it you birthday?'\nif birthday = yes\n    repeat 3 times\n        print 'Hip Hip Hooray!'\n"
                solution_text: "This is the correct code for this level:\n"
                solution_code: "birthday = ask 'Is it you birthday?'\nif birthday = yes\n    print 'Hip Hip Hooray!'\n    print 'Hip Hip Hooray!'\n    print 'Hip Hip Hooray!'\n"
        -   title: Students make programs that take too long to run
            example:
                error_text: "In this level it's very easy to make long codes. The students aren't allowed to make programs that take to long to load (to save our servers).\n"
                error_code: "repeat 100 times\n    print 'How many times can I repeat this?'\n"
                solution_text: "Переконайтеся, що код не надто довгий\n"
                solution_code: "repeat 20 times\n    print 'This is enough'\n"
        -   title: Students use the if command to check if the variable value is the same as the variable name
            example:
                solution_text: "You can fix this mistake by adding quotation marks. This way the computer knows that the second password in `if password is 'password'` is a string value (so normal text) and not the variable name.\n"
                solution_code: "password is ask 'What is the password?'\nif password is 'password'\n    print 'You can come in'\nelse\n    print 'You are not allowed'\n"
                error_text: "We have seen this mistake by some of our students. They make a password for their computer, but they make the password 'password'.\nIn line 2 the computer is asked to check wheter the variable password is the same as the variable password, so itself. Which means the answer is alway yes.\nSo with this code the answer will always be 'You can come in' no matter what the player fills in.\n"
                error_code: "password is ask 'What is the password?'\nif password is password\n    print 'You can come in'\nelse\n    print 'You are not allowed'\n"
    -   level: '9'
        sections:
        -   title: Студенти роблять помилки з відступами
            example:
                error_text: "The hardest part about this level is getting the indentation right. Students love nesting if statements, sometimes even inside other nested if statements. Keeping track of indentation can get pretty tough.\n"
                error_code: "print 'Robin is walking downtown'\nlocation = ask 'Is Robin going into a shop, or does she go home?'\nif location is shop\n    print 'She enters the shop.'\n    print 'Robin sees an interesting looking book'\n    book = ask 'Does Robin buy the book?'\n        if book is yes\nprint 'Robin buys the book and goes home'\nelse\n    print 'Robin leaves the shop and goes home'\nelse\n    print 'Robin goes home'\n"
                solution_text: "This is the correct code. Try to keep track of all the different constructions when putting if statements inside other if statements.\n"
                solution_code: "print 'Robin is walking downtown'\nlocation = ask 'Is Robin going into a shop, or does she go home?'\nif location is shop\n    print 'She enters the shop.'\n    print 'Robin sees an interesting looking book'\n    book = ask 'Does Robin buy the book?'\n    if book is yes\n        print 'Robin buys the book and goes home'\n    else\n        print 'Robin leaves the shop and goes home'\nelse\n    print 'Robin goes home'\n"
    -   sections:
        -   example:
                solution_text: "The word animals in the last line should be changed into animal.\n"
                error_text: "We often see that students try to print the list (in the example animals) instead of the items of the list.\n"
                error_code: "animals is dog, cat, blobfish\nfor animal in animals\n  print 'I love ' animals\n"
                solution_code: "animals is dog, cat, blobfish\nfor animal in animals\n  print 'I love ' animal\n"
            title: Students so not use the for command correctly
        -   title: Students forget the indentation
            example:
                error_text: "Студенти, як правило, забувають використовувати відступ після команди for.\n"
                error_code: "animals is dog, cat, blobfish\nfor animal in animals\nprint 'I love ' animals\n"
                solution_text: "You should use indentation after a for command.\n"
                solution_code: "animals is dog, cat, blobfish\nfor animal in animals\n  print 'I love ' animal\n"
        level: '10'
    -   level: '11'
        sections:
        -   title: Студенти забувають використовувати відступ
            example:
                error_text: "Make sure that the students use indentation.\n"
                error_code: "for i in range 1 to 5\nprint i\n"
                solution_text: "Це правильний код:\n"
                solution_code: "for i in range 1 to 5\n    print i\n"
        -   title: Студенти не розуміють всіх нюансів
            example:
                error_text: "Some students don't understand that i is a variable. i is chosen, because it is used in Python programming, but you could just as easily use a different variable name.\nFor example, this code:\n"
                error_code: "for i in range 1 to 5\nprint i\n"
                solution_text: "З таким же успіхом можна було б замінити на цей код. Він працює так само.\n"
                solution_code: "for banana in range 1 to 5\n    print banana\n"
    -   sections:
        -   title: Студенти забувають про лапки
            example:
                error_text: "Students need more quotation marks now than in the previous levels. In this example quotation marks were forgotten in the list and in the if command.\n"
                error_code: "superheroes = Spiderman, Batman, Iron Man\nsuperhero = superheroes at random\nif superhero = Batman\n    print 'IM BATMAN!'\n"
                solution_text: "Це правильний код:\n"
                solution_code: "superheroes = 'Spiderman', 'Batman', 'Iron Man'\nsuperhero = superheroes at random\nif superhero is 'Batman'\n    print 'IM BATMAN!'\n"
        -   example:
                solution_text: "Це правильний код:\n"
                error_text: "You can use quotation marks on numbers, but only if you want the computer to think of them as text. This means you can't do calculations with the number.\nIn the example below, you can't do maths with the number 25, because it's in quotation marks.\n"
                error_code: "score = '25'\nanswer is ask 'Do you want a point?'\nif answer is 'yes'\n    score = score + 1\n    print score\n"
                solution_code: "score = 25\nanswer is ask 'Do you want a point?'\nif answer is 'yes'\n    score = score + 1\n    print score\n"
            title: Students use quotation marks on numbers they want to use for calculations
        -   example:
                error_text: "Decimal numbers can be used from this level on, but you can't use commas.\n"
                error_code: "print 2,5 + 2,5\n"
                solution_text: "Це правильний код:\n"
                solution_code: "print 2.5 + 2.5\n"
            title: У десяткових числах студенти ставлять коми замість крапок
        level: '12'
    -   level: '13'
        sections:
        -   title: Students confuse `and` with `or`
            example:
                error_text: "Both commands might appear similar, but their functions are very different.\n"
                solution_text: "При цьому особа повинна відповісти \"так\" на обидва питання, тому слід використовувати сполучник `and`.\n"
                error_code: "game is ask 'Do you want to play a game?'\ntime is ask 'Do you have time to play?'\nif game is 'yes' or time is 'yes'\n    print 'Lets play!'\n"
                solution_code: "game is ask 'Do you want to play a game?'\ntime is ask 'Do you have time to play?'\nif game is 'yes' and time is 'yes'\n    print 'Lets play!'\n"
    -   level: '14'
        sections:
        -   title: Students confuse the < and > signs
            example:
                error_text: "Often, students are already familiar with these signs from maths class. But if your students don't know these signs yet, they might have a challenge with it.\n"
                error_code: "age = ask 'How old are you?'\nif age < 12\n    print 'You are older than I am!'\n"
                solution_text: "Це правильний код:\n"
                solution_code: "age = ask 'How old are you?'\nif age > 12\n    print 'You are older than I am!'\n"
        -   title: Students use the wrong signs for `!=` `<=` and `>=`
            example:
                error_text: "These signs are probably new for most students. Make sure to explain these signs to your students.\n"
                error_code: "name = ask 'What is your name?'\nif name =< 'Hedy'\n    print 'You are not Hedy'\n"
                solution_text: "Це правильний код:\n"
                solution_code: "name = ask 'What is your name?'\nif name != 'Hedy'\n    print 'You are not Hedy'\n"
        -   example:
                solution_text: "Це правильний код:\n"
                solution_code: "name = ask 'What is your name?'\nif name == 'Hedy'\n    print 'You are cool!'\n"
                error_text: "In this level, students are still allowed to use = or is. But on other levels, or in python, they might get in trouble for that. So it is best to train them to use it.\n"
                error_code: "name = ask 'What is your name?'\nif name = 'Hedy'\n    print 'You are cool!'\n"
            title: Студенти забувають використовувати символ ==
    -   level: '15'
        sections:
        -   title: Students forget indentation in the while loop
            example:
                error_text: "Indentation is often hard for students.\n"
                error_code: "answer = 0\nwhile answer != 25\nanswer = ask 'What is 5 times 5?'\nprint 'A correct answer has been given'\n"
                solution_text: "Це правильний код:\n"
                solution_code: "answer = 0\nwhile answer != 25\n    answer = ask 'What is 5 times 5?'\nprint 'A correct answer has been given'\n"
    -   level: '16'
        sections:
        -   title: Студенти забувають про скобки
            example:
                error_text: "From this level on lists should be in brackets.\n"
                error_code: "icecream = 'starwberry', 'chocolate'\nprint 'I love ' icecream[random] ' icecream'\n"
                solution_text: "Це правильний код:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
        -   title: Студенти використовують неправильні дужки
            example:
                error_text: "From this level on lists should be in brackets.\n"
                error_code: "icecream = ('starwberry', 'chocolate'}\nprint 'I love ' icecream[random] ' icecream'\n"
                solution_text: "Це правильний код:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
        -   title: Students forget the quotation marks while focussing on the brackets
            example:
                error_text: "Students are sometimes very focussed on the new aspect of the syntax, that they forget the quotation marks.\n"
                error_code: "icecream = [starwberry, chocolate]\nprint 'I love ' icecream[random] ' icecream'\n"
                solution_text: "Це правильний код:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
        -   example:
                error_code: "icecream = [starwberry, chocolate]\nprint 'I love ' icecream at random ' icecream'\n"
                error_text: "Students are sometimes very focussed on the new aspect of the syntax, that they forget the quotation marks.\n"
                solution_text: "Це вірний код:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
            title: Students still use the old at random command
        -   title: Students forget the quotation marks while focussing on the brackets
            example:
                error_text: "Students are sometimes very focussed on the new aspect of the syntax, that they forget the quotation marks.\n"
                error_code: "icecream = [starwberry, chocolate]\nprint 'I love ' icecream[random] ' icecream'\n"
                solution_text: "Це вірний код:\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
    -   sections:
        -   example:
                solution_text: "Це вірний код:\n"
                error_text: "The elif command needs a condition behind it. It cannot be used like else, without a condition.\n"
                error_code: "color = ask 'What is your favorite color?'\nif color == 'green':\n    print 'green is nice'\nelif:\n    print 'I like green'\n"
                solution_code: "color = ask 'What is your favorite color?'\nif color == 'green':\n    print 'green is nice'\nelif color == yellow:\n    print 'yellow is alright'\nelse:\n    print 'I like green'\n"
            title: Students use elif like else, so without a condition
        -   title: Студенти забувають про двокрапку
            example:
                error_text: "After each command that requires indentation, a colon should be used.\n"
                error_code: "answer = ask 'How are you doing?'\nif answer is 'great'\n    print 'Me too!'\nelif answer is 'bad'\n    print 'Let me cheer you up!'\nelse\n    print 'Im great!'\n"
                solution_text: "Це вірний код:\n"
                solution_code: "answer = ask 'How are you doing?'\nif answer is 'great':\n    print 'Me too!'\nelif answer is 'bad':\n    print 'Let me cheer you up!'\nelse:\n    print 'Im great!'\n"
        level: '17'
    -   level: '18'
        sections:
        -   title: Students forget to use the brackets
            example:
                error_text: "Students will forget to put brackets around their text.\n"
                error_code: "print 'my name is Hedy!'\n"
                solution_text: "Це вірний код:\n"
                solution_code: "print('my name is Hedy!')\n"
        -   title: Students will still use the ask command
            example:
                error_text: "The ask command has been used since level 1. So it might be hard for the students to switch to input instead of ask.\n"
                solution_text: "Це вірний код:\n"
                solution_code: "print('My name is Hedy!')\nname = input('What is your name?')\nprint('So your name is ', name)\n"
                error_code: "print('My name is Hedy!')\nname = ask('What is your name?')\nprint('So your name is ', name)\n"
        -   title: Students might use the brackets as quotation marks
            example:
                error_text: "They have learned to keep the variables outside of the quotation marks, so they might do the same with the brackets. Which is not the correct way to use them.\n"
                error_code: "temperature = 25\nprint('It is ') temperature ('degrees outside')\n"
                solution_text: "Це вірний код:\n"
                solution_code: "temperature = 25\nprint('It is ', temperature, 'degrees outside')\n"
    title: Часті помилки
    key: типові_помилки
    intro: "Ви можете вчитися на своїх помилках, особливо в кодуванні!\nРоблення помилок неминуче, і це чудова можливість вчитися, але для вчителів може бути складним завданням знайти правильне виправлення помилки!\nОсобливо тому, що коди стають все довшими в міру просування рівнів. Ось чому ми склали список із частими помилками на кожному рівні та способами їх вирішення.\n"
learn-more-sections:
-   title: Вам подобається Hedy?
    text: "Ми будемо раді отримати від вас відгук!\n[Натисніть тут, щоб надіслати нам повідомлення](mailto:hello@hedy.org \"About Hedy\")\n"
-   text: "[Дайте нам знати на GitHub](https://github.com/Felienne/hedy/issues/new/choose)\n"
    title: Знайшли баг?
-   title: Розмова про тиждень кодування
    text: "Хочете дізнатися більше про Hedy? Перегляньте доповідь Фелієнни на Європейському тижні кодування 2020:\n\n<iframe width=\"560\" height=\"315\" class=\"mx-auto mt-4\" src=\"https://www.youtube.com/embed/R2U9MEowYag?wmode=opaque\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe>\n"
-   title: Hedy в новинах
    text: "Деякі веб-сайти та газети писали про Hedy з моменту нашого випуску на початку 2020 року. Ми ведемо список тут:\n\n* [Codeweek Podcast, July 2022](https://codeweek.eu/podcast/26)\n* [Heise.de (German), Januari 2022](https://www.heise.de/news/Hedy-die-mitwachsende-Programmiersprache-6336264.html)\n* [Strumenta, November 2021](https://tomassetti.me/teaching-programming-with-hedy/)\n* [Vives (Dutch), CodeWeek Special October 2021](images/Vives-174-Codeweek.pdf)\n* [CodeWeek.eu - Haunted House Challenge, September 2021](https://codeweek.eu/2021/challenges/haunted-house)\n* [Opensource.com, April 2021](https://opensource.com/article/21/4/hedy-teach-code)\n* [IO Magazine, April 2021](https://ict-research.nl/wordpress/wp-content/uploads/2021/04/IO-magazine-NR1-2021_web.pdf)\n* [Ingeniería De Software (Spanish), February 2021](https://ingenieriadesoftware.es/hedy-mejor-lenguaje-ensenar-programacion-ninos/)\n* [Hello World Magazine, February 2021](images/Hello_World_15_Hedy.pdf)\n* [Discoro, January 2021](https://discoro.wordpress.com/2021/01/09/hedy-gradually-learning-a-programming-language/)\n* [Felienne wins the Dutch award for ICT research for Hedy, January 2021](https://www.nwo.nl/en/news/felienne-hermans-receives-dutch-prize-ict-research-2021)\n* [SlashDot, August 2020](https://news.slashdot.org/story/20/08/17/024248/scientist-proposes-a-new-programming-language-for-teaching-coding-and-python)\n* [GenBeta (Spanish), August 2020](https://www.genbeta.com/desarrollo/nuevo-lenguaje-para-ensenar-programacion-a-ninos-como-se-ensena-a-leer-escribir-forma-gradual-niveles)\n* [Developpez (French), August 2020](https://programmation.developpez.com/actu/308095/Une-scientifique-propose-un-nouveau-langage-de-programmation-pour-enseigner-aux-enfants-le-codage-informatique-au-travers-d-une-approche-graduelle-implementee-en-Python-sur-13-paliers/)\n* [Vives (Dutch), October 2020](images/artikel_vives.pdf) \"Met Hedy stap voor stap leren programmeren\"\n* [Leiden University, April 2020](https://www.universiteitleiden.nl/en/news/2020/03/looking-to-distract-the-kids-while-you-work-from-home-get-them-programming)\n* [Mare (Dutch), April 2020](https://www.mareonline.nl/cultuur/computercode-voor-de-kids/)\n* [AG Connect (Dutch), April 2020](https://www.agconnect.nl/artikel/stapsgewijs-python-leren-programmeren-met-nieuwe-taal-hedy)\n"
start-sections:
-   title: Що таке поступова мова програмування?
    text: "Навчання програмуванню може бути важким. Не те, щоб саме програмування було важким! Але є багато правил, які потрібно запам'ятати, так само, як коли ви починали вивчати англійську мову.\nАналогічно, вам знадобиться багато практики, щоб навчитися програмуванню.\n\nВи з легкістю можете прочитати ці речення. Але пам'ятаєш, як ти вчився читати? Тоді на кожну літеру витрачався певний час!\nТак само і з програмуванням, спочатку може бути важко, але потім стане легше!\n\nПриємною особливістю Hedy є те, що навчання в ньому є *поступовим*. Це означає, що вам не потрібно вивчати всі правила одразу.\nПерші кілька рівнів мають не так багато правил, щоб ви могли комфортно звикнути до програмування.\nУ кожному рівні ми додаємо нові правила, збільшуючи кількість команд, які ви знаєте. Команди - це інструкції для комп'ютера.\n"
-   title: Чому Hedy поступовий язик?
    text: "У цьому відео Фелієнн, творець Hedy, пояснює, чому Hedy є поступовим язиком програмування.\n\n<iframe width=\"560\" height=\"315\" class=\"mx-auto mt-4\" src=\"https://www.youtube.com/embed/EdqT313rM40\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n"
-   title: Для кого Hedy?
    text: "Hedy призначений для всіх дітей, які хочуть вивчати програмування! Для цього потрібно вміти вільно читати англійською мовою. Українська мова в процесі. Ви можете допомогти з перекладом - [Допомогти](https://github.com/Felienne/hedy/blob/main/TRANSLATING.md).\n"
-   title: Чи потрібен досвід програмування?
    text: "Ні, не потрібен. Однак, якщо ви програмували на Scratch або Python, деякі команди будуть вам знайомі.\n"
-   title: Hedy безплатний?
    text: "Так! Лейденський університет дозволяє нам ділитися ним безкоштовно. Hedy також має \"відкритий вихідний код\", що означає, що кожен, хто вміє програмувати, може допомогти нам зробити Hedy кращим.\nЗнайти код можна на сайті [GitHub](https://github.com/Felienne/hedy).\nЯкщо вам подобається Hedy і ви хочете зробити свій внесок, ми приймаємо (і дуже вдячні за) [пожертви](https://www.steunleiden.nl/project/hedy)!\n"
-   title: Чи потрібно щось встановлювати?
    text: Ні. Hedy працює в браузері, тобто програма, яку ви використовуєте для перегляду цієї сторінки. Можливо, це Chrome, Edge або Firefox. Hedy також працює на вашому телефоні або планшеті.
join-sections:
-   text: "# Ви можете підтримати Hedy трьома способами!\n"
    title: Supporting Hedy
-   title: Вдосконалення мови
    text: "Поступовий та багатомовний характер Hedy створює багато цікавих технічних викликів.\nОзнайомитися з цими питаннями можна на [Github](https://github.com/Felienne/hedy/issues?q=is%3Aopen+is%3Aissue+label%3Alanguage).\n"
-   title: Переклад Hedy
    text: "Не програміст? Не проблема! Ще один спосіб підтримати Hedy - це [переклад ключових слів, повідомлень про помилки, пригоди - інший контент](https://github.com/Felienne/hedy/blob/main/TRANSLATING.md)\n\nЦе поточний статус, допоможіть нам доповнити мову, або додати нову!\n<a href=\"https://hosted.weblate.org/engage/hedy/\">\n<img src=\"https://hosted.weblate.org/widgets/hedy/-/multi-auto.svg\" alt=\"Translation status\" /></a>\n"
-   title: Допомогти вчителям розпочати роботу
    text: "Hedy розроблений для підтримки вчителів у проведенні уроків програмування в класі. У нас є спеціальні функції для вчителів, такі як можливість створити клас, налаштувати його та побачити, як працюють ваші учні.\nЯкщо вам подобається Hedy, ви можете звернутися до шкіл, які ви знаєте, щоб допомогти вчителям розпочати роботу! Ми можемо допомогти вам знайти школи або вчителів за допомогою [Discord](https://discord.gg/8yY7dEme9r).\n"
