---
  1:
    intro_text: "Bienvenue à Hedy! Au niveau 1, tu peux utiliser les commandes `print`,` ask` et `echo`. Appuyez sur le bouton bleu et le code sera tapé pour toi! Essayez le code toi-même avec le bouton vert «Exécuter le code» sous le champ de programmation de gauche."
    start_code: "print bonjour le monde!"
    commands:
      -
        name: "print"
        explanation: "Affiche quelque chose avec `print`."
        example: "Exemple: print Bonjour et bienvenue à Hedy!"
        demo_code: "print Bonjour et bienvenue à Hedy!"
      -
        name: "ask"
        explanation: "Demande quelque chose avec `ask`."
        example: "Exemple: ask Quelle est ta couleur préférée?"
        demo_code: "ask Quelle est ta couleur préférée?"
      -
        name: "echo"
        explanation: "Répète quelque chose avec `echo`."
        example: "Exemple: echo donc ta couleur préférée est..."
        demo_code: "ask Quelle est ta couleur préférée?\necho donc ta couleur préférée est..."
  2:
    intro_text: "`Print` fonctionne comme au Niveau 1, mais `ask` a été modifé et nécessite désormais un nom, que tu peux ensuite afficher.  `Echo` n’est plus utile. Tu peux désormais utiliser ces commandes:"
    start_code: "print bonjour le monde!"
    commands:
      -
        name: "is"
        explanation: "Donne un nom à un mot que tu peux utiliser dans le programme avec `is`"
        example: "Exemple: nom is Hedy."
        demo_code: "nom is Hedy\nprint bienvenue nom"
      -
        name: "ask"
        explanation: "Demande quelque chose avec `ask`. Attention! Tu dois donner à la réponse un nom avec `is`."
        example: "Exemple: couleur is ask Quelle est ta couleur préférée?"
        demo_code: "couleur is ask Quelle est ta couleur préférée?\nprint couleur est ton préféré !"
      -
        name: "choisi_au hasard"
        explanation: "Choisi un mot au hasard dans un groupe avec `at random`"
        example: "Exemple: animaux is chien, chat, kangourou"
        demo_code: "animaux is chien, chat, kangourou\nprint animaux at random"
  3:
    start_code: "print 'Bonjour le monde'"
    intro_text: " `ask` est toujours le même au niveau 3, mais `print` est différent maintenant. Tu dois placer entre guillemets le texte que tu souhaites imprimer."
    commands:
      -
        name: "print"
        explanation: "Afficher exactement ce qui est entre les guilllemets"
        example: "Exemple: print 'Bonjour et bienvenue à Hedy.'"
        demo_code: "print 'Bonjour et bienvenue à Hedy.'"
      -
        name: "is"
        explanation: "Donne un nom à un mot que tu peux utiliser dans le programme sans guillemets"
        example: "Exemple: nom is Hedy."
        demo_code: "nom is Hedy\nprint 'mon nom est ' nom"
      -
        name: "ask"
        explanation: "Demande quelque chose avec `ask`."
        example: "Exemple: couleur is ask Quelle est ta couleur préférée?"
        demo_code: "couleur is ask Quelle est ta couleur préférée?\nprint couleur ' est ta couleur préférée!'"
  4:
    start_code: "nom is ask quel est ton nom?\nif nom is Hedy print 'cool!' else print 'mouais'"
    intro_text: " `ask` et `print` fonctionnent exactement comme au niveau 3. Le niveau 4 ajoute la commande `if`!"
    commands:
      -
        name: "print"
        explanation: "Affiche exactement ce qui est entre les guilllemets"
        example: "Exemple: print 'Bonjour et bienvenue à Hedy.'"
        demo_code: "print 'Bonjour et bienvenue à Hedy.'"
      -
        name: "ask"
        explanation: "Demande quelque chose avec `ask`."
        example: "Exemple: couleur is ask Quelle est ta couleur préférée?"
        demo_code: "couleur is ask Quelle est ta couleur préférée?\nprint couleur ' est ta couleur préférée!'"
      -
        name: "if"
        explanation: "Fait un choix avec `if`."
        example: "Exemple: if couleur is vert print 'joli!' else print 'bof'"
        demo_code: "couleur is ask Quelle est ta couleur préférée?\nif couleur is vert print 'joli!' else print 'bof'"
  5:
    start_code: "repeat 3 times print 'Hedy est amusant!'"
    intro_text: " `ask`, `print` et `if` fonctionnent exactement comme au niveau 4. Le niveau 5 ajoute la commande `repeat`.
      `repeat` te permet d’exécuter une ligne de commande plusieurs fois."
    commands:
      -
        name: "print"
        explanation: "Affiche exactement ce qui est entre les guilllemets"
        example: "Exemple: print 'Bonjour et bienvenue à Hedy.'"
        demo_code: "print 'Bonjour et bienvenue à Hedy.'"
      -
        name: "ask"
        explanation: "Demande quelque chose avec `ask`."
        example: "Exemple: couleur is ask Quelle est ta couleur préférée?"
        demo_code: "couleur is ask Quelle est ta couleur préférée?\nprint couleur ' est ta couleur préférée!'"
      -
        name: "if"
        explanation: "Fait un choix avec `if`."
        example: "Exemple: if couleur is vert print 'joli!' else print 'bof'"
        demo_code: "couleur is ask Quelle est ta couleur préférée?\nif couleur is vert print 'joli!' else print 'bof'"
      -
        name: "repeat"
        explanation: "`repeat` et `if` combiné"
        example: "Exemple: if couleur is vert  repeat 3 times print 'joli!' else repeat 5 times print 'bof'"
        demo_code: "couleur is ask Quelle est ta couleur préférée?\nif couleur is vert repeat 3 times print 'joli!' else repeat 5 times print 'bof'"
  6:
    start_code: "print '5 fois 5 font ' 5 * 5"
    intro_text: "`ask`, `print`, `if` et `repeat` sont toujours comme aux niveaux 4 et 5.  Le niveau 6 te permet de faire quelque chose de plus: tu peux désormais calculer."
    commands:
      -
        name: "print"
        explanation: "Affiche exactement ce qui est entre les guilllemets"
        example: "Exemple: print '5 fois 5 font ' 5 * 5"
        demo_code: "print '5 fois 5 font ' 5 * 5"
      -
        name: "ask et if avec des calculs"
        explanation: "Pose une question sur un calcul avec `ask` et compare le résultat..."
        example: "Exemple: reponse is ask Combien font 10 plus 10?"
        demo_code: "reponse is ask Combien font 10 plus 10?\nif reponse is 20 print 'Oui!' else print 'Oups'"
      - name: "repeat"
        explanation: "`repeat` et `if` combinés"
        example: "Exemple: if produit is 50 repeat 3 times print 'correct!' else repeat 5 times print 'incorrect!'"
        demo_code: "produit is ask Combien font 10 fois 5?\nif produit is 50 repeat 3 times print 'correct!' else repeat 5 times print 'incorrect!'"
  7:
    start_code: "repeat 5 times\n    print 'Bonjour les amis'\n    print 'Ceci sera affiché 5 fois'"
    intro_text: "`ask` et `print` fonctionnent comme tu y es habitué. Mais `if` et `repeat` ont changé! Tu peux maintenant exécuter des groupes de commandes ensemble, mais tu dois indenter ces commandes. Cela veut dire que tu dois mettre 4 espaces au début des lignes. Cela fonctionne aussi si tu veux créer un bloc d’une seule ligne. Si tu combines un if et un repeat, tu devras indenter chaque bloc. Regarde les exemples pour plus de détails!"
    commands:
      -
        name: "print"
        explanation: "Affiche quelque chose. N’oublies pas les guillemets pour afficher exactement ce qui est saisi."
        example: "Exemple: print '5 fois 5 font ' 5 * 5"
        demo_code: "print '5 fois 5 font ' 5 * 5"
      -
        name: "`if` sur plusieurs lignes"
        explanation: "Demande la réponse d’une addition et vérifie si elle est correcte. Tu peux désormais imprimer sur 2 lignes."
        example: "Exemple: reponse is ask Combien font 5 plus 5?"
        demo_code: "reponse is ask Combien font 5 plus 5?\nif reponse is 10\n    print 'Bien joué!'\n    print 'En effet, la réponse est ' reponse\nelse\n    print 'Oups!'\n    print 'La réponse devrait être 10.'"
      -
        name: "`if` et `repeat` combinés"
        explanation: "`if` et `repeat` combinés"
        example: "Exemple: if couleur is vert repeat 3 times print 'joli!' else repeat 5 times print 'bof'"
        demo_code: "couleur is ask Quelle est ta couleur préférée?\nif couleur is vert\n    repeat 3 times\n        print 'joli!'\nelse\n    repeat 5 times\n        print 'bof'"

  8:
      start_code: "for i in range 1 to 11\n    print i\nprint ' Cache toi ou je te verrai !'"
      intro_text: "`print` fonctionne encore comme avant, mais `repeat` est changé ! Tu tape maintenant `for i in range 1 to 5`, au lieu de `repeat 5 times`. La bonne chose est que tu peux également utiliser cette variable i dans ton programme! Tu dois encore toujours mettre en retrait toutes les lignes répétitives (cela signifie qu'elles doivent commencer par quatre espaces)"
      commands:
        -
          name: " nouveau `repeat`"
          explanation: " `for` au lieu de `repeat`"
          example: "for i in range 1 to 11"
          demo_code: >
            for i in range 1 to 11
                print i
            print ' Cache toi ou je te verrai !'
  9:
    start_code: "for i in range 1 to 10\n    print i\nprint 'Cache toi ou je te verrai !'"
    intro_text: "Maintenant on change encore un petit chose concernant l'indentation. Chaque fois que nous indentons, il faut ajouter un `:` à la fin du règle précédente."
    commands:
      -
        name: "`for` avec `:`"
        explanation: "Utilisant un `for` sur plusieurs lignes, il te faut un `:` à la fin"
        example: "for i in range 1 to 10:"
        demo_code: "for i in range 1 to 10:\n    print i\nprint ' Cache toi ou je te verrai !."
      -
        name: "`if` avec `:`"
        explanation: "Nous faisons de la même manière avec tous nos commandes `if`."
        example: "if couleur is vert:"
        demo_code: "couleur is ask Quelle couleur préfères-tu ?\nif couleur is vert:\n    print 'Tu as choisi le vert.'\nelse\n    print 'Tu as choisi un autre couleur que le vert.'"
      -
        name: "(Optionnel) `elif`"
        explanation: "Pour compléter il-y-a encore un nouveau commande quelle tu peux utiliser: `elif`. `Elif` signifie `else if`. Tu regardes alors auparavant à `if` et quand ça n'est pas vrai, tu avances à `elif`. Quand ça n'est pas vrai aussi, tu avances à `else`."
        example: "elif a is 5"
        demo_code: "a is 2\nif a is 1:\n    print 'a est égal à 1'\nelif a is 2:\n    print 'a est égal à 2'\nelse:\n    print 'a est ni 1 ni 2'"

  10:
    start_code: "for i in range 1 to 3:\n    for j in range 1 to 5:\n        print 'Le résultat de: ' i ' fois ' j ’ fait 'i*j "
    intro_text: "À partir de maintenant nous pouvons exécuter un boucle plusieurs fois. Dans l'exemple nous comptons trois fois de un à cinq. Alors nous répétons trois fois un boucle de cinq fois."
    commands:
      -
        name: "`for` dans un autre `for`."
        explanation: "Ceci est un exemple de deux boucles de `for` combinés."
        demo_code: "for i in range 1 to 3:\n    for j in range 1 to 5:\n        print 'Le résultat de: ' i ' fois ' j ’ fait 'i*j "
      -
        name: "`if` dans un autre `if`."
        explanation: "Nous pouvons faire le même truc avec `if`."
        demo_code: "couleur1 is ask Donne-moi une couleur :\ncouleur2 is ask Donne-moi encore une couleur\nif couleur1 is bleu:\n    if couleur2 is jaune:\n        print 'Ensemble ça donne vert !'"
