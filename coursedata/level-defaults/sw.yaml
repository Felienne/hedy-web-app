1:
    intro_text: "karibu Hedy! Kwa hii kiwango ya kwanza, unaweza kutumia neno `print`, `ask` na `echo`. Bonyeza kitufe(button) chenye rangi ya bluu ili kuanza! Jaribu kutekeleza msimbo(mpango) kwa kutumia kitufe chenye rangi ya kijani 'Run the code' kilicho upande wa kushoto."
    start_code: "print salamu, dumia!"
    commands:
    -   explanation: "Chapisha kitu wenye skrini kwakutumia neno `print`."
        example: "Mfano: print Salamu, karibu Hedy!"
        demo_code: "print Salamu, karibu Hedy!"
        name: '{print}'
    -   explanation: "Kuliza mtumiaji achapishe kitu, tumia neno `ask`."
        example: "Mfano: ask Unaitwa nani?"
        demo_code: "ask Unaitwa nani?"
        name: '{ask}'
    -   explanation: "Rudia kuchapisha kitu kwa kutumia neno `echo`."
        example: "Mfano: echo Sawa Kumbe unaitwa "
        demo_code: "ask Unaitwa nani?\necho Sawa, Kumbe unaitwa "
        name: '{echo}'
    -   name: '{print} emojis'
        explanation: print an emoji with `{print}`
        example: 'Example: {print} üôã‚Äç üåç ‚ùó'
        demo_code: '{print} üôã üåç ‚ùó'
    -   name: '{forward}'
        explanation: Draw a line with `{forward}`.
        example: 'Example: {forward} 100'
        demo_code: '{forward} 100'
    -   name: '{turn}'
        explanation: turn the drawing turtle with `{turn}`
        example: 'Example: {turn}'
        demo_code: "{forward} 25\n{turn} left\n{forward} 25\n{turn} right"
    example_code: "## Example code\n```\n{print} Hello!\n{print} Welcome to Hedy!\n```\n"
    intro_text_2: "You can also ask for input and repeat it back with an `{echo}` command.\nTry the code to your left again.\n\nDon't know what to create? In the next tabs you will find ideas for programs to build.\n"
    example_code_2: "## Example code\n```\n{ask} What is your name?\n{echo} hello\n```\n"
2:
    intro_text: "`ask` na `print` mabadiliko katika kiwango cha 3. Hizi mabadiliko, kinamaanisha neno `echo` haitakiwi tena kuchapisha maneno."
    start_code: "print salamu dunia!"
    commands:
    -   explanation: "Tumia neno `is` kuvipa vitu majina yao"
        example: "Mfano: nchi is Tanzani."
        demo_code: "nchi is Tanzania\nprint karibu nchi"
        name: '{is}'
    -   explanation: "Uliza maswali kwa kutumia neno `ask`. kuonya! Utatakiwa kuvipa jina majibu kwa kutumia neno `is`."
        example: "Mfano: jina is ask Unaitwaje?"
        demo_code: "jina is ask Unaitwaje?\nprint Ujambo jina!"
        name: '{ask}'
    -   name: '{sleep}'
        explanation: Let Hedy pause for a (couple of) second(s).
        example: 'Example: {sleep} 2 '
        demo_code: "{print} Let me think for one second...\n{sleep}\n{print} Hmm.. I need 3 more seconds...\n{sleep} 3\n{print} Eureka! Ive got it!"
    -   name: is - turtle
        explanation: Give a number a name using `{is}`. You can choose the name yourself.
        example: 'Example: angle {is} 90'
        demo_code: "angle {is} 90\n{turn} angle\n{forward} 100"
3:
    intro_text: |-
        Kwanzia hii kiwango, unaweza kutumia maneno zifuatao:

        ```
        majina is Ayubu, Nasra, Novatus
        print majina at random
        ```

    start_code: "print salamu dunia!"
    commands:
    -   explanation: "Chagua neno nasibu(random) kutoka kikundi kwa kutumia maneno `at` na `random`"
        example: "Mfano: majina is Ayubu, Nasra, Novatus."
        demo_code: "majina is Ayubu, Nasra, Novatus\nprint majina at random"
        name: choose_random
    -   explanation: add an item to a list
        example: 'Example: {add} dog {to_list} animals'
        name: '{add}'
        demo_code: "animals {is} cow, cat\n{add} dog {to_list} animals"
    -   demo_code: "animals {is} cat, dog, cow\n{remove} dog {from} animals"
        name: '{remove}'
        explanation: remove an item from a list
        example: 'Example: {remove} dog {from} animals'
    example_code: "## Example Hedy Code\n\n```\nanimals {is} dog, cat, kangaroo\n{print} animals {at} {random}\n```\n"
    intro_text_2: You can also add items to the list with `{add}` and remove items with `{remove}`.
    example_code_2: "## Example Hedy Code\n\n```\nanimals {is} dog, cat, kangaroo\n{add} penguin {to_list} animals\n{remove} cat {from} animals\n{print} animals {at} {random}\n```\n"
4:
    start_code: "print 'Salamu, dunia'"
    intro_text: |-
        Neno `ask` kitatumika kama tulivio itumia katika kiwango cha tatu, ila matumizi ya neno `print` kimebadilika kidogo.
        Saa hii, unatakiwa tumia fungua semi na funga semi.
    commands:
    -   explanation: "Tumia fungua semi na funga semi ya aina '' ukitumia `print`"
        example: "Mfano: print 'Salamu dumia'"
        demo_code: "print 'Jambo!!, karibu Hedy.'"
        name: '{print}'
    -   explanation: "Vipa jina sentensi au neno na zichapishe bila kutumia fungua semi na funga semi."
        example: "Mfano: jina is Juma."
        demo_code: "jina is Juma\nprint 'Naitwa ' jina"
        name: '{is}'
    -   explanation: "Uliza maswali kwa kutumia neno `ask`."
        example: "Mfano: mji is ask 'Unaishi wapi?'"
        demo_code: "mji is ask 'Unaishi wapi?'\nprint mji ', ndo ninapoishi pia.'"
        name: '{ask}'
5:
    start_code: "lugha is ask Lugha ya taifi ni kipi?\nif lugha is Kiswahili print 'umepatia!' else print 'umekosea'"
    intro_text: "`ask` na `print` zitabaki kama tulivio zitumia kiwango cha tatu. Kiwango cha nne tutasoma jinsi ya kitumia neno `if`."
    commands:
    -   explanation: "Tumia fungua semi na funga semi ya aina '' ukitumia `print`"
        example: "Mfano: print 'Jambo!! Karibu Hedy.'"
        demo_code: "print 'Jambo!! Karibu Hedy.'"
        name: '{print}'
    -   explanation: "Uliza maswali kwa kutumia neno `ask`."
        example: "Mfano: mji is ask 'Unaishi wapi?'"
        demo_code: "mji is ask 'Unaishi wapi?'\nprint mji ', ndo ninapoishi pia.'"
        name: '{ask}'
    -   explanation: "Fanya uamuzi kwa kutumia neno `if`"
        example: "Mfano: if gari is Nissan print 'Ni gari' else print 'sio gari'"
        demo_code: "jibu is ask 'Unapenda nchi yako?'\nif jibu is ndio print 'vizuri sana!' else print 'Uzalendo ni muhimu'"
        name: '{if}'
    -   name: '{if} with turtle'
        explanation: Make a choice with `{if}`
        example: 'Example: {if} answer {is} far {forward} 100 {else} {forward} 5'
        demo_code: "answer {is} {ask} 'How far should I walk?'\n{if} answer {is} far {forward} 100 {else} {forward} 5"
    -   demo_code: "pretty_colors {is} green, yellow\ncolor {is} {ask} 'What {is} your favorite color?'\n{if} color {in} pretty_colors {print} 'pretty!' {else} {print} 'meh'"
        name: '{in}'
        explanation: Check elements with `{in}`
        example: "Example: {if} color {in} pretty_colors {print} 'pretty!' {else} {print} 'meh'"
6:
    start_code: "print '5 mara 5 ni sawa sawa na ' 5 * 5"
    intro_text: "Matumizi ya `ask`, `print` na `if` zitabaki kama kawaida. Kwa kiwango cha sita, tuta soma jinsi ya tufanya hesabu."
    commands:
    -   explanation: "Tumia fungua semi na funga semi ya aina ''"
        example: "Mfano: print '5 mara 5 ni sawa sawa na ' 5 * 5"
        demo_code: "print '5 mara 5 ni sawa sawa na ' 5 * 5"
        name: '{print}'
    -   explanation: "Uliza maswali ya hesabu na hakikisha majibu yako sahihi."
        example: "Mfano: answer = ask '10 jumlisha 10 ni sawa sawa na?'"
        demo_code: "jibu = ask '10 jumlisha 10 ni sawa sawa na?'\nif jibu is 20 print 'Sahihi!' else print 'Sio Sahihi'"
        name: '{ask}'
    -   name: "`ask` and `if` turtle"
        explanation: "Ask the user how many angles they want"
        example: "Example: angles = ask 'How many angles?'"
        demo_code: |-
            angles = ask 'How many angles?'
            angle = 360 / angles
            forward 50
7:
    start_code: "repeat 3 times print 'Hedy ni furaha!'"
    intro_text: "Matumizi ya `ask`, `print` na `if` zinabaki kama ziliwio. Ila kwa kiwango cha tano, tutasoma neno `repeat`. Neno `repeat` kinatumika kurudia utekelezaji mara nyingi."
    commands:
    -   explanation: "Tumia fungua semi na funga semi ya aina '' ukitumia `print`"
        example: "Mfano: print 'Jambo! karibu Hedy.'"
        demo_code: "print 'Jambo! karibu Hedy.'"
        name: '{print}'
    -   explanation: "Uliza maswali kwa kutumia neno `ask`."
        example: "Mfano: mji = ask 'Unaishi wapi?'"
        demo_code: "mji = ask 'Unaishi wapi?'\nprint mji ', ndo ninapoishi pia.'"
        name: '{ask}'
    -   explanation: "Fanya uamuzi kwa kutumia neno `if`"
        example: "Mfano: if gari is Nissan print 'Ni gari' else print 'sio gari'"
        demo_code: "jibu = ask 'Unapenda nchi yako?'\nif jibu is ndio print 'vizuri sana!' else print 'Uzalendo ni muhimu'"
        name: '{if}'
    -   name: "repeat - turtle"
        explanation: "Repeat a line of code with `repeat`."
        example: "Example: repeat 3 times forward 10"
        demo_code: |-
            repeat 3 times forward 10
8:
    start_code: "repeat 5 times\n    print 'Jambu!! rafiki'\n    print 'Hii itachapishwa kwenye skrini mara 5'"
    intro_text: "ask na print zinatumika kama tulivio zitumia kwenye kiwango cha sita. Ila matumizi ya if na repeat zimebadilika! Sasa unaweza kutekeleza kikundi cha code kwa pamoja, ila utatakiwa kuweka ujazo(indent). Kinamaanisha utaweka nafasi(space) mara nne ukianza ukiandika kwenye mstari. Utafanya hivyo ataukiandika kikundi(block) cha code ata kama ni mstari moja tu. Kama utatumia if na repeat, utatakiwa ujazo kila kikundi(block) cha code. Rejea mfano zifuatazo kwa maelezo zaid!"
    commands:
    -   explanation: "Kuchapisha kitu. Kumbuka kutumia fungua semi na funga semi cha aina ya ''."
        example: "Mfano: print '5 mara 5 ni sawa sawa na ' 5 * 5"
        demo_code: "print '5 mara 5 ni sawa sawa na ' 5 * 5"
        name: '{print}'
    -   explanation: "Uliza jibu ya kujumlisha numberi na kuhakikisha jibu iko sahihi. Sasa tunaweza kuchapisha(print) mstari mbili kwa pamoja."
        example: "Mfano: jibu = ask '5 jumlisha 5 ni sawa sawa na?'"
        demo_code: "jibu = ask '5 jumlisha 5 ni sawa sawa na?'\nif jibu is 10\n    print 'Vizuri sana!'\n    print 'Kwakweli, jibu ilikuwa ' jibu\nelse\n    print 'Sio sahihi!'\n    print 'Jibu ilikuwa 10'"
        name: '{ask}'
    -   example: 'Example: draw a square'
        name: '`{repeat}` with turtle'
        explanation: '{repeat} multiple lines'
        demo_code: "{repeat} 4 {times}\n    {turn} 90\n    {forward} 50"
10:
    start_code: |-
        animals is dog, cat, blobfish
        for animal in animals
          print 'I love ' animal
    intro_text: |
        In this level we learn a new code called `for`. With `for` you can make a list and use all elements.
        `for` creates a block, like `repeat` and `if` so all lines in the block need to start with spaces.

        ## Example Hedy code
        ```
        animals is dog, cat, blobfish
        for animal in animals
          print 'I love ' animal
        ```
    commands:
    -   name: "print"
        explanation: "Print something. Remember to use a quotation mark for literal printing."
        example: "Example: print '5 times 5 is ' 5 * 5"
        demo_code: "print '5 times 5 is ' 5 * 5"
    -   name: "for with a list"
        explanation: "print all things in a list "
        example: "Example: for dier in dieren"
        demo_code: |-
            animals is dog, cat, blobfish
            for animal in animals
              print 'I love ' animal
11:
    start_code: "for i in range 1 to 10\n    print i\nprint 'Tayari au la, nakuja!'"
    intro_text: "`print` kinatumika kama kawaida ila `repeat` kimebadilishwa kuwa `for`! kwa sasa na kuendilea utatumia `for i in range 1 to 5`, badala ya `repeat 5 times`. Unawezakutumia  `i` kwenye mpango(program) yako! Kumbuka ujazo baada ya kutumia neno `for` na `if` (Ikimaanisha kutumia nafasi(space) mara nne kwa kila sentsensi)"
    commands:
    -   explanation: "Tumatumia `for` badala ya `repeat`"
        example: "for i in range 1 to 10"
        demo_code: |
            for i in range 1 to 10
              print i
            print 'Tayari au la, nakuja!'
        name: '{for} loop'
    -   demo_code: "answer = {ask} 'What is 5 plus 5?'\n{if} answer {is} 10\n    {print} 'Well done!'\n    {print} 'Indeed, the answer was ' answer\nelse\n    {print} 'Oops!'\n    {print} 'The answer is 10'"
        name: '{ask}'
        explanation: ask for the answer to a sum and check if it is correct. We can now print 2 lines.
        example: "Example: answer = {ask} 'What is 5 plus 5?'"
16:
    start_code: |-
        matunda = ['embe', 'machungwa', 'ndizi']
        print matunda 
    intro_text: "Tutatumia mabano ya aina ya [ ] tukitaka kujenga orodha. Sasa tutatakiwa kutumia fungua semi na funga semi ya aina '' katika orodha(list). "
    commands:
    -   explanation: "Tutatumia mabano ya aina [ ] na pia tutatumia fungua semi na funga semi tukiandika majina vilivyo kwenye orodha."
        example: "Mfano: matunda = ['embe', 'machungwa', 'ndizi']"
        demo_code: |-
            matunda = ['embe', 'machungwa', 'ndizi']
            print matunda
        name: square brackets
    -   name: "Chagua kitu kutoka kwenye orodha."
        explanation: "Kuchagua kitu kutoka kwenye orodha yetu, tutatumia mfumo ifuatoyo: [nambari] kwa mfano matunda[1] ikamaanisha, utachagua kitu cha kwanza iliyopo katika orodha."
        example: "Mfano: matundayaywanya = matunda[1]"
        demo_code: "matunda = ['embe', 'machungwa', 'ndizi']\nmatundayaywanya = matunda[1]\nprint matundayaywanya "
    -   name: "Kuchagua matunda nasibu kutoka kwa orodha"
        explanation: "Kuchagua matunda nasibu kutoka kwa orodha, tumia mfumo ufuatavyo, [random], mfano matunda[random] kupata matunda nasibu kutoka kwenye orodha."
        example: "Mfano matundanasibu = matunda[random]"
        demo_code: |-
            matunda = ['embe', 'machungwa', 'ndizi']
            matunda_nasibu = matunda[random]
            print matunda_nasibu
#12-old:
#    start_code: "umri is input('Una miaka mingapi?')\nprint('Kumbe umri wako in:')\nfor i in range(0,umri):\n    print(i)"
#    intro_text: "Tutanza kutumia mabano na tutabadilike mfumo wa kutumia as! Tutatumia input badala ya ask. Mfumo wa tukumia print, input na for, tutatumia mabano ya aina ya ()."
#    commands:
#    -   explanation: "Tutatumia mabano kwa kati wa kutumia print kwanzia sasa!"
#        example: "Mfano: print('Salamu, dumia')"
#        demo_code: "print('alamu, dumia')"
#    -   explanation: "Tumeondoa ask na tutatumia input badala ya ask. Pia tutatumia mabano tukitumia input."
#        example: "Mfano: jibu is input('Unaitwa nani?')"
#        demo_code: "jibu is input('Unaitwa nani?')\nprint('Kumbe unaitwa ' jibu)"
#    -   explanation: "Sasa tutatumia mabano katika mfumo wa tukumia kauli ya for. Tutaweka numberi yaliyo katika kauli ya for. for i in range (0,10):"
#        example: "Mfano: for i in range(0,10):"
#        demo_code: "for i in range(0,10):\n    print(i)\nprint('Tayari au la, nakuja!')"
17:
    start_code: "for i in range 1 to 10:\n    print i\nprint 'Tayari au la, nakuja!'"
    intro_text: "Sasa tutabadiliasha mfumo kidogo kuhusu ujazo(indent) mstari. Kama utaka ujazo kwenye mstari, tutatakiwa kutumia `:` kwenye mstari kinacho tokea kabla ya mstari ambapo tutaweka ujazo(indentataion)."
    commands:
    -   explanation: "Tukitumia `for`, tunatakiwa kutumia pia `:` baada ya kauli ya `for`!"
        example: "for i in range 1 to 10:"
        demo_code: "for i in range 1 to 12:\n    print i\nprint 'Tayari au la, nakuja!'"
        name: '{elif}'
    -   explanation: "Tunatakiwa kufuata hii mfumo pia tukitumia kauli ya `if`"
        example: "if rangi is kijani:'"
        demo_code: |-
            rangi = 'kijani'
            if rangi is 'kijani':
                print 'Rangi ni ya Kijani'
            else:
                print 'Rangi sio ya Kijani'
        name: '{print}'
    -   explanation: "Tutawa fundisha mfumo mpya ambacho utafuata ikitaka kutumia: `elif`. `elif` ikimaanisha \"else if\". Tuananza kucheki kama `if` ni sahihi, kama sio kweli, tutacheki `elif` na kama sio kweli pia tutacheki `else`."
        example: "elif a is 5:"
        demo_code: |-
            a = 2
            if a is 1:
                print 'a ni 1'
            elif a is 2:
                print 'a ni 2'
            else:
                print 'a sio 1 wala 2'
        name: '{if}'
9:
    commands:
    -   name: '`{if}` with multiple lines'
        explanation: The answer of a sum of questions with '{ask}' and see if it is correct. Now we print out two lines.
        example: "Example: answer = {ask} 'What is 20 plus 20?'"
        demo_code: "answer = {ask} 'What is 20 plus 20?'\n{if} answer {is} 20\n    {print} 'Well done!!'\n    {print} 'The answer is indeed' answer\nelse\n    {print} 'Wrong'\n    {print} 'The answer is 20'"
    -   example: 'Example: create a square'
        name: '`{repeat}` and turtle'
        explanation: '{repeat} multiple lines'
        demo_code: "{repeat} 4 {times}\n    {turn} 90\n    {forward} 50"
    intro_text: "In this level you can not only use multiple lines with `{if}` {and} `{repeat}`, but you can also put them together!\nIn the example you see an `{if}` command within a `{repeat}` command. It is also allowed the other way around, and an `{if}` is also allowed in an `{if}` and a `{repeat}` in a `{repeat}`.\nGive it a try!\n\n## Example Hedy code\n```\n{repeat} 3 {times}\n    food = {ask} 'What do you want?'\n    {if} food {is} 'pizza'\n        {print} 'nice!'\n    else\n        {print} 'pizza is better'\n```\n"
    start_code: "{repeat} 3 {times}\n    food = {ask} 'What do you want?'\n    {if} food {is} 'pizza'\n        {print} 'nice!'\n    else\n        {print} 'pizza is better'"
12:
    commands:
    -   name: float directly
        explanation: Decimal numbers
        example: '{print} 2.5 + 2.5'
        demo_code: "{print} 'Calculate away!'\n{print} 'Two and a half plus two and a half is...'\n{print} 2.5 + 2.5\n"
    -   name: assign text
        explanation: Text with quotation marks after =
        example: name = 'Hedy'
        demo_code: "name = 'Hedy the Robot'\n{print} 'Hello ' name\n"
    -   name: quotes after {if} comparison
        explanation: Text with quotation marks after {if}
        example: name = 'Hedy'
        demo_code: "name = {ask} 'Who are you?'\n{if} name = 'Hedy'\n    {print} 'Hi there!'\n"
    -   name: quotes in list
        explanation: A list with quotation marks
        example: name = 'Hedy', 'Felienne'
        demo_code: "superheroes = 'Iron Man', 'Batman', 'Superman'\n{print} superheroes {at} {random}\n"
    start_code: "{print} 'decimal numbers now need to use a dot'\n{print} 2.5 + 2.5"
    intro_text: "## Decimal numbers\nSo far, Hedy did not allow for decimal numbers like 1.5, but now we do allow that. Note that computers use the `.` for decimal numbers.\n```\n{print} 'Two and a half plus two and a half is...'\n{print} 2.5 + 2.5\n```\n## All texts need to be in quotation marks\nFor this level on you will also have to use quotation marks when storing a text with `=`:\n\n```\nname = 'Hedy the Robot'\n{print} 'Hello ' name\n```\n## All items in lists need quotation marks too\nLists are texts, so they need quotation marks too. Mind that each single item on the list has quotation marks.\nThis allows you to save two words as 1 item on the list, for example 'Iron Man'.\n\n```\nsuperheroes = 'Spiderman', 'Batman', 'Iron Man'\n{print} superheroes {at} {random}\n```\n## All text after `{if}` comparisons need quotation marks too\n```\nname = {ask} 'What is your name?'\n{if} name = 'Hedy the Robot'\n    {print} 'Hi there!'\n```\n## Numbers don't need quotation marks\n{for} numbers, you do not use quotation marks in the `=`:\n```\nscore = 25\n{print} 'You got ' score\n```\n"
13:
    commands:
    -   explanation: Two parts both need to be correct
        demo_code: "answer1 = {ask} 'What is 3+2?'\nanswer2 = {ask} 'What is 2+2?'\n{if} answer1 {is} 5 {and} answer2 {is} 4\n    {print} 'Both answers are correct!'\nelse\n    {print} 'At least one answer is wrong!'"
        name: '{and}'
        example: if 3+2 {is} 5 {and} 2+2 {is} 4
    -   name: '{or}'
        explanation: At least 1 of the two parts need to be correct. If both are correct, it is also fine.
        demo_code: "answer1 = {ask} 'What is 3+2?'\nanswer2 = {ask} 'What is 2+2?'\n{if} answer1 {is} 5 {or} answer2 {is} 4\n    {print} 'At least one answer is correct!'\nelse\n    {print} 'Both answers are wrong!'"
        example: if 3+2 {is} 5 {or} 2+2 {is} 4
    start_code: "name = {ask} 'what is your name?'\nage = {ask} 'what is your age?'\n{if} name {is} 'Hedy' {and} age {is} 2\n    {print} 'You are the real Hedy!'"
    intro_text: We are now going to learn `{and}` and `{or}`! If you want to check two statements, you don't have to use two if's but can use `{and}` and `{or}`. If you use `{and}`, both statements, left and right of the `{and}` need to be true. We can also use `{or}`. Then only one statement needs to be correct.
14:
    commands:
    -   name: Smaller
        explanation: We use the `<` to check if the first number is smaller than the second number.
        example: 'For example: age < 12'
        demo_code: "age = {ask} 'How old are you?'\n{if} age < 13\n    {print} 'You are younger than me!'"
    -   name: Bigger
        explanation: We use the `>` to check if the first number is bigger than the second number.
        example: 'For example: age > 12'
        demo_code: "age = {ask} 'How old are you?'\n{if} age > 13\n    {print} 'You are older than me!'"
    -   name: Equal
        explanation: We use the `==` to check if two things are the same.
        example: 'For example: answer == 25'
        demo_code: "answer = {ask} 'What is 5 * 5?'\n{if} answer == 25\n    {print} 'That {is} correct!'"
    -   name: Not equal
        explanation: 'We use the `!=` to check if two things are not the same. '
        example: 'For example: answer != 25'
        demo_code: "answer = {ask} 'What is 5 * 5?'\n{if} answer != 25\n    {print} 'That is not correct!'"
    -   explanation: We use the `<=` to check if the first number is smaller than or equal to the second number.
        example: 'For example: age <= 12'
        name: Smaller {or} equal
        demo_code: "age = {ask} 'How old are you?'\n{if} age <= 12\n    {print} 'You are younger than me!'"
    -   name: Bigger or equal
        explanation: We use the `>=` to check if the first number is bigger than or equal to the second number.
        example: 'For example: age >= 14'
        demo_code: "age = {ask} 'How old are you?'\n{if} age >= 14\n    {print} 'You are older than me!'"
    start_code: "age = {ask} 'How old are you?'\n{if} age < 13\n    {print} 'You are younger than me!'\nelse\n    {print} 'You are older than me!'"
    intro_text: "We are going to learn more new items. You might know them already from mathematics, the `<` and `>`.\nThe `<` checks if the first number is smaller than the second, for example `age < 12` checks if `age` {is} smaller than 12.\nIf you want to check if the first number is smaller or equal to the second, you can use `<=`, for example `age <= 11`.\nThe `>` checks if the first number is bigger than the second, for example `points > 10` checks if `points` is larger than 10.\nIf you want to check if the first number is bigger or equal to the second, you can use `>=`, for example `points >= 11`.\nYou use these comparisons in an `{if}`, like this:\n```\nage = {ask} 'How old are you?'\n{if} age > 12\n    {print} 'You are older than I am!'\n```\n\nFrom this level on, if you want to compare exactly, you can use two equal signs. This is what most programming languages do:\n```\nname = {ask} 'What is your name?'\n{if} name == 'Hedy'\n    {print} 'You are coo!'\n```\n\nYou can also compare if something is *not* equal to something else using `!=` like this:\n```\nname = {ask} 'What is your name?'\n{if} name != 'Hedy'\n    {print} 'You are not Hedy'\n```\n"
15:
    commands:
    -   explanation: We can use the `{while}` loop with not equal
        example: 'Example: {while} correct_answer != 25'
        demo_code: "answer = 0\n{while} answer != 25\n    answer = {ask} 'What is 5 times 5?'\n{print} 'A correct answer has been given'"
        name: '{while}'
    -   example: 'For example: {while} count < 3'
        demo_code: "count = 1\n{while} count < 3\n    {print} 'We do this ' 3 - count ' more times'\n    count = count + 1\n{print} 'We are done'"
        name: Smaller {while}
        explanation: 'We can also use the `{while}` loop with `<` and `>`. '
    start_code: "answer = 0\n{while} answer != 25\n    answer = {ask} 'What is 5 times 5?'\n{print} 'A correct answer has been given'"
    intro_text: "We are going to learn a new loop, the `{while}` loop! We continue the loop as long as the statement is true.\nSo don't forget to change the value in the loop.\n\nIn the example code, we continue until a correct answer has been given.\nIf the correct answer is never given, the loop never ends!\n"
18:
    commands:
    -   name: '{print}'
        explanation: With `{print}` you need to use parentheses
        example: '{print}'
        demo_code: "{print}('hi!')"
    -   name: '{print} with var'
        explanation: With `{print}` you need to use parentheses and commas if you {print} more items
        example: '{print}'
        demo_code: "naam = 'Hedy'\n{print}('my name is ', naam)"
    start_code: "naam = 'Hedy'\n{print}('My name is ', naam)"
    intro_text: "We arrived at real pythoncode! That means we need to use parentheses with {print} and {range} from now on.\nThat looks like this:\n```\n{print}('my name is Hedy!')\n```\nIf you want to print more thant one items, you need to separate them by commas.\n```\nnaam = 'Hedy'\n{print}('my name is ', naam)\n```"
