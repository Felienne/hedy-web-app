1:
    intro_text: "हेडी मे आपका स्वागत है! स्तर 1 में आप `print`, `ask` और `echo` जैसे आदेशों  का उपयोग कर सकते है। नीले बटन को दबाने से आपका कोड आपके लिये टाइप हो जाएगा। अब प्रोग्रामिंग क्षेत्र में नीचे बाएं  जाकर हरे बटन “रन द  कोड दबाएं ।"
    start_code: "print हेलो दुनिया!"
2:
    intro_text: "print वैसे ही काम करेगा जैसे स्तर १ में किया, लेकिन ask बदल गया है और अब उसको किसी नाम की ज़रूरत है, जो कि आप `print` कर सकते हैं| `echo` की अब कोई ज़रूरत नहीं है| अब आप इन आदेशों का भी इस्तेमाल कर सकते हैं:"
    start_code: "print हेलो दुनिया  !"
3:
    intro_text: "print वैसे ही काम करेगा जैसे स्तर १ में किया, लेकिन ask बदल गया है और अब उसको किसी नाम की ज़रूरत है, जो कि आप `print` कर सकते हैं| `echo` की अब कोई ज़रूरत नहीं है| अब आप इन आदेशों का भी इस्तेमाल कर सकते हैं:"
    start_code: "print हेलो दुनिया  !"
4:
    start_code: "print 'हेलो  दुनिया'"
    intro_text: "`ask` अभी भी स्तर ३ में बिल्कुल वैसा ही है, लेकिन `print` अब अलग है| जो भी टेक्स्ट आपको `print` करवाना है उसको दोहरा उदाहरण चिन्ह में रखना होगा| "
5:
    start_code: |-
        नाम is ask आपका नाम क्या है?
        if नाम is हेडी print 'कूल!' else print 'मेह'
    intro_text: "`ask` और `print` दोनों बिल्कुल वैसा ही काम करते है जैसा स्तर ३ में किया था| स्तर ४ में `if` आदेश जुड़ा है|"
6:
    start_code: "print '५ गुणा ५ है ' 5 * 5"
    intro_text: "`ask`, `print` और  `if` वैसे ही हैं जैसे स्तर ४ में हैं| स्तर ५ में कुछ नया है ... अब आप हिसाब कर सकते हैं|"
7:
    start_code: "repeat 3 times print 'हेडी मजेदार है!'"
    intro_text: "`ask`, `print` और `if` वैसे ही काम करते है जैसा स्तर ४ और ५ में करते थे| लेकिन स्तर ६ में `repeat` आदेश जुड़ जाता है| repeat एक कोड की लाइन को बहुत बार निष्पादित करने के काम आता है|"
8:
    start_code: |
        repeat 5 times
          print 'हेलो दोस्तों'
          print 'ये सब ५ बार प्रिंट होंगे'
    intro_text: "ask और print दोनों वैसा ही काम करेंगे जैसे हमें पता है|लेकिन if और repeat बदल चुके है! अब आप एक साथ कोड के समूहों को चला सकते हैं, लेकिन आपको कोड को इंडेंट करना होगा| इसका मतलब है कि लाइन की शुरुआत में चार रिक्त स्थान डालने होंगे |यह तब भी लागू होगा जब आप केवल एक पंक्ति का एक ब्लॉक बनाना चाहते हैं| यदि आप एक repeat और if को जोड़ते हैं, तो आपको प्रत्येक ब्लॉक को इंडेंट करना होगा| अधिक जानकारी के लिए उदाहरण कोड पर एक नज़र डालें!"
9:
    start_code: |-
        for इ in range 1 to 3:
            for ज in range 1 to 5:
                print ' हम दौर में हैं: ' इ  ' और हम गिनते हैं: ' ज
    intro_text: अब से हम, लूप को अक्सर दोहरा सकते हैं| उदाहरण में हम ५ तक गिनते हैं और वह ३ बार करते हैं| तो हम ३ दौर लगाते  हैं और ५ तक गिनते हैं हर बार|
10:
    start_code: |-
        जानवरों is कुत्ता, बिल्ली, ब्लॉबफिश
        for जानवर in जानवरों
            print 'मुझे पसंद है ' जानवर
    intro_text: |-
        इस स्तर में हम एक नया कोड सीखेंगे जो `for` कहलाता है| `for` के साथ आप एक सूची बना सकते हैं और सारे तत्वों का प्रयोग कर सकते हैं|
        `for` एक ब्लॉक बनाता है, `repeat` और 'if' की तरह, तो ब्लॉक की सभी पंक्तियों को रिक्त स्थानों से शुरू होने की आवश्यकता है|

        ##उदाहरण हेडी कोड
        ```
        जानवरों is कुत्ता, बिल्ली, ब्लॉबफिश
        for जानवर in जानवरों
            print 'मुझे पसंद है ' जानवर
        ```
11:
    start_code: |-
        for काउंटर in range 1 to 5
            print काउंटर
    intro_text: |-
        `print` वैसा ही काम करेगा जैसा हमें पता है लेकिन `repeat` के स्थान पर अब `for` है !
        अब आप 'for  काउंटर  in range १-५' लिख सकते हैं और आपके प्रोग्राम में 'काउंटर' का उपयोग कर सकते हैं| कोशिश करके देखो क्या होता है!
        `for` और 'if' पंक्तियों के बाद इंडेंटेशन का उपयोग करना ध्यान में रखें (जिसका मतलब है कि सेंटेंस लिखने से पहले ४ रिक्त स्थान डाल दें|)
12:
    start_code: |-
        for इ in range 1 to 10:
            print इ
        print 'तैयार या नहीं, यहाँ मैं  आया!'
    intro_text: अब हम इंडेंटेशन के साथ थोड़ा बदलाव करेंगे| जब भी हमें इंडेंटेशन की आवश्यकता पड़ती है, हम ':' का इस्तेमाल करेंगे इंडेंटेशन के पहले वाली लाइन पर|
    commands:
    -   name: print
        explanation: "'जब हम `for` का उपयोग करते हैं, हमें ':' लगाने की आवश्यकता पड़ती है `for` पंक्ति के आखिर में| '"
        example: 'for इ in range १-१०:'
        demo_code: |-
            for इ in range 1 to 5:
                print इ
            print 'तैयार या नहीं, यहाँ मैं  आया!'
    -   name: if
        explanation: हमें हमारी सारी 'if' पंक्तियों के साथ यही करने की आवश्यकता है
        example: if रंग is हरा:'
        demo_code: |-
            रंग is हरा
            if रंग is हरा:
                print 'रंग हरा है'
            else:
                 print 'रंग हरा नहीं है'
    -   name: elif
        explanation: "'हम आपको एक नया आदेश बताएंगे जिसे उपयोग करने की आपको अनुमति है: 'elif'. 'elif' मतलब \"else if\"। हम जांचने की शुरुआत करते हैं 'if' पंक्ति से, अगर वह सही नहीं है तो हम 'elif' को जांचते हैं और अगर वह भी सही नहीं है तो हम 'else' पर जाते हैं|  '"
        example: 'elif अ is ५:'
        demo_code: |-
            अ is २
            if अ is १:
                print 'अ १ है'
            elif अ is २:
                 print 'अ २ है'
            else:
                 print 'अ ना १ है ना ही २'

18:
    start_code: |-
        उम्र is input('आप कितने साल के हैं?')
        if उम्र < १२:
            print('आप मुझसे छोटे हैं!')
        elif उम्र > १२:
            print('आप मुझसे बड़े हैं!')
    intro_text: हम नए विषय के बारे में सीखने जा रहे हैं| आप पहले से जानते होंगे गणित में, '<' और '>'| '<' जांचता है अगर पहली संख्या दूसरी से छोटी है, जैसे '४<५'| '>' जांचता है अगर पहली संख्या दूसरी से बड़ी है, जैसे '६>५'|
#13:
#    start_code: |-
#        उम्र is input('आपकी उम्र कितनी है?')
#        print ('तो आप यह उम्र के रह चुके हैं:')
#        for इ in range(0, उम्र):
#            print(इ)
#    intro_text: हम गोल ब्रैकेट्स का उपयोग करने जा रहे हैं और ask को बदलेंगे! हम ask को input में बदल देते हैं! print, input और for के साथ अब हम गोल ब्रैकेट्स का प्रयोग करेंगे|
#    commands:
#    -   name: ब्रैकेट्स
#        explanation: अब हम print के साथ ब्रैकेट्स का उपयोग करेंगे!
#        example: "'उदाहरण: print ('हेलो दुनिया')'"
#        demo_code: print ('हेलो दुनिया')
#    -   name: input
#        explanation: अब हम ask को हटाते हैं और उसे `input` बोलते हैं| हम ब्रैकेट्स का उपयोग भी करने जा रहे हैं|
#        example: "'उदाहरण: नाम is input('आपका नाम क्या है?')'"
#        demo_code: |-
#            नाम  is input('आपका नाम क्या है?')
#            print ('तो आपका नाम है ' नाम)
#    -   name: for
#        explanation: "अब हम for लूप में संख्याओं के आस पास ब्रैकेट्स लगा रहे हैं| for इ in range(0, 10):"
#        example: "उदाहरण: for इ in range(0,10)"
#        demo_code: |-
#            for इ in range(0,10):
#                print(इ)
#            print('तैयार या नहीं, यहाँ मैं आया')
#13:
#    start_code: |
#        फल is ['सेब', 'केला', 'चेरी']
#        print(फल)
#    intro_text: हम सूचियों के आस पास चोकोर ब्रैकेट्स लगाने जा रहे हैं! अब हमें इकहरा उदाहरण चिन्ह(') लगाने की भी आवश्यकता है सूचियों में वस्तुओं के आस पास|
#    commands:
#    -   name: चोकोर ब्रैकेट्स
#        explanation: हम सूचियों के आस पास चोकोर ब्रैकेट्स लगाने जा रहे हैं! हमें ' लगाने की भी आवश्यकता है सूचियों में वस्तुओं के आस पास|
#        example: "उदाहरण: फल is ['सेब', 'केला', 'चेरी']"
#        demo_code: |
#            फल is ['सेब', 'केला', 'चेरी']
#            print(फल)
#    -   name: सूची में से एक वस्तु को लो
#        explanation: सूची में से एक वस्तु को पाने के लिए हम [संख्या] का उपयोग करते हैं तो फल[१] का मतलब, सूची में से पहला फल लो!
#        example: "उदाहरण: पहलाफल  is फल[१]"
#        demo_code: |
#            फल is ['सेब', 'केला', 'चेरी']
#            पहलाफल is फल[१]
#            print(पहलाफल)
#    -   name: सूची में से क्रमरहित वस्तु को लो
#        explanation: सूची में से क्रमरहित वस्तु को पाने के लिए हम [random] का उपयोग करते हैं तो फल[random] का मतलब, सूची में से एक क्रमरहित फल को लो!
#        example: "उदाहरण: क्रमरहितफल is फल[random]"
#        demo_code: |
#            फल is ['सेब', 'केला', 'चेरी']
#            क्रमरहितफल is फल[random]
#            print(क्रमरहितफल)
#
#
#16:
#    start_code: |-
#        #यह एक प्रोग्राम है जो कई गणित के सवाल पूछने जा रहा है
#        for इ in range(1, 10):
#            #हम ५ का पहाड़ा पूछने जा रहे हैं
#            उत्तर is input(इ ' गुणा ५ क्या है?')
#             #हम जांचते हैं की अगर उत्तर हमारी राशि के समान है
#              सही_उत्तर is i * 5
#              if उत्तर is सही_उत्तर:
#                  print(उत्तर ' सही है')
#               else:
#                   print('वह गलत है, यह होना चाहिए: ' इ*5)
#    intro_text: |-
#        जब आप बड़े प्रोग्राम बना रहे होते हैं, आपको यह याद रखने का एक तरीका ढूँढना होगा की हर एक कोड का टुकड़ा क्या करता है| उसके लिए हम टिप्पणियों का प्रयोग करते हैं| एक टिप्पणी ऐसी दिखती है:
#            ' # यह एक टिप्पणी है'| # के बाद का सब कुछ कोड के लिए अदृश्य हो जाएगा|
#    commands:
#    -   name: टिप्पणी
#        explanation: "हम टिप्पणी जहाँ हम चाहें वहां डाल सकते हैं "
#        example: "# यह एक टिप्पणी है"
#        demo_code: |-
#            # यह प्रोग्राम हेलो छापता है!
#            # यह हेडी में बना है
#            # यह हेलो छापने के अलावा और कुछ नहीं करता!
#            print('हेलो!')
#
#19:
#    start_code: |-
#        सूची is ['पहला', 'दूसरा', 'तीसरा']
#        दूसरामूल्य is सूची[1]
#        print(दूसरामूल्य)
#    intro_text: जब हमारे पास एक सूची होती है, उसमें से हम एक विशिष्ट मूल्य ले सकते हैं| अगर हमें सूची में से दूसरी वस्तु चाहिए, हम टाइप करते हैं 'सूची[२]'
#    commands:
#    -   name: गिनती
#        explanation: हम सूची में से सारे मूल्यों को जोड़ भी सकते हैं
#        example: सूची[1]
#        demo_code: |-
#            सूची is ['१', '२', '३']
#            जोड़ is सूची[1] + सूची[2]
#            जोड़ is जोड़ + सूची[3]
#            # हम यहाँ एक ६ की अपेक्षा करते हैं
#            print(जोड़)
#20:
#    start_code: |-
#        फल is ['सेब', 'केला', 'चेरी']
#        for इ in range(1, 3):
#            print(फल[इ])
#    intro_text: हम सूची में सब देख भी सकते हैं for लूप की सहायता से| क्योंकि सूची में ३ वस्तुएं हैं, इसलिए हम लूप को १ से ३ तक लेते हैं| अब हम लूप में सब कुछ छाप देते हैं|
#    commands:
#    -   name: सूची की लम्बाई
#        explanation: "`length` की सहायता से हम सूची का माप देख सकते हैं| उदाहरण में सूची ३ है क्योंकि सूची में ३ वस्तुएं हैं"
#        example: length(सूची)
#        demo_code: |-
#            फल is ['सेब', 'केला', 'चेरी']
#            print('सूची की लम्बाई है ' length(फल))
#            for इ in range(1, length(फल)):
#                print(फल[इ])
#21:
#    start_code: |-
#        print('५+३ क्या है ?')
#        उत्तर = 5+3
#        print('अब उत्तर है:')
#        print(उत्तर)
#        if उत्तर == 8:
#            print('यह सही है!')
#        else:
#            print('अरे नहीं! यह गलत है!')
#    intro_text: अब हम is को '=' और '==' में बदलने जा रहे हैं| हम '=' का प्रयोग करते हैं अगर हम एक वेरिएबल को एक मूल्य नियुक्त करना चाहते हैं| अगर आप वेरिएबल उत्तर को ८ का मूल्य नियुक्त करना चाहते हैं, तो हम उत्तर =८ करते हैं| '==' का उपयोग हम करते हैं जब हम देखना चाहते हैं अगर दो वस्तुएं समान हों|
#    commands:
#    -   name: तुलना करो
#        explanation: अगर हम तुलना करना चाहते हैं, हम == का उपयोग करते हैं| ५+३==८ जांचता है अगर ५+३ बराबर है ८ के
#        example: 'उदाहरण: ५+३ == ८'
#        demo_code: |-
#            if 5+3 == 8:
#                print('५+३ वास्तव में ८ है')
#            else:
#                 print('यह नहीं छपेगा क्योंकि ५+३ ८ है!')
#    -   name: मूल्य नियुक्त करो
#        explanation: अगर हम कहना चाहते हैं कि उत्तर कहलाने वाला एक वेरिएबल ८ है, हम उत्तर=८ करते हैं
#        example: 'उदाहरण: उत्तर = ८'
#        demo_code: |-
#            print('५+३ क्या है ?')
#            उत्तर = 5+3
#            print('अब उत्तर है:')
#            print(उत्तर)
#    -   name: तुलना और मूल्य नियुक्त करो
#        explanation: अगर हम २ मूल्यों की तुलना करने जा रहे हैं, हम '==' का प्रयोग करते हैं| अगर हम एक वेरिएबल को नियुक्त करने जा रहे हैं, हम '=' का प्रयोग करते हैं|
#        example: 'उदाहरण: ५+३ == ८, उत्तर = ८'
#        demo_code: |-
#            print('५+३ क्या है ?')
#            उत्तर = 5+3
#            print('अब उत्तर है:')
#            print(उत्तर)
#            if उत्तर == 8:
#                print('यह सही है!')
#            else:
#                print('अरे नहीं! यह गलत है!')
#22:
#    start_code: |-
#        देश = input('आप कहाँ रहते हैं?')
#        if भूमि != नेथेरलैंड्स:
#            print('बढ़िया!')
#        else:
#            print('मैं भी नेथेरलैंड्स से हूँ!')
#    intro_text: हम एक नया विषय सीखने जा रहे हैं, `!=` | ! का मतलब होता है नहीं और = का मतलब होता है बराबर, तो != का मतलब होता है बराबर नहीं| उदाहरण के लिए ५!=४|
#    commands:
#    -   name: बराबर नहीं
#        explanation: अगर हम जांच रहे हैं कि दो वस्तुएं बराबर नहीं हैं, हम `!=` का उपयोग करते हैं
#        example: 'उदाहरण: ५+३ != 5'
#        demo_code: |-
#            संख्या = input('आपको ५ बोलने की अनुमति नहीं है, एक बढ़िया संख्या कौनसी है?')
#            if गेटल != 5:
#                print('बढ़िया काम!')
#            else:
#                 print('आपको ५ बोलने की अनुमति नहीं थी!')
