title: "Documentation de Hedy"
sections:
    - title: "Introduction"
      subsections:
        - title: "Qu'est-ce qu'Hedy ?"
          text: |
            Hedy est un langage de programmation textuel, spécifiquement développé pour les (pré-)ados (10 à 15 ans).
            Contrairement aux langages de programmation pour les enfants, comme Scratch, Hedy n'utilise pas de blocs de code.
            Ainsi, avec Hedy vous apprendrez à taper du code comme les vrais programmeurs, mais en petites étapes avec des exercices ludiques.
            De cette façon, Hedy peut fonctionner comme un tremplin vers de vrais langages de programmation comme Python d'une manière accessible et surtout amusante !
            Ici vous pouvez regarder une [vidéo] (https://www.youtube.com/watch?v=EdqT313rM40&amp;t=2s) sur le développement d'Hedy comme un langage de programmation.
        - title: "Audience cible"
          text: |
            Hedy a été développée en pensant aux élèves du collège et du lycée (âgés de 10 à 15 ans).
            Il est important que les élèves soient capables de bien lire. Nous recommandons de ne pas commencer avec Hedy avant que les élèves aient atteint au moins un niveau de lecture de niveau 6ème.
            Les élèves (et les professeurs !) n'ont pas besoin d'expérience de programmation avant de commencer avec Hedy.
        - title: "Comment fonctionne Hedy ?"
          text: |
                Vous trouverez ici une [vidéo d'introduction] (https://www.youtube.com/watch?v=CvButplmN64) sur Hedy, dans laquelle Felienne explique les premières bases.
        - title: "L'enseignement avec Hedy"
          text: |
            Hedy est divisé en niveaux, et dans chacun des niveaux, des nouvelles commandes sont rajoutées. Chaque niveau contient une variété d'exercices pour pratiquer les commandes nouvellement apprises.
            Les exercices peuvent être faits par les élèves individuellement, ou vous pouvez les utiliser dans des cours classiques. Les plans de cours pour chaque niveau sont inclus dans ce manuel de l'enseignant.
            Les plans de leçon et les exercices sont expliqués étape par étape, pour s'assurer que les enseignants moins informés numériquement puissent être aussi en mesure d'utiliser Hedy !
            Bien sûr, Hedy s'adresse aussi aux enseignants créatifs qui aiment faire leurs propres plans de cours et exercices !
        - title: "Appareils"
          text: |
            Hedy est basé sur une application web, ce qui signifie qu'il fonctionne sur n'importe quel appareil avec un navigateur (Google Chrome, Firefox, Edge etc), donc les ordinateurs portables, les chromebooks, les tablettes et même les smartphones sont adaptés pour utiliser Hedy.
            Il n'y a pas besoin de télécharger quoi que ce soit avant de travailler avec Hedy, il suffit d'aller sur le site web et vous êtes prêt !
    - title: "Préparatifs"
      subsections:
        - title: "Réglage de la langue"
          text: |
            Quand les élèves créent le profil ils sont censés choisir une 'langue préférée'. Hedy sera toujours chargé dans cette langue sélectionnée.
            Le changement de cette langue peut toujours être fait plus tard par la navigation à 'Mon profil' et 'Mon profil' encore.
            À partir de décembre 2021, le choix d'une langue préférée est obligatoire pour chaque compte d'Hedy.
            Quand votre compte ou les comptes de vos élèves ont été créés avant cette date, vous recevrez un message qu'une langue préférée est manquante.
            Ne vous inquiétez pas ! Naviguez à 'Mon profil' et définissez une langue dans les paramètres de votre profil.
            Jusqu'à ce que vous définissez une langue, Hedy sera montré dans la langue de votre navigateur et, quand cette langue n'est pas soutenue, en anglais.
        - title: "Sauvegarde des programmes"
          text: |
            Comme vous êtes maintenant connecté, vous verrez la bannière bleue avec Mon profil et Mes programmes.
            Ces onglets existent aussi pour vous, les élèves. Dans Mes programmes, vous pouvez trouver tous les codes qui ont été sauvegardés.

            Vous pouvez sauvegarder vos projets facilement en donnant un nom à votre projet dans la barre blanche et en appuyant sur le bouton vert Enregistrer le code.

            Que la programmation commence !
    - title: "L'enseignement avec Hedy"
      subsections:
        - title: ""
          text: |
            Hedy contient beaucoup de niveaux différents qui enseignent chacun une nouvelle compétence. Nous recommandons d'enseigner un niveau par leçon.
            Cela donne à vos élèves le temps de saisir pleinement une nouvelle commande ou un nouveau concept et de s'exercer avec lui, avant de passer au niveau suivant.
            Nous utilisons cette structure dans nos leçons :
        - title: "Introduction"
          text: |
            Vous pouvez commencer vos leçons en activant les connaissances préalables de vos élèves : Que savent-ils déjà sur le sujet, qu'ont-ils appris dans la leçon précédente et quelles erreurs ont-ils commises dont ils ont maintenant tiré les leçons ?
            De cette façon, toutes les commandes apprises précédemment et les erreurs fréquemment commises sont fraîches dans la mémoire de vos élèves, lorsque vous commencez à présenter la nouvelle leçon.
        - title: "Introduction de nouveaux concepts et de nouvelles commandes"
          text: |
            Les nouveaux concepts et commandes peuvent être très difficiles à comprendre pour certains élèves.
            C'est pourquoi il est important de montrer à vos élèves comment utiliser correctement les nouvelles commandes.
            En particulier dans les niveaux inférieurs, où certains élèves n'ont aucune expérience de la programmation, il peut être difficile pour eux de comprendre les nouveaux concepts abstraits.
            Montrer de nombreux exemples rend un concept abstrait (par exemple : "Qu'est-ce qu'une variable ?") plus reconnaissable et plus facile à comprendre ("Regardez, la variable animal à été changé en chien").
        - title: "Commençons le travail"
          text: |
            Chaque niveau contient différentes aventures que vous pouvez trouver dans les onglets roses. Le premier onglet rose explique les nouvelles commandes de ce niveau.
            Les onglets suivants sont des aventures que les élèves peuvent essayer et créer eux-mêmes.
            Les aventures sont classées du plus facile au plus difficile, nous vous recommandons donc de commencer par la gauche et de vous diriger vers la droite.
            Le dernier onglet "What's next" donne une petite idée de ce que vous apprendrez dans le niveau suivant. Bien entendu, vous pouvez sélectionner les aventures que vous voulez faire faire à vos élèves pour chaque niveau.
            Ils ne sont pas obligés de faire toutes les aventures. Chaque aventure contient un exemple de code, que les élèves peuvent essayer à l'aide du bouton vert.
            Le code d'exemple est copié dans le champ de travail, où les élèves peuvent essayer le code et l'adapter pour se l'approprié.
            Encouragez vos élèves à transformer les codes d'exemple en leurs propres projets en ajoutant leurs propres idées et en créant leur propre variation de l'aventure.
        - title: "Quiz"
          text: |
            Pour vérifier si vos élèves ont assimilé toutes les nouvelles informations du niveau, vous pouvez les laisser faire le quiz.
            Le quiz contient 10 questions à choix multiple sur les nouveaux concepts et la commande de ce niveau.
            Il n'y a pas encore de quiz pour tous les niveaux, car nous sommes encore en train de les rajouter.
        - title: "Évaluation"
          text: |
            Terminez votre leçon par une brève évaluation. Qu'ont appris les élèves ? Quelles difficultés ont-ils rencontrées ?
            Comment ont-ils appris de leurs erreurs ? Et bien sûr : Qu'ont-ils créé ?
            Les élèves sont souvent très fiers de leurs propres créations, il est donc souhaitable de garder un peu de temps pour donner à vos élèves l'occasion de montrer leur travail à leurs camarades de classe.
    - title: "Erreurs fréquentes"
      subsections:
        - title: ""
          text: |
            Vous pouvez apprendre de vos erreurs, surtout en codage !
            Il est inévitable de faire des erreurs, et c'est une excellente occasion d'apprendre, mais pour les enseignants, il peut être difficile de trouver la bonne solution à une erreur !
            D'autant plus que les codes deviennent de plus en plus longs au fil des niveaux. C'est pourquoi nous avons dressé une liste des erreurs fréquemment commises dans chaque niveau, ainsi que leurs solutions.
        - title: "Erreurs courantes au niveau 1"
          text: |
            Ce sont les erreurs fréquemment commises par les élèves du niveau 1 :

            - Les élèves oublient de taper les commandes et écrivent un code sans commencer par `print` par exemple.
            - Les élèves commencent les commandes avec une lettre majuscule, même si toutes les lettres devraient être minuscules.
            - Parfois, les élèves reçoivent des messages d'erreur de leur navigateur indiquant qu'Hedy ne fonctionne pas comme il est censé le faire. La solution consiste à rafraîchir la page Web.

            Tortue :
            - Les élèves laissent leur flèche sortir de l'écran et pensent que le code ne fonctionne pas. Ils devraient utiliser des chiffres plus petits.
            - Les élèves ne savent pas comment faire marcher la tortue en arrière. La tortue peut reculer en utilisant des nombres négatifs, par exemple -100.
        - title: "Erreurs courantes au niveau 2"
          text: |
            Voici les erreurs fréquemment commises au niveau 2 :

            - Les élèves font des fautes de frappe dans les commandes.
            - Les élèves oublient souvent de saisir la variable lorsqu'ils utilisent la commande ask (comme ils ont pu le faire au niveau 1).
            - Les élèves ont parfois tendance à oublier de taper les commandes, par exemple ils commencent leur code sans taper `print` en premier.
            - Les élèves utilisent la commande `echo`, qui ne fonctionne qu'au niveau 1. Au niveau 2, vous pouvez répéter une réponse donnée en utilisant la variable.
            - Les élèves oublient d'utiliser les virgules lorsqu'ils font une liste. Par exemple, ils feraient ce code :
             `animaux est chien chat` au lieu de `animaux est chien, chat`.
            - Les élèves ont tendance à utiliser des virgules après une commande `print`, ce qui n'est pas possible.
            Ex. leur programme: `print Bonjour, je suis Hedy` à la place de `print Bonjour je suis Hedy`

            - Les élèves utilisent le nom d'une variable comme un mot dans une commande d'affichage, ceci est autorisé à partir du niveau 3.

            E.g. They program:

            <pre class="no-copy-button" id="2">
            animaux is chien, chat, vache
            print le meilleur des animaux est …
            print animaux at random
            </pre>
            Ils devraient plutôt changer le mot "animaux" de la deuxième ligne en quelque chose d'autre que "animaux". Par exemple :

            <pre class="no-copy-button" id="2">
            animaux is chien, chat, vache
            print le meilleur animal est …
            print animaux at random
            </pre>
        - title: "Erreurs courantes au niveau 3"
          text: |
            Voici les erreurs fréquemment commises par les élèves du niveau 3

            - Les mêmes erreurs qu'au niveau 2.
            - Les élèves oublient de mettre les guillemets des deux côtés du texte après une commande d'impression.
            - Les élèves utilisent les mauvais guillemets. Le guillemet correct est ' que vous trouvez sur la touche du 4 sur les claviers AZERTY. Des guillemets différents comme les doubles guillemets &quot ; ou le guillemet oblique ` (que l'on trouve dans le coin gauche de la touche 7) ne fonctionneront pas.
            - Les élèves oublient d'utiliser les guillemets dans la commande "ask".
        - title: "Erreurs courantes au niveau 4"
          text: |
            Ce sont les erreurs fréquemment commises par les élèves du niveau 4 :

            - Erreur : Les élèves mettent else sur la ligne suivante, alors qu'il devrait être sur la même ligne que la commande if.
            Code:
            <pre class="no-copy-button" id="4">
            if nom is Hedy print 'bien'
            else print 'bouh!'
            </pre>
            Solution : else doit être sur la même ligne que if.

            <pre class="no-copy-button" id="4">
            if nom is Hedy print 'bien' else print 'bouh!'
            </pre>

            - Erreur : Les élèves utilisent des apostrophes dans une commande d'affichage.
            <pre class="no-copy-button" id="4">
            print 'C'est Hedy'
            </pre>
            Solution: Ne pas utiliser des apostrophes.
            <pre class="no-copy-button" id="4">
            print 'C est Hedy'
            </pre>

            - Erreur : Les élèves oublient d'utiliser la commande print lorsqu'ils utilisent une commande if.
            <pre class="no-copy-button" id="4">
            if nom is Hedy 'bien' else 'bouh!'
            </pre>
            Solution : Utilisez print deux fois lorsque vous utilisez à la fois if et else.
            <pre class="no-copy-button" id="4">
            if nom is Hedy print 'bien' else print 'bouh!'
            </pre>

            - Erreur : Les élèves utilisent des noms différents pour la même variable.
            <pre class="no-copy-button" id="4">
            cheval is ask Quel est ton nom ?
            if moi is Spirit print 'bien' else print 'bouh!'
            </pre>

            Solution : Utilisez toujours le même nom pour votre variable (vérifiez également si le nom de la variable est au singulier ou au pluriel (réponse/réponses)).
            <pre class="no-copy-button" id="4">
            cheval is ask Quel est ton nom ?
            if cheval is Spirit print 'bien' else print 'bouh!'
            </pre>

            - Erreur : Les élèves oublient de taper les deux guillemets après l'impression, lorsqu'ils utilisent if et else.
            <pre class="no-copy-button" id="4">
            if nom is Hedy print bien else print 'bouh!
            </pre>
            Solution : Utilisez toujours deux guillemets (à la fois devant et derrière le texte) pour chaque commande print dans votre code.
            <pre class="no-copy-button" id="4">
            if nom is Hedy print 'bien' else print 'bouh!'
            </pre>

            - Erreur : Les élèves utilisent des guillemets autour d'une variable.
            <pre class="no-copy-button" id="4">
            if 'nom' is 'Hedy' print 'bien' else print 'bouh!'
            </pre>
            Solution : N'utilisez pas de guillemets autour d'une variable.
            <pre class="no-copy-button" id="4">
            if nom is 'Hedy' print 'bien' else print 'bouh!'
            </pre>

            - Erreur : Les élèves donnent des noms aux variables qui se composent de plusieurs mots.
            <pre class="no-copy-button" id="4">
            porte choisie is ask Quel est la porte voulue ?
            </pre>
            Solution : Un nom de variable doit toujours être composé d'un seul mot.
            <pre class="no-copy-button" id="4">
            portechoisie is ask Quel est la porte voulue ?
            </pre>

            - Erreur : Les élèves veulent que plusieurs réponses soient correctes, alors qu'ils utilisent si.
            <pre class="no-copy-button" id="4">
            if nom is Anna, Emma, Paul print 'tu es drôle' else print 'tu n'es pas drôle'
            </pre>
            Solution : Malheureusement, cela n'est pas autorisé. Vous ne pouvez choisir qu'un seul nom pour chaque commande if. En revanche, vous pouvez utiliser plusieurs commandes if dans un même code, comme dans l'exemple ci-dessous :
            <pre class="no-copy-button" id="4">
            nom is ask Quel est ton nom ?

            if nom is Anna print 'tu es drôle'

            if nom is Emma print 'tu es drôle'

            if nom is Paul print 'tu es drôle'
            </pre>
            - Erreur : Les élèves donnent la même réponse en demande que le nom de la variable. Par exemple, cet élève a choisi le mot de passe 'password'.
            <pre class="no-copy-button" id="4">
            motsecret is ask Quel est le mot de passe ?
            If motsecret is motsecret print 'Tu peux entrer' else print 'Stop!'
            </pre>
            Solution : Choisissez un nom différent pour la variable.
            <pre class="no-copy-button" id="4">
            motsecret is ask Quel est le mot de passe ?
            If motsecret is motsecret print 'Tu peux entrer' else print 'Stop!'
            </pre>
        - title: "Erreurs courantes au niveau 5"
          text: |
            Ce sont les erreurs fréquemment commises par les élèves du niveau 5 :

            - Les mêmes erreurs que dans le niveau 4 (voir niveau 4)
            - Les élèves ont tendance à oublier les mots dans cette commande : répéter 3 fois `print`. En particulier les mots `print` ou `times` sont facilement oubliés.