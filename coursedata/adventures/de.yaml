title: "Hedy Abenteuer!"
subtitle: "Du kannst Hedy lernen, indem Du eine Geschichte schreibst, ein Spiel erstellst oder etwas baust, was das Leben einfacher macht."
adventures:
    story:
        name: "Geschichte"
        description: "Schreibe eine Geschichte"
        image: "story.png"
        default_save_name: "Story"
        levels:
            1:
                story_text: |
                    ## Schreibe eine Geschichte
                    In level 1 kannst Du die Hauptfigur Deiner Geschichte ändern, indem Du ihren Namen selbst eingibst.

                    Nutze diesen Code in der ersten Zeile:

                    ```
                    ask Wer ist die Hauptfigur Deiner Geschichte?
                    ```

                    Anschließend, beginne eine Zeile mit `print`, wenn ein Satz ausgegeben werden soll.
                    Nutze `echo`, wenn Du möchtest dass der Name Deiner Hauptfigur am Ende des Satzes steht.

                example_code : |
                    ## Hedy Beispiel-Code

                    ```
                    ask Der Name der Hauptfigur lautet:
                    print Die Hauptfigur läuft nun durch einen dunklen Wald.
                    print Überall sind seltsame Geräusche zu hören.
                    echo Da rief doch jemand seinen / ihren Namen: 
                    print Es ist schon sehr gruselig hier.
                    print Er / Sie befürchtet, dass es in diesem Wald spukt.
                    ```

                start_code: "print Deine Geschichte beginnt genau hier."
            2:
                story_text: |
                    ## Schreibe eine Geschichte
                    In level 2 kannst Du deine Geschichte noch etwas spannender machen.
                    Der Name Deiner Hauptfigur kann nun an jeder Stelle im Satz auftauchen.

                    Dafür musst Du aber auch ein kleines bisschen mehr programmieren.
                    Du musst Dir jetzt seinen oder ihren Namen richtig merken.

                    Dafür kannst Du den Namen irgendwo im Satz verwenden.

                example_code : |
                    ## Hedy Beispiel-Code

                    ```
                    name is ask Wie lautet der Name der Hauptfigur?
                    print name läuft nun durch einen dunklen Wald.
                    print name hat etwas Angst.
                    print Plötzlich ertönen seltsame Geräusche...
                    sleep
                    print name hat Angst, dass es in diesem Wald spukt.
                    ```
                start_code: "print Deine Geschichte beginnt genau hier."
            12:
                story_text: |
                    ## Geschichte
                    In diesem Level kannst Du die Anführungszeichen nutzen, um mehrere Wörter in einer Variable zu speichern.

                example_code : |
                    ## Hedy Beispiel-Code
                    ```
                    name = 'Die Königin von England'
                    print name ' aß ein Stück Kuchen, als plötzlich...'
                    ```
                start_code: ""
            10:
                # Frankly, this section translates to German awfully.
                # Anybody has a good idea that works well in German?
                story_text: |
                    ## Geschichte
                    In diesem Level kannst Du den `for` Befehl für Deine Geschichte nutzen.
                    Damit kannst Du zum Beispiel ganz einfach das Kinderbuch "Brauner Bär, brauner Bär, wen siehst denn Du?" programmieren.

                example_code : |
                    ## Hedy Beispiel-Code
                    ```
                    Tiere = roter Vogel, schwarzes Schaf, grüner Frosch, gelbe Ente, kleines Kind
                    print 'brauner Bär'
                    print 'brauner Bär'
                    print 'Wen siehst denn Du?'
                    for Tier in Tiere
                        print 'Ich sehen ein/e/n ' Tier '. Der/die/das schaut mir zu.'
                        print Tier
                        print Tier
                        print 'Wen siehst denn Du?'
                    print 'Ich sehe all die Tiere. Die schauen mir zu.'
                    ```
                start_code: ""
            9:
                story_text: |
                    ## Geschichte
                    In diesem Level nutzt Du Verschachtelungen, um `if`-, `repeat`- oder `for`-Befehle in anderen `if`-, `repeat`- oder `for`-Befehlen zu verwenden.
                    Das eröffnet Dir viele Möglichkeiten und hilft Dir, Deine Geschichte richtig interaktiv werden zu lassen.

                    ## Einfacher Hedy Beispiel-Code
                    ```
                    print 'Robin läuft durch die Innenstadt.'
                    Ort = ask 'Geht Robin in ein Geschäft oder nach Hause?'
                    if Ort is Geschäft
                        print 'Sie betritt ein Geschäft.'
                        print 'Robin sieht ein Buch, das spannend wirkt.'
                        Buch = ask 'Kauft Robin das Buch?'
                        if Buch is ja
                            print 'Robin kauft das Buch und geht nach Hause.'
                        else
                            print 'Robin verlässt das Geschäft und geht nach Hause.'
                    else
                        print 'Robin geht nach Hause.'
                    ```

                    ## Etwas aufwendiger
                    Das obige Beispiel ist recht simpel, denn mit Verschachtelungen kannst Du richtig aufwendigen Code schreiben und aus Deiner Geschichte ein richtiges Spiel machen.
                    Sieh Dir einmal dieses Beispiel an!

                    ## Aufwendiger Hedy Beispiel-Code
                    ```
                    Schwert is verloren
                    Spiel is an
                    print 'Unsere Heldin läuft durch den Wald.'
                    print 'Der Weg gabelt sich.'
                    repeat 2 times
                        if Spiel is an
                            Pfad is ask 'In welche Richtung soll sie gehen?'
                            if Pfad is links
                                if Schwert is gefunden
                                    print 'Unsere Heldin begegnet einem Drachen!'
                                    print 'Zum Glück hat sie das Schwert gefunden.'
                                    print 'Damit vertreibt sie den Drachen.'
                                    Spiel is aus
                                else
                                    print 'Unsere Heldin begegnet einem Drachen, aber sie hat keine Waffe.'
                                    print 'Unsere Heldin wird durch den Drachen besiegt...'
                                    print 'Versuch es nochmal.'
                                    Spiel is aus
                            if Pfad is rechts
                                if Schwert is verloren
                                    print 'Unsere Heldin findet ein Schwert.'
                                    print 'Das könnte sich noch als nützlich erweisen.'
                                    Schwert is gefunden
                                else
                                    print 'Das Schwert hast Du bereits gefunden.'
                                    print 'Hier gibt es nichts weiter zu entdecken.'
                                    print 'Sie läuft zurück.'
                    ```
                start_code: ""
            8:
                story_text: |
                    ## Geschichte
                    In diesem Level kannst Du mehrere Zeilen zu einem `if`-Befehl hinzufügen.
                    So kannst Du Deine guten und schlechten Enden etwas erweitern.

                example_code : |
                    ## Hedy Beispiel-Code
                    ```
                    print 'OH NEIN! Der T-rex kommt immer näher!'
                    ende = ask 'Soll das Ende gut oder schlecht sein?'
                    if ende is gut
                        print 'Richard springt gerade noch rechtzeitig zurück in seine Zeitmaschine.'
                        print 'Michael gibt den Code ein und...'
                        print 'ZAP!'
                        print '...sind sie zurück in ihrer Garage.'
                    else
                        print 'Michael schreit LOS RICHARD! LAUF SCHNELLER!'
                        print 'Aber Richard ist zu langsam...'
                        print 'Der T-rex holt ihn ein und verschlingt ihn mit einem Biss.'
                    ```
                start_code: ""
            7:
                story_text: |
                    ## Geschichte
                    In einer Geschichte kommt es manchmal vor, dass jemand ein Wort mehrmals hintereinander sagt.
                    So zum Beispiel, wenn jemand um Hilfe ruft, oder etwas singt.
                    Solche Wiederholungen kannst Du mit dem Befehl `repeat` in Deine Geschichte einfügen.
                    Repeat bedeutet wiederholen.

                example_code : |
                    ## Hedy Beispiel-Code
                    ```
                    print 'Der Prinz rief immer wieder um Hilfe.'
                    repeat 5 times print 'Hilfe!'
                    print 'Warum hilft mir niemand?'
                    ```

                start_code: "repeat 5 times print 'Help!'"
            5:
                story_text: |
                    ## Geschichte
                    In diesem Level programmierst Du unterschiedliche Enden, was Deine Geschichte noch spannender werden lässt.

                    Denke Dir einfach eine Geschichte mit zwei möglichen Enden aus, zum Beispiel:

                    - Die Prinzessin läuft durch den Wald.
                    - Sie begegnet einem Monster.

                    - Schönes Ende: Sie zieht ihr Schwert und das Monster ergreift die Flucht.
                    - Nicht so schönes Ende: Das Monster frisst die Prinzessin.

                    Du kannst auch wieder sicherstellen, dass ein Name eingegeben werden kann.
                    Das funktioniert genau wie in den vorherigen Levels.
                    Wenn Du das mit einem `if` kombinierst, dann hast Du bereits ein richtiges Programm!

                example_code : |
                    ## Hedy Beispiel-Code
                    ```
                    name is ask 'Wer läuft durch den Wald?'
                    print name ' läuft durch den Wald.'
                    print name ' begegnet einem Monster.'
                    ende is ask 'Soll das Ende gut oder schlecht sein?'
                    if ende is gut print name ' zieht ihr Schwert und das Monster ergreift die Flucht.'
                    else print 'Das Monster frisst ' name '.'
                    ```
                start_code: "print 'Deine Geschichte beginnt genau hier.'"
            4:
                story_text: |
                    ## Geschichte
                    Vielleicht ist Dir ja aufgefallen, dass es in den letzten Levels ein Problem gab.
                    Hast Du zum Beispiel versucht, einen Satz mit dem Wort Tiere oder dem Wort Name zu schreiben?

                    In diesem Level kannst Du dieses Problem lösen.
                    Setze einfach alles, was Du ausgeben möchtest, in einfache Anführungszeichen.

                example_code : |
                    ## Hedy Beispiel-Code
                    ```
                    Name is Hans
                    print 'Der Name der Hauptfigur lautet ' Name '.'
                    print Name ' läuft nun in den Wald hinein.'
                    print Name ' fürchtet sich ein wenig.'
                    Tiere is Wildschwein, Eichhörnchen, Gürteltier
                    print 'Da hört er plötzlich ein ' Tiere at random '.'
                    print Name ' erschrickt. Es spukt in diesem Wald.'
                    ```
                start_code: "print 'Deine Geschichte beginnt genau hier.'"
            3:
                story_text: |
                    ## Geschichte
                    In Level 3 wird es etwas witziger.
                    Du kannst nun etwas ganz zufälliges zu Deiner Geschichte hinzufügen.
                    Ein beliebiges Monster, ein Tier oder ein Hindernis.

                    Das funktioniert so:
                    ```
                    Tiere is Wildschwein, Eichhörnchen, Gürteltier
                    print Da hört er plötzlich ein Tiere at random
                    ```
                    Den Effekt erkennst Du, wenn Du mehrmals hintereinander auf 'Programm ausführen' klickst.

                    Der Befehl `add` kann in Deiner Geschichte auch sehr nützlich sein.
                    Add bedeutet hinzufügen.
                    Zum Beispiel:
                    ```
                    print Er hört ein Geräusch.
                    Tiere is Wildschwein, Eichhörnchen, Gürteltier
                    Tier is ask Was glaubst Du, was es ist?
                    add Tier to Tiere
                    print Es war ein Tiere at random
                    ```

                    Hier ist ein Beispiel, wie der Befehl `remove` in Deine Geschichte eingebaut werden kann.
                    Remove bedeutet entfernen.
                    ```
                    print Sein Rucksack wurde viel zu schwer.
                    print Darin befanden sich Wasser, eine Taschenlampe und ein Ziegelstein.
                    Tasche is Wasser, Taschenlampe, Ziegelstein
                    wegwerfen is ask Welchen Gegenstand sollte er zurücklassen?
                    remove wegwerfen from Tasche
                    ```
                start_code: "print Deine Geschichte beginnt genau hier."
            15:
                story_text: |
                    ## Geschichte
                    Mit der `while`-Schleife kannst Du Deine Geschichten noch interessanter gestalten.
                    So kannst Du zum Beispiel mit `while Spiel is 'an'` Dein Spiel so lange laufen lassen, bis es tatsächlich vorbei ist.
                    Oder Du lässt die Spieler mit `while Schwert is 'verloren'` so lange weiter suchen, bis sie etwas finden.

                example_code : |
                    ## Hedy Beispiel-Code
                    ```
                    Schlüssel = 'verloren'
                    print 'Du stehst in Deinem Garten, hast jedoch Deine Schlüssel verloren.'
                    print 'Wo willst Du nach ihnen suchen?'
                    print 'Wähle zwischen: Baum, Blumenbeet, Stein, Briefkasten'
                    while Schlüssel == 'verloren'
                        Ort = ask 'Wo willst Du suchen?'
                        if Ort == 'Blumenbeet'
                            print 'Ah, hier sind sie!'
                            Schlüssel = 'gefunden'
                        else
                            print 'Nope, sie sind nicht beim ' Ort '.'
                    print 'Jetzt kannst Du ins Haus!'
                start_code: ""
            13:
                story_text: |
                    ## Geschichte
                    Mit den Befehlen `and` und `or` kannst Du Deine Geschichte etwas abkürzen.
                    Sieh Dir zum Beispiel noch einmal die Geschichte mit dem Drachen an.

                example_code : |
                    ## Hedy Beispiel-Code
                    ```
                    Schwert = 'verloren'
                    Spiel = 'an'
                    print 'Unsere Heldin läuft durch den Wald.'
                    print 'Der Weg gabelt sich.'
                    for i in range 0 to 2
                        if Spiel is 'an'
                            Pfad = ask 'In welche Richtung soll sie gehen?'
                            if Pfad is 'links' and Schwert is 'gefunden'
                                print 'Unsere Heldin begegnet einem Drachen!'
                                print 'Zum Glück hat sie ein Schwert, um das Ungetüm zu besiegen!'
                                Spiel = 'aus'
                            if Pfad is 'links' and Schwert is 'verloren'
                                print 'Unsere Heldin begegnet einem Drachen, sie hat jedoch keine Waffe!'
                                print 'Sie wird vom Drachen besiegt...'
                                print 'Versuche es noch einmal.'
                                Spiel = 'aus'
                            if Pfad is 'rechts' and Schwert is 'gefunden'
                                print 'Das Schwert hast Du bereits gefunden.'
                                print 'Hier gibt es nichts weiter zu entdecken.'
                                print 'Sie geht zurück.'
                            if Pfad is 'rechts' and Schwert is 'verloren'
                                print 'Unsere Heldin findet ein Schwert.'
                                print 'Das könnte sich noch als nützlich erweisen.'
                                Schwert = 'gefunden'
                    ```
                start_code: ""
    parrot:
        name: "Papagei"
        description: "Erschaffe Dir deinen eigenen zahmen Papageien, der Dir alles nachplappert!"
        image: "story.png"
        default_save_name: "Papagei"
        levels:
            1:
                story_text: |
                    ## Papagei
                    Erschaffe Dir deinen eigenen zahmen Papageien, der Dir alles nachplappert!

                example_code : |
                    ## Hedy Beispiel-Code
                    ```
                    print Ich bin Hedy der Papagei!
                    ask Wie lautet Dein Name?
                    echo
                    echo
                    ```
                start_code: "print Ich bin Hedy der Papagei!"
            2:
                story_text: |
                    ## Papagei
                    Lass Deinen zahmen Papageien noch etwas echter klingen!

                example_code : |
                    ## Hedy Beispiel-Code
                    ```
                    print Ich bin Hedy der Papagei.
                    Name is ask Wie lautet Dein Name?
                    print Name
                    sleep
                    print Aaaaaak
                    sleep
                    print Name
                    ```
                start_code: "print Ich bin Hedy der Papagei!"
            3:
                story_text: |
                    ## Papagei
                    Bringe Deinem Papageien mit dem Befehl `add` neue Wörter bei.

                example_code : |
                    ## Hedy Beispiel-Code
                    ```
                    Wörter is Aaaaaaak, Hedy
                    print Bring Deinem Papageien etwas bei!
                    Neues_Wort is ask Welches Wort willst Du ihm beibringen?
                    add Neues_Wort to Wörter
                    print 🧒 Sag Neues_Wort , Hedy!
                    print 🦜 Wörter at random
                    ```
                start_code: ""
            5:
                story_text: |
                    ## Papagei
                    Belohne Deinen Papageien, wenn er das richtige Wort sagt!

                example_code : |
                    ## Hedy Beispiel-Code
                    ```
                    Wörter is Aaaaaaak, Hedy
                    print 'Bring Deinem Papageien etwas bei!'
                    Neues_Wort is ask 'Welches Wort willst Du ihm beibringen?'
                    add Neues_Wort to Wörter
                    gesagtes_Wort is Wörter at random
                    print '🧒 Sag ' Neues_Wort ', Hedy!'
                    print '🦜 ' gesagtes_Wort
                    if gesagtes_Wort is Neues_Wort print '🧒 Gut gemacht, Hedy! 🍪'
                    else print '🧒 Nein, Hedy! Sag ' Neues_Wort '!'
                    ```
                start_code: ""
    songs:
        name: "Singe ein Lied!"
        description: "Geben einen Songtext aus."
        image: "songs.png"
        default_save_name: "Song"
        levels:
            12:
                story_text: |
                    ## Lieder
                    Jetzt machen wir es uns richtig einfach und programmieren 'Wenn Du glücklich bist, dann klatsche in die Hand'.
                    Alles, was wir tun möchten, wenn wir glücklich sind, speichern wir in einer Variablen.
                    Sieh es Dir an:

                example_code: |
                    ## Wenn Du glücklich bist dann klatsche in die Hand
                    ```
                    Aktionen = 'klatsche in die Hand', 'stampfe mit dem Fuß', 'ruf Hurra'
                    for Aktion in Aktionen
                        for i in range 1 to 2
                            print 'Wenn Du glücklich bist, dann ' Aktion '!'
                        print 'Zeig mir, wenn du bei mir bist,'
                        print 'wie dir so zumute ist.'
                        print 'Wenn Du glücklich bist dann ' Aktion '!'
                    ```
                start_code: ""
            11:
                story_text: |
                    ## Lieder
                    In diesem Level nutzt Du den Befehl `for i in range` für Lieder, in denen gezählt wird.
                    Das klappt besonders gut mit 'Five little monkeys'.
                    Wenn Du noch nicht so gut Englisch sprichst, kannst Du Dir die hustenden Würmchen ansehen.

                example_code: |
                    ## 5 little monkeys
                    ```
                    for i in range 5 to 1
                        print i ' little monkeys jumping on the bed'
                        print 'One fell off and bumped his head'
                        print 'Mama called the doctor and the doctor said'
                        if i is 1
                            print 'PUT THOSE MONKEYS RIGHT TO BED!'
                        else
                            print 'NO MORE MONKEYS JUMPING ON THE BED!'
                    ```

                    ## Ein kleines Würmchen hatte Husten
                    ```
                    for i in range 1 to 4
                        if i is 1
                            print i ' kleines Würmchen hatte Husten.'
                        else
                            print i ' kleine Würmchen hatten Husten.'
                        print 'hust hust'
                    for i in range 4 to 1
                        if i is 1
                            print i ' kleines Würmchen hatte Husten.'
                        else
                            print i ' kleine Würmchen hatten Husten.'
                        print 'hust hust'
                    ```
                start_code: ""
            10:
                story_text: |
                    ## Lieder
                    In diesem Level kannst Du ganz einfach das englische Kinderlied 'Five little monkeys' programmieren.
                    Kriegst Du die letzte Strophe auch alleine hin?
                    Wenn Du noch nicht so gut Englisch sprichst, kannst Du es mit Baby Shark versuchen.
                    Inklusive aller Familienmitglieder funktioniert das in nur sechs Zeilen!
                    Und auch "Old MacDonald hat ne Farm" kriegst Du ganz einfach mit allen Tieren hin, die Dir einfallen.

                example_code : |
                    ## 5 Little Monkeys Jumping on the bed
                    ```
                    monkeys = 5, 4, 3, 2
                    for monkey in monkeys
                        print monkey ' little monkeys jumping on the bed'
                        print 'One fell off and bumped his head'
                        print 'Mama called the doctor and the doctor said'
                        print 'NO MORE MONKEYS JUMPING ON THE BED!'
                    ```

                    ## Baby Shark
                    ```
                    Haie = Baby, Mami, Papi, Omi, Opi
                    for Hai in Haie
                        print Hai ' shark tututututudu'
                        print Hai ' shark tututututudu'
                        print Hai ' shark tututututudu'
                        print Hai ' shark'
                    ```
                    ## Old MacDonald hat ne Farm
                    ```
                    Tiere = Schweine, Hunde, Kühe
                    for Tier in Tiere
                        if Tier is Schweine
                            Geräusch = grunz
                        if Tier is Hunde
                            Geräusch = wuff
                        if Tier is Kühe
                            Geräusch = muh
                        print 'Old MacDonald hat ne Farm'
                        print 'I A I A O!'
                        print 'und auf der Farm da gibt es ' Tier
                        print 'I A I A O!'
                        print 'mit nem ' Geräusch Geräusch ' hier'
                        print 'und nem ' Geräusch Geräusch ' da'
                        print 'hier ein ' Geräusch
                        print 'dort ein ' Geräusch
                        print 'überall ein ' Geräusch Geräusch
                        print 'Old MacDonald hat ne Farm'
                        print 'I A I A O!'
                    ```
                start_code: ""
            8:
                story_text: |
                    ## Lieder
                    In einem vorigen Level hast Du das Lied über dei Bierflaschen programmiert.
                    Du hast eine Strophe geschrieben und musstest sie dann 99 mal kopieren!
                    In Level 8 kannst Du die Strophe 99 mal wiederholen lassen, indem Du nur eine einfache Zeile hinzufügst.

                example_code : |
                    ## Hedy Beispiel-Code
                    ```
                    Strophe = 99
                    repeat 99 times
                        print Strophe ' Flaschen Bier an der Wand,'
                        print Strophe ' Flaschen Bier.'
                        print 'Nimm eine runter, reich sie herum,'
                        Strophe = Strophe - 1
                        print Strophe ' Flaschen Bier an der Wand.'
                    ```
                start_code: ""
            7:
                story_text: |
                    ## Lieder
                    In Liedern wiederholt sich oft einiges.
                    So auch im Lied "Baby Shark"!
                    Wenn Du es singst, singst Du eigentlich immer das gleiche:

                    Baby Shark tututudutudu <br>
                    Baby Shark tututudutudu <br>
                    Baby Shark tututudutudu <br>
                    Baby Shark

                    Baby Shark bedeutet übrigens Baby-Hai.
                    Mit dem Befehl `repeat` kannst Du den Song abkürzen.
                    Kannst Du den Code vervollständigen?

                example_code : |
                    ## Hedy Beispiel-Code
                    ```
                    repeat _ _ print 'Baby Shark tututudutudu'
                    print 'Baby Shark'
                    ```

                    Du kannst natürlich auch andere Lieder programmieren.
                    In vielen Liedern wiederholt sich etwas.
                    Fällt Dir eins ein?

                start_code: "print 'Baby Shark'"
            6:
                story_text: |
                    ## Lieder
                    In Liedern wiederholt sich oft einiges.
                    Manchmal beinhaltet die Wiederholung auch, dass etwas gezählt wird.
                    So zum Beispiel beim Lied über die Bierflaschen.
                    Dies ist eigentlich ein englisches Lied und hat den Titel "99 bottles of beer".
                    Dieses Lied kannst Du mit einem kleinen bisschen Mathematik einfach programmieren.

                example_code : |
                    ## Hedy Beispiel-Code
                    ```
                    Strophe = 99
                    print Strophe ' Flaschen Bier an der Wand,'
                    print Strophe ' Flaschen Bier.'
                    print 'Nimm eine runter, reich sie herum,'
                    Strophe = Strophe - 1
                    print Strophe ' Flaschen Bier an der Wand.'
                    ```

                    Du kannst jetzt die Zeilen 2 bis 6 so oft wiederholen, wie Du möchtest.
                    Dazu kopierst Du sie und fügst sie am Ende wieder ein.

                start_code: "print 'Baby Shark'"
            16:
                story_text: |
                    ## Lieder
                    In diesem Level kannst Du 'Old MacDonald hat ne Farm' sogar noch schneller programmieren.
                    Du kannst jedem Tier das richtige Geräusch zuordnen, indem Du sie an die selbe Stelle einer Liste speicherst.
                    Vielleicht kennst Du ja auch schon das englischsprachige Lied 'The Drunken Sailor'.
                    Hierfür benötigst Du nur 8 Zeilen Code.
                    Sieh es Dir an!

                example_code: |
                    ## Old MacDonald hat ne Farm
                    ```
                    Tiere = ['Schweine', 'Hunde', 'Kühe']
                    Geräusche = ['grunz', 'wuff', 'muh']
                    for i in range 1 to 3
                        Tier = Tiere[i]
                        Geräusch = Geräusche[i]
                        print 'Old MacDonald hat ne Farm'
                        print 'I A I A O!'
                        print 'und auf der Farm da gibt es ' Tier
                        print 'I A I A O!'
                        print 'mit nem ' Geräusch Geräusch ' hier'
                        print 'und nem ' Geräusch Geräusch ' da'
                        print 'hier ein ' Geräusch
                        print 'dort ein ' Geräusch
                        print 'überall ein ' Geräusch Geräusch
                        print 'Old MacDonald hat ne Farm'
                        print 'I A I A O!'
                    ```

                    ## Drunken Sailor
                    ```
                    Zeilen = ['what shall we do with the drunken sailor', 'shave his belly with a rusty razor', 'put him in a long boat till hes sober']
                    for Zeile in Zeilen
                        for i in range 1 to 3
                            print Zeile
                        print 'early in the morning'
                        for i in range 1 to 3
                            print 'way hay and up she rises'
                        print 'early in the morning'
                    ```
                start_code: ""
    turtle:
        name: "Schildkröte"
        description: "Zeichne!"
        image: "turtle.gif"
        default_save_name: "turtle"
        levels:
            1:
                story_text: |
                    ## Lass uns zeichnen
                    In Level 1 kannst Du mit Hedy auch zeichnen.
                    Indem Du Drehungen und Linien kombinierst, kannst Du ein Quadrat oder eine Treppe zeichnen.

                    Mit `forward` ziehst Du eine Linie vorwärts.
                    Die Zahl dahinter legt fest, wie weit die Schildkröte wandert.
                    Mit `turn right` ("drehe Dich nach rechts") macht sie eine viertel Umdrehung im Uhrzeigersinn, mit `turn left` ("drehe Dich nach links") entgegen dem Uhrzeigersinn.

                    Das ist der Anfang einer kleinen Treppe.
                    Kannst Du sie so zeichnen, dass sie 5 Stufen hat?

                example_code: |
                    ## Hedy-Beispiel-Code

                    ```
                    turn right
                    forward 50
                    turn left
                    forward 50
                    ```


                start_code: |
                    forward 50
                    turn left
            2:
                story_text: |
                    In Level 1 kann sich die Schildkröte nur nach links und rechts drehen.
                    Das ist etwas langweilig!
                    In Level 2 kann sie ihre Nase in alle Richtungen strecken.

                    Nutze 90, um wieder eine viertel Drehung zu machen.
                    Diese Angabe ist in Grad (°).
                    Eine volle Drehung um sich selbst sind 360° (360 Grad).
                    Kannst Du mit diesem Code eine bestimmte Form zeichnen?
                    Ein Dreieck zum Beispiel, oder einen Kreis?

                example_code: |
                    ## Hedy-Beispiel-Code


                    ```
                    print Formen zeichnen
                    Winkel is 90
                    turn Winkel
                    forward 25
                    turn Winkel
                    forward 25
                    ```
                start_code: |
                    print Schildkrötenrennen!
                    Winkel is 90
                    turn Winkel
                    forward 25
            3:
                story_text: |
                    ## Suchende Schildkröte
                    In diesem Level kannst Du `random` nutzen, während die Schildkröte etwas zeichnet.
                    Durch eine zufällige Wahl nimmt die Schildkröte jedes Mal einen anderen Weg.
                    Nutze `at random` um einen zufälligen Wert einer Liste zu wählen.
                    Wenn Du die Zeilen 2 und 3 kopierst und wieder einfügst, kannst Du einen längeren Pfad erzeugen.

                example_code: |
                    ## Hedy-Beispiel-Code


                    ```
                    Winkel is 10, 50, 90, 150, 250
                    turn Winkel at random
                    forward 25
                    ```

                start_code: |
                    Winkel is 10, 50, 90, 150, 250
                    turn Winkel at random
                    forward 25
            4:
                story_text: |
                    ## Lass uns zeichnen
                    In Level 4 musst Du bei `print` und `ask` Anführungszeichen nutzen.
                    Das gilt auch für's Zeichnen!

                example_code: |
                    ## Hedy-Beispiel-Code

                    ```
                    print 'Formen zeichnen'
                    Winkel is 90
                    turn Winkel
                    forward 25
                    turn Winkel
                    forward 25
                    ```

                start_code: |
                    print 'Formen zeichnen'
                    Winkel is 90
                    turn Winkel
                    forward 25

            5:
                story_text: |
                    ## Lass uns zeichnen
                    In Level 5 kannst Du mit dem Befehl `if` Entscheidungen treffen.
                    Du kannst Dich zum Beispiel zwischen verschiedenen Formen entscheiden.

                example_code: |
                    ## Hedy-Beispiel-Code

                    ```
                    print 'Formen zeichnen'
                    Form is ask 'Möchtest Du ein Quadrat oder ein Dreieck?'
                    if Form is Dreieck Winkel is 120
                    else Winkel is 90
                    turn Winkel
                    forward 25
                    turn Winkel
                    forward 25
                    turn Winkel
                    forward 25
                    turn Winkel
                    forward 25
                    ```
                start_code: |
                    print 'Formen zeichnen'
                    Form is ask 'Möchtest Du ein Quadrat oder ein Dreieck?'
                    if Form is Dreieck Winkel is 120 else Winkel is 90
                    turn Winkel
                    forward 25
            8:
                story_text: |
                    ## Lass uns zeichnen
                    Jetzt, da wir einzelne Linien wiederholen können, fällt uns das Zeichnen einzelner Formen leichter.
                    Wir setzen den Winkel einmalig und nutzen dann die Variable im `repeat`.

                example_code: |
                    ## Hedy-Beispiel-Code

                    ```
                    Winkel = 90
                    repeat 10 times
                        turn Winkel
                        forward 50
                    ```
                story_text_2: |
                    ## Interaktiv
                    Wir können auch das Programm verbessern, das verschiedene Formen zeichnet.
                    Bekommst Du raus, wie weit die Schildkröte sich drehen muss?
                    Vervollständige den Code und sie zeichnet jedes Vieleck, das Du möchtest.

                example_code_2: |
                    ## Hedy-Beispiel-Code

                    ```
                    Ecken = ask 'Wie viele Ecken soll die Form haben?'
                    Winkel = 360 / Ecken
                    repeat Ecken times
                        turn _
                        forward _
                    ```
                start_code: |
                    Ecken = ask 'Wie viele Ecken soll die Form haben?'
            7:
                story_text: |
                    ## Lass uns zeichnen!
                    In diesem Level kannst Du mit dem Befehl `repeat` eine Code-Zeile wiederholen.

                example_code: |
                    ## Hedy-Beispiel-Code

                    ```
                    print 'Formen zeichnen'
                    repeat 3 times forward 10
                    ```
                start_code: |
                    print 'Formen zeichnen'
                    repeat 3 times forward 10

            6:
                story_text: |
                    ## Lass uns zeichnen!
                    In diesem Level nutzen wir Berechnungen, um verschiedene Formen zu zeichnen.
                    Du hast vielleicht schon gelernt, dass eine komplette Umdrehung 360° sind.
                    Falls nicht, dann weißt Du es jetzt!

                    Deswegen benutzen wir immer 90° für ein Rechteck.
                    360 geteilt durch 4 ist 90.

                    Jetzt, da wir Mathe mit Hedy machen können, können wir alle Formen zeichnen, die wir wollen!

                example_code: |
                    ## Hedy-Beispiel-Code

                    ```
                    Ecken = ask 'Wie viele Ecken soll die Form haben?'
                    Winkel = 360 / Ecken
                    forward 50
                    turn Winkel
                    forward 50
                    turn Winkel
                    forward 50
                    turn Winkel
                    forward 50
                    turn Winkel
                    forward 50
                    turn Winkel
                    forward 50
                    turn Winkel
                    ```
                start_code: |
                    print 'Formen zeichnen'
    dishes:
        name: "Abwasch?"
        description: "Nutze den Computer, um zu sehen, wer abwaschen muss (Beginne bei Level 3)"
        image: "dishes.png"
        default_save_name: "Dishes"
        levels:
            10:
                story_text: |
                    ## Abwaschen
                    In diesem Level kannst Du deinen Abwaschplan noch etwas verbessern.

                example_code: |
                    ## Hedy-Beispiel-Code
                    ```
                    Wochentage = Montag, Dienstag, Mittwoch, Donnerstag, Freitag, Samstag, Sonntag
                    Familienmitglieder = Mama, Papa, Emma, Sophie
                    for Tag in Wochentage
                        print Familienmitglieder at random ' ist am ' Tag ' mit dem Abwasch dran.'
                    ```
                start_code: ""
            7:
                story_text: |
                    ## Abwaschen
                    Mit dem Befehl `repeat` kannst Du Code-Zeilen wiederholen.
                    Das kannst Du nutzen, um für jeden Tag der Woche zu bestimmen, wer abwäscht.

                example_code: |
                    ## Hedy-Beispiel-Code

                    ```
                    Familienmitglieder = Mama, Papa, Emma, Sophie
                    repeat _ _ print _ ' ist mit dem Abwasch dran'
                    ```
                start_code: "print 'Wer macht den Abwasch?'"
            6:
                story_text: |
                    ## Abwaschen
                    Wer ist wie oft mit dem Abwasch dran?
                    Ist es gerecht verteilt?
                    In diesem Level kannst Du mitzählen.

                example_code: |
                    ## Hedy-Beispiel-Code

                    ```
                    Familienmitglieder = Mama, Papa, Emma, Sophie
                    Emmas_Anzahl = 0
                    Tellerwäscher = Familienmitglieder at random
                    print 'Den Abwasch macht ' Tellerwäscher
                    if Tellerwäscher is Emma Emmas_Anzahl = Emmas_Anzahl + 1
                    print 'Emma ist diese Woche ' Emmas_Anzahl ' Mal mit dem Abwasch dran'
                    ```

                    Jetzt kannst Du die Zeilen 3-5 ein paar mal kopieren (z.B. weitere 6 Mal für die ganze Woche), um einen Plan für die ganze Woche aufzustellen.
                    Kannst Du den Code für eine ganze Woche schreiben?

                story_text_2: |
                    ## Mache es gerecht
                    Wenn Du ganz großes Pech hast, könnte Dich das vorigen Programm für die ganze Woche als Abwäscher bestimmen.
                    Das ist ungerecht!
                    Um das System gerechter zu gestalten, kannst Du mit dem Befehl `remove` die ausgewählt Person von der Liste entfernen.
                    Auf diese Weise musst Du nicht nochmal abwaschen, bis jeder einmal dran war.

                    Montag and Dienstag sind schon vorbereitet! Kannst Du den Rest der Woche vervollständigen?
                    Und... Kannst Du dir etwas einfallen lassen für den Fall, dass die Liste leer ist?

                example_code_2: |
                    ## Hedy-Beispiel-Code
                    ```
                    Familienmitglieder = Mama, Papa, Emma, Sophie
                    Tellerwäscher = Familienmitglieder at random
                    print 'Am Montag macht ' Tellerwäscher ' den Abwasch.'
                    remove Tellerwäscher from Familienmitglieder
                    Tellerwäscher = Familienmitglieder at random
                    print 'Am Dienstag macht ' Tellerwäscher ' den Abwasch.'
                    remove Tellerwäscher from Familienmitglieder
                    ```

                start_code: "print 'Wer wäscht ab?'"
            5:
                story_text: |
                    ## Abwaschen
                    Mit dem Befehl `if` kannst Du noch etwas mehr Spaß haben, wenn Du die Auswahl auswertest.
                    Du kannst Dein Programm auf die Auswahl, die der Computer trifft, reagieren lassen.

                    Kannst Du den Code so vervollständigen, dass er "So ein Pech" ausgibt, wenn Du dran bist und ansonsten "Zum Glück!"?
                    Vergiss die Anführungszeichen nicht!

                example_code: |
                    ## Hedy-Beispiel-Code

                    ```
                    Familienmitglieder is Mama, Papa, Emma, Sophie
                    Tellerwäscher is Familienmitglieder at random
                    if Tellerwäscher is Sophie print _ So ein Pech. Ich muss abwaschen. _ else print 'Zum Glück kein Abwasch, weil ' _ ' dran ist.'
                    ```
                start_code: "print 'Wer macht den Abwasch?'"
            4:
                story_text: |
                    ## Abwaschen
                    Mit Anführungszeichen kannst Du deine Abwaschplanung etwas verschönern.
                    Dieses Mal ist der Beispiel-Code noch nicht ganz vollständig.

                    Kannst Du den Code vervollständigen, indem Du die Lücken ausfüllst?
                    Jede Lücke muss mit einem Wort oder Symbol ersetzt werden.

                    Tipp: Denke an die Anführungszeichen!
                example_code: |
                    ## Hedy-Beispiel-Code

                    ```
                    Familienmitglieder is Mama, Papa, Emma, Sophie
                    print _ den Abwasch macht heute _
                    sleep
                    print Familienmitglieder at random
                    ```
                start_code: "print 'Wer macht den Abwasch?'"
            3:
                story_text: |
                    ## Abwaschen
                    Gibt es bei Euch zu Hause immer Streit, wer mit dem Abwasch dran ist und wer den Müll raus bringen muss?
                    Dann kannst Du den Computer völlig fair entscheiden lassen.
                    Das kannst Du in diesem Level programmieren.
                    Zunächst legst Du eine Liste Deiner Familienmitglieder an.
                    Anschließend wählst Du mit `at random` zufällig jemanden von der Liste aus.

                example_code: |
                    ## Hedy-Beispiel-Code

                    ```
                    Familienmitglieder is Mama, Papa, Emma, Sophie
                    print Familienmitglieder at random
                    ```
                story_text_2: |
                    ## Hacke den Geschirrspüler!
                    Keine Lust auf abwaschen?
                    Hacke das Spülmaschinenprogramm und entferne Deinen Namen von der Liste.

                example_code_2: |
                    ## Hedy-Beispiel-Code
                    ```
                    Familienmitglieder is Mama, Papa, Emma, Sophie
                    Dein_Name is ask Wer bist Du?
                    remove Dein_Name from Familienmitglieder
                    print Familienmitglieder at random ist heute mit dem Abwasch dran.
                    ```
                start_code: "print Wer macht den Abwasch?"
    dice:
        name: "Würfel"
        description: "Erstelle Deinen eigenen Würfel"
        image: "dice.png"
        default_save_name: "Dice"
        levels:
            10:
                story_text: |
                    ## Dice
                    Is everybody taking too long throwing the dice? In this level you can let Hedy throw all the dice at once!

                example_code: |
                    ## Example Hedy code

                    ```
                    players = Ann, John, Jesse
                    choices = 1, 2, 3, 4, 5, 6
                    for player in players
                        print player ' throws ' choices at random
                        sleep
                    ```
                start_code: ""
            7:
                story_text: |
                    ## Dice
                    You can also make a die again in level 5. With the `repeat` code you can easily roll a whole hand of dice.
                    Try to finish the sample code! The dashes should contain multiple commands and characters.

                    But maybe you want to make a completely different die. Of course you can!

                example_code: |
                    ## Example Hedy code

                    ```
                    choices = 1, 2, 3, 4, 5, earthworm
                    repeat _ _ print _ _ _
                    ```
                start_code: "print 'What will the die indicate this time?'"
            6:
                story_text: |
                    ## Dice
                    You can also make an Earthworm die again in this, but now you can also calculate how many points have been rolled.
                    You may know that the worm counts 5 points for Earthworms. Now after a roll you can immediately calculate how many points you have thrown.
                    This is the code to calculate points for one die:

                example_code: |
                    ## Example Hedy code

                    ```
                    choices = 1, 2, 3, 4, 5, earthworm
                    points = 0
                    throw = choices at random
                    print 'you threw' throw
                    if throw is earthworm points = points + 5 else points = points + throw
                    print 'those are' points ' point'
                    ```
                    Can you make the code so that you get the total score for 8 dice? To do that, you have to cut and paste some lines of the code.

                    ## Looking forward

                    Did you manage to calculate the score for 8 dice? That required a lot of cutting and pasting, right? We are going to make that easier in level 7!
                start_code: "print 'What will the die indicate this time?'"
            5:
                story_text: |
                    ## Dice
                    You can also make a die again in this level using the `if`.
                    Complete the sample code so that the code says "You can stop throwing" once you have thrown an earthworm.

                    But maybe you want to recreate a die from a completely different game. That's fine too! Then make up your own reaction. Eg 'yes' for 6 and 'pity' for something else.

                example_code: |
                    ## Example Hedy code

                    ```
                    choices is 1, 2, 3, 4, 5, earthworm
                    throw is _
                    print 'you have' _ 'thrown'
                    if _ is earthworm print 'You can stop throwing.' _ print 'You have to hear it again!'
                    ```
                start_code: "print 'What will the die indicate this time?'"
            4:
                story_text: |
                    ## Dice
                    In this level we can make sentences with the die value in the sentence, with quotes of course.
                    This time the sample code is not quite complete. Can you finish the code?

                example_code: |
                    ## Example Hedy code

                    ```
                    choices is 1, 2, 3, 4, 5, earthworm
                    print _ you threw _
                    print _ _ _ <- here you have to program the choice
                    ```

                start_code: "print 'What will the die indicate this time?'"
            3:
                story_text: |
                    ## Würfel
                    In diesem Level können wir von einer Liste wählen.
                    Damit können wir den Computer eine Seite des Würfels wählen lassen.
                    Schaut mal in die Brettspiele in Eurem Schrank zu Hause.
                    Haben einige davon (besondere) Würfel?
                    Die kannst Du auch mit diesem Code nachbauen.
                    Zum Beispiel den Würfel aus "Heckmeck am Bratwurmeck" mit den Zahlen 1 bis 5 und einem Regenwurm darauf.

                    ![Würfel aus "Heckmeck am Bratwurmeck" mit den Zahlen 1 bis 5 und einem Regenwurm darauf](https://cdn.jsdelivr.net/gh/felienne/hedy@24f19e9ac16c981517e7243120bc714912407eb5/coursedata/img/dobbelsteen.jpeg)

                example_code: |
                    ## Hedy-Beispiel-Code

                    ```
                    Würfelseiten is 1, 2, 3, 4, 5, Regenwurm
                    print Würfelseiten at random
                    ```

                start_code: "print Was zeigt der Würfel diesmal?"
            15:
                story_text: |
                    ## Dice
                    In this game you have to throw 6 in as little tries as possible.

                example_code: |
                    ## Example Hedy code

                    ```
                    options = 1, 2, 3, 4, 5, 6
                    print 'Throw 6 as fast as you can!'
                    thrown = 0
                    tries = 0
                    while thrown != 6
                        thrown = options at random
                        print 'You threw ' thrown
                        tries = tries + 1
                    print 'Yes! You have thrown 6 in ' tries ' tries.'
                    ```
                start_code: ""
    rock:
        name: "Rock, paper, scissors"
        description: "Make your own rock, paper, scissors game"
        image: "rock.png"
        default_save_name: "Rock"
        levels:
            1:
                story_text: |
                    ## Rock, paper, scissors
                    In level 1 you can start with a rock, paper, scissors  game.

                    With `ask` you can make a choice, and with `echo` you can repeat that choice.

                example_code: |
                    ## Example Hedy code


                    ```
                    print what do you choose?
                    ask choose from rock, paper or scissors
                    echo so your choice was:
                    ```
                    Instead of using words, you could also use emojis of course: ✊✋✌
                start_code: "print Welcome to your own rock scissors paper!"
            10:
                story_text: |
                    ## Rock, Paper, Scissors
                    Feeling too lazy to play the game yourself? Let Hedy play it for you!

                example_code: |
                    ## Example Hedy code

                    ```
                    choices = rock, paper, scissors
                    players = Marleen, Michael
                    for player in players
                         print player ' chooses ' choices at random
                    ```
                start_code: ""
            9:
                story_text: |
                    ## Rock, paper, scissors
                    In this level you can program the whole rock, paper, scissors game by nesting the if-commands. Can you finish the code?
                example_code: |
                    ## Example Hedy code

                    ```
                    choices is rock, paper, scisscors
                    your_choice is ask 'What do you choose?'
                    print 'You choose ' your_choice
                    computer_choice is choices at random
                    print 'The computer chooses ' computer_choice
                    if computer_choice is your_choice
                        print 'Tie'
                    if computer_choice is 'rock'
                        if your_choice is 'paper'
                            print 'You win!'
                        if your_choice is 'scissors'
                            print 'You lose!'
                    ```
                start_code: ""
            5:
                story_text: |
                    ## Rock, paper, scissors
                    In this level we can determine who won.
                    For that you need the new `if` code.

                    Save your choice with the name of choice and the choice of computer as computer choice.
                    Then you can use `if` to see if they are the same or different.
                    Will you finish the code?

                example_code: |
                    ## Example Hedy code

                    ```
                    options is rock, paper, scissors
                    computer_choice is _
                    choice is ask What do you choose?
                    print 'you chose ' _
                    print 'computer chose ' _
                    if _ is _ print 'tie!' else print 'no tie'
                    ```

                    Fill in the correct code on the blanks to see if it is a draw.

                start_code: "print 'Welcome to your own rock scissors paper!'"
            4:
                story_text: |
                    ## Rock, paper, scissors
                    In this level we can further program rock, paper, scissors. But if you want to add text, you have to use quotation marks here too.
                    Do you complete the code by entering the correct commands or characters on the underscores?

                example_code: |
                    ## Example Hedy code

                    ```
                    choices is rock, paper, scissors
                    print _ The computer chose: _ _ at _
                    ```
                start_code: "print 'Welcome to your own rock scissors paper!'"
            3:
                story_text: |
                    ## Rock, paper, scissors

                    In this level we can enter lists and choose things from them.
                    You first make a list with `is`. Then you can let the computer choose something from the list with `at random`.
                    For example, you can let the computer pick from rock, paper and scissors.

                example_code: |
                    ## Example Hedy code


                    ```
                    choices is rock, paper, scissors
                    print choices at random
                    ```
                start_code: "print Welcome to your own rock scissors paper!"
            2:
                story_text: |
                    ## Rock, paper, scissors
                    In this level you can practise using the variables, so that you can make the rock, paper, scissors game in the next level!

                example_code: |
                    ## Example Hedy code

                    ```
                    choice is _
                    print I choose choice
                    ```
                start_code: ""
            15:
                story_text: |
                    ## Rock, Paper, Scissors
                    Play until you beat the computer! But first, finish the example code...

                example_code: |
                    ## Example Hedy code

                    ```
                    won = 'no'
                    options = 'rock', 'paper', 'scissors'
                    while won == 'no'
                        your_choice = ask 'What do you choose?'
                        computer_choice = options at random
                        print 'you chose ' your_choice
                        print 'the computer chose ' computer_choice
                        if computer_choice == your_choice
                            print 'Tie!'
                        if computer_choice == 'rock' and your_choice == 'scissors'
                            print 'You lose!'
                        if computer_choice == 'rock' and your_choice == 'paper'
                            print 'You win!'
                            won = 'yes'
                start_code: ""
            13:
                story_text: |
                    ## Rock, paper, scissors
                    With the `and` command you can shorten your rock, paper, scissors code! Check out the example code below and try to finish it.

                example_code: |
                    ## Example Hedy code

                    ```
                    options = 'rock', 'paper', 'scissors'
                    your_choice = ask 'What do you choose?'
                    computer_choice = options at random
                    print 'You choose ' your_choice
                    print 'The computer chooses ' computer_choice
                    if computer_choice is your_choice
                        print 'Tie'
                    if computer_choice is 'rock' and your_choice is 'paper'
                        print 'You win!'
                    if computer_choice is 'rock' and your_choice is 'scissors'
                        print 'The computer wins!'
                    ```
                start_code: ""
    calculator:
        name: "Calculator"
        description: "Create a calculator"
        image: "calculator.png"
        default_save_name: "Calculator"
        levels:
            14:
                story_text: |
                    ## Guess which number
                    In this level you can programm the game 'Guess which number'

                example_code: |
                    ## Example Hedy code

                    ```
                    print 'Guess which number'
                    numbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
                    number = numbers at random
                    game = 'on'
                    for i in range 1 to 10
                        if game == 'on'
                            guess = ask 'Which number do you think it is?'
                            if guess > number
                                print 'Lower!'
                            if guess < number
                                print 'Higher!'
                            if guess == number
                                print 'You win!'
                                game = 'over'
                start_code: ""
            12:
                story_text: |
                    ## Calculator
                    Now you can make a calculator that works for decimal numbers.

                example_code: |
                    ## Example Hedy code

                    ```
                    number1 = ask 'What is the first number?'
                    number2 = ask 'What is the second number?'
                    answer = number1 + number2
                    print number1 ' plus ' number2 ' is ' answer
                start_code: ""
            10:
                story_text: |
                    ## Calculator
                    This calculator game helps you practise your tables of multiplication!
                    If you add more numbers to the list, you can practise all the multiplications.

                example_code: |
                    ## Example Hedy code

                    ```
                    numbers = 1, 2, 3
                    for number1 in numbers
                        for number2 in numbers
                            answer = ask 'How much is ' number2 ' times ' number1 '?'
                            correct = number1 * number2
                            if answer is correct
                                print 'Great job!'
                            else
                                print 'Thats wrong. The right answer is ' correct
                    ```
                start_code: ""
            9:
                story_text: |
                    ## Calculator
                    In previous levels you've learned how to make a calculator, in this level you can expand that code and make it into a little maths game. Like this...

                example_code: |
                    ## Example Hedy code

                    ```
                    score = 0
                    repeat 10 times
                        numbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
                        number1 = numbers at random
                        number2 = numbers at random
                        correct_answer = number1 * number2
                        print 'What is ' number1 ' times ' number2 '?'
                        answer = ask 'Type your answer here...'
                        print 'Your answer is' answer
                        if answer is correct_answer
                            score = score + 1
                    print 'Great job! Your score is... ' score ' out of 10!'
                    ```
                start_code: "print 'Welcome to this calculator!'"
            6:
                story_text: |
                    ## Calculator
                    Now that you can calculate, you can also create a program to practice maths calculations. You can make up the calculations yourself, for example:

                example_code: |
                    ## Example Hedy code

                    ```
                    correct_answer = 11 * 27
                    answer = ask 'How much is 11 times 27?'
                    if answer is correct_answer print 'good job!'
                    else print 'Wrong! It was ' correct_answer
                    ```
                story_text_2: |
                    ## Random numbers
                    You can also let the computer do random sums on its own using random.
                    This is how you choose a number of tables to practice, and from that you always get a different sum:

                example_code_2: |
                    ## Example Hedy code

                    ```
                    tables = 4, 5, 6, 8
                    numbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
                    table = tables at random
                    number = numbers at random
                    correct_answer = table * number
                    answer = ask 'how much is ' table ' times ' number '?'
                    if answer is correct_answer print 'okay'
                    else print 'mistake! it was ' correct_answer
                    ```

                start_code: "print 'Welcome to this calculator!'"
            15:
                story_text: |
                    ## Calculator
                    You can add the `while` loop to the calculator game you've learned to make in a previous level.
                    This makes sure the player can't continue to the next question if they answer incorrectly.

                example_code: |
                    ## Example Hedy code

                    ```
                    score = 0
                    for i in range 0 to 9
                        numbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
                        number1 = numbers at random
                        number2 = numbers at random
                        correct = number1 * number2
                        answer = 0
                        while answer != correct
                            print 'How much is ' number1 ' times ' number2 '?'
                            answer = ask 'Fill in your answer:'
                            print 'Your answer is ' answer
                        print 'Good job!'
                    print 'You win!'
                    ```
                start_code: ""
    restaurant:
        name: "Restaurant"
        description: "Create your own virtual restaurant"
        image: "restaurant.png"
        default_save_name: "Restaurant"
        levels:
            1:
                story_text: |
                    ## Restaurant
                     In level 1 you can make your own virtual restaurant and take your guests' orders.

                example_code: |
                    ## Example Hedy code

                      ```
                     print Welcome to Hedy's restaurant 🍟
                     ask What would you like to order?
                     echo So you would like to order
                     print Thanks you for your order!
                     print It's on its way!
                     ```

                    ## Challenge
                    Can you think of more lines to add to your restaurant code? For example, can you ask the guests what they'd like to drink, tell them the price, or wish them a pleasant meal?
                start_code: ""
            2:
                story_text: |
                    ## Restaurant
                    In level 2 you could expand your restaurant by using variables. In level 1 Hedy could only echo the order once and only remember the last thing that was ordered.
                    Now you can use variables and Hedy can remember both the food and the drinks!

                    ## Example Hedy Restaurant
                    ```
                    print Welcome to Hedy's restaurant!
                    print Today we're serving pizza or lasagna.
                    food is ask What would you like to eat?
                    print Great choice! The food is my favorite!
                    topping is ask Would you like meat or veggies on that?
                    print food with topping is on its way!
                    drinks is ask What would you like to drink with that?
                    print Thank you for your order.
                    print Your food and drinks will be right there!
                    ```
                start_code: ""
            12:
                story_text: |
                    ## Restaurant
                    From this level on you can use decimal numbers to make you menu more realistic.

                example_code: |
                    ## Example Hedy code

                    ```
                    price = 0
                    food = ask 'What would you like to order?'
                    drinks = ask 'What would you like to drink?'
                    if food is 'hamburger'
                        price = price + 6.50
                    if food is 'pizza'
                        price = price + 5.75
                    if drinks is 'water'
                        price = price + 1.20
                    if drink is 'soda'
                        price = price + 2.35
                    print 'That will be ' price ' dollar, please'
                    ```
                start_code: ""
            11:
                story_text: |
                    ## Restaurant
                    We can use the `for i in range 1 to 5` to print the orders from multiple customers in an orderly manner.

                example_code: |
                    ## Example Hedy code

                    ```
                    print 'Welcome to Restaurant Hedy!'
                    people = ask 'For how many people would you like to order?'
                    for i in range 1 to people
                        print 'Order number ' i
                        food = ask 'What would you like to eat?'
                        print food
                        if food is fries
                            sauce = ask 'What kind of sauce would you like with that?'
                            print sauce
                        drinks = ask 'What would you like to drink?'
                        print drinks
                    price = 4 * people
                    print 'That will be ' price ' dollars, please!'
                    ```
                start_code: ""
            10:
                story_text: |
                    ## Restaurant
                    In this level you'll learn how to easily ask your guests' orders in a short code.

                example_code: |
                    ## Example Hedy code

                    ```
                    courses = appetizer, main course, dessert
                    for course in courses
                        food = ask 'What would you like to eat as your ' course '?'
                        print food ' will be your ' course
                    ```

                story_text_2: |
                    ## Example Hedy code

                    Of course, you could also order for multiple people!

                example_code_2: |
                    ```
                    courses = appetizer, main course, dessert
                    names = Timon, Onno
                    for name in names
                        for course in courses
                            food = ask name ', what would you like to eat as your ' course '?'
                            print name ' orders ' food ' as their ' course
                    ```
                start_code: "courses = appetizer, main course, dessert"
            9:
                story_text: |
                    ## Restaurant
                    In this level you can use nesting to make your restaurant more realistic and more fun!
                    For example you would ask for sauce if somebody orders fries, but you wouldn't if someone orders pizza!
                    Check out the example, and try this at your own virtual restaurant!

                example_code: |
                    ## Example Hedy code

                    ```
                    print 'Welcome to Hedys restaurant!'
                    people = ask 'How many people will be joining us today?'
                    print 'Great!'
                    price = 0
                    repeat people times
                        food = ask 'What would you like to order?'
                        print food
                        if food is fries
                            price = price + 3
                            sauce = ask 'What kind of sauce would you like with your fries?'
                            if sauce is no
                                print 'no sauce'
                            else
                                price = price + 1
                                print 'with ' sauce
                        if food is pizza
                            price = price + 4
                    print 'That will be ' price ' dollar'
                    print 'Enjoy your meal!'
                    ```
                start_code: ""
            8:
                story_text: |
                    ## Restaurant
                    In this level you can make your virtual restaurant more elaborate by repeating multiple lines of code. Like this:

                    ```
                    print 'Welcome to Hedys restaurant!'
                    people = ask 'How many people will be joining us today?'
                    print 'Great!'
                    repeat people times
                        food = ask 'What would you like to order?'
                        print food
                    print 'Thank you for ordering!'
                    print 'Enjoy your meal!'
                    ```

                    ## Challenge
                    Of course, this code can be expanded with more items on the menu, offering drinks, and/or multiple courses, so feel free to add as many options as you like!
                start_code: ""
            7:
                story_text: |
                    ## Restaurant
                    In this level you've learned how to use the repeat command to repeat a line of code a certain amount of times.
                    You can use that in your restaurant to ask multiple people what they'd like to eat. Like this:

                    ```
                    print 'Welcome to Hedys restaurant!'
                    people = ask 'How many people are joining us today?'
                    repeat people times food = ask 'What would you like to eat?'
                    print 'Thanks for your order! Its coming right up!'
                    ```
                start_code: ""
            6:
                story_text: |
                    ## Restaurant
                    In this level you can use maths to calculate the total price of your customer's order, which can make your virtual restaurant more realistic.

                example_code: |
                    ## Example Hedy code (Simple)
                    You can make a simple restaurant code, like this:
                    ```
                    print 'Welcome to Hedys restaurant'
                    print 'Here is our menu:'
                    print 'Our main courses are pizza, lasagne, or spaghetti'
                    main = ask 'Which main course would you like?'
                    price = 0
                    if main is pizza price = 10
                    if main is lasagne price = 12
                    if main is spaghetti price = 8
                    print 'You have ordered ' main
                    print 'That will be ' price ' dollars, please'
                    print 'Thank you, enjoy your meal!'
                    ```
                story_text_2: |
                    But you can also add many more things to your virtual restaurant, for example more courses.

                example_code_2: |
                    ## Example Hedy code(Elaborate)
                    In this example there are three courses, which requires more code and more additions in calculating the price.
                    ```
                    print 'Welcome to Hedys restaurant'
                    print 'Here is our menu:'
                    print 'Our starters are salad, soup, or carpaccio'
                    print 'Our main courses are pizza, lasagne, or spaghetti'
                    print 'Our desserts are brownie, icecream, or milkshake'
                    starter = ask 'Which starter would you like to have?'
                    main = ask 'Which main course would you like?'
                    dessert = ask 'Which dessert do you pick?'
                    price = 0
                    if starter is soup price = price + 6 else price = price + 7
                    if main is pizza price = price + 10
                    if main is lasagne price = price + 12
                    if main is spaghetti price = price + 8
                    if dessert is brownie price = price + 7
                    if dessert is icecream price = price + 5
                    if dessert is milkshake price = price + 4
                    print 'You have ordered ' starter ' , ' main ' and ' dessert
                    print 'That will be ' price ' dollars, please'
                    print 'Thank you, enjoy your meal!'
                    ```
                    ## Challenge
                    You can add many more things to your virtual restaurant. For example, can you...
                    - ask how many people are coming and multiply the price by that amount?
                    - add another course?
                    - give people a discount when they enter a (secret) couponcode?
                    - add a children's menu?
                    - think of other fun things to add?

                start_code: ""
            5:
                story_text: |
                    ## Restaurant
                    In this level the if command allows you to ask your customers questions and give different responses to the answers.
                    In the example below, you see that you can ask the customer if they want to hear the specials and Hedy can respond accordingly.

                example_code: |
                    ## Example Hedy code

                    ```
                    print 'Welcome to Hedys restaurant!'
                    special is ask 'Would you like to hear our specials today?'
                    if special is yes print 'Todays special is chicken piri piri and rice.' else print 'No problem.'
                    food is ask 'What would you like to eat?'
                    print 'One ' food ', coming right up!'
                    drink is ask 'What would you like to drink with that?'
                    if drink is cola print 'Im sorry, we are out of cola!' else print 'Great choice!'
                    anything is ask 'Would you like anything else?'
                    print 'Let me repeat your order...'
                    print 'One ' food
                    if drink is cola print 'and...' else print 'One ' drink
                    if anything is no print 'Thats it!' else print 'One ' anything
                    print 'Thank you for your order and enjoy your meal!'
                    ```

                    ## Challenge
                    Can you think of more questions to ask the customers when they are ordering, and make up different responses to their answers by using the if command?

                start_code: ""
            4:
                story_text: |
                    ## Restaurant
                    In thsi level you have to use quotation marks when using the `print` command.
                    Can you make your code from the previous levels work in this level too by adding the quotation marks?

                    Be careful! In the previous levels apostrophes were allowed in the text, but in this level Hedy will confuse them for quotation marks and the code will not work!
                    So instead of typing  `print Today we're serving pizza` , you should type `print 'Today we are serving pizza'`

                    ## Example Hedy Restaurant
                    ```
                    print 'Welcome to Hedys restaurant!'
                    print 'Today we are serving pizza or lasagna.'
                    food is ask 'What would you like to eat?'
                    print 'Great choice! The ' food ' is my favorite!'
                    topping is ask 'Would you like meat or veggies on that?'
                    print food ' with ' topping ' is on its way!'
                    drinks is ask 'What would you like to drink with that?'
                    print 'Thank you for your order.'
                    print 'Your ' food ' and ' drinks ' will be right there!'
                    ```
                start_code: ""
            3:
                story_text: |
                    ## Random Restaurant
                    Having trouble to decide what you wanna have for dinner? You can let Hedy choose for you!
                    Simply add lists of your favorite (or least favorite) meals and Hedy can randomly choose your dinner.
                    You can also have a bit of fun, by letting Hedy choose the price for your dinner as well! What will you get?

                example_code: |
                    ## Example Hedy code

                    ```
                    print Welcome to Hedy's Random Restaurant!
                    print The only restaurant that will randomly choose your meal and its price for you!
                    starters is salad, soup, carpaccio
                    mains is pizza, brussels sprouts, spaghetti
                    desserts is brownies, ice cream, french cheeses
                    drinks is cola, beer, water
                    prices is 1 dollar, 10 dollars, 100 dollars
                    print You will start with: starters at random
                    print Then we'll serve: mains at random
                    print And as dessert: desserts at random
                    print You will get a drinks at random to drink
                    print That will be: prices at random
                    print Thank you and enjoy your meal!
                    ```
                story_text_2: |
                    ## Allergies
                    Does your costumer have any allergies or do they dislike certain dishes? Then you can use the `remove`command to remove it from your menu.

                example_code_2: |
                    ```
                    print Mystery milkshake
                    flavors is strawberry, chocolate, vanilla
                    allergies is ask Are you allergic to any falvors?
                    remove allergies from flavors
                    print You get a flavors at random milkshake
                    ```
                start_code: ""
            15:
                story_text: |
                    ## Restaurant
                    With the `while` you can make sure your costumers can keep adding orders until they are done.

                example_code: |
                    ## Example Hedy code

                    ```
                    print 'Welcome at McHedy'
                    more = 'yes'
                    while more == 'yes'
                        order = ask 'What would you like to order?'
                        print order
                        more = ask 'Would you like to order anything else?'
                    print 'Thank you!'
                start_code: ""
            13:
                story_text: |
                    ## Restaurant
                    In this level we can use the new commands to upgrade our restaurant.
                    We use `and` to see if two things are both the case.

                example_code: |
                    ## Example Hedy code
                    ```
                    price = 10
                    food = ask 'What would you like to eat?'
                    drinks = ask 'What would you like to drink?'
                    if food is 'sandwich' and drinks is 'juice'
                        print 'Thats our discount menu'
                        price = price - 3
                    print 'That will be ' price ' dollars'
                    ```
                story_text_2: |
                    We use `or` to see if one our of two things is the case.

                example_code_2: |
                    ## Example Hedy code
                    ```
                    drinks = ask 'What would you like to drink?'
                    if drinks is 'water' or drinks is 'juice'
                        print 'Thats a healthy choice'
                    ```
                start_code: ""
    fortune:
        name: "Fortune teller"
        description: "Let Hedy predict the future"
        image: "fortuneteller.png"
        default_save_name: "Fortune Teller"
        levels:
            1:
                story_text: |
                    ## Fortune Teller
                    Have you ever been to a carnival and had your future predicted by a fortune teller? Or have you ever played with a magic eight ball?
                    Then you probably know that they can't really predict your future, but it's still fun to play!

                    In the upcoming levels you can learn how to create your own fortune telling machine!
                    In level 1 you can start off easy by letting Hedy introduce herself as a fortune teller and let her echo the players' answers.
                    Like this:

                example_code: |
                    ## Example Hedy code

                    ```
                    print Hello, I'm Hedy the fortune teller!
                    ask Who are you?
                    print Let me take a look in my crystal ball
                    print I see... I see...
                    echo Your name is
                    ```

                    ## Challenge
                    Hedy now only tells you your name. Can you expand the code so that Hedy can predict more things about you?

                    Obviously, Hedy isn't a very good fortune teller yet, as she can only repeat the answers that were given by the players!
                    Take a look in level 2 to improve your fortune teller.

                start_code: ""
            12:
                story_text: |
                    ## Fortune Teller
                    In this level you can make your fortunes multiple words. Like in this example below:

                example_code: |
                    ## Example Hedy code

                    ```
                    fortunes = 'you will be rich', 'you will fall in love', 'you will slip on a banana peel'
                    print 'I will take a look in my crystall ball for your future.'
                    print 'I see... I see...'
                    sleep
                    print fortunes at random
                    ```
                start_code: ""
            10:
                story_text: |
                    ## Fortune Teller
                    In this level you'll learn how to program the game MASH (mansion, apartement, shack, house). In this game you can predict for all the players at once, what their future will look like.

                example_code: |
                    ## Example Hedy code

                    ```
                    houses = mansion, apartment, shack, house
                    loves = nobody, a royal, their neighbour, their true love
                    pets = dog, cat, elephant
                    names = Jenna, Ryan, Jim
                    for name in names
                        print name ' lives in a ' houses at random
                        print name ' will marry ' loves at random
                        print name ' will get a ' pets at random ' as their pet.'
                        sleep
                    ```
                story_text_2:
                    We can also make a Harry Potter themed fortune teller.

                example_code_2: |
                    ## Example Hedy code
                    ```
                    houses = Gryffindor, Slytherin, Hufflepuff, Ravenclaw
                    subjects = potions, defence against the dark arts, charms, transfiguration
                    fears = Voldemort, spiders, failing your OWL test
                    names = Harry, Ron, Hermione
                    for name in names
                        print name ' is placed in ' houses at random
                        print name ' is great at ' subjects at random
                        print name 's greatest fear is ' fears at random
                    ```
                start_code: ""
            8:
                story_text: |
                    ## Fortune Teller
                    In the previous levels you've learned how to use repeat to make the fortune teller answer 3 questions in a row, but we had a problem with printing the questions.
                    Now that problem is solved, because of the new way of using the repeat command.
                    In the next example you can have your fortune teller ask 3 questions and also print them!

                example_code: |
                    ## Example Hedy code

                    ```
                    print 'I am Hedy the fortune teller!'
                    print 'You can ask me 3 questions.'
                    answers = yes, no, maybe
                    repeat 3 times
                       question = ask 'What do you want to know?'
                       print question
                       sleep
                       print 'My crystal ball says...' answers at random
                    ```
                start_code: ""
            7:
                story_text: |
                    ## Fortune Teller
                    In this level you can use the `repeat` command to make your machine tell multiple fortunes at once.

                example_code: |
                    ## Example Hedy code

                    ```
                    print 'Im Hedy the fortune teller!'
                    print 'You can ask 3 questions!'
                    repeat 3 times question = ask 'What do you want to know?'
                    answer = yes, no, maybe
                    repeat 3 times print 'My crystal ball says... ' answer at random
                    ```

                    ## Challenge
                    As you can see, the questions aren't printed in this example. That's because the variable `question` was changed 3 times.
                    Every time the player fills in the new answer, Hedy overwrites the previous one, so the first answer the player gave is forgotten.
                    This means you can't print all the questions this way.

                    By using 3 different variables instead of 1 (for example `question1` , `question2` and `question3`), you could solve the problem and print the questions.
                    This does mean that you can only use `repeat` for the answers, and you will have to ask and print all the questions separately.
                    Can you do it?

                    In the upcoming levels the layout of repeat command will change, which enables you to repeat multiple lines at once.
                start_code: ""
            6:
                story_text: |
                    ## Fortune Teller
                    In this level you can use math in your predictions as a fortune teller. This allows you to make up (silly) formulas to calculate the future.
                    For example you could calculate how rich you'll get or how many kids you will have when you grow up.

                example_code: |
                    ## Example Hedy code

                    ```
                    print 'I am Hedy the fortune teller!'
                    print 'I can predict how many kids youll get when you grow up!'
                    age = ask 'How old are you?'
                    siblings = ask 'How many siblings do you have?'
                    length = ask 'How tall are you in centimetres?'
                    kids = length / age
                    kids = kids - siblings
                    print 'You will get ...'
                    sleep
                    print kids ' kids!'
                    ```

                    ## Example Silly Fortune Teller
                    If the previous example wasn't silly enough for you, take a look at this one!

                    ```
                    print 'Im Hedy the silly fortune teller!'
                    print 'I will predict how smart you are!'
                    football = ask 'On a scale 1-10 how much do you love football?'
                    bananas = ask 'How many bananas did you eat this week?'
                    hygiene = ask 'How many times did you wash your hands today?'
                    result = bananas + hygiene
                    result = result * football
                    print 'You are ' result ' percent smart.'
                    ```
                start_code: ""
            5:
                story_text: |
                    ## Fortune Teller
                    In thsi level you'll learn to (secretly) tip the odds in your favor, when using the fortune teller!
                    By using `if` and `else` you can make sure that you will always get a good fotune, while other people might not.
                    Check out this example to find out how.

                example_code: |
                    ## Example Hedy code

                    ```
                    print 'Im Hedy the fortune teller!'
                    print 'I can predict if youll win the lottery tomorrow!'
                    person is ask 'Who are you?'
                    if person is Hedy print 'You will definitely win!🤩' else print 'Bad luck! Someone else will win!😭'
                    ```

                story_text_2: |
                    Replace Hedy with your own name in the last line, and Hedy will always predict that you will win the lottery and others won't!
                    Of course this might raise some suspicion with the other players... To avoid that, you can make sure that Hedy does give different answers every time you run the code.
                    But of course, still gives you a positive answer and the other players a negative one.

                example_code_2: |
                    ## Example Hedy code
                    ```
                    print 'Im Hedy the fortune teller!'
                    print 'I can predict if you will win the lottery tomorrow!'
                    person is ask 'Who are you?'
                    goodanswer is Hurray! You win!, You will definitely win!, We have a winner!
                    badanswer is Bad luck! Try again!, Another person will win, You lose!
                    if person is Hedy print goodanswer at random else print badanswer at random
                    ```

                    ## Challenges
                    This concept can be used to make may different programs, just be creative! For example you could create a machine that predicts that your favorite sports team will beat all the competitors!
                    Or you could make  Snow White's magic mirror on the wall, to tell everyone you are the fairest of them all!
                    Let your imagination do the work!

                start_code: ""
            4:
                story_text: |
                    ## Fortune Teller
                    This level has no new functions, but allows you to practice with using the quotation marks.
                    You can remake your level 3 code, and make sure to add the quotation marks in the right places!

                    Mind that in level 3, we couldn't use the word 'question' as both the name of the variable and a normal word that could be printed.
                    The quotation marks in level 3 make this possible!

                    Important! Mind that now that we're using quotation marks, Hedy will get confused when you use the apostrophe for contractions like I'm or What's.
                    Make sure to remove those apostrophes and change the spelling to Im or Whats.

                example_code: |
                    ## Example Hedy code

                    ```
                    print 'Im Hedy the fortune teller!'
                    question is ask 'What do you want to know?'
                    print 'This is your question: ' question
                    answers is yes, no, maybe
                    print 'My crystal ball says...'
                    sleep 2
                    print answers at random
                    ```
                start_code: ""
            3:
                story_text: |
                    ## Fortune Teller
                    In the previous levels you've created your first fortune telling machine, but Hedy couldn't really predict anything, only echo.
                    In this level you can use a variable and the `at random` command to really let Hedy choose an answer for you. Check out this code for instance:

                example_code: |
                    ## Example Hedy code

                    In this example the player can ask Hedy a yes-no question and Hedy will pick a random answer for you.
                    ```
                    print I’m Hedy the fortune teller!
                    question is ask What do you want to know?
                    print This is what you want to know: question
                    answers is yes, no, maybe
                    print My crystal ball says...
                    sleep 2
                    print answers at random
                    ```

                    ## Challenges
                    Now, Hedy can only answer yes, no or maybe. Can you give Hedy more answer options, like 'definitely' or 'ask again'.
                start_code: ""
    haunted:
        name: "Haunted House"
        description: "escape from the haunted house"
        image: "hauntedhouse.gif"
        default_save_name: "Haunted House"
        levels:
            1:
                story_text: |
                    ## Haunted house
                    In this adventure you are working towards making a game in which you have to escape from a haunted house by picking the correct door.
                    If you pick the right door you'll survive, but if not a terrible monster might...

                    In level 1 we start our haunted house game by making up a scary story and ask the player what monster they'll see in the haunted house.

                example_code: |
                    ## Example Hedy code


                    ```
                    print How did I get here?
                    print I remember my friend telling me to go into the old mansion...
                    print and suddenly everything went black.
                    print But how did I end up on the floor...?
                    print My head hurts like Ive been hit by a baseball bat!
                    print What's that sound?
                    print Oh no! I feel like Im not alone in this house!
                    print I need to get out of here!
                    print There are 3 doors in front of me..
                    ask Which door should i pick?
                    echo I choose door
                    print ...?
                    ```

                    ## Challenge
                    Can you finish the scary story? Or make up your own haunted house story?
                start_code: "print How did I get here?"
            2:
                story_text: |
                    ## Haunted House
                    In this haunted house you can choose your monsters with emojis. Of course you could also use words.

                    ## Example Hedy Code
                    ```
                    monster1 is 👻
                    monster2 is 🤡
                    monster3 is 👶
                    print You enter the hounted house.
                    print Suddenly you see a monster1
                    print You run into the other room, but a monster2 is waiting there for you!
                    print Oh no! Quickly get to the kitchen.
                    print But as you enter monster3 attacks you!
                    ```
                start_code: "monster1 is _"
            14:
                story_text: |
                    ## Haunted House
                    In this level you can use the `<` and `>` symbol to introduce lives to your game.

                example_code: |
                    ## Example Hedy code

                    ```
                    print 'Escape from the haunted house'
                    lives = 3
                    doors = 1, 2, 3
                    monsters = 'the wicked witch', 'a zombie', 'a sleeping 3 headed dog'
                    for i in range 1 to 10
                        if lives > 0
                            good_door = doors at random
                            monster = monsters at random
                            chosen_door = ask 'Which door do you choose?'
                            if good_door == chosen_door
                                print 'You have chosen the correct door'
                            else
                                print 'You see...' monster
                                if monster == 'a sleeping 3 headed dog'
                                    print 'Pffieuw.... Its asleep'
                                else
                                    print 'You lose one life'
                                    lives = lives -1
                        else
                            print 'GAME OVER'
                    ```
                start_code: ""
            11:
                story_text: |
                    ## Haunted House
                    In this level we've changed the repeat command and we've added a line to our haunted house that tells the player in which room they are.

                example_code: |
                    ## Example Hedy code

                    ```
                    print 'Escape from the Haunted House!'
                    player is alive
                    doors = 1, 2, 3
                    monsters = zombie, vampire, giant spider
                    for i in range 1 to 3
                        if player is alive
                            correct_door = doors at random
                            print 'Room ' i
                            print 'There are 3 doors in front of you...'
                            chosendoor = ask 'Which door do you choose?'
                            if chosendoor is correct_door
                                print 'No monsters here!'
                            else
                                print 'You are eaten by a ' monsters at random
                                player = dead
                        else
                            print 'GAME OVER'
                    if player is alive
                        print 'Great! You survived!'
                    ```
                start_code: "print 'Escape from the haunted house!'"
            9:
                story_text: |
                    ## Haunted House
                    In this level you can use nesting, which allows you to make the haunted house even more interactive!

                example_code: |
                    ## Example Hedy code

                    ```
                    print 'Escape from the Haunted House!'
                    player = alive
                    doors = 1, 2, 3
                    monsters = zombie, vampire, giant spider
                    repeat 3 times
                        if player is alive
                            correct_door is doors at random
                            print 'There are 3 doors in front of you...'
                            chosen_door = ask 'Which door do you choose?'
                            if chosen_door is correct_door
                                print 'No monsters here!'
                            else
                                print 'You are eaten by a ' monsters at random
                                player = dead
                        else
                            print 'GAME OVER'
                    if player is alive
                        print 'Great! You survived!'
                    ```
                    ## Challenge
                    Now it's very hard to win this game, can you make it easier to win?
                    For example by only having 1 wrong door and 2 correct doors instead of 1 correct door en 2 wrong ones?

                start_code: "print 'Escape from the haunted house!'"
            5:
                story_text: |
                    ## Haunted House
                    Up until this level the haunted house game always asked the player to choose a door, but as you might have noticed, they didn't really have to answer correctly.
                    If the player filled in a completely random answer, the game would still work and the player might even win (despite not picking a door).
                    In this level you can only win the game by picking the same door Hedy picked randomly.

                example_code: |
                    ## Example Hedy code

                    ```
                    print 'Escape from the haunted house!'
                    print 'There are 3 doors in front of you...'
                    doors is 1, 2, 3
                    monsters is werewolf, mummy, vampire, zombie
                    chosen_door is ask 'Which door do you choose?'
                    print 'You chose door...' chosen_door
                    sleep
                    correct_door is doors at random
                    if chosen_door is correct_door print 'Great! Youve escaped!'
                    else print 'Oh no! You are being eaten by a...' monsters at random
                    ```

                start_code: ""
            4:
                story_text: |
                    ## Haunted house
                    In this level you learn how to use quotation marks in your games.
                    Can you make your Haunted House level 4 proof?

                start_code: ""
            3:
                story_text: |
                    ## Haunted house game
                    In the previous levels you've made an introduction to your haunted house game, but as you might have noticed the story would always have a dreadful end.
                    In this level you can make your story more interactive by changing the outcome of the game; sometimes you'll get eaten, sometimes you'll escape!
                    Let Hedy decide randomly!

                example_code: |
                    ## Example Hedy code

                    ```
                    print Escape from the haunted house!
                    print There are 3 doors in front of you...
                    choice is ask Which door do you choose?
                    print You picked door ... choice
                    monsters is a zombie, a vampire, NOTHING YOUVE ESCAPED
                    print You see...
                    sleep
                    print monsters at random
                    ```

                    ## Challenge
                    This story is pretty straight forward, maybe you can spook it up a bit by adding a more exciting story.
                    Also you have very limited outcomes right now, there are only 3 options of what's behind the doors. Maybe you can think of more monsters to add to the list!

                    ## Change the game into a tv gameshow!
                    Lastly, we'd like to challenge you to change this game into a gameshow (like the ones on tv) where you choose a door or suitcase and it contains a big price!
                    Can you do it?
                start_code: ""
            16:
                story_text: |
                    ## Haunted House Game
                    This haunted house game uses the connection between the lists you can use in this level.
                    For example: all the properties that belong to the zombie are first in all the lists, witch second and vampire third.
                    Check out the code!

                example_code: |
                    ## Example Hedy code

                    ```
                    numbers = [1, 2, 3]
                    i = numbers[random]
                    hint = ['growling', 'a cackling laugh', 'fluttering batwings']
                    monsters = ['zombie', 'witch', 'vampire']
                    bad_fate = ['Your brain is eaten', 'You are forever cursed', 'You are bitten']
                    good_fate = ['You throw the ham. The zombie is distracted and starts etaing it.', 'You set the curtains on fire. The witch flees out of fear for the fire', 'The vampire hates garlic and flees']
                    weapons = ['ham', 'lighter', 'garlic']
                    print 'You are standing in front of an old mension'
                    print 'Something is not right here'
                    print 'You hear ' hint[i]
                    print 'You are going to explore it'
                    print 'You enter the kitchen en see a lighter, a raw ham and a garlic.'
                    your_weapon = ask 'What do you bring with you?'
                    print 'With your ' your_weapon ' you enter the living room'
                    print 'There you find a ' monsters[i]
                    needed_weapon = weapons[i]
                    if your_weapon == needed_weapon
                        print 'You use your ' your_weapon
                        print good_fate[i]
                        print 'YOU WIN!'
                    else
                        print 'You have chosen the wrong weapon...'
                        print bad_fate[i]
                        print 'GAME OVER'
                    ```
                start_code: ""
    piggybank:
        name: Piggy Bank
        description: Count your pocketmoney!
        image: piggy.png
        default_save_name: Piggy Bank
        levels:
            14:
                story_text: |
                    ## Piggybank
                    In this level you can let Hedy tell you if you have saved up enough money!

                example_code: |
                    ## Example Hedy code

                    ```
                    money = ask 'How much money have you saved?'
                    wish = ask 'How much money do you need?'
                    allowance = ask 'How much pocket money do you get each week?'
                    to_save = wish - money
                    weeks = to_save / allowance
                    if wish > money
                        print 'You need to save up some more!'
                        print 'Youll need ' weeks ' more weeks.'
                    else
                        print 'Great! You have enough'
                        print 'Lets go shopping!'
                    ```
                start_code: ""
            12:
                story_text: |
                    ## Piggy Bank
                    In this adventure you learn how to make a digital piggy bank, to calculate how much money you have and how long you need to save up to buy what you want!

                example_code: |
                    ## Example Hedy code

                    ```
                    print 'The digital piggy bank'
                    wish = ask 'What would you like to buy?'
                    price = ask 'How much does that cost?'
                    saved = ask 'How much money have you saved already?'
                    allowance = ask 'How much pocket money do you get per week?'
                    to_save = price - saved
                    weeks = to_save / allowance
                    print 'You can buy a ' wish ' in ' weeks ' weeks.'
                start_code: ""
    quizmaster:
        name: Quizmaster
        description: Make your own quiz!
        image: quizmaster.png
        default_save_name: Quizmaster
        levels:
            14:
                story_text: |
                    ## Make your own quiz
                    In this adventure you can make your own quiz! Fill in the blanks, add more questions and enjoy your own quiz!
                    You can make a quiz about anything you like: your hobby, your favorite animal, your favorite book or anything at all!

                example_code: |
                    ## Example Hedy code

                    ```
                    print 'Make your own quiz'
                    points_a = 0
                    points_b = 0
                    print 'Question'
                    print 'Answer option A'
                    print 'Answer option B'
                    answer = ask 'Which answer?'
                    if answer == 'A'
                        points_a = points_a + 1
                    if answer == 'B'
                        points_b = points_b + 1
                    print 'End of the quiz!'
                    print 'Lets see the results!'
                    if points_a > points_b
                        print 'You belong to the A club'
                    if points_b > points_a
                        print 'You belong to the B club'
                    ```

                start_code: ""
    language:
        name: Language
        description: Practice words in a foreign language
        image: languages.png
        default_save_name: language
        levels:
            5:
                story_text: |
                    ## Learn a new language
                    Make your own program to practice your vocabulary in a new language.

                    ## Example Hedy code
                    ```
                    print 'Learn French!'
                    cat is ask '🐱'
                    if cat is chat print 'Terrific!'
                    else print 'No, cat is chat'
                    frog is ask '🐸'
                    if frog is grenouille print 'Super!'
                    else print 'No, frog is grenouille'
                    ```
                start_code: ""
            16:
                story_text: |
                    ## Learn a new language
                    Make your own program to practice your vocabulary in a new language.

                example_code: |
                    ## Example Hedy code

                    ```
                    french_words = ['bonjour', 'ordinateur', 'pomme de terre']
                    translation = ['hello', 'computer', 'potato']
                    score = 0
                    for i in range 1 to 3
                        answer = ask 'What does ' french_words[i] ' mean?'
                        correct = translation[i]
                        if answer == correct
                            print 'Correct!'
                            score = score + 1
                        else
                            print 'Wrong, ' french_words[i] ' means ' translation[i]
                    print 'You gave ' score ' correct answers.'
                    ```
                start_code: ""
    next:
        name: "What's next?"
        description: "What's Next?"
        image: ""
        default_save_name: "next"
        levels:
            1:
                story_text: |
                    ## What's next?
                    Congratulations! You've reached the end of level 1. Hopefully you've already made some awesome codes, but Hedy has a lot more to discover. 

                    In the first level you might've notice that the `echo` command can only save one bit of information at a time. 
                    For example in the restaurant adventure, you could echo what the costumer wanted to eat, or what they wanted to drink, but not both in one sentence. 

                    ```
                    print Welcome at Hedy's
                    ask What would you like to eat?
                    echo So you want 
                    ask what would you like to drink?
                    echo So you want 
                    ```
                    If the player types a hamburger and coke, you can't say `so you would like a hamburger and coke`, but you have to make two separate line. 
                    Also, the `echo` command only echoes the word at the end of the sentence. So you can't say `your hamburger is coming right up!`.

                    That changes in level 2. In level 2 you'll learn to work with variables, that allow you to save multiple pieces of information and print them in any place you want.
                    Besides, you'll learn how to work with the `at random` command, that you can use to make games. 
                    So let's go to the next level!

                start_code: "print Let's go!"
            2:
                story_text: |
                    ## What's next?
                    In this level you've learned what a variable is and how you can use it to make your adventures more interactive.
                    But... that's not the only thing you can do with variables! You can also use variables to make lists.
                    And you can even let Hedy pick a random word out of a list, which allows you to make real games!
                    Take a quick look at the next level!
                start_code: "print Let's go to the next level!"
            3:
                story_text: |
                    ## What's next?
                    In this level you've been practising with variables, but maybe you've come across this mistake.

                    Try to run this code:
                    ```
                    name is Sophie
                    print My name is name
                    ```
                    Of course you wanted to print `My name is Sophie` but Hedy prints `My Sophie is Sophie`. 
                    In the next level this problem is fixed by using quotation marks.

                start_code: "print Let's go to the next level!"
            4:
                story_text: |
                    ## What's next?
                    In the previous levels you've already learned to use `at random` which made your games different every time you ran the code.
                    But it's not really interactive, the player doesn't have any influence on what happens in the game.

                    In the next level you'll learn the `if` command, that allows you to give different responses in your program. This way you can program a secret password for your computer for example.
                    So let's take a peak!

                    ```
                    password is ask 'What is the correct password?'
                    ```
                start_code: "print 'Lets go to the next level!'"
            5:
                story_text: |
                    ## What's next?
                    Now you've reached the end of this level, so you have learned `ask` and `if`. For example you can ask guests what they would like to eat.
                    What you can't yet do though, is calculate the price for everyone's dinner.

                    The next level makes it possible to use addition, subtraction and multiplication in your programs. This way you can calculate the prices in your restaurant, but you could also add a secret code to give your friends and family a discount.
                    Another option in the next level is programming your own maths game, for your little brother or sister to practice their multiplications.
                    Go see for yourself in the next level!
                    ```
                    print 'Welcome at McHedy'
                    order is ask 'What would you like to eat?'
                    print 'You would like ' order
                    if order is hamburger price is 5
                    if order is fries price is 2
                    drinks is ask 'What would you like to drink?'
                    print 'You would like ' drinks
                    print 'That will be ' price ' dollars for your ' order ' please'
                    print 'The drinks are free in this level because Hedy cant calculate the price yet...'
                    ```
                start_code: "print 'On to the next level!'"
            6:
                story_text: |
                    ## What's next?
                     Great job! You've reached the end of this level, which means you have practiced with `if` and `else`. You have probably noticed that your codes are getting longer and longer.
                     For example if you want to program 'Happy Birthday'

                     ```
                     print 'happy birthday to you'
                     print 'happy birthday to you'
                     print 'happy birthday dear Hedy'
                     print 'happy birthday to you'

                     ```
                     That's a lot of code for mainly the same words over and over again. Luckily in the next level has a solution with the `repeat` command, that allows you to repeat a line of code multiple times.
                start_code: "print 'On to the next level!'"
            7:
                story_text: |
                    ## What's next?
                    Now you've learned how to repeat one single line of code. This comes in handy, but it's not always enough. Sometimes you want to repeat multiple lines at once.
                    the next level allows you to group a couple of lines of code, and repeat that little group of lines all at once!

                    ```
                    repeat 5 times print 'In the next level you can repeat multiple lines of code at once!'
                    ```

                start_code: "print 'Lets go to the next level!'"
            8:
                story_text: |
                    ## What's next?
                    Great job! You've reached the end of another level! In this level you've learned to use multiple lines of code in an if of repeat command. But you can't yet combine the two...
                    Good news! In the next level you will be allowed to put an if inside an if, or inside a repeat command.

                    For example:
                    ```
                    answer = ask 'Would you like to go to teh next level?'
                    if answer is 'yes'
                        print 'Great! You can use the repeat commando in the if command!'
                        print 'Hooray!'
                        print 'Hooray!'
                        print 'Hooray!'
                    else
                        print 'Okay, you can stay here for a little longer!'
                    ```
                    In this code Hedy will still say 'Your drink is on its way' even if you didn't even want to drink something! In the next level this will be fixed!
                start_code: "print 'Lets go to the next level!'"
            9:
                story_text: |
                    ## What's next?
                    You're doing great! In this level we still face a small problem. You have learned to repeat lines, but what if you'd want to slightly change the line.
                    For example if you want to sing the song 'if you're happy and you knwo it'

                    It would look like this:
                    ```
                    repeat 2 times
                        print 'if youre happy and you know it clap your hands'
                    print 'if youre happy and you know it and you really want to show it'
                    print 'if youre happy and you know it clap your hands'
                    ```

                    If you'd also want the next verse 'stomp your feet', and the next one, and the next one, you'd have to change the code completely.
                    In the next level you'll learn the `for` command, which allows you to make a list of actions and repeat the code with another action each time!
                    Please take a look!
                start_code: "print 'Lets go to the next level!'"
            10:
                story_text: |
                    ## What's next?
                    You have reached the end of this level, you're doing great! You are about to go to the next level. In the higher levels, Hedy is focussing more and more on teaching you the programming language Python.
                    In Python there is no `repeat` command, but there is a command that works like repeat. Are you curious to find out how to say `repeat` in Python language? Quickly go on to find out!
                start_code: "print 'Lets go to the next level!'"
            11:
                story_text: |
                    ## What's next?
                    Maybe you have tried using decimal numbers in your restaurant adventure. If you did, you probably noticed that Hedy didn't understand them yet and always rounded off.
                    From the next level on you can use decimal numbers.

                    Another cool feauture in the next level is that you can use mulitiple words in a variable.
                    For intance, you could already do this...
                    ```
                    name = ask 'Who is your favorite cartoon character?'
                    print 'I love watching ' name
                    ```
                    But you couldn't use multiple words in a variable like the example below. This program does not work yet in this level!
                    ```
                    show = SpongeBob SquarePants
                    print show 'is my favorite show!'
                    ```
                    Go to the next level to make this code work!
                start_code: "print 'Lets go to the next level!'"
            12:
                story_text: |
                    ## What's next?
                    In the previous levels you learned how to put two `if`commands inside each other. This works fine, but it does give you very long and unhandy codes like this one:
                    ```
                    username is ask 'What is your username?'
                    password is ask 'What is your password?'
                    if username is 'Hedy'
                        if password is 'secret'
                            print 'Welcome Hedy!'
                        else
                            print 'Access denied'
                    else
                        print 'Access denied!'
                    ```
                    In this system you have to give both the correct username and the correct password.
                    In the next level you will learn the `and` command that will make this code a ot shorter and more understandable!
                    Check it out!
                start_code: "print 'Lets go to the next level!'"
            13:
                story_text: |
                    ## What's next?
                    With the program below you can calulate if you've passed a subject at school (so, a grade of six or higher).
                    You can see this code is extremely inefficient, du to the very long code in line 5.
                    All the different grades from 1 to 5 had to be programmed seperately. Lucky for you, in the next level you'll learn how to do this without this extremely long code!
                    ```
                    first_grade = ask 'What score did you get on your first test?'
                    second_grade = ask 'What score did you get on your second test?'
                    added is first_grade + second_grade
                    mean_grade is added / 2
                    if mean_grade = 1 or mean_grade = 2 or mean_grade = 3 or mean_grade = 4 or mean_grade = 5
                        print 'Oh no! You have failed the subject...'
                    else
                        print 'Great! You have passed the subject!'
                    ```
                start_code: "print 'Lets go to the next level!'"
            14:
                story_text: |
                    ## What's next?
                    In this game below a code has been made to make sure the player can play on as long as he/she wants...
                    But the code is ineffective and way too long. Also, what if the player wants to play 101 games instead of 100?
                    You can't play to infinity?
                    In the next level you will learn a command that makes all of this a lot easier!
                    ```
                    game is 'on'
                    for i in range 1 to 100
                        if game is 'on'
                            answer = ask 'Do you want to continue?'
                            if answer is 'no'
                                game is 'over'
                            if answer is 'yes'
                                print 'Ok we will continue'
                    ```
                start_code: "print 'Lets go to the next level!'"
            15:
                story_text: |
                    ## What's next?
                    In the next level we will grow a bit more towards real Python code. thon code. You will also learn how to match two lists together.
                    This way you can program a code in which the correct animal is matched to the right sound.
                    Because the two codes below... Are obviously nonsense!
                    ```
                    animals = 'chicken', 'horse', 'cow'
                    sounds = 'cluck', 'neigh', 'moo'
                    for animal in animals
                        print 'A ' animal ' says ' sounds at random
                    ```
                    You could also try to make it work this way, but....
                    ```
                    animals = 'chicken', 'horse', 'cow'
                    sounds = 'cluck', 'neigh', 'moo'
                    for animal in animals
                        for sound in sounds
                            print 'A ' animal ' says ' sound
                    ```
                start_code: "print 'Lets go to the next level!'"
            16:
                story_text: |
                    ## What's next?
                    In the next level it's time for a new command. You might have noticed in the previous levels that `if` and `else` sometimes aren't enough.
                    For example in this code:
                    ```
                    print 'What is for dinner tonight?'
                    options = ['pizza', 'broccoli', 'green beans']
                    chosen = options at random
                    if chosen = pizza
                        print 'Yummy! Pizza!'
                    else
                        print 'Yikes...'
                    ```
                    In this code it would be great to have 2x an `else` so you could have one option for the broccoli and one for the green beans. The next level comes with the new command `elif` that makes this possible!
                    So check out the next level now!
                start_code: "print 'Lets go to the next level!'"
            17:
                story_text: |
                    ## What's next?
                    In the next level you will learn a real Python way to use `print`.
                start_code: "print 'Lets go to the next level!'"
            18:
                story_text: |
                    ## What's next?
                    Congratulations! You have reached the last level of Hedy! But no worries, we are working very hard to create more levels and new adventures. So please come back later to check out the newest levels!
                start_code: "print ('Great job!!!')"
    end:
        name: "End"
        description: "Test your Hedy knowledge"
        image: ""
        default_save_name: ""
        levels:
            1:
                story_text: |
                    ## End
                    This is the end of the level! Take the quiz now to test your knowledge.
                ## start_code is only added because it is required by the schema of Adventures
                start_code: ""
            2:
                story_text: |
                    ## End
                    This is the end of the level! Take the quiz now to test your knowledge.
                ## start_code is only added because it is required by the schema of Adventures
                start_code: ""
            3:
                story_text: |
                    ## End
                    This is the end of the level! Take the quiz now to test your knowledge.
                ## start_code is only added because it is required by the schema of Adventures
                start_code: ""
            4:
                story_text: |
                    ## End
                    This is the end of the level! Take the quiz now to test your knowledge.
                ## start_code is only added because it is required by the schema of Adventures
                start_code: ""
            5:
                story_text: |
                    ## End
                    This is the end of the level! Take the quiz now to test your knowledge.
                ## start_code is only added because it is required by the schema of Adventures
                start_code: ""
            6:
                story_text: |
                    ## End
                    This is the end of the level! Take the quiz now to test your knowledge.
                ## start_code is only added because it is required by the schema of Adventures
                start_code: ""
            7:
                story_text: |
                    ## End
                    This is the end of the level! Take the quiz now to test your knowledge.
                ## start_code is only added because it is required by the schema of Adventures
                start_code: ""
            9:
                story_text: |
                    ## End
                    This is the end of the level! Take the quiz now to test your knowledge.
                ## start_code is only added because it is required by the schema of Adventures
                start_code: ""
