start: program
program: _EOL* command (" ")* (_EOL+ command (" ")*)* _EOL* //lines may end on spaces and might be separated by many newlines
command: print | ask | assign_list | assign | print_no_quotes | invalid //catch all at the end
print: "print " (" "| list_access | quoted_text | var)*  -> print
ask: var " "+ "is ask " + (" " | text | punctuation)*
echo: "echo" (" " text)?
invalid_space: " "+ text
invalid: textwithoutspaces text?
_EOL: "\r"?"\n"
text: /([^\n,]+)/ -> text //anything can be parsed except for a newline and a comma for list separators
textwithoutspaces: /([^\r\n,!?. *+-\/]+)/ -> text //anything can be parsed except for spaces (plus: a newline and a comma for list separators)
SPACE: " "
%import common.LETTER
%import common.DIGIT
%import common.WS_INLINE
%import common.NEWLINE
%import common.SIGNED_INT -> NUMBER
%import common.CNAME -> NAME
assign: var " is " text -> assign
assign_list: var " is " text ((", "|",") text)+
index : NUMBER //different why?
random : "random"
punctuation : PUNCTUATION -> punctuation
PUNCTUATION: "!" | "?" | "." //uppercase places tokens in tree
list_access : var " at " (index | random) -> list_access //todo: could be merged with list_access_var?
var: NAME -> var
print_no_quotes: "print " (" "| list_access | textwithoutspaces | punctuation)*  -> print_nq
quoted_text_no_escape: /'([^']*)'/ -> text //simply all between quotes should this be used at earlier levels?
quoted_text: /'((?:[^\\']|\\.)*)'/ -> text //text can be between single quotes, but quotes may be escaped with \
