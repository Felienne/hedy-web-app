command:+= assign_list | add | remove > error_invalid   
_print_argument: (_SPACE | list_access | textwithoutspaces | punctuation)*
ask: var _SPACE _IS _SPACE _ASK (_SPACE + (_SPACE | text_ask | punctuation)*)?

assign: var _SPACE _IS _SPACE (list_access | text) -> assign
assign_list: var _SPACE _IS _SPACE text_list (_COMMA text_list)+

list_access: var _SPACE _AT _SPACE (INT | random) -> list_access //todo: could be merged with list_access_var?
turtle: _FORWARD (_SPACE (INT | list_access | textwithoutspaces))? -> forward | _TURN (_SPACE (list_access | textwithoutspaces))? -> turn

// lists are introduced and list separators (comma and arabic comma) have to excluded from text.
text: /([^\n!?.،,]+)/ -> text
text_ask: /([^\n!?.]+)/ -> text // the ask command is an exception since it needs to include commas in its value
text_list: /([^\n,،]+)/ -> text // list elements are another exception since they can contain punctuation but not list separators

// FH, jan 22: not exactly sure why this works, while textwithoutspaces parses the whole line in add/remove
// leaving this for now
some_spaces : /([^\r\n!?. ]+)/ (_SPACE /([^\r\n!?. ]+)/)* -> text

add: _ADD_LIST _SPACE some_spaces _SPACE _TO_LIST _SPACE var
remove: _REMOVE _SPACE some_spaces _SPACE _FROM _SPACE var