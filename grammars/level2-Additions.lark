//add the rules after += remove those after -= and the ones after > should be at the end
command:+= assign | ask_dep_2 | echo_dep_2 | sleep -= echo > invalid
print: _PRINT (_SPACE _print_argument)?
_print_argument: (_SPACE | textwithoutspaces | punctuation)*
ask: var _SPACE _IS _SPACE _ASK (_SPACE + (_SPACE | text_ask | punctuation)*)?

//level 1 deprecated commands, for now manually added for better errors
ask_dep_2: _ASK (_SPACE text_dep_2)?
echo_dep_2: _ECHO (_SPACE text_dep_2)?
//text is also changed and these commands of course need the old text
text_dep_2: /([^\n]+)/ -> text //anything can be parsed except for a newline

//sleep
sleep: _SLEEP (_SPACE INT)?

//in level 2, forward may also depend on a variable
turtle: _FORWARD (_SPACE (INT | textwithoutspaces))? -> forward | _TURN (_SPACE (textwithoutspaces))? -> turn
assign: var _SPACE _IS _SPACE text -> assign

//in Level 2 we need to treat punctuation differently, since it can be used to separate arguments (variables)
textwithoutspaces: /([^\r\n!?. ]+)/ -> text //anything can be parsed except for spaces (plus: a newline and a comma for list separators)
text: /([^\r\n,!?.]+)/ -> text

text_ask: /([^\r\n!?.]+)/ -> text //as ask may contain commas (punctionation is still needed separately so they can be printed after vars)

//index : INT //todo FH-June 21 : why does this need its own rule? can't it just be a token

punctuation : PUNCTUATION -> punctuation
PUNCTUATION: _EXCLAMATION_MARK | _QUESTION_MARK | _PERIOD //uppercase places tokens in tree

var: NAME -> var

