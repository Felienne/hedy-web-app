// adds comparisons

condition:+= equality_check_dequals | smaller | bigger | not_equal | smaller_equal | bigger_equal

equality_check: comparison_arg (_IS | _EQUALS) comparison_arg
equality_check_dequals: comparison_arg  _DOUBLE_EQUALS  comparison_arg
smaller: comparison_arg  _SMALLER  comparison_arg
bigger: comparison_arg  _LARGER  comparison_arg
smaller_equal: comparison_arg  _SMALLER_EQUALS  comparison_arg
bigger_equal: comparison_arg  _LARGER_EQUALS  comparison_arg
not_equal: comparison_arg  _NOT_EQUALS  comparison_arg

?comparison_arg: call | var_access | list_access | text_in_quotes | NUMBER

// FUNCTIONS ======================================== =============================
define: _DEFINE function_name (_SPACE _USING arguments)? _EOL _SPACE (command | return) (_EOL _SPACE (command | return))* _EOL? _END_BLOCK
?return: _RETURN (call | list_access | atom | expression) -> return
?expression:+= call
assign_list: var (_IS| _EQUALS) (call|text_in_quotes|NUMBER) (_COMMA (call|text_in_quotes|NUMBER))+
command: call | clear | print | turtle | add | remove | sleep | ifpressed_else | ifpressed | ifs | ask | error_ask_no_quotes | assign_button | assign_list | assign | error_text_no_print | empty_line | repeat | error_repeat_no_print | error_repeat_no_times | error_ifelse | ifpressed ifpressed_elses? | ifs elses? | for_list | for_loop
turtle: _FORWARD ((NUMBER | list_access | textwithoutspaces | expression))? -> forward | _TURN ((NUMBER | list_access | textwithoutspaces | expression))? -> turn | _COLOR ((black | blue | brown | gray | green | orange | pink | purple | red | white | yellow | list_access | textwithoutspaces | call))? -> color
// ?comparison_arg: call | var_access | list_access | text_in_quotes | NUMBER
// ================================================================================