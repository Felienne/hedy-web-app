program: _EOL* (command | invalid) (" ")* (_EOL+ (command | invalid) (" ")*)* _EOL* //lines may end on spaces and might be separated by many newlines
command: print | ifelse | ifs | ask | assign_list | list_access_var | assign | print_no_quotes
//placing assign after print means print is will print 'is' and print is Felienne will print 'is Felienne'

print: "print " (quoted_text | list_access | var) (" " (quoted_text | list_access | var))*
ask: var " is ask " textwithspaces*
assign_list: var " is " textwithspaces ((", "|",") textwithspaces)+
assign: var " is " textwithspaces
invalid: textwithoutspaces " " textwithspaces

print_no_quotes: "print " (textwithoutspaces | list_access | var) (" " (textwithoutspaces | list_access | var))*  -> print_nq

// new commands for level 4
ifelse: "if " condition " " command " else " command
ifs: "if " condition " " command //'if' cannot be used in Python, hence the name of the rule is 'ifs'
condition: (equality_check|in_list_check) (" and " condition)*
list_access_var: var " is " var " at " (index | random)
equality_check: textwithoutspaces " is " textwithoutspaces
in_list_check: textwithoutspaces " in " var

textwithspaces: /([^\n,]+)/ -> text //anything can be parsed except for a newline and a comma for list separators
textwithoutspaces: /([^\n, ]+)/ -> text //anything can be parsed except for spaces (plus: a newline and a comma for list separators)




