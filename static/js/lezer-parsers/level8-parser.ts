// This file was generated by lezer-generator. You probably shouldn't edit it.
import {LRParser, LocalTokenGroup} from "@lezer/lr"
import {specializeKeyword, extendKeyword} from "./tokens"
export const parser = LRParser.deserialize({
  version: 14,
  states: "3bQYQPOOOOQO'#Df'#DfQYQPOOO!WQPO'#DlO!iQPO'#DeOOQO'#Dr'#DrO!tQPO'#DSO#PQPO'#DTOOQO'#Ds'#DsO#_QPO'#DUOOQO'#Dt'#DtO#gQPO'#DWOOQO'#Du'#DuO#rQPO'#DXOOQO'#Dv'#DvO#}QPO'#DYOOQO'#DV'#DVOOQO'#Dw'#DwO$YQPO'#DZOOQO'#Dx'#DxO$kQPO'#D[OOQO'#Dz'#DzO$sQPO'#D]OOQO'#D|'#D|O${QPO'#D^OOQO'#EQ'#EQO%WQPO'#DcOOQO'#ER'#ERO%cQPO'#DdOOQO'#Cu'#CuQ!RQPO'#DgQ%nQPOOOOQO-E7d-E7dOOQO'#Dh'#DhO&iQPO,59bOOQO'#Cx'#CxO&wQPO,59bOOQO'#Dl'#DlOOQO-E7j-E7jOOQO-E7p-E7pO'SQPO'#DoOOQO'#Cy'#CyO(cQPO'#CyO(mOSO'#E_O(uOQO'#EcOOQO'#DR'#DROOQO'#Do'#DoO(}QPO,59oO)cQPO,59pOOQO-E7q-E7qO)nQPO,59rOOQO-E7r-E7rOOQO,59r,59rO*SQPO,59sOOQO-E7s-E7sOOQO,59s,59sO*hQPO,59tOOQO-E7t-E7tOOQO,59t,59tO*|QPO,59uOOQO-E7u-E7uOOQO,59u,59uO+bQPO,59vOOQO-E7v-E7vO+jQPO,59wOOQO-E7x-E7xOOQO-E7z-E7zO+rQPO'#D`OOQO'#D_'#D_OOQO,59x,59xOOQO-E8O-E8OOOQO-E8P-E8PO+}QPO,5:OO,SQPO,5:ROOQO-E7e-E7eOOQO-E7f-E7fO-TQPO'#DiO-oQPO1G/UO-vQPO'#CyOOQO'#Di'#DiO.QQPO1G.|O.`QPO1G/UOOQO'#Dn'#DnO.hQPO1G/WOOQO'#C{'#C{OOQO'#C|'#C|O.yQPO,5:tO.yQPO,5:tOOQO'#Dj'#DjO/RQPO,59iOOOO'#Dp'#DpO/aOSO,5:yOOQO,5:y,5:yOOOO'#Dq'#DqO/iOQO,5:}OOQO,5:},5:}OOQO-E7m-E7mOOQO'#Dy'#DyO/qQPO1G/bOOQO'#D{'#D{O/yQPO1G/cO0RQPO,59zOOQO'#EO'#EOO0gQPO,59{OOQO'#EP'#EPO0oQPO,59|OOQO'#ES'#ESO0wQPO1G/jO1SQPO'#DmO1[QPO7+$pOOQO-E7g-E7gOOQO-E7l-E7lO1gQPO7+$rOOQO1G0`1G0`O1{QPO1G0`OOQO-E7h-E7hOOQO'#Dk'#DkO2mQPO1G/TOOQO1G/T1G/TOOOO-E7n-E7nOOQO1G0e1G0eOOOO-E7o-E7oOOQO1G0i1G0iOOQO-E7w-E7wOOQO7+$|7+$|OOQO-E7y-E7yOOQO7+$}7+$}O3UQPO1G/fOOQO'#D}'#D}O3jQPO1G/fOOQO1G/f1G/fOOQO-E7|-E7|OOQO1G/g1G/gOOQO-E7}-E7}OOQO1G/h1G/hOOQO-E8Q-E8QO3uQPO,5:XOOQO,5:X,5:XOOQO-E7k-E7kOOQO-E7i-E7iOOQO-E7{-E7{",
  stateData: "4W~OgOS!yOS~OSgOUiOVVOWYOX[OY^OZaO[WO^cO`eObTOekOkRO!zPO~O]qO!{sOk!`X!w!`X!z!`X~OkuO!w!XX!z!XX~ObTO!wvX!zvX~OkzOnyO#S{O#W|O~O[WOkuO~OWYOkzOnyO~OX[OkzOnyO~OY^OkzOnyO~OZaOkzOnyO!w}X!z}X~O^cOkuO~O`eOkuO~OSgOk!eOn!eO~OUiO!w!VX!z!VX~OekOk!jOn!jO~OSgOUiOVVOWYOX[OY^OZaO[WO^cO`eObTOekOkRO~OP!tO]qOk!pOn!oO~OP!tOk!pOn!oO~O!}!vO#O!vO#P!wO#Q!wOk!cXn!cX!w!cX!z!cX#S!cX#W!cX~OQ!zOkmXnmX!wmX!zmX!}mX#OmX#PmX#QmX~O#SmX#WmX~P'tO#T!|O#U#OO~O#X#PO#Y#RO~OkzOnyO#S{O#W|O!wwa!zwa~OkuO!wxa!zxa~O!}!vO#O!vO#P!wO#Q!wO!wza!zza~O!}!vO#O!vO#P!wO#Q!wO!w{a!z{a~O!}!vO#O!vO#P!wO#Q!wO!w|a!z|a~O!}!vO#O!vO#P!wO#Q!wO!w}a!z}a~Oa#TOkuO~O_#VOkuO~O]qOc#YOd#[O~Of#^O~O!zPOS!ZaU!ZaV!ZaW!ZaX!ZaY!ZaZ!Za[!Za^!Za`!Zab!Zae!Zak!Za!w!Za~O!}!vO#O!vO#P!wO#Q!wOk!]Xn!]X!w!]X!z!]X~Os#`O~P'wOk!`Xs!`X~P'tOkzOnyO!wji!zji~OkuOs#`O~OP!tOkzOnyO#S{O#W|O~OkyOnyO~OQ!zOR#hOk#jOn#jO~O#T!|O#U#lO~O#X#PO#Y#nO~Oa#TOk#pO~O_#VOk#rO~OT#tO]qOkyOnyO#S{O#W|O~Oc#YOk#xO~Od#[Ok#zO~Of#^O!w!Wi!z!Wi~OkuOn#}O~Os#`O!wrq!zrq~OkzOnyO#S{O#W|O!wtq!ztq~O!}!vO#O!vO#P!wO#Q!wOk!|in!|i!w!|i!z!|i#S!|i#W!|i~OR#hOkqinqi!wqi!zqi#Sqi#Wqi~O!}!vO#O!vO#P!wO#Q!wO!w!Si!z!Si~OT#tO!w!Si!z!Si~OkuOs!aa!w!aa!z!aa~Onk~",
  goto: "+W#WPPPPPPPPPPPPPPPPPPPPPPPPP#X#^P#c#fP$W$b$l#^P#^%T#^#^#^#^%^%^%^#^#^#^#^%c%f%f%f#^#^#^%i%s%z&U&]&d&j'X'`'g'q'w'}(V(_(g(o(w)P)X)_)g)m)u){*R*X*a*iPPPPP*oPPPP+PPPP+PVnOQoVmOQoRtRWxV!P!u#dQ!SZQ!V]Q!Y_Q!]bU!nrt!rQ#e!xQ#f!yR#s#Xa!xx!S!V!Y!]!n#f#sa!yx!S!V!Y!]!n#f#sW!OV!P!u#dQ!UZQ!X]Q![_Q!_bV!qrt!rW!OV!P!u#dR#v#XV`OQoR!ghR!fhQQOSpQ!kR!knSoOQR!loQrRS!mr#XR#X!eS!rrtR#b!rS!{z!pR#g!{Q#i!{R$P#iUSOQo[vS!Q!`!b!s#|Q!QXQ!`dQ!bfS!srtR#|#`S#a!o!sR$O#aS!urtR#c!uQ!PVS#S!P#dR#d!uQ!}{R#k!}Q#Q|R#m#QUUOQoRwUUXOQoR!RXUZOQoR!TZU]OQoR!W]U_OQoR!Z_UbOQoR!^bUdOQoR!adQ#U!`R#o#UUfOQoR!cfQ#W!bR#q#WUhOQoR!dhQ#u#XR$Q#uQ#Z!eR#w#ZQ#]!eR#y#]UjOQoR!hjUlOQoR!ilQ#_!jR#{#_myVZ]_brt!P!r!u!x!y#X#dZ}V!P!u#X#d",
  nodeNames: "âš  ask at random if pressed else print forward turn color sleep play is add from remove toList clear in not_in repeat times Comment Program Command Assign Text Op Expression Int Op Op ListAccess AssignList Comma Ask String Clear Print Play Turtle Forward Turn Color Sleep Add Remove If Condition EqualityCheck InListCheck NotInListCheck Else Repeat ErrorInvalid",
  maxTerm: 102,
  nodeProps: [
    ["group", 41,"turtle"]
  ],
  skippedNodes: [0,23],
  repeatNodeCount: 29,
  tokenData: "*x~R!^OY$}YZ&UZp$}pq&Zqr$}rs&`st&etw$}wx&|xz$}z{'R{|'W|}']}!O'b!O!P$}!P!Q'g!Q!R'l!R!S'l!S!T'l!T!U'l!U!V'l!V!W'l!W!X'l!X!Y'l!Y!Z'l!Z!['l![!_$}!_!`*s!`#Q$}#RBn$}BnBo']BoDf$}DfDg'lDgDh'lDhDi'lDiDj'lDjDk'lDkDl'lDlDm'lDmDn'lDnDo'lDoDp'lDpGl$}GlGm'lGmGn'lGnGo'lGoGp'lGpGq'lGqGr'lGrGs'lGsGt'lGtGu'lGuGv'lGv&FV$}&FV&FW']&FW;'S$};'S;=`&O<%l?Hb$}?Hb?Hc']?HcO$}~%S^k~OY$}Zp$}qr$}tw$}xz$}!O!P$}!Q!_$}!`#Q$}#RBn$}Bo&FV$}&FW;'S$};'S;=`&O<%l?Hb$}?HcO$}~&RP;=`<%l$}~&ZO!z~~&`O!y~~&eO#S~~&jSg~OY&eZ;'S&e;'S;=`&v<%lO&e~&yP;=`<%l&e~'RO#W~~'WO!}~~']O#P~~'bOs~~'gO#Q~~'lO#O~~'s!On~k~OY$}Zp$}qr$}tw$}xz$}!O!P$}!Q!R'l!R!S'l!S!T'l!T!U'l!U!V'l!V!W'l!W!X'l!X!Y'l!Y!Z'l!Z!['l![!_$}!`#Q$}#RBn$}BoDf$}DfDg'lDgDh'lDhDi'lDiDj'lDjDk'lDkDl'lDlDm'lDmDn'lDnDo'lDoDp'lDpGl$}GlGm'lGmGn'lGnGo'lGoGp'lGpGq'lGqGr'lGrGs'lGsGt'lGtGu'lGuGv'lGv&FV$}&FW;'S$};'S;=`&O<%l?Hb$}?HcO$}~*xO!{~",
  tokenizers: [2, new LocalTokenGroup("_~RQYZXwxX~^O#Y~~", 14, 101), new LocalTokenGroup("_~RQYZXrsX~^O#U~~", 14, 97)],
  topRules: {"Program":[0,24]},
  dynamicPrecedences: {"55":-10},
  specialized: [{term: 27, get: (value: any, stack: any) => (specializeKeyword(value, stack) << 1), external: specializeKeyword},{term: 27, get: (value: any, stack: any) => (extendKeyword(value, stack) << 1) | 1, external: extendKeyword, extend: true}],
  tokenPrec: 879
})
