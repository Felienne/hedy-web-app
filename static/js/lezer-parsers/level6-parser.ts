// This file was generated by lezer-generator. You probably shouldn't edit it.
import {LRParser} from "@lezer/lr"
import {specializeKeyword, extendKeyword} from "./tokens"
export const parser = LRParser.deserialize({
  version: 14,
  states: "2YQYQPOOO!QQPO'#DiO!cQPO'#DbOOQO'#Dm'#DmO!nQPO'#DQO!yQPO'#DROOQO'#Dn'#DnO#UQPO'#DSOOQO'#Do'#DoO#aQPO'#DUOOQO'#Dp'#DpO#lQPO'#DVOOQO'#Dq'#DqO#wQPO'#DWOOQO'#DT'#DTOOQO'#Dr'#DrO$SQPO'#DXOOQO'#Ds'#DsO$eQPO'#DYOOQO'#Du'#DuO$mQPO'#DZOOQO'#Dw'#DwO$uQPO'#D[OOQO'#D|'#D|O%QQPO'#DcOOQO'#Cs'#CsO%XQPO'#DdQYQPOOOOQO'#De'#DeO%^QPO,59`OOQO'#Cv'#CvO%lQPO,59`OOQO'#Di'#DiOOQO-E7g-E7gOOQO-E7k-E7kO%wQPO'#DlOOQO'#Cw'#CwO'TQPO'#CwOOQO'#Dl'#DlO'[QPO,59mO'mQPO,59nOOQO-E7l-E7lOOQO,59n,59nO(RQPO,59pOOQO-E7m-E7mOOQO,59p,59pO(gQPO,59qOOQO-E7n-E7nOOQO,59q,59qO({QPO,59rOOQO-E7o-E7oOOQO,59r,59rO)aQPO,59sOOQO-E7p-E7pOOQO,59s,59sO)uQPO,59tOOQO-E7q-E7qO)}QPO,59uOOQO-E7s-E7sOOQO-E7u-E7uO*VQPO'#D^OOQO'#D]'#D]O*eQPO,59vOOQO'#D{'#D{O*eQPO,59}OOQO'#Da'#DaOOQO-E7z-E7zOOQO,59},59}OOQO,5:O,5:OOOQO-E7b-E7bOOQO-E7c-E7cO+YQPO'#DfO+tQPO1G/SO,UQPO'#CwOOQO'#Df'#DfO,iQPO1G.zO,wQPO1G/SOOQO'#Dk'#DkO-YQPO1G/UOOQO'#Cy'#CyOOQO'#Cz'#CzO-hQPO,5:mO-hQPO,5:mOOQO'#Dg'#DgO-pQPO,59gOOQO-E7j-E7jOOQO'#Dt'#DtO.OQPO1G/`OOQO'#Dv'#DvO.WQPO1G/aO.`QPO,59xO.qQPO,59xOOQO'#Dy'#DyO/PQPO,59yOOQO'#Dz'#DzO/XQPO,59zO*eQPO1G/bO/aQPO1G/bOOQO-E7y-E7yOOQO1G/i1G/iOOQO'#C}'#C}O/iQPO'#DjO/qQPO7+$nOOQO-E7d-E7dOOQO-E7i-E7iO0VQPO7+$pOOQO1G0X1G0XO0hQPO1G0XOOQO-E7e-E7eOOQO'#Dh'#DhO1rQPO1G/ROOQO1G/R1G/ROOQO-E7r-E7rOOQO7+$z7+$zOOQO-E7t-E7tOOQO7+${7+${O2{QPO1G/dOOQO'#Dx'#DxO3]QPO1G/dOOQO1G/d1G/dOOQO-E7w-E7wOOQO1G/e1G/eOOQO-E7x-E7xOOQO1G/f1G/fO3dQPO7+$|OOQO7+$|7+$|O3lQPO,5:UOOQO,5:U,5:UOOQO-E7h-E7hOOQO-E7f-E7fOOQO-E7v-E7vOOQO<<Hh<<Hh",
  stateData: "4W~OeOS!sOS~OSeOTgOVTOWWOXYOY[OZ_O[UO^aO`cObROiPO~O]lO!tnOi!]X#O!]XT!]X~OipO#O!UXT!UX~ObRO#OtXTtX~OiuOltOsvO~O[UOiuOltO~OWWOiuOltO~OXYOiuOltO~OY[OiuOltO~OZ_OiuOltO#O{XT{X~O^aOipO~O`cOipO~OSeOi!^Ol!^O~O#O!aO~P]O#O!fO~OP!oO]lOi!kOl!jO~OP!oOi!kOl!jO~O!v!qO!w!qO!x!rO!y!rOi!`Xl!`Xs!`X#O!`XT!`X~OQ!uOikXlkX!vkX!wkX!xkX!ykX#OkXTkX~OskX~P&fOiuOltOsvO#OuaTua~O!v!qO!w!qO!x!rO!y!rO#OvaTva~O!v!qO!w!qO!x!rO!y!rO#OxaTxa~O!v!qO!w!qO!x!rO!y!rO#OyaTya~O!v!qO!w!qO!x!rO!y!rO#OzaTza~O!v!qO!w!qO!x!rO!y!rO#O{aT{a~Oa!xOipO~O_!zOipO~O]lOc#OOd#QO!tnO~OVTOWWOXYOY[OZ_O[UO^aO`cObROiPO#O!aO~O!v!qO!w!qO!x!rO!y!rOi!YXl!YX#O!YXT!YX~O!z#WO!{#WO!|#WO!}#WO~P&iOi!]X!z!]X!{!]X!|!]X!}!]X~P&fOiuOltO#OhiThi~OipO!z#WO!{#WO!|#WO!}#WO~OP!oOiuOltOsvO~OitOltO~OQ!uOR#aOi#cOl#cO~Oa!xOi#eO~O_!zOi#gO~OU#iO]lOitOltOs#kO~OU#iOitOltOs#kO~Oc#OOi#mO~Od#QOi#oO~OTgO#O!Oi~OipOl#sO~O!z#WO!{#WO!|#WO!}#WO#OpqTpq~OiuOltOsvO#OrqTrq~O!v!qO!w!qO!x!rO!y!rOi!uil!uis!ui#O!uiV!uiW!uiX!uiY!uiZ!ui[!ui^!ui`!uib!uiT!ui~OR#aOioiloisoi#OoiToi~OV!QiW!QiX!QiY!QiZ!Qi[!Qi^!Qi`!Qib!Qii!Qi#O!Qi~O!v!qO!w!qO!x!rO!y!rO~P2WOU#iO~P2WOTgO#O!Oq~OipO!z!^a!{!^a!|!^a!}!^a#O!^aT!^a~Oli~",
  goto: "+i!vPPPPPPPPPPPPPPPPPPPPPPP!w!{P#V#]P$R$^$i!{%T!{P!{!{!{!{%Y%Y%Y!{!{!{%b%f%i%i%i%l!{%x&S&Y&d&k&r&x'f'm't(O(Z(f(q(|)X)d)o)u*Q*W*_*f*l*r*|PPPP+VTjOkSiOkX!ch!`!b#SQoPR!}!^WsTw!p#]QxVQ{XQ!OZQ!R]Q!U`U!imo!mQ#^!sQ#_!tT#h!|!}c!ssx{!O!R!U!i#_#hc!tsx{!O!R!U!i#_#hWvTw!p#]QzVQ}XQ!QZQ!T]Q!W`V!lmo!mV#X!j!n#Y]^Ohk!`!b#STiOkR!`fR!_fQ!ehQ#T!`Q#V!bR#p#SSiOkQ#q#TR#w#pQkOR!gkQmPS!hm!|R!|!^S!mmoR#Z!mS!vu!kR#`!vQ#b!vR#u#b[QOhk!`!b#SYqQ!X!Z!n#rQ!XbQ!ZdS!nmoR#r#XS#Y!j!nR#t#YS!pmoR#[!pQwTS!ww#]R#]!p[SOhk!`!b#SRrS[VOhk!`!b#SRyV[XOhk!`!b#SR|X[ZOhk!`!b#SR!PZ[]Ohk!`!b#SR!S][`Ohk!`!b#SR!V`[bOhk!`!b#SR!YbQ!y!XR#d!y[dOhk!`!b#SR![dQ!{!ZR#f!{SfOkR!]fS#j!|!}R#v#jQ#P!^R#l#PQ#R!^R#n#RQ!bhQ#S!`T#U!b#SWhOk#T#pR!dhqtTVXZ]`mow!m!p!s!t!|!}#]",
  nodeNames: "âš  ask at random if else pressed print forward turn color sleep play is add from remove to_list clear in not_in Comment Program Command Assign Text Op Expression Int Op Op ListAccess AssignList Op Ask String Clear Print Play Turtle Forward Turn Color Sleep Add Remove If Condition EqualityCheck InListCheck NotInListCheck IfLessCommand ErrorInvalid Else",
  maxTerm: 92,
  nodeProps: [
    ["group", 39,"turtle"]
  ],
  skippedNodes: [0,21],
  repeatNodeCount: 25,
  tokenData: ",{~R!YYZ$qpq$vrs${st&otu'Wwx([z{)y{|*O|}*T}!O*Y!P!Q*_!Q!R*d!R!S*d!S!T*d!T!U*d!U!V*d!V!W*d!W!X*d!X!Y*d!Y!Z*d!Z![*d!_!`,g!c!}'W#R#S'W#T#o'W$gBn'WBnBo,lBoD`'WDfDg*dDgDh*dDhDi*dDiDj*dDjDk*dDkDl*dDlDm*dDmDn*dDnDo*dDoDp*dDvGl'WGlGm*dGmGn*dGnGo*dGoGp*dGpGq*dGqGr*dGrGs*dGsGt*dGtGu*dGuGv*dGv&FV'W&FV&FW,q&FW;'S'W;'S;=`(U<%l?Hb'W?Hb?Hc,v?HcO'W~$vO#O~~${O!s~~%OWOY${Zr${rs%hs#O${#O#P%m#P;'S${;'S;=`&i<%lO${~%mOs~~%pRO;'S${;'S;=`%y;=`O${~%|XOY${Zr${rs%hs#O${#O#P%m#P;'S${;'S;=`&i;=`<%l${<%lO${~&lP;=`<%l${~&tSe~OY&oZ;'S&o;'S;=`'Q<%lO&o~'TP;=`<%l&o~']]i~tu'W!Q!['W!c!}'W#R#S'W#T#o'W$gBn'WBoD`'WDvGl'WGv&FV'W&FW;'S'W;'S;=`(U<%l?Hb'W?HcO'W~(XP;=`<%l'W~(_WOY([Zw([wx%hx#O([#O#P(w#P;'S([;'S;=`)s<%lO([~(zRO;'S([;'S;=`)T;=`O([~)WXOY([Zw([wx%hx#O([#O#P(w#P;'S([;'S;=`)s;=`<%l([<%lO([~)vP;=`<%l([~*OO!v~~*TO!x~~*YO!z~~*_O!y~~*dO!w~~*inl~!Q!R*d!R!S*d!S!T*d!T!U*d!U!V*d!V!W*d!W!X*d!X!Y*d!Y!Z*d!Z![*dDfDg*dDgDh*dDhDi*dDiDj*dDjDk*dDkDl*dDlDm*dDmDn*dDnDo*dDoDp*dGlGm*dGmGn*dGnGo*dGoGp*dGpGq*dGqGr*dGrGs*dGsGt*dGtGu*dGuGv*d~,lO!t~~,qO!{~~,vO!}~~,{O!|~",
  tokenizers: [0],
  topRules: {"Program":[0,22]},
  dynamicPrecedences: {"52":-10},
  specialized: [{term: 25, get: (value: any, stack: any) => (specializeKeyword(value, stack) << 1), external: specializeKeyword},{term: 25, get: (value: any, stack: any) => (extendKeyword(value, stack) << 1) | 1, external: extendKeyword, extend: true}],
  tokenPrec: 879
})
