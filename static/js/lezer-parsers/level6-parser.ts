// This file was generated by lezer-generator. You probably shouldn't edit it.
import {LRParser, LocalTokenGroup} from "@lezer/lr"
import {specializeKeyword, extendKeyword} from "./tokens"
export const parser = LRParser.deserialize({
  version: 14,
  states: "2lQYQPOOOOQO'#Db'#DbQYQPOOO!QQPO'#DhO!fQPO'#D`OOQO'#Dn'#DnO!tQPO'#DPO#SQPO'#DQOOQO'#Do'#DoO#bQPO'#DSOOQO'#Dp'#DpO#mQPO'#DTOOQO'#Dq'#DqO#xQPO'#DUOOQO'#DR'#DROOQO'#Dr'#DrO$TQPO'#DVOOQO'#Ds'#DsO$iQPO'#DWOOQO'#Du'#DuO$qQPO'#DXOOQO'#Dw'#DwO$yQPO'#DYOOQO'#D{'#D{O%sQPO'#DaOOQO'#Cr'#CrQ{QPO'#DcQ%}QPOOOOQO-E7`-E7`OOQO'#Dd'#DdO&UQPO,59_OOQO'#Cu'#CuO&dQPO,59_OOQO'#Dh'#DhOOQO-E7f-E7fOOQO-E7l-E7lO&oQPO'#DkOOQO'#Cv'#CvO(UQPO'#CvO(`OSO'#EWO(hOQO'#E[OOQO'#DO'#DOOOQO'#Dk'#DkO(pQPO,59lO)XQPO,59nOOQO-E7m-E7mOOQO,59n,59nO)pQPO,59oOOQO-E7n-E7nOOQO,59o,59oO*XQPO,59pOOQO-E7o-E7oOOQO,59p,59pO*pQPO,59qOOQO-E7p-E7pOOQO,59q,59qOOQO-E7q-E7qO+XQPO,59rOOQO-E7s-E7sO+^QPO,59sOOQO-E7u-E7uO+cQPO'#D[OOQO'#DZ'#DZO+nQPO,59tOOQO'#D_'#D_OOQO-E7y-E7yOOQO,59{,59{O+xQPO,59}OOQO-E7a-E7aOOQO-E7b-E7bO,sQPO'#DeO-bQPO1G/RO-iQPO'#CvOOQO'#De'#DeO-sQPO1G.yO.UQPO1G/ROOQO'#Dj'#DjO.^QPO1G/TOOQO'#Cx'#CxOOQO'#Cy'#CyO.oQPO,5:mO.oQPO,5:mOOQO'#Df'#DfO.wQPO,59fOOOO'#Dl'#DlO/SOSO,5:rOOQO,5:r,5:rOOOO'#Dm'#DmO/[OQO,5:vOOQO,5:v,5:vOOQO-E7i-E7iOOQO'#Dt'#DtO/dQPO1G/^OOQO'#Dv'#DvO/lQPO1G/_O/tQPO,59vOOQO'#Dy'#DyO0YQPO,59wOOQO'#Dz'#DzO0bQPO,59xOOQO1G/`1G/`O0jQPO1G/`O0uQPO'#DiO0}QPO7+$mOOQO-E7c-E7cOOQO-E7h-E7hO1]QPO7+$oOOQO1G0X1G0XO1tQPO1G0XOOQO-E7d-E7dOOQO'#Dg'#DgO3RQPO1G/QOOQO1G/Q1G/QOOOO-E7j-E7jOOQO1G0^1G0^OOOO-E7k-E7kOOQO1G0b1G0bOOQO-E7r-E7rOOQO7+$x7+$xOOQO-E7t-E7tOOQO7+$y7+$yO4eQPO1G/bOOQO'#Dx'#DxO4uQPO1G/bOOQO1G/b1G/bOOQO-E7w-E7wOOQO1G/c1G/cOOQO-E7x-E7xOOQO1G/d1G/dOOQO7+$z7+$zO4|QPO,5:TOOQO,5:T,5:TOOQO-E7g-E7gOOQO-E7e-E7eOOQO-E7v-E7v",
  stateData: "5b~OdOS!rOS~OSeOTgOUVOVWOWYOX[OY_O[aO^cO`TOhRO!sPO~OZmO!toOh![X!p![X!s![XT![X~OhqO!p!SX!s!SXT!SX~O`TO!psX!ssXTsX~OhvOkuO!{wO#PxO~OVWOhvOkuO~OWYOhvOkuO~OX[OhvOkuO~OY_OhvOkuO!pyX!syXTyX~O[aOh!ZO~O^cOh!]O~OSeOh!_O~OTgOUVOVWOWYOX[OY_O[aO^cO`TOhRO~O!p!TX!s!TX~P%ROSeO~P%ROP!nOZmOh!jOk!iO~OP!nOh!jOk!iO~O!v!pO!w!pO!x!qO!y!qOh!_Xk!_X!p!_X!s!_X!{!_X#P!_XT!_X~OQ!tOhjXkjX!pjX!sjX!vjX!wjX!xjX!yjXTjX~O!{jX#PjX~P'dO!|!vO!}!xO~O#Q!yO#R!{O~OhvOkuO!{wO#PxO!pta!staTta~O!v!pO!w!pO!x!qO!y!qO!pva!svaTva~O!v!pO!w!pO!x!qO!y!qO!pwa!swaTwa~O!v!pO!w!pO!x!qO!y!qO!pxa!sxaTxa~O!v!pO!w!pO!x!qO!y!qO!pya!syaTya~O_!}O~O]#PO~OZmOb#SOc#UO~O!p|a!s|a~P%RO!sPOS!VaT!VaU!VaV!VaW!VaX!VaY!Va[!Va^!Va`!Vah!Va!p!Va~O!v!pO!w!pO!x!qO!y!qOh!XXk!XX!p!XX!s!XXT!XX~Op#YO~P'gOh![Xp![X~P'dOhvOkuO!pgi!sgiTgi~OhqOp#YO~OP!nOhvOkuO!{wO#PxO~OhuOkuO~OQ!tOR#bOh#dO~O!|!vO!}#fO~O#Q!yO#R#hO~O_!}Oh#jO~O]#POh#lO~OZmOa#nOhuOkuO!{wO#PxO~Ob#SOh#rO~Oc#UOh#tO~OTgO!p|i!s|i~OhqOk#wO~Op#YO!poq!soqToq~OhvOkuO!{wO#PxO!pqq!sqqTqq~O!v!pO!w!pO!x!qO!y!qOh!uik!ui!p!ui!s!ui!{!ui#P!uiT!uiU!uiV!uiW!uiX!uiY!ui[!ui^!ui`!ui~OR#bOhnikni!pni!sni!{ni#PniTni~OT!OiU!OiV!OiW!OiX!OiY!Oi[!Oi^!Oi`!Oih!Oi!p!Oi!s!Oi~O!v!pO!w!pO!x!qO!y!qO~P3mOa#nO~P3mOhqOp!]a!p!]a!s!]aT!]a~Okh~",
  goto: "+]#PPPPPPPPPPPPPPPPPPPPPPP#Q#VP#`#cP$T$_$i#VP#V%Q#V#V#V%Z%Z%Z#V#V#V%b%g%j%j%j%m#V%s&O&Y&a&k&r&y'P'd'k'r'|(S(Y(d(n(x)S)^)h)n)x*O*W*^*d*jPPPPP*tPPPP+UPPP+UVjOQkUiOQkT!bh!aRpRWtV{!o#^Q|XQ!PZQ!S]Q!V`U!hnp!lQ#_!rQ#`!sR#m#Ra!rt|!P!S!V!h#`#ma!st|!P!S!V!h#`#mWzV{!o#^Q!OXQ!RZQ!U]Q!X`V!knp!lWzV{!o#^R#p#RZ^OQhk!aViOQkR!afR!`fQ!dhR#X!aUiOQkQ#W!aR#u#XQQOSlQ!eR!ejSkOQR!fkQnRS!gn#RR#R!_S!lnpR#[!lS!uv!jR#a!uQ#c!uR#y#cYSOQhk!aUrS!m#vS!mnpR#v#YS#Z!i!mR#x#ZS!onpR#]!oQ{VS!|{#^R#^!oQ!wwR#e!wQ!zxR#g!zYUOQhk!aRsUYXOQhk!aR}XYZOQhk!aR!QZY]OQhk!aR!T]Y`OQhk!aR!W`YbOQhk!aR!YbQ#O!ZR#i#OYdOQhk!aR![dQ#Q!]R#k#QUfOQkR!^fQ#o#RR#z#oQ#T!_R#q#TQ#V!_R#s#VYhOQk!a#XR!chmuVXZ]`np{!l!o!r!s#R#^ZyV{!o#R#^",
  nodeNames: "âš  ask at random if else print forward turn color sleep is add from remove to_list clear pressed in not_in Comment Program Command Assign Text Op Expression Int Op Op ListAccess AssignList Comma Ask String Clear Print Turtle Forward Turn Color Sleep Add Remove If Condition EqualityCheck InListCheck NotInListCheck IfLessCommand ErrorInvalid Else",
  maxTerm: 95,
  nodeProps: [
    ["group", 37,"turtle"]
  ],
  skippedNodes: [0,20],
  repeatNodeCount: 26,
  tokenData: "*x~R!^OY$}YZ&UZp$}pq&Zqr$}rs&`st&etw$}wx&|xz$}z{'R{|'W|}']}!O'b!O!P$}!P!Q'g!Q!R'l!R!S'l!S!T'l!T!U'l!U!V'l!V!W'l!W!X'l!X!Y'l!Y!Z'l!Z!['l![!_$}!_!`*s!`#Q$}#RBn$}BnBo']BoDf$}DfDg'lDgDh'lDhDi'lDiDj'lDjDk'lDkDl'lDlDm'lDmDn'lDnDo'lDoDp'lDpGl$}GlGm'lGmGn'lGnGo'lGoGp'lGpGq'lGqGr'lGrGs'lGsGt'lGtGu'lGuGv'lGv&FV$}&FV&FW']&FW;'S$};'S;=`&O<%l?Hb$}?Hb?Hc']?HcO$}~%S^h~OY$}Zp$}qr$}tw$}xz$}!O!P$}!Q!_$}!`#Q$}#RBn$}Bo&FV$}&FW;'S$};'S;=`&O<%l?Hb$}?HcO$}~&RP;=`<%l$}~&ZO!s~~&`O!r~~&eO!{~~&jSd~OY&eZ;'S&e;'S;=`&v<%lO&e~&yP;=`<%l&e~'RO#P~~'WO!v~~']O!x~~'bOp~~'gO!y~~'lO!w~~'s!Ok~h~OY$}Zp$}qr$}tw$}xz$}!O!P$}!Q!R'l!R!S'l!S!T'l!T!U'l!U!V'l!V!W'l!W!X'l!X!Y'l!Y!Z'l!Z!['l![!_$}!`#Q$}#RBn$}BoDf$}DfDg'lDgDh'lDhDi'lDiDj'lDjDk'lDkDl'lDlDm'lDmDn'lDnDo'lDoDp'lDpGl$}GlGm'lGmGn'lGnGo'lGoGp'lGpGq'lGqGr'lGrGs'lGsGt'lGtGu'lGuGv'lGv&FV$}&FW;'S$};'S;=`&O<%l?Hb$}?HcO$}~*xO!t~",
  tokenizers: [2, new LocalTokenGroup("_~RQYZXwxX~^O#R~~", 14, 94), new LocalTokenGroup("_~RQYZXrsX~^O!}~~", 14, 90)],
  topRules: {"Program":[0,21]},
  dynamicPrecedences: {"50":-10},
  specialized: [{term: 24, get: (value: any, stack: any) => (specializeKeyword(value, stack) << 1), external: specializeKeyword},{term: 24, get: (value: any, stack: any) => (extendKeyword(value, stack) << 1) | 1, external: extendKeyword, extend: true}],
  tokenPrec: 935
})
